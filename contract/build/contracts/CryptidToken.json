{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMintPerTx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxMintPerTx",
          "type": "uint256"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "undoClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2907
      ],
      "Context": [
        2451
      ],
      "Counters": [
        2336
      ],
      "CryptidToken": [
        821
      ],
      "ERC165": [
        3134
      ],
      "ERC721": [
        1924
      ],
      "ERC721Enumerable": [
        2262
      ],
      "IERC165": [
        3177
      ],
      "IERC721": [
        2567
      ],
      "IERC721Enumerable": [
        3165
      ],
      "IERC721Metadata": [
        2612
      ],
      "IERC721Receiver": [
        2585
      ],
      "MerkleProof": [
        2429
      ],
      "Ownable": [
        926
      ],
      "Pausable": [
        1018
      ],
      "ReentrancyGuard": [
        1058
      ],
      "Strings": [
        3110
      ]
    },
    "id": 822,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 1925,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 2263,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 927,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 1059,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 2337,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 1019,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 822,
        "sourceUnit": 2430,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1924,
              "src": "735:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "735:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2262,
              "src": "743:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "743:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1018,
              "src": "761:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 926,
              "src": "771:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "771:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1058,
              "src": "780:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "780:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:220:16",
          "text": "@title CryptidToken NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, send, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 821,
        "linearizedBaseContracts": [
          821,
          1058,
          926,
          1018,
          2262,
          3165,
          1924,
          2612,
          2567,
          3134,
          3177,
          2451
        ],
        "name": "CryptidToken",
        "nameLocation": "719:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3110,
              "src": "808:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "802:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2336,
              "src": "839:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "833:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2268,
                "src": "852:16:16"
              },
              "referencedDeclaration": 2268,
              "src": "852:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2268_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2429,
              "src": "880:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "874:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "896:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "933:4:16",
                "nodeType": "EnumValue",
                "src": "933:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "947:7:16",
                "nodeType": "EnumValue",
                "src": "947:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "964:9:16",
                "nodeType": "EnumValue",
                "src": "964:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "983:8:16",
                "nodeType": "EnumValue",
                "src": "983:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "1001:10:16",
                "nodeType": "EnumValue",
                "src": "1001:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "917:5:16",
            "nodeType": "EnumDefinition",
            "src": "912:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1048:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1023:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2268_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2268,
                "src": "1023:16:16"
              },
              "referencedDeclaration": 2268,
              "src": "1023:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2268_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1089:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1074:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1119:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1105:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1105:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1153:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1139:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1139:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1163:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1185:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1171:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1201:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1229:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1214:27:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1214:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1264:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1252:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1252:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1281:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1304:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1292:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1292:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1327:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1354:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1339:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1339:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1373:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 62,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1619:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1604:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1604:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 66,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1695:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1663:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1671:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1663:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1682:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1769:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1754:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1754:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 70,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1830:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1815:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1815:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 72,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1894:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1879:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1879:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 75,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1938:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "1925:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 74,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1925:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1925:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "2218:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2228:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2246:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:34:16"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2272:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2289:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2272:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:32:16"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "2314:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2332:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2314:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:34:16"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2358:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "2373:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2358:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:28:16"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2396:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2406:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2396:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 116,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2424:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2268_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2294,
                      "src": "2424:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2268_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2424:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2424:27:16"
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 92,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "2202:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 93,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "2209:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 94,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 91,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1924,
                  "src": "2195:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2195:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1985:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1971:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2014:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2000:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2045:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2031:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2071:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2063:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2105:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2097:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2138:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2130:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2172:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2164:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:231:16"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:0:16"
            },
            "scope": 821,
            "src": "1950:508:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "2607:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 132,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2625:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 133,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2633:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2633:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "2625:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2645:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2617:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 140,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "2686:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2686:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 142,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "2703:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2686:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 144,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "2717:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2686:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2734:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2678:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:101:16"
                },
                {
                  "body": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "2831:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 126,
                              "src": "2855:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 161,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "2859:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 162,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2280,
                                "src": "2859:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2268_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2859:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 159,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1553,
                              1582
                            ],
                            "referencedDeclaration": 1553,
                            "src": "2845:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 165,
                        "nodeType": "ExpressionStatement",
                        "src": "2845:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 166,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2899:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2294,
                            "src": "2899:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2268_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2899:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2899:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 153,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2809:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 154,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "2814:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2809:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 172,
                  "initializationExpression": {
                    "assignments": [
                      150
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2802:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2794:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2794:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 152,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2806:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2794:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2826:3:16",
                      "subExpression": {
                        "id": 156,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2826:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 158,
                    "nodeType": "ExpressionStatement",
                    "src": "2826:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2789:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 128,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "2592:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2592:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2498:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2528:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2522:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2522:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2557:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "2549:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2512:53:16"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2607:0:16"
            },
            "scope": 821,
            "src": "2489:454:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "3134:589:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 185,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3152:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 186,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3161:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "3161:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3152:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3178:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3144:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3144:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 195,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3320:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 199,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3359:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 200,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3359:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 197,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3342:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3342:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3342:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 196,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3332:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3332:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 193,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "3301:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2360,
                          "src": "3301:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3301:71:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f74206f6e2077686974656c6973742e",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3374:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a8af3360b538c64e5c11885463a8341519a2dc44dda436d6153a948929d014",
                          "typeString": "literal_string \"Address not on whitelist.\""
                        },
                        "value": "Address not on whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a8af3360b538c64e5c11885463a8341519a2dc44dda436d6153a948929d014",
                          "typeString": "literal_string \"Address not on whitelist.\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3293:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 208,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "3420:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3420:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3437:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3420:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 212,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "3442:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3420:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3459:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3412:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3412:88:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 218,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3520:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "expression": {
                              "id": 219,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3528:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3528:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3520:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3543:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3520:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3550:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3512:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:72:16"
                },
                {
                  "expression": {
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3595:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "expression": {
                          "id": 228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3603:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3603:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3595:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3617:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3595:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3641:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3641:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 237,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3653:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2268_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2280,
                          "src": "3653:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2268_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3653:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 234,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1553,
                        1582
                      ],
                      "referencedDeclaration": 1553,
                      "src": "3631:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 242,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3689:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2268_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2294,
                      "src": "3689:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2268_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3689:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3689:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 179,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1057,
                  "src": "3093:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3093:12:16"
              },
              {
                "id": 182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 181,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 974,
                  "src": "3115:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3115:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "2990:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3032:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3013:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 175,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3013:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 176,
                    "nodeType": "ArrayTypeName",
                    "src": "3013:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3003:46:16"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3134:0:16"
            },
            "scope": 821,
            "src": "2981:742:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "3848:573:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 256,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3866:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 257,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3875:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3875:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3866:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3891:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3858:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3858:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 264,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 250,
                          "src": "3936:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3949:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3936:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3952:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3928:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 271,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "4008:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 272,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4021:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4008:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 274,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "4038:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4008:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4054:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4000:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 280,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "4121:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4121:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 282,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "4138:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4121:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 284,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4152:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4121:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4169:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4113:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "4113:97:16"
                },
                {
                  "expression": {
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 289,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "4222:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 290,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4239:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4222:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "4222:27:16"
                },
                {
                  "body": {
                    "id": 316,
                    "nodeType": "Block",
                    "src": "4301:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 304,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4325:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4325:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 306,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4337:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2280,
                                "src": "4337:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2268_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4337:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 303,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1553,
                              1582
                            ],
                            "referencedDeclaration": 1553,
                            "src": "4315:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4315:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "4315:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 311,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4377:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2294,
                            "src": "4377:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2268_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4377:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 315,
                        "nodeType": "ExpressionStatement",
                        "src": "4377:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 297,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "4279:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 298,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "4284:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4279:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 317,
                  "initializationExpression": {
                    "assignments": [
                      294
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4272:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "4264:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4264:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 296,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4276:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4264:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4296:3:16",
                      "subExpression": {
                        "id": 300,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4296:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 302,
                    "nodeType": "ExpressionStatement",
                    "src": "4296:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4259:156:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 252,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "3833:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3833:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3765:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3789:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "3783:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3773:32:16"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3848:0:16"
            },
            "scope": 821,
            "src": "3756:665:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "4595:604:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 329,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "4613:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 330,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4622:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4622:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4613:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4640:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4605:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4605:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4605:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 337,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4773:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4786:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4773:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4789:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4765:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4765:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4765:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 344,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "4845:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4845:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 346,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "4862:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4845:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 348,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4876:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4845:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4893:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4837:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4837:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "4837:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 354,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4952:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 355,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4966:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4952:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4980:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4944:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4944:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4944:81:16"
                },
                {
                  "body": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "5079:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 371,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5103:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5103:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 373,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "5115:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 374,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2280,
                                "src": "5115:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2268_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5115:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 370,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1553,
                              1582
                            ],
                            "referencedDeclaration": 1553,
                            "src": "5093:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5093:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 377,
                        "nodeType": "ExpressionStatement",
                        "src": "5093:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 378,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "5155:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2268_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2294,
                            "src": "5155:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2268_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2268_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5155:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "5155:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 364,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "5057:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 365,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "5062:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5057:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 384,
                  "initializationExpression": {
                    "assignments": [
                      361
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5050:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "5042:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5042:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 363,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5054:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5042:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5074:3:16",
                      "subExpression": {
                        "id": 367,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5074:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 369,
                    "nodeType": "ExpressionStatement",
                    "src": "5074:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "5037:156:16"
                }
              ]
            },
            "functionSelector": "2db11544",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 323,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1057,
                  "src": "4553:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4553:12:16"
              },
              {
                "id": 326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 325,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 974,
                  "src": "4575:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4575:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4465:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4493:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "4485:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4475:34:16"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4595:0:16"
            },
            "scope": 821,
            "src": "4456:743:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5263:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 391,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "5273:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5273:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "5273:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 389,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 388,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5253:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5253:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "5236:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5241:2:16"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5263:0:16"
            },
            "scope": 821,
            "src": "5227:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "5332:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 400,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "5342:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "5342:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 397,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5322:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5322:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "5303:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5310:2:16"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5332:0:16"
            },
            "scope": 821,
            "src": "5294:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "5465:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 411,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5475:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 413,
                      "indexExpression": {
                        "id": 412,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "5483:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5475:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5496:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5475:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "5475:25:16"
                }
              ]
            },
            "functionSelector": "bb31b77b",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 408,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5456:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5456:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "5419:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5436:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "5428:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5428:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5427:19:16"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5465:0:16"
            },
            "scope": 821,
            "src": "5410:97:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "5607:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 425,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5617:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 427,
                      "indexExpression": {
                        "id": 426,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "5625:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5617:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5638:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5617:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "5617:26:16"
                }
              ]
            },
            "functionSelector": "57ed9e4e",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 422,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5598:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5598:9:16"
              }
            ],
            "name": "undoClaim",
            "nameLocation": "5560:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5578:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "5570:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5569:19:16"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5607:0:16"
            },
            "scope": 821,
            "src": "5551:99:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "5719:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 439,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "5729:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 440,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "5742:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5729:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "5729:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5709:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5709:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5665:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5687:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "5679:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5678:21:16"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5719:0:16"
            },
            "scope": 821,
            "src": "5656:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "5832:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5850:15:16",
                        "subExpression": {
                          "id": 452,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5851:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5867:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5842:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5842:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "5842:46:16"
                },
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5898:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 458,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "5908:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5898:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "5898:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 449,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 448,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5822:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5822:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5775:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5800:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "5786:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5786:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5785:27:16"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5832:0:16"
            },
            "scope": 821,
            "src": "5766:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "5981:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 470,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "6005:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5999:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 468,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5999:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5999:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5999:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6023:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5999:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6026:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5991:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5991:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5991:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6071:15:16",
                        "subExpression": {
                          "id": 479,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6072:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6088:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6063:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6063:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "6063:54:16"
                },
                {
                  "expression": {
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 484,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6127:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6144:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6127:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "6127:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 489,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 465,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 464,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "5971:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5971:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5946:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:2:16"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5981:0:16"
            },
            "scope": 821,
            "src": "5937:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "6239:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 496,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6249:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 497,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "6265:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6249:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "6249:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "6229:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6229:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "6170:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "6201:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "6187:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6187:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6186:33:16"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6239:0:16"
            },
            "scope": 821,
            "src": "6161:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "6372:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 511,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "6396:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6390:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 509,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6390:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6390:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6390:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6422:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6390:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6425:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6382:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6485:21:16",
                        "subExpression": {
                          "id": 520,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6486:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6508:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6477:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "6477:60:16"
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6547:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 526,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "6564:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6547:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6547:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "6362:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6362:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "6304:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6336:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "6322:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6322:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6321:31:16"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6372:0:16"
            },
            "scope": 821,
            "src": "6295:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "6643:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6667:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6661:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 536,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6661:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6661:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6661:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6692:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6661:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6695:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6653:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6653:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "6653:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6743:21:16",
                        "subExpression": {
                          "id": 547,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6744:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6766:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6735:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6735:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "6735:68:16"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 552,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "6813:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6836:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6813:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "6813:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "6633:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6633:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6601:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6621:2:16"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6643:0:16"
            },
            "scope": 821,
            "src": "6592:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "6928:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 564,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6938:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 565,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "6957:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6938:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 569,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 561,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "6918:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6918:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6862:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6890:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "6882:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6882:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6881:27:16"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6928:0:16"
            },
            "scope": 821,
            "src": "6853:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "7169:45:16",
              "statements": [
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "7179:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 577,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "7194:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7179:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:28:16"
                }
              ]
            },
            "functionSelector": "616cdb1e",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 573,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "7159:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7159:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "7111:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "7135:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "7127:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7127:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7126:23:16"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7169:0:16"
            },
            "scope": 821,
            "src": "7102:112:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "7259:249:16",
              "statements": [
                {
                  "assignments": [
                    587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7277:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "7269:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7269:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 593,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 590,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "7295:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CryptidToken_$821",
                            "typeString": "contract CryptidToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CryptidToken_$821",
                            "typeString": "contract CryptidToken"
                          }
                        ],
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7287:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7287:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7287:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "7287:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7269:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 595,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "7326:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7336:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7326:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2062616c616e636520746f2077697468647261772e",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7339:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2653f3008bd39e1cfb6ca0ae06e6de69badbc33bb3d0f8838f3f90235d742b10",
                          "typeString": "literal_string \"No balance to withdraw.\""
                        },
                        "value": "No balance to withdraw."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2653f3008bd39e1cfb6ca0ae06e6de69badbc33bb3d0f8838f3f90235d742b10",
                          "typeString": "literal_string \"No balance to withdraw.\""
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7318:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7318:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "7318:47:16"
                },
                {
                  "assignments": [
                    602,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 602,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7381:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "7376:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 601,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7376:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 612,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7441:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 605,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "7402:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7394:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 603,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7394:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7394:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7394:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 608,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "7432:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7394:46:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7394:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7375:69:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 614,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "7462:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2077697468647261772062616c616e63652e",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7471:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0839c06bc9417f5c3087239c190f92896d6a9ff5f443ee8d1a064f99f9446bb9",
                          "typeString": "literal_string \"Failed to withdraw balance.\""
                        },
                        "value": "Failed to withdraw balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0839c06bc9417f5c3087239c190f92896d6a9ff5f443ee8d1a064f99f9446bb9",
                          "typeString": "literal_string \"Failed to withdraw balance.\""
                        }
                      ],
                      "id": 613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7454:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7454:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "7454:47:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 584,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 583,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "7249:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7249:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7229:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7237:2:16"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7259:0:16"
            },
            "scope": 821,
            "src": "7220:288:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "7565:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 628,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7583:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7607:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7583:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7613:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7575:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7575:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "7575:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 635,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7690:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7704:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7690:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7707:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7682:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7682:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "7682:78:16"
                },
                {
                  "expression": {
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 641,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "7770:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 642,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "7778:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7770:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "7770:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 625,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 624,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 868,
                  "src": "7555:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7555:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "7523:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "7538:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "7532:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 620,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "7532:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "7532:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7531:14:16"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7565:0:16"
            },
            "scope": 821,
            "src": "7514:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "7886:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 652,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "7911:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7911:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 651,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "7903:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7903:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 650,
                  "id": 655,
                  "nodeType": "Return",
                  "src": "7896:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7837:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7852:2:16"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "7878:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7878:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7877:9:16"
            },
            "scope": 821,
            "src": "7828:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "7991:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 662,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "8008:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8008:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 664,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8007:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 665,
                  "nodeType": "Return",
                  "src": "8001:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7947:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7957:2:16"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "7983:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7983:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7982:9:16"
            },
            "scope": 821,
            "src": "7938:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1266
            ],
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "8123:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 677,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "8149:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 676,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "8141:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8141:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8159:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8133:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8133:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "8133:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 686,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "8251:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 687,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "8260:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2992,
                              "src": "8260:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8260:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 690,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8280:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 684,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8234:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8234:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8234:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8227:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8227:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8227:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 693,
                  "nodeType": "Return",
                  "src": "8220:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8044:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8090:8:16"
            },
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8061:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "8053:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8052:17:16"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "8108:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8107:15:16"
            },
            "scope": 821,
            "src": "8035:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "8365:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 700,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "8382:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 701,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "8400:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8400:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8382:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 699,
                  "id": 704,
                  "nodeType": "Return",
                  "src": "8375:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "8317:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8330:2:16"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "8356:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8356:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8355:9:16"
            },
            "scope": 821,
            "src": "8308:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 753,
              "nodeType": "Block",
              "src": "8509:274:16",
              "statements": [
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "8527:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8519:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8519:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 719,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "8555:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1176,
                      "src": "8545:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8545:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8519:42:16"
                },
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8588:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8571:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8571:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 723,
                        "nodeType": "ArrayTypeName",
                        "src": "8571:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 730,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 728,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "8614:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8600:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 725,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8604:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 726,
                        "nodeType": "ArrayTypeName",
                        "src": "8604:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8571:59:16"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "8682:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 740,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "8696:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 742,
                            "indexExpression": {
                              "id": 741,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "8706:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8696:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 744,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 708,
                                "src": "8731:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 745,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "8738:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 743,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "8711:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8711:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8696:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 748,
                        "nodeType": "ExpressionStatement",
                        "src": "8696:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 734,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "8656:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 735,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "8660:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8656:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 750,
                  "initializationExpression": {
                    "assignments": [
                      732
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8653:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "8645:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8645:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 733,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8645:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8677:3:16",
                      "subExpression": {
                        "id": 737,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 732,
                        "src": "8677:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 739,
                    "nodeType": "ExpressionStatement",
                    "src": "8677:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8640:111:16"
                },
                {
                  "expression": {
                    "id": 751,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "8767:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 713,
                  "id": 752,
                  "nodeType": "Return",
                  "src": "8760:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "8439:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8461:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "8453:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8453:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8452:15:16"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "8491:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 710,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8491:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 711,
                    "nodeType": "ArrayTypeName",
                    "src": "8491:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8490:18:16"
            },
            "scope": 821,
            "src": "8430:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 780,
              "nodeType": "Block",
              "src": "8883:148:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 766,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "8916:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 770,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 756,
                                "src": "8955:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 768,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8938:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "8938:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8938:25:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 767,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8928:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8928:36:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 764,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "8897:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "8897:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8897:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 777,
                  "nodeType": "IfStatement",
                  "src": "8893:110:16",
                  "trueBody": {
                    "id": 776,
                    "nodeType": "Block",
                    "src": "8967:36:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8988:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 763,
                        "id": 775,
                        "nodeType": "Return",
                        "src": "8981:11:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9019:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 763,
                  "id": 779,
                  "nodeType": "Return",
                  "src": "9012:12:16"
                }
              ]
            },
            "functionSelector": "b76a0df4",
            "id": 781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "8798:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8813:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "8805:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8805:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "8841:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "8822:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 757,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8822:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 758,
                    "nodeType": "ArrayTypeName",
                    "src": "8822:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8804:49:16"
            },
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "8877:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8877:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8876:6:16"
            },
            "scope": 821,
            "src": "8789:242:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1912,
              2100
            ],
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "9172:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 798,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "9209:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "9215:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "9219:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 795,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9182:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$821_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2100,
                      "src": "9182:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9182:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "9182:45:16"
                }
              ]
            },
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 789,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 974,
                  "src": "9123:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "9123:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9050:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 793,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 791,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1924,
                  "src": "9146:6:16"
                },
                {
                  "id": 792,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2262,
                  "src": "9154:16:16"
                }
              ],
              "src": "9137:34:16"
            },
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9079:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "9071:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9071:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9093:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "9085:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9085:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9105:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "9097:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9097:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9070:43:16"
            },
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9172:0:16"
            },
            "scope": 821,
            "src": "9041:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1152,
              1974
            ],
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "9417:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "9458:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 814,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9434:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$821_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1974,
                      "src": "9434:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9434:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "9427:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9317:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 810,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 808,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1924,
                  "src": "9376:6:16"
                },
                {
                  "id": 809,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2262,
                  "src": "9384:16:16"
                }
              ],
              "src": "9367:34:16"
            },
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9342:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "9335:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9334:20:16"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "9411:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9411:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9410:6:16"
            },
            "scope": 821,
            "src": "9308:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 822,
        "src": "710:8770:16",
        "usedErrors": []
      }
    ],
    "src": "32:9448:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001a0565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001a0565b50601280546001600160b01b0319167512b58f5331a6dc897932aa7fb5101667acdf03e200001790553480156200008057600080fd5b5060405162003c1838038062003c18833981016040819052620000a39162000313565b865187908790620000bc906000906020850190620001a0565b508051620000d2906001906020840190620001a0565b5050600a805460ff1916905550620000ea336200013d565b6001600b55601384905560158390556017829055601181905584516200011890600f906020880190620001a0565b5062000130600c6200019760201b6200223a1760201c565b5050505050505062000408565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001ae90620003cb565b90600052602060002090601f016020900481019282620001d257600085556200021d565b82601f10620001ed57805160ff19168380011785556200021d565b828001600101855582156200021d579182015b828111156200021d57825182559160200191906001019062000200565b506200022b9291506200022f565b5090565b5b808211156200022b576000815560010162000230565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026e57600080fd5b81516001600160401b03808211156200028b576200028b62000246565b604051601f8301601f19908116603f01168101908282118183101715620002b657620002b662000246565b81604052838152602092508683858801011115620002d357600080fd5b600091505b83821015620002f75785820183015181830184015290820190620002d8565b83821115620003095760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200032f57600080fd5b87516001600160401b03808211156200034757600080fd5b620003558b838c016200025c565b985060208a01519150808211156200036c57600080fd5b6200037a8b838c016200025c565b975060408a01519150808211156200039157600080fd5b50620003a08a828b016200025c565b955050606088015193506080880151925060a0880151915060c0880151905092959891949750929550565b600181811c90821680620003e057607f821691505b602082108114156200040257634e487b7160e01b600052602260045260246000fd5b50919050565b61380080620004186000396000f3fe6080604052600436106103765760003560e01c80637b671780116101d1578063c321458111610102578063da3ef23f116100a0578063e985e9c51161006f578063e985e9c514610982578063f2fde38b146109cb578063f4efa3e6146109eb578063ffa9cd3b14610a0b57600080fd5b8063da3ef23f14610922578063de5f986614610942578063de7fcb1d14610957578063e7bc82081461096d57600080fd5b8063c87b56dd116100dc578063c87b56dd1461089d578063c884ef83146108bd578063ce3cd997146108ed578063d6d67a091461090d57600080fd5b8063c32145811461085d578063c668286214610873578063c6ab67a31461088857600080fd5b8063a22cb4651161016f578063b88d4fde11610149578063b88d4fde146107dc578063bb31b77b146107fc578063c040e6b81461081c578063c29de6301461084357600080fd5b8063a22cb4651461077c578063b3caad011461079c578063b76a0df4146107bc57600080fd5b80638456cb59116101ab5780638456cb59146107105780638da5cb5b1461072557806395d89b41146107485780639a2a9c3d1461075d57600080fd5b80637b671780146106bb5780637cb64759146106db57806381c162f2146106fb57600080fd5b80633f4ba83a116102ab578063616cdb1e116102495780636cbb8985116102235780636cbb89851461065b57806370a0823114610670578063715018a61461069057806378231978146106a557600080fd5b8063616cdb1e146106065780636352211e146106265780636c0360eb1461064657600080fd5b80634f6ccce7116102855780634f6ccce71461058e57806355f804b3146105ae57806357ed9e4e146105ce5780635c975abb146105ee57600080fd5b80633f4ba83a1461052c57806342842e0e14610541578063438b63001461056157600080fd5b806323b872dd116103185780632f745c59116102f25780632f745c59146104ce57806333e61413146104ee578063372f657c146105045780633ccfd60b1461051757600080fd5b806323b872dd146104855780632db11544146104a55780632eb4a7ab146104b857600080fd5b8063088139a611610354578063088139a61461040a578063095ea7b31461042e578063109695231461045057806318160ddd1461047057600080fd5b806301ffc9a71461037b57806306fdde03146103b0578063081812fc146103d2575b600080fd5b34801561038757600080fd5b5061039b610396366004612f49565b610a31565b60405190151581526020015b60405180910390f35b3480156103bc57600080fd5b506103c5610a42565b6040516103a79190612fbe565b3480156103de57600080fd5b506103f26103ed366004612fd1565b610ad4565b6040516001600160a01b0390911681526020016103a7565b34801561041657600080fd5b5061042060165481565b6040519081526020016103a7565b34801561043a57600080fd5b5061044e610449366004613006565b610b6e565b005b34801561045c57600080fd5b5061044e61046b3660046130bc565b610c84565b34801561047c57600080fd5b50600854610420565b34801561049157600080fd5b5061044e6104a0366004613105565b610d84565b61044e6104b3366004612fd1565b610db5565b3480156104c457600080fd5b50610420600d5481565b3480156104da57600080fd5b506104206104e9366004613006565b610f95565b3480156104fa57600080fd5b5061042060135481565b61044e61051236600461318d565b61102b565b34801561052357600080fd5b5061044e611295565b34801561053857600080fd5b5061044e6113bc565b34801561054d57600080fd5b5061044e61055c366004613105565b6113f6565b34801561056d57600080fd5b5061058161057c3660046131cf565b611411565b6040516103a791906131ea565b34801561059a57600080fd5b506104206105a9366004612fd1565b6114b3565b3480156105ba57600080fd5b5061044e6105c93660046130bc565b611546565b3480156105da57600080fd5b5061044e6105e93660046131cf565b6115d1565b3480156105fa57600080fd5b50600a5460ff1661039b565b34801561061257600080fd5b5061044e610621366004612fd1565b611622565b34801561063257600080fd5b506103f2610641366004612fd1565b611657565b34801561065257600080fd5b506103c56116ce565b34801561066757600080fd5b506103f261175c565b34801561067c57600080fd5b5061042061068b3660046131cf565b61176f565b34801561069c57600080fd5b5061044e6117f6565b3480156106b157600080fd5b5061042060175481565b3480156106c757600080fd5b5061044e6106d636600461323f565b611830565b3480156106e757600080fd5b5061044e6106f6366004612fd1565b6119eb565b34801561070757600080fd5b5061044e611a20565b34801561071c57600080fd5b5061044e611b22565b34801561073157600080fd5b50600a5461010090046001600160a01b03166103f2565b34801561075457600080fd5b506103c5611b5a565b34801561076957600080fd5b5060125461039b90610100900460ff1681565b34801561078857600080fd5b5061044e61079736600461325a565b611b69565b3480156107a857600080fd5b5061044e6107b7366004613296565b611b74565b3480156107c857600080fd5b5061039b6107d73660046132c9565b611cb6565b3480156107e857600080fd5b5061044e6107f736600461331c565b611d4a565b34801561080857600080fd5b5061044e6108173660046131cf565b611d82565b34801561082857600080fd5b506018546108369060ff1681565b6040516103a791906133ae565b34801561084f57600080fd5b5060125461039b9060ff1681565b34801561086957600080fd5b5061042060155481565b34801561087f57600080fd5b506103c5611dd6565b34801561089457600080fd5b506103c5611de3565b3480156108a957600080fd5b506103c56108b8366004612fd1565b611df0565b3480156108c957600080fd5b5061039b6108d83660046131cf565b60146020526000908152604090205460ff1681565b3480156108f957600080fd5b5061044e6109083660046133d6565b611ea5565b34801561091957600080fd5b50610420611fe9565b34801561092e57600080fd5b5061044e61093d3660046130bc565b611ff4565b34801561094e57600080fd5b50610420612037565b34801561096357600080fd5b5061042060115481565b34801561097957600080fd5b5061044e61204f565b34801561098e57600080fd5b5061039b61099d3660046133f7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109d757600080fd5b5061044e6109e63660046131cf565b61213f565b3480156109f757600080fd5b5061044e610a063660046131cf565b6121e0565b348015610a1757600080fd5b506012546103f2906201000090046001600160a01b031681565b6000610a3c82612243565b92915050565b606060008054610a5190613413565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d90613413565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b7982611657565b9050806001600160a01b0316836001600160a01b03161415610be75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b49565b336001600160a01b0382161480610c035750610c03813361099d565b610c755760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b49565b610c7f8383612268565b505050565b600a546001600160a01b03610100909104163314610cb45760405162461bcd60e51b8152600401610b499061344e565b6000815111610d155760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b49565b601254610100900460ff1615610d6d5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b49565b8051610d8090600e906020840190612e9a565b5050565b610d8e33826122d6565b610daa5760405162461bcd60e51b8152600401610b4990613483565b610c7f8383836123cd565b6002600b541415610e085760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b49565b6002600b55600a5460ff1615610e305760405162461bcd60e51b8152600401610b49906134d4565b600460185460ff166004811115610e4957610e49613398565b14610e965760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b49565b60008111610eb65760405162461bcd60e51b8152600401610b49906134fe565b60175481610ec360085490565b610ecd9190613557565b1115610eeb5760405162461bcd60e51b8152600401610b499061356f565b601154811115610f505760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b49565b60015b818111610f8c57610f6c33610f67600c5490565b612574565b610f7a600c80546001019055565b80610f84816135b5565b915050610f53565b50506001600b55565b6000610fa08361176f565b82106110025760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b49565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b54141561107e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b49565b6002600b55600a5460ff16156110a65760405162461bcd60e51b8152600401610b49906134d4565b600260185460ff1660048111156110bf576110bf613398565b1461110c5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b49565b600d546040516bffffffffffffffffffffffff193360601b16602082015261118591906034016040516020818303038152906040528051906020012084848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061258e9050565b6111d15760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610b49565b6017546008546111e2906001613557565b11156112005760405162461bcd60e51b8152600401610b499061356f565b3360009081526014602052604090205460ff16156112605760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b49565b336000818152601460205260409020805460ff1916600117905561128790610f67600c5490565b610f8c600c80546001019055565b600a546001600160a01b036101009091041633146112c55760405162461bcd60e51b8152600401610b499061344e565b47806113135760405162461bcd60e51b815260206004820152601760248201527f4e6f2062616c616e636520746f2077697468647261772e0000000000000000006044820152606401610b49565b6012546040516000916201000090046001600160a01b03169083908381818185875af1925050503d8060008114611366576040519150601f19603f3d011682016040523d82523d6000602084013e61136b565b606091505b5050905080610d805760405162461bcd60e51b815260206004820152601b60248201527f4661696c656420746f2077697468647261772062616c616e63652e00000000006044820152606401610b49565b600a546001600160a01b036101009091041633146113ec5760405162461bcd60e51b8152600401610b499061344e565b6113f46125a4565b565b610c7f83838360405180602001604052806000815250611d4a565b6060600061141e8361176f565b905060008167ffffffffffffffff81111561143b5761143b613030565b604051908082528060200260200182016040528015611464578160200160208202803683370190505b50905060005b828110156114ab5761147c8582610f95565b82828151811061148e5761148e6135d0565b6020908102919091010152806114a3816135b5565b91505061146a565b509392505050565b60006114be60085490565b82106115215760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b49565b60088281548110611534576115346135d0565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146115765760405162461bcd60e51b8152600401610b499061344e565b60125460ff16156115be5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b49565b8051610d8090600f906020840190612e9a565b600a546001600160a01b036101009091041633146116015760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b03166000908152601460205260409020805460ff19169055565b600a546001600160a01b036101009091041633146116525760405162461bcd60e51b8152600401610b499061344e565b601155565b6000818152600260205260408120546001600160a01b031680610a3c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b49565b600f80546116db90613413565b80601f016020809104026020016040519081016040528092919081815260200182805461170790613413565b80156117545780601f1061172957610100808354040283529160200191611754565b820191906000526020600020905b81548152906001019060200180831161173757829003601f168201915b505050505081565b600061176a61064160085490565b905090565b60006001600160a01b0382166117da5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b49565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118265760405162461bcd60e51b8152600401610b499061344e565b6113f46000612637565b600a546001600160a01b036101009091041633146118605760405162461bcd60e51b8152600401610b499061344e565b600360185460ff16600481111561187957611879613398565b146118c65760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b49565b60008160ff16116118e95760405162461bcd60e51b8152600401610b49906134fe565b6015546016546118fc9060ff8416613557565b111561195e5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b49565b6017548160ff1661196e60085490565b6119789190613557565b11156119965760405162461bcd60e51b8152600401610b499061356f565b8060ff16601660008282546119ab9190613557565b90915550600190505b8160ff168111610d80576119cb33610f67600c5490565b6119d9600c80546001019055565b806119e3816135b5565b9150506119b4565b600a546001600160a01b03610100909104163314611a1b5760405162461bcd60e51b8152600401610b499061344e565b600d55565b600a546001600160a01b03610100909104163314611a505760405162461bcd60e51b8152600401610b499061344e565b6000600e8054611a5f90613413565b905011611aae5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b49565b601254610100900460ff1615611b115760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b49565b6012805461ff001916610100179055565b600a546001600160a01b03610100909104163314611b525760405162461bcd60e51b8152600401610b499061344e565b6113f4612691565b606060018054610a5190613413565b610d803383836126e9565b600a546001600160a01b03610100909104163314611ba45760405162461bcd60e51b8152600401610b499061344e565b600060185460ff166004811115611bbd57611bbd613398565b11611c015760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b49565b6017548260ff16611c1160085490565b611c1b9190613557565b1115611c7c5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b49565b60015b8260ff168111610c7f57611c9682610f67600c5490565b611ca4600c80546001019055565b80611cae816135b5565b915050611c7f565b600d546040516bffffffffffffffffffffffff19606086901b166020820152600091611d32916034016040516020818303038152906040528051906020012085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061258e9050565b15611d3f57506001611d43565b5060005b9392505050565b611d5433836122d6565b611d705760405162461bcd60e51b8152600401610b4990613483565b611d7c848484846127b8565b50505050565b600a546001600160a01b03610100909104163314611db25760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b03166000908152601460205260409020805460ff19166001179055565b601080546116db90613413565b600e80546116db90613413565b6000818152600260205260409020546060906001600160a01b0316611e705760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b49565b600f611e7b836127eb565b6010604051602001611e8f93929190613680565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611ed55760405162461bcd60e51b8152600401610b499061344e565b60125460ff610100909104161515600114611f585760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b49565b600d54611fc25760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b49565b6018805482919060ff19166001836004811115611fe157611fe1613398565b021790555050565b600061176a60085490565b600a546001600160a01b036101009091041633146120245760405162461bcd60e51b8152600401610b499061344e565b8051610d80906010906020840190612e9a565b600061204260085490565b60175461176a91906136b3565b600a546001600160a01b0361010090910416331461207f5760405162461bcd60e51b8152600401610b499061344e565b6000600f805461208e90613413565b9050116120dd5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b49565b60125460ff16156121305760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b49565b6012805460ff19166001179055565b600a546001600160a01b0361010090910416331461216f5760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b0381166121d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b49565b6121dd81612637565b50565b600a546001600160a01b036101009091041633146122105760405162461bcd60e51b8152600401610b499061344e565b601280546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a3c5750610a3c826128e9565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061229d82611657565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661234f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b49565b600061235a83611657565b9050806001600160a01b0316846001600160a01b031614806123955750836001600160a01b031661238a84610ad4565b6001600160a01b0316145b806123c557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166123e082611657565b6001600160a01b0316146124445760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b49565b6001600160a01b0382166124a65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b49565b6124b1838383612939565b6124bc600082612268565b6001600160a01b03831660009081526003602052604081208054600192906124e59084906136b3565b90915550506001600160a01b0382166000908152600360205260408120805460019290612513908490613557565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d80828260405180602001604052806000815250612967565b60008261259b858461299a565b14949350505050565b600a5460ff166125ed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b49565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156126b45760405162461bcd60e51b8152600401610b49906134d4565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861261a3390565b816001600160a01b0316836001600160a01b0316141561274b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b49565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6127c38484846123cd565b6127cf84848484612a06565b611d7c5760405162461bcd60e51b8152600401610b49906136ca565b60608161280f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128395780612823816135b5565b91506128329050600a83613732565b9150612813565b60008167ffffffffffffffff81111561285457612854613030565b6040519080825280601f01601f19166020018201604052801561287e576020820181803683370190505b5090505b84156123c5576128936001836136b3565b91506128a0600a86613746565b6128ab906030613557565b60f81b8183815181106128c0576128c06135d0565b60200101906001600160f81b031916908160001a9053506128e2600a86613732565b9450612882565b60006001600160e01b031982166380ac58cd60e01b148061291a57506001600160e01b03198216635b5e139f60e01b145b80610a3c57506301ffc9a760e01b6001600160e01b0319831614610a3c565b600a5460ff161561295c5760405162461bcd60e51b8152600401610b49906134d4565b610c7f838383612b04565b6129718383612bbc565b61297e6000848484612a06565b610c7f5760405162461bcd60e51b8152600401610b49906136ca565b600081815b84518110156114ab5760008582815181106129bc576129bc6135d0565b602002602001015190508083116129e257600083815260208290526040902092506129f3565b600081815260208490526040902092505b50806129fe816135b5565b91505061299f565b60006001600160a01b0384163b15612af957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a4a90339089908890889060040161375a565b6020604051808303816000875af1925050508015612a85575060408051601f3d908101601f19168201909252612a8291810190613797565b60015b612adf573d808015612ab3576040519150601f19603f3d011682016040523d82523d6000602084013e612ab8565b606091505b508051612ad75760405162461bcd60e51b8152600401610b49906136ca565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506123c5565b506001949350505050565b6001600160a01b038316612b5f57612b5a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612b82565b816001600160a01b0316836001600160a01b031614612b8257612b828382612d0a565b6001600160a01b038216612b9957610c7f81612da7565b826001600160a01b0316826001600160a01b031614610c7f57610c7f8282612e56565b6001600160a01b038216612c125760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b49565b6000818152600260205260409020546001600160a01b031615612c775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b49565b612c8360008383612939565b6001600160a01b0382166000908152600360205260408120805460019290612cac908490613557565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612d178461176f565b612d2191906136b3565b600083815260076020526040902054909150808214612d74576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612db9906001906136b3565b60008381526009602052604081205460088054939450909284908110612de157612de16135d0565b906000526020600020015490508060088381548110612e0257612e026135d0565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612e3a57612e3a6137b4565b6001900381819060005260206000200160009055905550505050565b6000612e618361176f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612ea690613413565b90600052602060002090601f016020900481019282612ec85760008555612f0e565b82601f10612ee157805160ff1916838001178555612f0e565b82800160010185558215612f0e579182015b82811115612f0e578251825591602001919060010190612ef3565b50612f1a929150612f1e565b5090565b5b80821115612f1a5760008155600101612f1f565b6001600160e01b0319811681146121dd57600080fd5b600060208284031215612f5b57600080fd5b8135611d4381612f33565b60005b83811015612f81578181015183820152602001612f69565b83811115611d7c5750506000910152565b60008151808452612faa816020860160208601612f66565b601f01601f19169290920160200192915050565b602081526000611d436020830184612f92565b600060208284031215612fe357600080fd5b5035919050565b80356001600160a01b038116811461300157600080fd5b919050565b6000806040838503121561301957600080fd5b61302283612fea565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561306157613061613030565b604051601f8501601f19908116603f0116810190828211818310171561308957613089613030565b816040528093508581528686860111156130a257600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156130ce57600080fd5b813567ffffffffffffffff8111156130e557600080fd5b8201601f810184136130f657600080fd5b6123c584823560208401613046565b60008060006060848603121561311a57600080fd5b61312384612fea565b925061313160208501612fea565b9150604084013590509250925092565b60008083601f84011261315357600080fd5b50813567ffffffffffffffff81111561316b57600080fd5b6020830191508360208260051b850101111561318657600080fd5b9250929050565b600080602083850312156131a057600080fd5b823567ffffffffffffffff8111156131b757600080fd5b6131c385828601613141565b90969095509350505050565b6000602082840312156131e157600080fd5b611d4382612fea565b6020808252825182820181905260009190848201906040850190845b8181101561322257835183529284019291840191600101613206565b50909695505050505050565b803560ff8116811461300157600080fd5b60006020828403121561325157600080fd5b611d438261322e565b6000806040838503121561326d57600080fd5b61327683612fea565b91506020830135801515811461328b57600080fd5b809150509250929050565b600080604083850312156132a957600080fd5b6132b28361322e565b91506132c060208401612fea565b90509250929050565b6000806000604084860312156132de57600080fd5b6132e784612fea565b9250602084013567ffffffffffffffff81111561330357600080fd5b61330f86828701613141565b9497909650939450505050565b6000806000806080858703121561333257600080fd5b61333b85612fea565b935061334960208601612fea565b925060408501359150606085013567ffffffffffffffff81111561336c57600080fd5b8501601f8101871361337d57600080fd5b61338c87823560208401613046565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106133d057634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156133e857600080fd5b813560058110611d4357600080fd5b6000806040838503121561340a57600080fd5b6132b283612fea565b600181811c9082168061342757607f821691505b6020821081141561344857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526023908201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60408201526210181760e91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561356a5761356a613541565b500190565b60208082526026908201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736040820152653ab838363c9760d11b606082015260800190565b60006000198214156135c9576135c9613541565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061360057607f831692505b602080841082141561362257634e487b7160e01b600052602260045260246000fd5b818015613636576001811461364757613674565b60ff19861689528489019650613674565b60008881526020902060005b8681101561366c5781548b820152908501908301613653565b505084890196505b50505050505092915050565b600061368c82866135e6565b845161369c818360208901612f66565b6136a8818301866135e6565b979650505050505050565b6000828210156136c5576136c5613541565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826137415761374161371c565b500490565b6000826137555761375561371c565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061378d90830184612f92565b9695505050505050565b6000602082840312156137a957600080fd5b8151611d4381612f33565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e11dc8193ea68fc67b01b0a747cb207b660e3be17d39de4461240bb99b2a079464736f6c634300080b0033",
  "bytecodeSha1": "56265164dbed32125f3de1260a42c766b9bcae80",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "204": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "206": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "203": [
            1643,
            1671,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "177": [
            2625,
            2643,
            true
          ],
          "178": [
            2686,
            2732,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "181": [
            5999,
            6024,
            true
          ],
          "182": [
            6071,
            6086,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "175": [
            6661,
            6693,
            true
          ],
          "176": [
            6743,
            6764,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "160": [
            4613,
            4638,
            true
          ],
          "161": [
            4773,
            4787,
            true
          ],
          "162": [
            4845,
            4891,
            true
          ],
          "163": [
            4952,
            4978,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "170": [
            5850,
            5865,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "158": [
            6390,
            6423,
            true
          ],
          "159": [
            6485,
            6506,
            true
          ]
        },
        "CryptidToken.setStage": {
          "180": [
            7583,
            7611,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "171": [
            3866,
            3889,
            true
          ],
          "172": [
            3936,
            3950,
            true
          ],
          "173": [
            4008,
            4052,
            true
          ],
          "174": [
            4121,
            4167,
            true
          ]
        },
        "CryptidToken.verify": {
          "179": [
            8897,
            8965,
            false
          ]
        },
        "CryptidToken.whitelistMint": {
          "164": [
            3152,
            3176,
            true
          ],
          "165": [
            3301,
            3372,
            true
          ],
          "166": [
            3420,
            3457,
            true
          ],
          "167": [
            3520,
            3548,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "168": [
            7326,
            7337,
            true
          ],
          "169": [
            7462,
            7469,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.whitelistMint": {
          "205": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "195": [
            9157,
            9173,
            true
          ]
        },
        "ERC721._safeMint": {
          "194": [
            8619,
            8673,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "193": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "192": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "190": [
            10579,
            10610,
            true
          ],
          "191": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "183": [
            3674,
            3685,
            true
          ],
          "184": [
            3755,
            3776,
            true
          ],
          "185": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "188": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "187": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "189": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.transferFrom": {
          "186": [
            4915,
            4956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "198": [
            2823,
            2841,
            false
          ],
          "199": [
            2918,
            2928,
            false
          ],
          "200": [
            3015,
            3031,
            false
          ],
          "201": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "202": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "197": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "196": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "110": [
            2378,
            2395
          ],
          "111": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "53": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "90": [
            1998,
            2071
          ],
          "91": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "112": [
            1922,
            1936
          ],
          "113": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "108": [
            2168,
            2183
          ],
          "109": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "23": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "25": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "119": [
            627,
            637
          ],
          "120": [
            743,
            751
          ],
          "121": [
            765,
            775
          ],
          "122": [
            877,
            888
          ],
          "123": [
            902,
            958
          ],
          "124": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "130": [
            1769,
            1826
          ],
          "131": [
            1943,
            2000
          ],
          "132": [
            1575,
            1578
          ]
        },
        "MerkleProof.verify": {
          "107": [
            999,
            1039
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "126": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "127": [
            9182,
            9227
          ]
        },
        "CryptidToken.airdropCryptid": {
          "69": [
            2617,
            2668
          ],
          "70": [
            2678,
            2779
          ],
          "71": [
            2845,
            2885
          ],
          "72": [
            2899,
            2926
          ],
          "73": [
            2826,
            2829
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "87": [
            5991,
            6053
          ],
          "88": [
            6063,
            6117
          ],
          "89": [
            6127,
            6148
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "63": [
            6653,
            6725
          ],
          "64": [
            6735,
            6803
          ],
          "65": [
            6813,
            6840
          ]
        },
        "CryptidToken.getTokensLeft": {
          "86": [
            8375,
            8413
          ]
        },
        "CryptidToken.lastMintAddress": {
          "50": [
            7896,
            7925
          ]
        },
        "CryptidToken.lastMintID": {
          "84": [
            8001,
            8022
          ]
        },
        "CryptidToken.pause": {
          "66": [
            5273,
            5281
          ]
        },
        "CryptidToken.publicMint": {
          "18": [
            4605,
            4669
          ],
          "19": [
            4765,
            4827
          ],
          "20": [
            4837,
            4934
          ],
          "21": [
            4944,
            5025
          ],
          "22": [
            5093,
            5141
          ],
          "24": [
            5155,
            5182
          ],
          "26": [
            5074,
            5077
          ]
        },
        "CryptidToken.setBaseExtension": {
          "85": [
            6249,
            6282
          ]
        },
        "CryptidToken.setBaseURI": {
          "45": [
            5842,
            5888
          ],
          "46": [
            5898,
            5919
          ]
        },
        "CryptidToken.setClaim": {
          "78": [
            5475,
            5500
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "48": [
            7179,
            7207
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "62": [
            5729,
            5753
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "13": [
            6382,
            6467
          ],
          "14": [
            6477,
            6537
          ],
          "15": [
            6547,
            6579
          ]
        },
        "CryptidToken.setStage": {
          "81": [
            7575,
            7672
          ],
          "82": [
            7682,
            7760
          ],
          "83": [
            7770,
            7784
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "92": [
            6938,
            6974
          ]
        },
        "CryptidToken.supportsInterface": {
          "4": [
            9427,
            9470
          ]
        },
        "CryptidToken.teamMint": {
          "54": [
            3858,
            3918
          ],
          "55": [
            3928,
            3990
          ],
          "56": [
            4000,
            4100
          ],
          "57": [
            4113,
            4210
          ],
          "58": [
            4222,
            4249
          ],
          "59": [
            4315,
            4363
          ],
          "60": [
            4377,
            4404
          ],
          "61": [
            4296,
            4299
          ]
        },
        "CryptidToken.tokenURI": {
          "79": [
            8133,
            8210
          ],
          "80": [
            8220,
            8295
          ]
        },
        "CryptidToken.undoClaim": {
          "47": [
            5617,
            5643
          ]
        },
        "CryptidToken.unpause": {
          "38": [
            5342,
            5352
          ]
        },
        "CryptidToken.verify": {
          "74": [
            8981,
            8992
          ],
          "75": [
            9012,
            9024
          ]
        },
        "CryptidToken.walletOfOwner": {
          "40": [
            8696,
            8740
          ],
          "41": [
            8677,
            8680
          ],
          "42": [
            8760,
            8776
          ]
        },
        "CryptidToken.whitelistMint": {
          "29": [
            3144,
            3210
          ],
          "30": [
            3293,
            3402
          ],
          "31": [
            3412,
            3500
          ],
          "32": [
            3512,
            3584
          ],
          "33": [
            3595,
            3621
          ],
          "34": [
            3631,
            3679
          ],
          "35": [
            3689,
            3716
          ]
        },
        "CryptidToken.withdraw": {
          "36": [
            7318,
            7365
          ],
          "37": [
            7454,
            7501
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "94": [
            11242,
            11271
          ],
          "95": [
            11281,
            11332
          ]
        },
        "ERC721._checkOnERC721Received": {
          "133": [
            12820,
            12880
          ],
          "134": [
            12654,
            12712
          ],
          "135": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "6": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "96": [
            7551,
            7624
          ],
          "97": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "142": [
            9149,
            9210
          ],
          "143": [
            9220,
            9278
          ],
          "144": [
            9289,
            9334
          ],
          "145": [
            9345,
            9363
          ],
          "146": [
            9373,
            9394
          ],
          "147": [
            9405,
            9443
          ]
        },
        "ERC721._safeMint": {
          "106": [
            8191,
            8217
          ],
          "128": [
            8570,
            8588
          ],
          "129": [
            8598,
            8749
          ]
        },
        "ERC721._safeTransfer": {
          "117": [
            6700,
            6728
          ],
          "118": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "114": [
            11607,
            11662
          ],
          "115": [
            11672,
            11718
          ],
          "116": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "98": [
            10571,
            10652
          ],
          "99": [
            10662,
            10727
          ],
          "100": [
            10738,
            10777
          ],
          "101": [
            10839,
            10868
          ],
          "102": [
            10879,
            10899
          ],
          "103": [
            10909,
            10927
          ],
          "104": [
            10937,
            10958
          ],
          "105": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "9": [
            3666,
            3723
          ],
          "11": [
            3734,
            3899
          ],
          "12": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "51": [
            2020,
            2094
          ],
          "52": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4094,
            4167
          ],
          "8": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "5": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "49": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "39": [
            5255,
            5294
          ],
          "76": [
            5528,
            5631
          ],
          "77": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "68": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "125": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "67": [
            2731,
            2745
          ]
        },
        "ERC721.transferFrom": {
          "16": [
            4907,
            5010
          ],
          "17": [
            5021,
            5049
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "137": [
            3978,
            4022
          ],
          "138": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "156": [
            3621,
            3655
          ],
          "157": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "136": [
            2857,
            2897
          ],
          "139": [
            2944,
            2991
          ],
          "140": [
            3047,
            3092
          ],
          "141": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "152": [
            6669,
            6705
          ],
          "153": [
            6773,
            6814
          ],
          "154": [
            6935,
            6966
          ],
          "155": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "148": [
            5269,
            5313
          ],
          "149": [
            5385,
            5428
          ],
          "150": [
            5559,
            5592
          ],
          "151": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "93": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "43": [
            1892,
            1987
          ],
          "44": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "27": [
            1407,
            1494
          ],
          "28": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "6080604052600436106103765760003560e01c80637b671780116101d1578063c321458111610102578063da3ef23f116100a0578063e985e9c51161006f578063e985e9c514610982578063f2fde38b146109cb578063f4efa3e6146109eb578063ffa9cd3b14610a0b57600080fd5b8063da3ef23f14610922578063de5f986614610942578063de7fcb1d14610957578063e7bc82081461096d57600080fd5b8063c87b56dd116100dc578063c87b56dd1461089d578063c884ef83146108bd578063ce3cd997146108ed578063d6d67a091461090d57600080fd5b8063c32145811461085d578063c668286214610873578063c6ab67a31461088857600080fd5b8063a22cb4651161016f578063b88d4fde11610149578063b88d4fde146107dc578063bb31b77b146107fc578063c040e6b81461081c578063c29de6301461084357600080fd5b8063a22cb4651461077c578063b3caad011461079c578063b76a0df4146107bc57600080fd5b80638456cb59116101ab5780638456cb59146107105780638da5cb5b1461072557806395d89b41146107485780639a2a9c3d1461075d57600080fd5b80637b671780146106bb5780637cb64759146106db57806381c162f2146106fb57600080fd5b80633f4ba83a116102ab578063616cdb1e116102495780636cbb8985116102235780636cbb89851461065b57806370a0823114610670578063715018a61461069057806378231978146106a557600080fd5b8063616cdb1e146106065780636352211e146106265780636c0360eb1461064657600080fd5b80634f6ccce7116102855780634f6ccce71461058e57806355f804b3146105ae57806357ed9e4e146105ce5780635c975abb146105ee57600080fd5b80633f4ba83a1461052c57806342842e0e14610541578063438b63001461056157600080fd5b806323b872dd116103185780632f745c59116102f25780632f745c59146104ce57806333e61413146104ee578063372f657c146105045780633ccfd60b1461051757600080fd5b806323b872dd146104855780632db11544146104a55780632eb4a7ab146104b857600080fd5b8063088139a611610354578063088139a61461040a578063095ea7b31461042e578063109695231461045057806318160ddd1461047057600080fd5b806301ffc9a71461037b57806306fdde03146103b0578063081812fc146103d2575b600080fd5b34801561038757600080fd5b5061039b610396366004612f49565b610a31565b60405190151581526020015b60405180910390f35b3480156103bc57600080fd5b506103c5610a42565b6040516103a79190612fbe565b3480156103de57600080fd5b506103f26103ed366004612fd1565b610ad4565b6040516001600160a01b0390911681526020016103a7565b34801561041657600080fd5b5061042060165481565b6040519081526020016103a7565b34801561043a57600080fd5b5061044e610449366004613006565b610b6e565b005b34801561045c57600080fd5b5061044e61046b3660046130bc565b610c84565b34801561047c57600080fd5b50600854610420565b34801561049157600080fd5b5061044e6104a0366004613105565b610d84565b61044e6104b3366004612fd1565b610db5565b3480156104c457600080fd5b50610420600d5481565b3480156104da57600080fd5b506104206104e9366004613006565b610f95565b3480156104fa57600080fd5b5061042060135481565b61044e61051236600461318d565b61102b565b34801561052357600080fd5b5061044e611295565b34801561053857600080fd5b5061044e6113bc565b34801561054d57600080fd5b5061044e61055c366004613105565b6113f6565b34801561056d57600080fd5b5061058161057c3660046131cf565b611411565b6040516103a791906131ea565b34801561059a57600080fd5b506104206105a9366004612fd1565b6114b3565b3480156105ba57600080fd5b5061044e6105c93660046130bc565b611546565b3480156105da57600080fd5b5061044e6105e93660046131cf565b6115d1565b3480156105fa57600080fd5b50600a5460ff1661039b565b34801561061257600080fd5b5061044e610621366004612fd1565b611622565b34801561063257600080fd5b506103f2610641366004612fd1565b611657565b34801561065257600080fd5b506103c56116ce565b34801561066757600080fd5b506103f261175c565b34801561067c57600080fd5b5061042061068b3660046131cf565b61176f565b34801561069c57600080fd5b5061044e6117f6565b3480156106b157600080fd5b5061042060175481565b3480156106c757600080fd5b5061044e6106d636600461323f565b611830565b3480156106e757600080fd5b5061044e6106f6366004612fd1565b6119eb565b34801561070757600080fd5b5061044e611a20565b34801561071c57600080fd5b5061044e611b22565b34801561073157600080fd5b50600a5461010090046001600160a01b03166103f2565b34801561075457600080fd5b506103c5611b5a565b34801561076957600080fd5b5060125461039b90610100900460ff1681565b34801561078857600080fd5b5061044e61079736600461325a565b611b69565b3480156107a857600080fd5b5061044e6107b7366004613296565b611b74565b3480156107c857600080fd5b5061039b6107d73660046132c9565b611cb6565b3480156107e857600080fd5b5061044e6107f736600461331c565b611d4a565b34801561080857600080fd5b5061044e6108173660046131cf565b611d82565b34801561082857600080fd5b506018546108369060ff1681565b6040516103a791906133ae565b34801561084f57600080fd5b5060125461039b9060ff1681565b34801561086957600080fd5b5061042060155481565b34801561087f57600080fd5b506103c5611dd6565b34801561089457600080fd5b506103c5611de3565b3480156108a957600080fd5b506103c56108b8366004612fd1565b611df0565b3480156108c957600080fd5b5061039b6108d83660046131cf565b60146020526000908152604090205460ff1681565b3480156108f957600080fd5b5061044e6109083660046133d6565b611ea5565b34801561091957600080fd5b50610420611fe9565b34801561092e57600080fd5b5061044e61093d3660046130bc565b611ff4565b34801561094e57600080fd5b50610420612037565b34801561096357600080fd5b5061042060115481565b34801561097957600080fd5b5061044e61204f565b34801561098e57600080fd5b5061039b61099d3660046133f7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109d757600080fd5b5061044e6109e63660046131cf565b61213f565b3480156109f757600080fd5b5061044e610a063660046131cf565b6121e0565b348015610a1757600080fd5b506012546103f2906201000090046001600160a01b031681565b6000610a3c82612243565b92915050565b606060008054610a5190613413565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d90613413565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610b7982611657565b9050806001600160a01b0316836001600160a01b03161415610be75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b49565b336001600160a01b0382161480610c035750610c03813361099d565b610c755760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b49565b610c7f8383612268565b505050565b600a546001600160a01b03610100909104163314610cb45760405162461bcd60e51b8152600401610b499061344e565b6000815111610d155760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b49565b601254610100900460ff1615610d6d5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b49565b8051610d8090600e906020840190612e9a565b5050565b610d8e33826122d6565b610daa5760405162461bcd60e51b8152600401610b4990613483565b610c7f8383836123cd565b6002600b541415610e085760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b49565b6002600b55600a5460ff1615610e305760405162461bcd60e51b8152600401610b49906134d4565b600460185460ff166004811115610e4957610e49613398565b14610e965760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b49565b60008111610eb65760405162461bcd60e51b8152600401610b49906134fe565b60175481610ec360085490565b610ecd9190613557565b1115610eeb5760405162461bcd60e51b8152600401610b499061356f565b601154811115610f505760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b49565b60015b818111610f8c57610f6c33610f67600c5490565b612574565b610f7a600c80546001019055565b80610f84816135b5565b915050610f53565b50506001600b55565b6000610fa08361176f565b82106110025760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b49565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b54141561107e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b49565b6002600b55600a5460ff16156110a65760405162461bcd60e51b8152600401610b49906134d4565b600260185460ff1660048111156110bf576110bf613398565b1461110c5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b49565b600d546040516bffffffffffffffffffffffff193360601b16602082015261118591906034016040516020818303038152906040528051906020012084848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061258e9050565b6111d15760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f74206f6e2077686974656c6973742e000000000000006044820152606401610b49565b6017546008546111e2906001613557565b11156112005760405162461bcd60e51b8152600401610b499061356f565b3360009081526014602052604090205460ff16156112605760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b49565b336000818152601460205260409020805460ff1916600117905561128790610f67600c5490565b610f8c600c80546001019055565b600a546001600160a01b036101009091041633146112c55760405162461bcd60e51b8152600401610b499061344e565b47806113135760405162461bcd60e51b815260206004820152601760248201527f4e6f2062616c616e636520746f2077697468647261772e0000000000000000006044820152606401610b49565b6012546040516000916201000090046001600160a01b03169083908381818185875af1925050503d8060008114611366576040519150601f19603f3d011682016040523d82523d6000602084013e61136b565b606091505b5050905080610d805760405162461bcd60e51b815260206004820152601b60248201527f4661696c656420746f2077697468647261772062616c616e63652e00000000006044820152606401610b49565b600a546001600160a01b036101009091041633146113ec5760405162461bcd60e51b8152600401610b499061344e565b6113f46125a4565b565b610c7f83838360405180602001604052806000815250611d4a565b6060600061141e8361176f565b905060008167ffffffffffffffff81111561143b5761143b613030565b604051908082528060200260200182016040528015611464578160200160208202803683370190505b50905060005b828110156114ab5761147c8582610f95565b82828151811061148e5761148e6135d0565b6020908102919091010152806114a3816135b5565b91505061146a565b509392505050565b60006114be60085490565b82106115215760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b49565b60088281548110611534576115346135d0565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146115765760405162461bcd60e51b8152600401610b499061344e565b60125460ff16156115be5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b49565b8051610d8090600f906020840190612e9a565b600a546001600160a01b036101009091041633146116015760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b03166000908152601460205260409020805460ff19169055565b600a546001600160a01b036101009091041633146116525760405162461bcd60e51b8152600401610b499061344e565b601155565b6000818152600260205260408120546001600160a01b031680610a3c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b49565b600f80546116db90613413565b80601f016020809104026020016040519081016040528092919081815260200182805461170790613413565b80156117545780601f1061172957610100808354040283529160200191611754565b820191906000526020600020905b81548152906001019060200180831161173757829003601f168201915b505050505081565b600061176a61064160085490565b905090565b60006001600160a01b0382166117da5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b49565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118265760405162461bcd60e51b8152600401610b499061344e565b6113f46000612637565b600a546001600160a01b036101009091041633146118605760405162461bcd60e51b8152600401610b499061344e565b600360185460ff16600481111561187957611879613398565b146118c65760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b49565b60008160ff16116118e95760405162461bcd60e51b8152600401610b49906134fe565b6015546016546118fc9060ff8416613557565b111561195e5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b49565b6017548160ff1661196e60085490565b6119789190613557565b11156119965760405162461bcd60e51b8152600401610b499061356f565b8060ff16601660008282546119ab9190613557565b90915550600190505b8160ff168111610d80576119cb33610f67600c5490565b6119d9600c80546001019055565b806119e3816135b5565b9150506119b4565b600a546001600160a01b03610100909104163314611a1b5760405162461bcd60e51b8152600401610b499061344e565b600d55565b600a546001600160a01b03610100909104163314611a505760405162461bcd60e51b8152600401610b499061344e565b6000600e8054611a5f90613413565b905011611aae5760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b49565b601254610100900460ff1615611b115760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b49565b6012805461ff001916610100179055565b600a546001600160a01b03610100909104163314611b525760405162461bcd60e51b8152600401610b499061344e565b6113f4612691565b606060018054610a5190613413565b610d803383836126e9565b600a546001600160a01b03610100909104163314611ba45760405162461bcd60e51b8152600401610b499061344e565b600060185460ff166004811115611bbd57611bbd613398565b11611c015760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b49565b6017548260ff16611c1160085490565b611c1b9190613557565b1115611c7c5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b49565b60015b8260ff168111610c7f57611c9682610f67600c5490565b611ca4600c80546001019055565b80611cae816135b5565b915050611c7f565b600d546040516bffffffffffffffffffffffff19606086901b166020820152600091611d32916034016040516020818303038152906040528051906020012085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092949392505061258e9050565b15611d3f57506001611d43565b5060005b9392505050565b611d5433836122d6565b611d705760405162461bcd60e51b8152600401610b4990613483565b611d7c848484846127b8565b50505050565b600a546001600160a01b03610100909104163314611db25760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b03166000908152601460205260409020805460ff19166001179055565b601080546116db90613413565b600e80546116db90613413565b6000818152600260205260409020546060906001600160a01b0316611e705760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b49565b600f611e7b836127eb565b6010604051602001611e8f93929190613680565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611ed55760405162461bcd60e51b8152600401610b499061344e565b60125460ff610100909104161515600114611f585760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b49565b600d54611fc25760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b49565b6018805482919060ff19166001836004811115611fe157611fe1613398565b021790555050565b600061176a60085490565b600a546001600160a01b036101009091041633146120245760405162461bcd60e51b8152600401610b499061344e565b8051610d80906010906020840190612e9a565b600061204260085490565b60175461176a91906136b3565b600a546001600160a01b0361010090910416331461207f5760405162461bcd60e51b8152600401610b499061344e565b6000600f805461208e90613413565b9050116120dd5760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b49565b60125460ff16156121305760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b49565b6012805460ff19166001179055565b600a546001600160a01b0361010090910416331461216f5760405162461bcd60e51b8152600401610b499061344e565b6001600160a01b0381166121d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b49565b6121dd81612637565b50565b600a546001600160a01b036101009091041633146122105760405162461bcd60e51b8152600401610b499061344e565b601280546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a3c5750610a3c826128e9565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061229d82611657565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661234f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b49565b600061235a83611657565b9050806001600160a01b0316846001600160a01b031614806123955750836001600160a01b031661238a84610ad4565b6001600160a01b0316145b806123c557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166123e082611657565b6001600160a01b0316146124445760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b49565b6001600160a01b0382166124a65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b49565b6124b1838383612939565b6124bc600082612268565b6001600160a01b03831660009081526003602052604081208054600192906124e59084906136b3565b90915550506001600160a01b0382166000908152600360205260408120805460019290612513908490613557565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610d80828260405180602001604052806000815250612967565b60008261259b858461299a565b14949350505050565b600a5460ff166125ed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b49565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156126b45760405162461bcd60e51b8152600401610b49906134d4565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861261a3390565b816001600160a01b0316836001600160a01b0316141561274b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b49565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6127c38484846123cd565b6127cf84848484612a06565b611d7c5760405162461bcd60e51b8152600401610b49906136ca565b60608161280f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128395780612823816135b5565b91506128329050600a83613732565b9150612813565b60008167ffffffffffffffff81111561285457612854613030565b6040519080825280601f01601f19166020018201604052801561287e576020820181803683370190505b5090505b84156123c5576128936001836136b3565b91506128a0600a86613746565b6128ab906030613557565b60f81b8183815181106128c0576128c06135d0565b60200101906001600160f81b031916908160001a9053506128e2600a86613732565b9450612882565b60006001600160e01b031982166380ac58cd60e01b148061291a57506001600160e01b03198216635b5e139f60e01b145b80610a3c57506301ffc9a760e01b6001600160e01b0319831614610a3c565b600a5460ff161561295c5760405162461bcd60e51b8152600401610b49906134d4565b610c7f838383612b04565b6129718383612bbc565b61297e6000848484612a06565b610c7f5760405162461bcd60e51b8152600401610b49906136ca565b600081815b84518110156114ab5760008582815181106129bc576129bc6135d0565b602002602001015190508083116129e257600083815260208290526040902092506129f3565b600081815260208490526040902092505b50806129fe816135b5565b91505061299f565b60006001600160a01b0384163b15612af957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612a4a90339089908890889060040161375a565b6020604051808303816000875af1925050508015612a85575060408051601f3d908101601f19168201909252612a8291810190613797565b60015b612adf573d808015612ab3576040519150601f19603f3d011682016040523d82523d6000602084013e612ab8565b606091505b508051612ad75760405162461bcd60e51b8152600401610b49906136ca565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506123c5565b506001949350505050565b6001600160a01b038316612b5f57612b5a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612b82565b816001600160a01b0316836001600160a01b031614612b8257612b828382612d0a565b6001600160a01b038216612b9957610c7f81612da7565b826001600160a01b0316826001600160a01b031614610c7f57610c7f8282612e56565b6001600160a01b038216612c125760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b49565b6000818152600260205260409020546001600160a01b031615612c775760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b49565b612c8360008383612939565b6001600160a01b0382166000908152600360205260408120805460019290612cac908490613557565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612d178461176f565b612d2191906136b3565b600083815260076020526040902054909150808214612d74576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612db9906001906136b3565b60008381526009602052604081205460088054939450909284908110612de157612de16135d0565b906000526020600020015490508060088381548110612e0257612e026135d0565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612e3a57612e3a6137b4565b6001900381819060005260206000200160009055905550505050565b6000612e618361176f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612ea690613413565b90600052602060002090601f016020900481019282612ec85760008555612f0e565b82601f10612ee157805160ff1916838001178555612f0e565b82800160010185558215612f0e579182015b82811115612f0e578251825591602001919060010190612ef3565b50612f1a929150612f1e565b5090565b5b80821115612f1a5760008155600101612f1f565b6001600160e01b0319811681146121dd57600080fd5b600060208284031215612f5b57600080fd5b8135611d4381612f33565b60005b83811015612f81578181015183820152602001612f69565b83811115611d7c5750506000910152565b60008151808452612faa816020860160208601612f66565b601f01601f19169290920160200192915050565b602081526000611d436020830184612f92565b600060208284031215612fe357600080fd5b5035919050565b80356001600160a01b038116811461300157600080fd5b919050565b6000806040838503121561301957600080fd5b61302283612fea565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561306157613061613030565b604051601f8501601f19908116603f0116810190828211818310171561308957613089613030565b816040528093508581528686860111156130a257600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156130ce57600080fd5b813567ffffffffffffffff8111156130e557600080fd5b8201601f810184136130f657600080fd5b6123c584823560208401613046565b60008060006060848603121561311a57600080fd5b61312384612fea565b925061313160208501612fea565b9150604084013590509250925092565b60008083601f84011261315357600080fd5b50813567ffffffffffffffff81111561316b57600080fd5b6020830191508360208260051b850101111561318657600080fd5b9250929050565b600080602083850312156131a057600080fd5b823567ffffffffffffffff8111156131b757600080fd5b6131c385828601613141565b90969095509350505050565b6000602082840312156131e157600080fd5b611d4382612fea565b6020808252825182820181905260009190848201906040850190845b8181101561322257835183529284019291840191600101613206565b50909695505050505050565b803560ff8116811461300157600080fd5b60006020828403121561325157600080fd5b611d438261322e565b6000806040838503121561326d57600080fd5b61327683612fea565b91506020830135801515811461328b57600080fd5b809150509250929050565b600080604083850312156132a957600080fd5b6132b28361322e565b91506132c060208401612fea565b90509250929050565b6000806000604084860312156132de57600080fd5b6132e784612fea565b9250602084013567ffffffffffffffff81111561330357600080fd5b61330f86828701613141565b9497909650939450505050565b6000806000806080858703121561333257600080fd5b61333b85612fea565b935061334960208601612fea565b925060408501359150606085013567ffffffffffffffff81111561336c57600080fd5b8501601f8101871361337d57600080fd5b61338c87823560208401613046565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106133d057634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156133e857600080fd5b813560058110611d4357600080fd5b6000806040838503121561340a57600080fd5b6132b283612fea565b600181811c9082168061342757607f821691505b6020821081141561344857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526023908201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60408201526210181760e91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561356a5761356a613541565b500190565b60208082526026908201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736040820152653ab838363c9760d11b606082015260800190565b60006000198214156135c9576135c9613541565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061360057607f831692505b602080841082141561362257634e487b7160e01b600052602260045260246000fd5b818015613636576001811461364757613674565b60ff19861689528489019650613674565b60008881526020902060005b8681101561366c5781548b820152908501908301613653565b505084890196505b50505050505092915050565b600061368c82866135e6565b845161369c818360208901612f66565b6136a8818301866135e6565b979650505050505050565b6000828210156136c5576136c5613541565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826137415761374161371c565b500490565b6000826137555761375561371c565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061378d90830184612f92565b9695505050505050565b6000602082840312156137a957600080fd5b8151611d4381612f33565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e11dc8193ea68fc67b01b0a747cb207b660e3be17d39de4461240bb99b2a079464736f6c634300080b0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;9308:169:16;;;;;;;;2488:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;;;;;-1:-1:-1;3999:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3999:217:3;1528:203:17;1815:28:16;;;;;;;;;;;;;;;;;;;1882:25:17;;;1870:2;1855:18;1815:28:16;1736:177:17;3537:401:3;;;;;;;;;;-1:-1:-1;3537:401:3;;;;;:::i;:::-;;:::i;:::-;;6295:291:16;;;;;;;;;;-1:-1:-1;6295:291:16;;;;;:::i;:::-;;:::i;1615:111:6:-;;;;;;;;;;-1:-1:-1;1702:10:6;:17;1615:111;;4726:330:3;;;;;;;;;;-1:-1:-1;4726:330:3;;;;;:::i;:::-;;:::i;4456:743:16:-;;;;;;:::i;:::-;;:::i;1074:25::-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1604:30:16:-;;;;;;;;;;;;;;;;2981:742;;;;;;:::i;:::-;;:::i;7220:288::-;;;;;;;;;;;;;:::i;5294:65::-;;;;;;;;;;;;;:::i;5122:179:3:-;;;;;;;;;;-1:-1:-1;5122:179:3;;;;;:::i;:::-;;:::i;8430:353:16:-;;;;;;;;;;-1:-1:-1;8430:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5766:160:16:-;;;;;;;;;;-1:-1:-1;5766:160:16;;;;;:::i;:::-;;:::i;5551:99::-;;;;;;;;;;-1:-1:-1;5551:99:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;7102:112:16;;;;;;;;;;-1:-1:-1;7102:112:16;;;;;:::i;:::-;;:::i;2191:235:3:-;;;;;;;;;;-1:-1:-1;2191:235:3;;;;;:::i;:::-;;:::i;1139:26:16:-;;;;;;;;;;;;;:::i;7828:104::-;;;;;;;;;;;;;:::i;1929:205:3:-;;;;;;;;;;-1:-1:-1;1929:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1879:30:16:-;;;;;;;;;;;;;;;;3756:665;;;;;;;;;;-1:-1:-1;3756:665:16;;;;;:::i;:::-;;:::i;5656:104::-;;;;;;;;;;-1:-1:-1;5656:104:16;;;;;:::i;:::-;;:::i;6592:255::-;;;;;;;;;;;;;:::i;5227:61::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:3;;;;;;;;;;;;;:::i;1292:40:16:-;;;;;;;;;;-1:-1:-1;1292:40:16;;;;;;;;;;;4283:153:3;;;;;;;;;;-1:-1:-1;4283:153:3;;;;;:::i;:::-;;:::i;2489:454:16:-;;;;;;;;;;-1:-1:-1;2489:454:16;;;;;:::i;:::-;;:::i;8789:242::-;;;;;;;;;;-1:-1:-1;8789:242:16;;;;;:::i;:::-;;:::i;5367:320:3:-;;;;;;;;;;-1:-1:-1;5367:320:3;;;;;:::i;:::-;;:::i;5410:97:16:-;;;;;;;;;;-1:-1:-1;5410:97:16;;;;;:::i;:::-;;:::i;1925:18::-;;;;;;;;;;-1:-1:-1;1925:18:16;;;;;;;;;;;;;;;:::i;1252:34::-;;;;;;;;;;-1:-1:-1;1252:34:16;;;;;;;;1754:29;;;;;;;;;;;;;;;;1171:37;;;;;;;;;;;;;:::i;1105:28::-;;;;;;;;;;;;;:::i;8035:267::-;;;;;;;;;;-1:-1:-1;8035:267:16;;;;;:::i;:::-;;:::i;1663:39::-;;;;;;;;;;-1:-1:-1;1663:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;7514:277;;;;;;;;;;-1:-1:-1;7514:277:16;;;;;:::i;:::-;;:::i;7938:91::-;;;;;;;;;;;;;:::i;6161:128::-;;;;;;;;;;-1:-1:-1;6161:128:16;;;;;:::i;:::-;;:::i;8308:112::-;;;;;;;;;;;;;:::i;1214:27::-;;;;;;;;;;;;;;;;5937:218;;;;;;;;;;;;;:::i;4502:162:3:-;;;;;;;;;;-1:-1:-1;4502:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6853:128:16:-;;;;;;;;;;-1:-1:-1;6853:128:16;;;;;:::i;:::-;;:::i;1339:76::-;;;;;;;;;;-1:-1:-1;1339:76:16;;;;;;;-1:-1:-1;;;;;1339:76:16;;;9308:169;9411:4;9434:36;9458:11;9434:23;:36::i;:::-;9427:43;9308:169;-1:-1:-1;;9308:169:16:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;4094:73;;;;-1:-1:-1;;;4094:73:3;;9665:2:17;4094:73:3;;;9647:21:17;9704:2;9684:18;;;9677:30;9743:34;9723:18;;;9716:62;-1:-1:-1;;;9794:18:17;;;9787:42;9846:19;;4094:73:3;;;;;;;;;-1:-1:-1;4185:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:3;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:3;:2;-1:-1:-1;;;;;3674:11:3;;;3666:57;;;;-1:-1:-1;;;3666:57:3;;10078:2:17;3666:57:3;;;10060:21:17;10117:2;10097:18;;;10090:30;10156:34;10136:18;;;10129:62;-1:-1:-1;;;10207:18:17;;;10200:31;10248:19;;3666:57:3;9876:397:17;3666:57:3;719:10:10;-1:-1:-1;;;;;3755:21:3;;;;:62;;-1:-1:-1;3780:37:3;3797:5;719:10:10;4502:162:3;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:3;;10480:2:17;3734:165:3;;;10462:21:17;10519:2;10499:18;;;10492:30;10558:34;10538:18;;;10531:62;10629:26;10609:18;;;10602:54;10673:19;;3734:165:3;10278:420:17;3734:165:3;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;6295:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6422:1:16::1;6396:15;6390:29;:33;6382:85;;;::::0;-1:-1:-1;;;6382:85:16;;11266:2:17;6382:85:16::1;::::0;::::1;11248:21:17::0;11305:2;11285:18;;;11278:30;11344:34;11324:18;;;11317:62;-1:-1:-1;;;11395:18:17;;;11388:37;11442:19;;6382:85:16::1;11064:403:17::0;6382:85:16::1;6486:20;::::0;::::1;::::0;::::1;;;6485:21;6477:60;;;::::0;-1:-1:-1;;;6477:60:16;;11674:2:17;6477:60:16::1;::::0;::::1;11656:21:17::0;11713:2;11693:18;;;11686:30;11752:28;11732:18;;;11725:56;11798:18;;6477:60:16::1;11472:350:17::0;6477:60:16::1;6547:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6295:291:::0;:::o;4726:330:3:-;4915:41;719:10:10;4948:7:3;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:3;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;4456:743:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12447:2:17;2317:63:2;;;12429:21:17;12486:2;12466:18;;;12459:30;12525:33;12505:18;;;12498:61;12576:18;;2317:63:2;12245:355:17;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;4622:16:16::2;4613:5;::::0;::::2;;:25;::::0;::::2;;;;;;:::i;:::-;;4605:64;;;::::0;-1:-1:-1;;;4605:64:16;;13152:2:17;4605:64:16::2;::::0;::::2;13134:21:17::0;13191:2;13171:18;;;13164:30;13230:28;13210:18;;;13203:56;13276:18;;4605:64:16::2;12950:350:17::0;4605:64:16::2;4786:1;4773:10;:14;4765:62;;;;-1:-1:-1::0;;;4765:62:16::2;;;;;;;:::i;:::-;4876:15;;4862:10;4845:13;1702:10:6::0;:17;;1615:111;4845:13:16::2;:27;;;;:::i;:::-;:46;;4837:97;;;;-1:-1:-1::0;;;4837:97:16::2;;;;;;;:::i;:::-;4966:12;;4952:10;:26;;4944:81;;;::::0;-1:-1:-1;;;4944:81:16;;14583:2:17;4944:81:16::2;::::0;::::2;14565:21:17::0;14622:2;14602:18;;;14595:30;14661:34;14641:18;;;14634:62;-1:-1:-1;;;14712:18:17;;;14705:40;14762:19;;4944:81:16::2;14381:406:17::0;4944:81:16::2;5054:1;5037:156;5062:10;5057:1;:15;5037:156;;5093:48;5103:10;5115:25;:15;918:14:11::0;;827:112;5115:25:16::2;5093:9;:48::i;:::-;5155:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;5155:27:16::2;5074:3:::0;::::2;::::0;::::2;:::i;:::-;;;;5037:156;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;4456:743:16:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;15134:2:17;1407:87:6;;;15116:21:17;15173:2;15153:18;;;15146:30;15212:34;15192:18;;;15185:62;-1:-1:-1;;;15263:18:17;;;15256:41;15314:19;;1407:87:6;14932:407:17;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;2981:742:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;12447:2:17;2317:63:2;;;12429:21:17;12486:2;12466:18;;;12459:30;12525:33;12505:18;;;12498:61;12576:18;;2317:63:2;12245:355:17;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;3161:15:16::2;3152:5;::::0;::::2;;:24;::::0;::::2;;;;;;:::i;:::-;;3144:66;;;::::0;-1:-1:-1;;;3144:66:16;;15546:2:17;3144:66:16::2;::::0;::::2;15528:21:17::0;15585:2;15565:18;;;15558:30;15624:31;15604:18;;;15597:59;15673:18;;3144:66:16::2;15344:353:17::0;3144:66:16::2;3320:10;::::0;3342:28:::2;::::0;-1:-1:-1;;3359:10:16::2;15851:2:17::0;15847:15;15843:53;3342:28:16::2;::::0;::::2;15831:66:17::0;3301:71:16::2;::::0;3320:10;15913:12:17;;3342:28:16::2;;;;;;;;;;;;3332:39;;;;;;3301:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;3301:18:16;;:71;;-1:-1:-1;;3301:18:16::2;:71:::0;-1:-1:-1;3301:71:16:i:2;:::-;3293:109;;;::::0;-1:-1:-1;;;3293:109:16;;16138:2:17;3293:109:16::2;::::0;::::2;16120:21:17::0;16177:2;16157:18;;;16150:30;16216:27;16196:18;;;16189:55;16261:18;;3293:109:16::2;15936:349:17::0;3293:109:16::2;3442:15;::::0;1702:10:6;:17;3420:18:16::2;::::0;3437:1:::2;3420:18;:::i;:::-;:37;;3412:88;;;;-1:-1:-1::0;;;3412:88:16::2;;;;;;;:::i;:::-;3528:10;3520:19;::::0;;;:7:::2;:19;::::0;;;;;::::2;;:28;3512:72;;;::::0;-1:-1:-1;;;3512:72:16;;16492:2:17;3512:72:16::2;::::0;::::2;16474:21:17::0;16531:2;16511:18;;;16504:30;16570:33;16550:18;;;16543:61;16621:18;;3512:72:16::2;16290:355:17::0;3512:72:16::2;3603:10;3595:19;::::0;;;:7:::2;:19;::::0;;;;:26;;-1:-1:-1;;3595:26:16::2;3617:4;3595:26;::::0;;3631:48:::2;::::0;3653:25:::2;:15;918:14:11::0;;827:112;3631:48:16::2;3689:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;7220:288:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7287:21:16::1;7326:11:::0;7318:47:::1;;;::::0;-1:-1:-1;;;7318:47:16;;16852:2:17;7318:47:16::1;::::0;::::1;16834:21:17::0;16891:2;16871:18;;;16864:30;16930:25;16910:18;;;16903:53;16973:18;;7318:47:16::1;16650:347:17::0;7318:47:16::1;7402:16;::::0;7394:50:::1;::::0;7376:12:::1;::::0;7402:16;;::::1;-1:-1:-1::0;;;;;7402:16:16::1;::::0;7432:7;;7376:12;7394:50;7376:12;7394:50;7432:7;7402:16;7394:50:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7375:69;;;7462:7;7454:47;;;::::0;-1:-1:-1;;;7454:47:16;;17414:2:17;7454:47:16::1;::::0;::::1;17396:21:17::0;17453:2;17433:18;;;17426:30;17492:29;17472:18;;;17465:57;17539:18;;7454:47:16::1;17212:351:17::0;5294:65:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5342:10:16::1;:8;:10::i;:::-;5294:65::o:0;5122:179:3:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;8430:353:16:-;8491:16;8519:23;8545:16;8555:5;8545:9;:16::i;:::-;8519:42;;8571:26;8614:15;8600:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8600:30:16;;8571:59;;8645:9;8640:111;8660:15;8656:1;:19;8640:111;;;8711:29;8731:5;8738:1;8711:19;:29::i;:::-;8696:9;8706:1;8696:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8677:3;;;;:::i;:::-;;;;8640:111;;;-1:-1:-1;8767:9:16;8430:353;-1:-1:-1;;;8430:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;17902:2:17;1892:95:6;;;17884:21:17;17941:2;17921:18;;;17914:30;17980:34;17960:18;;;17953:62;-1:-1:-1;;;18031:18:17;;;18024:42;18083:19;;1892:95:6;17700:408:17;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5766:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5851:14:16::1;::::0;::::1;;5850:15;5842:46;;;::::0;-1:-1:-1;;;5842:46:16;;18315:2:17;5842:46:16::1;::::0;::::1;18297:21:17::0;18354:2;18334:18;;;18327:30;-1:-1:-1;;;18373:18:17;;;18366:48;18431:18;;5842:46:16::1;18113:342:17::0;5842:46:16::1;5898:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;5551:99::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5617:18:16::1;5638:5;5617:18:::0;;;:7:::1;:18;::::0;;;;:26;;-1:-1:-1;;5617:26:16::1;::::0;;5551:99::o;7102:112::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7179:12:16::1;:28:::0;7102:112::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:3;;18662:2:17;2324:73:3;;;18644:21:17;18701:2;18681:18;;;18674:30;18740:34;18720:18;;;18713:62;-1:-1:-1;;;18791:18:17;;;18784:39;18840:19;;2324:73:3;18460:405:17;1139:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7828:104::-;7878:7;7903:22;7911:13;1702:10:6;:17;;1615:111;7903:22:16;7896:29;;7828:104;:::o;1929:205:3:-;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;19072:2:17;2020:74:3;;;19054:21:17;19111:2;19091:18;;;19084:30;19150:34;19130:18;;;19123:62;-1:-1:-1;;;19201:18:17;;;19194:40;19251:19;;2020:74:3;18870:406:17;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;3756:665:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3875:14:16::1;3866:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3858:60;;;::::0;-1:-1:-1;;;3858:60:16;;19483:2:17;3858:60:16::1;::::0;::::1;19465:21:17::0;19522:2;19502:18;;;19495:30;19561:26;19541:18;;;19534:54;19605:18;;3858:60:16::1;19281:348:17::0;3858:60:16::1;3949:1;3936:10;:14;;;3928:62;;;;-1:-1:-1::0;;;3928:62:16::1;;;;;;;:::i;:::-;4038:14;::::0;4021:13:::1;::::0;4008:26:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:44;;4000:100;;;::::0;-1:-1:-1;;;4000:100:16;;19836:2:17;4000:100:16::1;::::0;::::1;19818:21:17::0;19875:2;19855:18;;;19848:30;19914:34;19894:18;;;19887:62;-1:-1:-1;;;19965:18:17;;;19958:41;20016:19;;4000:100:16::1;19634:407:17::0;4000:100:16::1;4152:15;;4138:10;4121:27;;:13;1702:10:6::0;:17;;1615:111;4121:13:16::1;:27;;;;:::i;:::-;:46;;4113:97;;;;-1:-1:-1::0;;;4113:97:16::1;;;;;;;:::i;:::-;4239:10;4222:27;;:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4276:1:16::1;::::0;-1:-1:-1;4259:156:16::1;4284:10;4279:15;;:1;:15;4259:156;;4315:48;4325:10;4337:25;:15;918:14:11::0;;827:112;4315:48:16::1;4377:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4377:27:16::1;4296:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4259:156;;5656:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5729:10:16::1;:24:::0;5656:104::o;6592:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6692:1:16::1;6667:14;6661:28;;;;;:::i;:::-;;;:32;6653:72;;;::::0;-1:-1:-1;;;6653:72:16;;20248:2:17;6653:72:16::1;::::0;::::1;20230:21:17::0;20287:2;20267:18;;;20260:30;20326:29;20306:18;;;20299:57;20373:18;;6653:72:16::1;20046:351:17::0;6653:72:16::1;6744:20;::::0;::::1;::::0;::::1;;;6743:21;6735:68;;;::::0;-1:-1:-1;;;6735:68:16;;20604:2:17;6735:68:16::1;::::0;::::1;20586:21:17::0;20643:2;20623:18;;;20616:30;20682:34;20662:18;;;20655:62;-1:-1:-1;;;20733:18:17;;;20726:32;20775:19;;6735:68:16::1;20402:398:17::0;6735:68:16::1;6813:20;:27:::0;;-1:-1:-1;;6813:27:16::1;;;::::0;;6592:255::o;5227:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5273:8:16::1;:6;:8::i;2650:102:3:-:0;2706:13;2738:7;2731:14;;;;;:::i;4283:153::-;4377:52;719:10:10;4410:8:3;4420;4377:18;:52::i;2489:454:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2633:10:16::1;2625:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;2617:51;;;::::0;-1:-1:-1;;;2617:51:16;;21007:2:17;2617:51:16::1;::::0;::::1;20989:21:17::0;21046:2;21026:18;;;21019:30;-1:-1:-1;;;21065:18:17;;;21058:50;21125:18;;2617:51:16::1;20805:344:17::0;2617:51:16::1;2717:15;;2703:10;2686:27;;:13;1702:10:6::0;:17;;1615:111;2686:13:16::1;:27;;;;:::i;:::-;:46;;2678:101;;;::::0;-1:-1:-1;;;2678:101:16;;21356:2:17;2678:101:16::1;::::0;::::1;21338:21:17::0;21395:2;21375:18;;;21368:30;21434:34;21414:18;;;21407:62;-1:-1:-1;;;21485:18:17;;;21478:40;21535:19;;2678:101:16::1;21154:406:17::0;2678:101:16::1;2806:1;2789:148;2814:10;2809:15;;:1;:15;2789:148;;2845:40;2855:2;2859:25;:15;918:14:11::0;;827:112;2845:40:16::1;2899:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2899:27:16::1;2826:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2789:148;;8789:242:::0;8916:10;;8938:25;;-1:-1:-1;;15851:2:17;15847:15;;;15843:53;8938:25:16;;;15831:66:17;8877:4:16;;8897:68;;15913:12:17;;8938:25:16;;;;;;;;;;;;8928:36;;;;;;8897:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8897:18:16;;:68;;-1:-1:-1;;8897:18:16;:68;-1:-1:-1;8897:68:16:i;:::-;8893:110;;;-1:-1:-1;8988:4:16;8981:11;;8893:110;-1:-1:-1;9019:5:16;8789:242;;;;;;:::o;5367:320:3:-;5536:41;719:10:10;5569:7:3;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:3;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;5410:97:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5475:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5475:25:16::1;5496:4;5475:25;::::0;;5410:97::o;1171:37::-;;;;;;;:::i;1105:28::-;;;;;;;:::i;8035:267::-;7224:4:3;7247:16;;;:7;:16;;;;;;8108:13:16;;-1:-1:-1;;;;;7247:16:3;8133:77:16;;;;-1:-1:-1;;;8133:77:16;;21767:2:17;8133:77:16;;;21749:21:17;21806:2;21786:18;;;21779:30;21845:34;21825:18;;;21818:62;-1:-1:-1;;;21896:18:17;;;21889:46;21952:19;;8133:77:16;21565:412:17;8133:77:16;8251:7;8260:18;:7;:16;:18::i;:::-;8280:13;8234:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8220:75;;8035:267;;;:::o;7514:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7583:20:16::1;::::0;::::1;;::::0;;::::1;;:28;;:20;:28;7575:97;;;::::0;-1:-1:-1;;;7575:97:16;;23749:2:17;7575:97:16::1;::::0;::::1;23731:21:17::0;23788:2;23768:18;;;23761:30;23827:34;23807:18;;;23800:62;23898:26;23878:18;;;23871:54;23942:19;;7575:97:16::1;23547:420:17::0;7575:97:16::1;7690:10;::::0;7682:78:::1;;;::::0;-1:-1:-1;;;7682:78:16;;24174:2:17;7682:78:16::1;::::0;::::1;24156:21:17::0;24213:2;24193:18;;;24186:30;24252:34;24232:18;;;24225:62;-1:-1:-1;;;24303:18:17;;;24296:48;24361:19;;7682:78:16::1;23972:414:17::0;7682:78:16::1;7770:5;:14:::0;;7778:6;;7770:5;-1:-1:-1;;7770:14:16::1;::::0;7778:6;7770:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7514:277:::0;:::o;7938:91::-;7983:7;8008:13;1702:10:6;:17;;1615:111;6161:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6249:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;8308:112::-:0;8356:7;8400:13;1702:10:6;:17;;1615:111;8400:13:16;8382:15;;:31;;;;:::i;5937:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6023:1:16::1;6005:7;5999:21;;;;;:::i;:::-;;;:25;5991:62;;;::::0;-1:-1:-1;;;5991:62:16;;24723:2:17;5991:62:16::1;::::0;::::1;24705:21:17::0;24762:2;24742:18;;;24735:30;24801:26;24781:18;;;24774:54;24845:18;;5991:62:16::1;24521:348:17::0;5991:62:16::1;6072:14;::::0;::::1;;6071:15;6063:54;;;::::0;-1:-1:-1;;;6063:54:16;;25076:2:17;6063:54:16::1;::::0;::::1;25058:21:17::0;25115:2;25095:18;;;25088:30;25154:28;25134:18;;;25127:56;25200:18;;6063:54:16::1;24874:350:17::0;6063:54:16::1;6127:14;:21:::0;;-1:-1:-1;;6127:21:16::1;6144:4;6127:21;::::0;;5937:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25431:2:17;1998:73:0::1;::::0;::::1;25413:21:17::0;25470:2;25450:18;;;25443:30;25509:34;25489:18;;;25482:62;-1:-1:-1;;;25560:18:17;;;25553:36;25606:19;;1998:73:0::1;25229:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6853:128:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6938:16:16::1;:36:::0;;-1:-1:-1;;;;;6938:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6938:36:16;;::::1;::::0;;;::::1;::::0;;6853:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;11168:171:3:-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:3;-1:-1:-1;;;;;11242:29:3;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:3;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;7551:73;;;;-1:-1:-1;;;7551:73:3;;25838:2:17;7551:73:3;;;25820:21:17;25877:2;25857:18;;;25850:30;25916:34;25896:18;;;25889:62;-1:-1:-1;;;25967:18:17;;;25960:42;26019:19;;7551:73:3;25636:408:17;7551:73:3;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:3;:7;-1:-1:-1;;;;;7691:16:3;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:3;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:3;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;7683:96;7442:344;-1:-1:-1;;;;7442:344:3:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:3;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:3;;10571:81;;;;-1:-1:-1;;;10571:81:3;;26251:2:17;10571:81:3;;;26233:21:17;26290:2;26270:18;;;26263:30;26329:34;26309:18;;;26302:62;-1:-1:-1;;;26380:18:17;;;26373:35;26425:19;;10571:81:3;26049:401:17;10571:81:3;-1:-1:-1;;;;;10670:16:3;;10662:65;;;;-1:-1:-1;;;10662:65:3;;26657:2:17;10662:65:3;;;26639:21:17;26696:2;26676:18;;;26669:30;26735:34;26715:18;;;26708:62;-1:-1:-1;;;26786:18:17;;;26779:34;26830:19;;10662:65:3;26455:400:17;10662:65:3;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:3;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:3;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:3;-1:-1:-1;;;;;10937:21:3;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;8116:108::-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;862:184:13:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:13:o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;27062:2:17;1669:41:1;;;27044:21:17;27101:2;27081:18;;;27074:30;-1:-1:-1;;;27120:18:17;;;27113:50;27180:18;;1669:41:1;26860:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11474:307:3;11624:8;-1:-1:-1;;;;;11615:17:3;:5;-1:-1:-1;;;;;11615:17:3;;;11607:55;;;;-1:-1:-1;;;11607:55:3;;27411:2:17;11607:55:3;;;27393:21:17;27450:2;27430:18;;;27423:30;27489:27;27469:18;;;27462:55;27534:18;;11607:55:3;27209:349:17;11607:55:3;-1:-1:-1;;;;;11672:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:3;;;;;;;;;;11733:41;;540::17;;;11733::3;;513:18:17;11733:41:3;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1570:300:3;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:3;829:155:14;9041:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;9182:45:16::1;9209:4;9215:2;9219:7;9182:26;:45::i;8445:311:3:-:0;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:3;;;;;;;:::i;1398:662:13:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:13;;;;:::i;:::-;;;;1537:488;;12334:778:3;12484:4;-1:-1:-1;;;;;12504:13:3;;1465:19:9;:23;12500:606:3;;12539:72;;-1:-1:-1;;;12539:72:3;;-1:-1:-1;;;;;12539:36:3;;;;;:72;;719:10:10;;12590:4:3;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:3;;;;;;;;-1:-1:-1;;12539:72:3;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:3;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:3;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:3;-1:-1:-1;;;12661:51:3;;-1:-1:-1;12654:58:3;;12500:606;-1:-1:-1;13091:4:3;12334:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9078:427:3:-;-1:-1:-1;;;;;9157:16:3;;9149:61;;;;-1:-1:-1;;;9149:61:3;;29306:2:17;9149:61:3;;;29288:21:17;;;29325:18;;;29318:30;29384:34;29364:18;;;29357:62;29436:18;;9149:61:3;29104:356:17;9149:61:3;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;:30;9220:58;;;;-1:-1:-1;;;9220:58:3;;29667:2:17;9220:58:3;;;29649:21:17;29706:2;29686:18;;;29679:30;29745;29725:18;;;29718:58;29793:18;;9220:58:3;29465:352:17;9220:58:3;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:3;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:3;-1:-1:-1;;;;;9373:21:3;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;6547:32:16::1;6295:291:::0;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:367::-;4158:8;4168:6;4222:3;4215:4;4207:6;4203:17;4199:27;4189:55;;4240:1;4237;4230:12;4189:55;-1:-1:-1;4263:20:17;;4306:18;4295:30;;4292:50;;;4338:1;4335;4328:12;4292:50;4375:4;4367:6;4363:17;4351:29;;4435:3;4428:4;4418:6;4415:1;4411:14;4403:6;4399:27;4395:38;4392:47;4389:67;;;4452:1;4449;4442:12;4389:67;4095:367;;;;;:::o;4467:437::-;4553:6;4561;4614:2;4602:9;4593:7;4589:23;4585:32;4582:52;;;4630:1;4627;4620:12;4582:52;4670:9;4657:23;4703:18;4695:6;4692:30;4689:50;;;4735:1;4732;4725:12;4689:50;4774:70;4836:7;4827:6;4816:9;4812:22;4774:70;:::i;:::-;4863:8;;4748:96;;-1:-1:-1;4467:437:17;-1:-1:-1;;;;4467:437:17:o;4909:186::-;4968:6;5021:2;5009:9;5000:7;4996:23;4992:32;4989:52;;;5037:1;5034;5027:12;4989:52;5060:29;5079:9;5060:29;:::i;5100:632::-;5271:2;5323:21;;;5393:13;;5296:18;;;5415:22;;;5242:4;;5271:2;5494:15;;;;5468:2;5453:18;;;5242:4;5537:169;5551:6;5548:1;5545:13;5537:169;;;5612:13;;5600:26;;5681:15;;;;5646:12;;;;5573:1;5566:9;5537:169;;;-1:-1:-1;5723:3:17;;5100:632;-1:-1:-1;;;;;;5100:632:17:o;5737:156::-;5803:20;;5863:4;5852:16;;5842:27;;5832:55;;5883:1;5880;5873:12;5898:182;5955:6;6008:2;5996:9;5987:7;5983:23;5979:32;5976:52;;;6024:1;6021;6014:12;5976:52;6047:27;6064:9;6047:27;:::i;6270:347::-;6335:6;6343;6396:2;6384:9;6375:7;6371:23;6367:32;6364:52;;;6412:1;6409;6402:12;6364:52;6435:29;6454:9;6435:29;:::i;:::-;6425:39;;6514:2;6503:9;6499:18;6486:32;6561:5;6554:13;6547:21;6540:5;6537:32;6527:60;;6583:1;6580;6573:12;6527:60;6606:5;6596:15;;;6270:347;;;;;:::o;6622:256::-;6688:6;6696;6749:2;6737:9;6728:7;6724:23;6720:32;6717:52;;;6765:1;6762;6755:12;6717:52;6788:27;6805:9;6788:27;:::i;:::-;6778:37;;6834:38;6868:2;6857:9;6853:18;6834:38;:::i;:::-;6824:48;;6622:256;;;;;:::o;6883:511::-;6978:6;6986;6994;7047:2;7035:9;7026:7;7022:23;7018:32;7015:52;;;7063:1;7060;7053:12;7015:52;7086:29;7105:9;7086:29;:::i;:::-;7076:39;;7166:2;7155:9;7151:18;7138:32;7193:18;7185:6;7182:30;7179:50;;;7225:1;7222;7215:12;7179:50;7264:70;7326:7;7317:6;7306:9;7302:22;7264:70;:::i;:::-;6883:511;;7353:8;;-1:-1:-1;7238:96:17;;-1:-1:-1;;;;6883:511:17:o;7399:667::-;7494:6;7502;7510;7518;7571:3;7559:9;7550:7;7546:23;7542:33;7539:53;;;7588:1;7585;7578:12;7539:53;7611:29;7630:9;7611:29;:::i;:::-;7601:39;;7659:38;7693:2;7682:9;7678:18;7659:38;:::i;:::-;7649:48;;7744:2;7733:9;7729:18;7716:32;7706:42;;7799:2;7788:9;7784:18;7771:32;7826:18;7818:6;7815:30;7812:50;;;7858:1;7855;7848:12;7812:50;7881:22;;7934:4;7926:13;;7922:27;-1:-1:-1;7912:55:17;;7963:1;7960;7953:12;7912:55;7986:74;8052:7;8047:2;8034:16;8029:2;8025;8021:11;7986:74;:::i;:::-;7976:84;;;7399:667;;;;;;;:::o;8071:127::-;8132:10;8127:3;8123:20;8120:1;8113:31;8163:4;8160:1;8153:15;8187:4;8184:1;8177:15;8203:336;8343:2;8328:18;;8376:1;8365:13;;8355:144;;8421:10;8416:3;8412:20;8409:1;8402:31;8456:4;8453:1;8446:15;8484:4;8481:1;8474:15;8355:144;8508:25;;;8203:336;:::o;8544:264::-;8611:6;8664:2;8652:9;8643:7;8639:23;8635:32;8632:52;;;8680:1;8677;8670:12;8632:52;8719:9;8706:23;8758:1;8751:5;8748:12;8738:40;;8774:1;8771;8764:12;8813:260;8881:6;8889;8942:2;8930:9;8921:7;8917:23;8913:32;8910:52;;;8958:1;8955;8948:12;8910:52;8981:29;9000:9;8981:29;:::i;9078:380::-;9157:1;9153:12;;;;9200;;;9221:61;;9275:4;9267:6;9263:17;9253:27;;9221:61;9328:2;9320:6;9317:14;9297:18;9294:38;9291:161;;;9374:10;9369:3;9365:20;9362:1;9355:31;9409:4;9406:1;9399:15;9437:4;9434:1;9427:15;9291:161;;9078:380;;;:::o;10703:356::-;10905:2;10887:21;;;10924:18;;;10917:30;10983:34;10978:2;10963:18;;10956:62;11050:2;11035:18;;10703:356::o;11827:413::-;12029:2;12011:21;;;12068:2;12048:18;;;12041:30;12107:34;12102:2;12087:18;;12080:62;-1:-1:-1;;;12173:2:17;12158:18;;12151:47;12230:3;12215:19;;11827:413::o;12605:340::-;12807:2;12789:21;;;12846:2;12826:18;;;12819:30;-1:-1:-1;;;12880:2:17;12865:18;;12858:46;12936:2;12921:18;;12605:340::o;13305:399::-;13507:2;13489:21;;;13546:2;13526:18;;;13519:30;13585:34;13580:2;13565:18;;13558:62;-1:-1:-1;;;13651:2:17;13636:18;;13629:33;13694:3;13679:19;;13305:399::o;13709:127::-;13770:10;13765:3;13761:20;13758:1;13751:31;13801:4;13798:1;13791:15;13825:4;13822:1;13815:15;13841:128;13881:3;13912:1;13908:6;13905:1;13902:13;13899:39;;;13918:18;;:::i;:::-;-1:-1:-1;13954:9:17;;13841:128::o;13974:402::-;14176:2;14158:21;;;14215:2;14195:18;;;14188:30;14254:34;14249:2;14234:18;;14227:62;-1:-1:-1;;;14320:2:17;14305:18;;14298:36;14366:3;14351:19;;13974:402::o;14792:135::-;14831:3;-1:-1:-1;;14852:17:17;;14849:43;;;14872:18;;:::i;:::-;-1:-1:-1;14919:1:17;14908:13;;14792:135::o;17568:127::-;17629:10;17624:3;17620:20;17617:1;17610:31;17660:4;17657:1;17650:15;17684:4;17681:1;17674:15;22108:973;22193:12;;22158:3;;22248:1;22268:18;;;;22321;;;;22348:61;;22402:4;22394:6;22390:17;22380:27;;22348:61;22428:2;22476;22468:6;22465:14;22445:18;22442:38;22439:161;;;22522:10;22517:3;22513:20;22510:1;22503:31;22557:4;22554:1;22547:15;22585:4;22582:1;22575:15;22439:161;22616:18;22643:104;;;;22761:1;22756:319;;;;22609:466;;22643:104;-1:-1:-1;;22676:24:17;;22664:37;;22721:16;;;;-1:-1:-1;22643:104:17;;22756:319;22055:1;22048:14;;;22092:4;22079:18;;22850:1;22864:165;22878:6;22875:1;22872:13;22864:165;;;22956:14;;22943:11;;;22936:35;22999:16;;;;22893:10;;22864:165;;;22868:3;;23058:6;23053:3;23049:16;23042:23;;22609:466;;;;;;;22108:973;;;;:::o;23086:456::-;23307:3;23335:38;23369:3;23361:6;23335:38;:::i;:::-;23402:6;23396:13;23418:52;23463:6;23459:2;23452:4;23444:6;23440:17;23418:52;:::i;:::-;23486:50;23528:6;23524:2;23520:15;23512:6;23486:50;:::i;:::-;23479:57;23086:456;-1:-1:-1;;;;;;;23086:456:17:o;24391:125::-;24431:4;24459:1;24456;24453:8;24450:34;;;24464:18;;:::i;:::-;-1:-1:-1;24501:9:17;;24391:125::o;27563:414::-;27765:2;27747:21;;;27804:2;27784:18;;;27777:30;27843:34;27838:2;27823:18;;27816:62;-1:-1:-1;;;27909:2:17;27894:18;;27887:48;27967:3;27952:19;;27563:414::o;27982:127::-;28043:10;28038:3;28034:20;28031:1;28024:31;28074:4;28071:1;28064:15;28098:4;28095:1;28088:15;28114:120;28154:1;28180;28170:35;;28185:18;;:::i;:::-;-1:-1:-1;28219:9:17;;28114:120::o;28239:112::-;28271:1;28297;28287:35;;28302:18;;:::i;:::-;-1:-1:-1;28336:9:17;;28239:112::o;28356:489::-;-1:-1:-1;;;;;28625:15:17;;;28607:34;;28677:15;;28672:2;28657:18;;28650:43;28724:2;28709:18;;28702:34;;;28772:3;28767:2;28752:18;;28745:31;;;28550:4;;28793:46;;28819:19;;28811:6;28793:46;:::i;:::-;28785:54;28356:489;-1:-1:-1;;;;;;28356:489:17:o;28850:249::-;28919:6;28972:2;28960:9;28951:7;28947:23;28943:32;28940:52;;;28988:1;28985;28978:12;28940:52;29020:9;29014:16;29039:30;29063:5;29039:30;:::i;29822:127::-;29883:10;29878:3;29874:20;29871:1;29864:31;29914:4;29911:1;29904:15;29938:4;29935:1;29928:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, send, and interact with CRYPTIDS",
    "title": "CryptidToken NFT Contract",
    "version": 1
  },
  "offset": [
    710,
    9480
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x376 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B671780 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC3214581 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDA3EF23F GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9CB JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x922 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8BD JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3214581 EQ PUSH2 0x85D JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x873 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0xBB31B77B EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x81C JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x77C JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xB76A0DF4 EQ PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6DB JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x616CDB1E GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x6CBB8985 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x57ED9E4E EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x354 JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F49 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x2FBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x3006 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x30BC JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x44E PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3006 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x44E PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x318D JUMP JUMPDEST PUSH2 0x102B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x1295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x13BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x13F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x31EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0x5A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x30BC JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x39B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x621 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x641 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x1657 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x16CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x175C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x176F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x17F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x323F JUMP JUMPDEST PUSH2 0x1830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x1A20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x1B22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x1B5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x797 CALLDATASIZE PUSH1 0x4 PUSH2 0x325A JUMP JUMPDEST PUSH2 0x1B69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x7B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0x1B74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x7D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x32C9 JUMP JUMPDEST PUSH2 0x1CB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x331C JUMP JUMPDEST PUSH2 0x1D4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x817 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1D82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x836 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x33AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x39B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x1DD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x1DE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x8B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x1DF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x8D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x908 CALLDATASIZE PUSH1 0x4 PUSH2 0x33D6 JUMP JUMPDEST PUSH2 0x1EA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0x1FE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x93D CALLDATASIZE PUSH1 0x4 PUSH2 0x30BC JUMP JUMPDEST PUSH2 0x1FF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH2 0x2037 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x204F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x99D CALLDATASIZE PUSH1 0x4 PUSH2 0x33F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0x9E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x213F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E PUSH2 0xA06 CALLDATASIZE PUSH1 0x4 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x21E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x3F2 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C DUP3 PUSH2 0x2243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA51 SWAP1 PUSH2 0x3413 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA7D SWAP1 PUSH2 0x3413 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xACA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xACA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAAD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC03 JUMPI POP PUSH2 0xC03 DUP2 CALLER PUSH2 0x99D JUMP JUMPDEST PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xC7F DUP4 DUP4 PUSH2 0x2268 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD80 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD8E CALLER DUP3 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH2 0xC7F DUP4 DUP4 DUP4 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xE08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE49 PUSH2 0x3398 JUMP JUMPDEST EQ PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34FE JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 PUSH2 0xEC3 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x3557 JUMP JUMPDEST GT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x356F JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0xF8C JUMPI PUSH2 0xF6C CALLER PUSH2 0xF67 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2574 JUMP JUMPDEST PUSH2 0xF7A PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0xF84 DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF53 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA0 DUP4 PUSH2 0x176F JUMP JUMPDEST DUP3 LT PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x3398 JUMP JUMPDEST EQ PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1185 SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x258E SWAP1 POP JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F74206F6E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x8 SLOAD PUSH2 0x11E2 SWAP1 PUSH1 0x1 PUSH2 0x3557 JUMP JUMPDEST GT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x356F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1260 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1287 SWAP1 PUSH2 0xF67 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF8C PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x12C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062616C616E636520746F2077697468647261772E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x136B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2077697468647261772062616C616E63652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x25A4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC7F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x141E DUP4 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x143B JUMPI PUSH2 0x143B PUSH2 0x3030 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1464 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14AB JUMPI PUSH2 0x147C DUP6 DUP3 PUSH2 0xF95 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x14A3 DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x146A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1534 JUMPI PUSH2 0x1534 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD80 SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E9A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x16DB SWAP1 PUSH2 0x3413 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1707 SWAP1 PUSH2 0x3413 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1754 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1729 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1754 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1737 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176A PUSH2 0x641 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x0 PUSH2 0x2637 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1879 PUSH2 0x3398 JUMP JUMPDEST EQ PUSH2 0x18C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x18E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34FE JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH2 0x18FC SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x3557 JUMP JUMPDEST GT ISZERO PUSH2 0x195E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 PUSH1 0xFF AND PUSH2 0x196E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1978 SWAP2 SWAP1 PUSH2 0x3557 JUMP JUMPDEST GT ISZERO PUSH2 0x1996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x356F JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x16 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19AB SWAP2 SWAP1 PUSH2 0x3557 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xD80 JUMPI PUSH2 0x19CB CALLER PUSH2 0xF67 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19D9 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x19E3 DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x1A5F SWAP1 PUSH2 0x3413 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1AAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA51 SWAP1 PUSH2 0x3413 JUMP JUMPDEST PUSH2 0xD80 CALLER DUP4 DUP4 PUSH2 0x26E9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBD PUSH2 0x3398 JUMP JUMPDEST GT PUSH2 0x1C01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1C11 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C1B SWAP2 SWAP1 PUSH2 0x3557 JUMP JUMPDEST GT ISZERO PUSH2 0x1C7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xC7F JUMPI PUSH2 0x1C96 DUP3 PUSH2 0xF67 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CA4 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1CAE DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1D32 SWAP2 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x258E SWAP1 POP JUMP JUMPDEST ISZERO PUSH2 0x1D3F JUMPI POP PUSH1 0x1 PUSH2 0x1D43 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D54 CALLER DUP4 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0x1D70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH2 0x1D7C DUP5 DUP5 DUP5 DUP5 PUSH2 0x27B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x16DB SWAP1 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x16DB SWAP1 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xF PUSH2 0x1E7B DUP4 PUSH2 0x27EB JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E8F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1ED5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1F58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1FC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FE1 JUMPI PUSH2 0x1FE1 PUSH2 0x3398 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD80 SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2E9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2042 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x176A SWAP2 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x207F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x208E SWAP1 PUSH2 0x3413 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x20DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x216F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x21D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x21DD DUP2 PUSH2 0x2637 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2210 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x344E JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA3C JUMPI POP PUSH2 0xA3C DUP3 PUSH2 0x28E9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x229D DUP3 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x234F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235A DUP4 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2395 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x238A DUP5 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x23C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23E0 DUP3 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2444 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x24B1 DUP4 DUP4 DUP4 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x24BC PUSH1 0x0 DUP3 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x24E5 SWAP1 DUP5 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2513 SWAP1 DUP5 SWAP1 PUSH2 0x3557 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xD80 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2967 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x259B DUP6 DUP5 PUSH2 0x299A JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x25ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x261A CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x274B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x27C3 DUP5 DUP5 DUP5 PUSH2 0x23CD JUMP JUMPDEST PUSH2 0x27CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x2A06 JUMP JUMPDEST PUSH2 0x1D7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x280F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2839 JUMPI DUP1 PUSH2 0x2823 DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2832 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3732 JUMP JUMPDEST SWAP2 POP PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2854 JUMPI PUSH2 0x2854 PUSH2 0x3030 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x287E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x23C5 JUMPI PUSH2 0x2893 PUSH1 0x1 DUP4 PUSH2 0x36B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A0 PUSH1 0xA DUP7 PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x28AB SWAP1 PUSH1 0x30 PUSH2 0x3557 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x28C0 JUMPI PUSH2 0x28C0 PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x28E2 PUSH1 0xA DUP7 PUSH2 0x3732 JUMP JUMPDEST SWAP5 POP PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x291A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA3C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA3C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x295C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH2 0xC7F DUP4 DUP4 DUP4 PUSH2 0x2B04 JUMP JUMPDEST PUSH2 0x2971 DUP4 DUP4 PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0x297E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2A06 JUMP JUMPDEST PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x36CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x14AB JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29BC JUMPI PUSH2 0x29BC PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x29E2 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x29F3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x29FE DUP2 PUSH2 0x35B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x299F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2A4A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x375A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2A85 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A82 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3797 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2ADF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2AB8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2AD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB49 SWAP1 PUSH2 0x36CA JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x23C5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2B5F JUMPI PUSH2 0x2B5A DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2B82 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B82 JUMPI PUSH2 0x2B82 DUP4 DUP3 PUSH2 0x2D0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B99 JUMPI PUSH2 0xC7F DUP2 PUSH2 0x2DA7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC7F JUMPI PUSH2 0xC7F DUP3 DUP3 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x2C83 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2CAC SWAP1 DUP5 SWAP1 PUSH2 0x3557 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2D17 DUP5 PUSH2 0x176F JUMP JUMPDEST PUSH2 0x2D21 SWAP2 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2D74 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2DB9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2DE1 JUMPI PUSH2 0x2DE1 PUSH2 0x35D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E02 JUMPI PUSH2 0x2E02 PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2E3A JUMPI PUSH2 0x2E3A PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E61 DUP4 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2EA6 SWAP1 PUSH2 0x3413 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2EC8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2F0E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2EE1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2F0E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2F0E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2F0E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST POP PUSH2 0x2F1A SWAP3 SWAP2 POP PUSH2 0x2F1E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2F1A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x21DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D43 DUP2 PUSH2 0x2F33 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F81 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F69 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D7C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2FAA DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F66 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D43 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3022 DUP4 PUSH2 0x2FEA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3061 JUMPI PUSH2 0x3061 PUSH2 0x3030 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3089 JUMPI PUSH2 0x3089 PUSH2 0x3030 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x30A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x30F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23C5 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3046 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x311A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3123 DUP5 PUSH2 0x2FEA JUMP JUMPDEST SWAP3 POP PUSH2 0x3131 PUSH1 0x20 DUP6 ADD PUSH2 0x2FEA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31C3 DUP6 DUP3 DUP7 ADD PUSH2 0x3141 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D43 DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3222 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3206 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3001 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D43 DUP3 PUSH2 0x322E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x326D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3276 DUP4 PUSH2 0x2FEA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x328B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B2 DUP4 PUSH2 0x322E JUMP JUMPDEST SWAP2 POP PUSH2 0x32C0 PUSH1 0x20 DUP5 ADD PUSH2 0x2FEA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x32DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E7 DUP5 PUSH2 0x2FEA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330F DUP7 DUP3 DUP8 ADD PUSH2 0x3141 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x333B DUP6 PUSH2 0x2FEA JUMP JUMPDEST SWAP4 POP PUSH2 0x3349 PUSH1 0x20 DUP7 ADD PUSH2 0x2FEA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x336C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x337D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x338C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3046 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x33D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x340A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B2 DUP4 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3427 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3448 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x356A JUMPI PUSH2 0x356A PUSH2 0x3541 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x35C9 JUMPI PUSH2 0x35C9 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x3600 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x3622 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3636 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3647 JUMPI PUSH2 0x3674 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3674 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x366C JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3653 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368C DUP3 DUP7 PUSH2 0x35E6 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x369C DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x2F66 JUMP JUMPDEST PUSH2 0x36A8 DUP2 DUP4 ADD DUP7 PUSH2 0x35E6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36C5 JUMPI PUSH2 0x36C5 PUSH2 0x3541 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3741 JUMPI PUSH2 0x3741 PUSH2 0x371C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3755 JUMPI PUSH2 0x3755 PUSH2 0x371C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x378D SWAP1 DUP4 ADD DUP5 PUSH2 0x2F92 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D43 DUP2 PUSH2 0x2F33 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SAR 0xC8 NOT RETURNDATACOPY 0xA6 DUP16 0xC6 PUSH28 0x1B0A747CB207B660E3BE17D39DE4461240BB99B2A079464736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x376"
    },
    "12": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "25": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D1"
    },
    "29": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "36": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "47": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "58": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x982"
    },
    "73": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9CB"
    },
    "84": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "91": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9EB"
    },
    "95": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0B"
    },
    "106": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "118": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x922"
    },
    "122": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "129": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x942"
    },
    "133": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "140": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x957"
    },
    "144": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "151": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x96D"
    },
    "155": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "167": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "178": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89D"
    },
    "182": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "189": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BD"
    },
    "193": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "200": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8ED"
    },
    "204": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "211": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x90D"
    },
    "215": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "227": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x85D"
    },
    "231": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "238": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x873"
    },
    "242": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "249": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x888"
    },
    "253": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "265": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F"
    },
    "269": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "276": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "287": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7DC"
    },
    "291": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "298": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7FC"
    },
    "302": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "309": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81C"
    },
    "313": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "320": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x843"
    },
    "324": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "336": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77C"
    },
    "340": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "347": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79C"
    },
    "351": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB76A0DF4"
    },
    "358": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BC"
    },
    "362": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "366": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "367": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "374": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AB"
    },
    "378": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "385": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x710"
    },
    "389": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "396": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x725"
    },
    "400": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "407": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x748"
    },
    "411": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "418": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75D"
    },
    "422": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "426": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "427": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "428": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "429": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "434": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6BB"
    },
    "438": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "445": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DB"
    },
    "449": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "456": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "460": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "463": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "465": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "466": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "467": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "472": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AB"
    },
    "476": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x616CDB1E"
    },
    "483": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249"
    },
    "487": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "494": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x223"
    },
    "498": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "505": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x65B"
    },
    "509": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "516": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x670"
    },
    "520": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "527": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x690"
    },
    "531": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "538": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A5"
    },
    "542": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "545": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "546": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "547": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "548": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "549": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x616CDB1E"
    },
    "554": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "555": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x606"
    },
    "558": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "565": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x626"
    },
    "569": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "576": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x646"
    },
    "580": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "583": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "584": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "585": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "586": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "587": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "592": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x285"
    },
    "596": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "597": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "598": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "603": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "604": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58E"
    },
    "607": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "614": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AE"
    },
    "618": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x57ED9E4E"
    },
    "625": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CE"
    },
    "629": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "636": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5EE"
    },
    "640": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "643": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "644": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "645": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "646": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "647": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "652": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x52C"
    },
    "656": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "657": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "663": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "664": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x541"
    },
    "667": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "674": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x561"
    },
    "678": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "681": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "682": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "683": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "684": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "685": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "690": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x318"
    },
    "694": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "695": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "696": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "701": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2"
    },
    "705": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "712": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4CE"
    },
    "716": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "723": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4EE"
    },
    "727": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "734": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x504"
    },
    "738": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "745": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x517"
    },
    "749": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "752": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "753": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "754": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "755": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "756": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "761": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x485"
    },
    "765": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "766": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "767": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2DB11544"
    },
    "772": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "773": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A5"
    },
    "776": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "783": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B8"
    },
    "787": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "790": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "791": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "792": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "793": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "794": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "799": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "GT",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x354"
    },
    "803": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "804": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "805": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "810": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x40A"
    },
    "814": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "821": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42E"
    },
    "825": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "832": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x450"
    },
    "836": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "843": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x470"
    },
    "847": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "850": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "851": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "852": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "853": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "854": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "859": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37B"
    },
    "863": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "864": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "865": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "870": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B0"
    },
    "874": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "881": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "EQ",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D2"
    },
    "885": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "889": {
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "DUP1",
      "path": "16"
    },
    "890": {
      "first_revert": true,
      "fn": null,
      "offset": [
        710,
        9480
      ],
      "op": "REVERT",
      "path": "16"
    },
    "891": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "892": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "893": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "DUP1",
      "path": "16"
    },
    "894": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "895": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x387"
    },
    "898": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "899": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "901": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "DUP1",
      "path": "16"
    },
    "902": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "REVERT",
      "path": "16"
    },
    "903": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "908": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x396"
    },
    "911": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "912": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "914": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F49"
    },
    "917": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMP",
      "path": "16"
    },
    "918": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "919": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA31"
    },
    "922": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMP",
      "path": "16"
    },
    "923": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "924": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "926": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "927": {
      "op": "SWAP1"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "ISZERO"
    },
    "930": {
      "op": "DUP2"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "936": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "938": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "939": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "DUP1",
      "path": "16"
    },
    "940": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "941": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "SUB",
      "path": "16"
    },
    "942": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "943": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "RETURN",
      "path": "16"
    },
    "944": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "948": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BC"
    },
    "951": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "952": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "954": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "REVERT",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "POP",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C5"
    },
    "961": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA42"
    },
    "964": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "965": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "972": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FBE"
    },
    "977": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "978": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "979": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "981": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "982": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DE"
    },
    "985": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "986": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "988": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "989": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "REVERT",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "991": {
      "op": "POP"
    },
    "992": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F2"
    },
    "995": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED"
    },
    "998": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD1"
    },
    "1004": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1005": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1006": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD4"
    },
    "1009": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1013": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "op": "SWAP1"
    },
    "1023": {
      "op": "SWAP2"
    },
    "1024": {
      "op": "AND"
    },
    "1025": {
      "op": "DUP2"
    },
    "1026": {
      "op": "MSTORE"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1033": {
      "op": "JUMP"
    },
    "1034": {
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1036": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1038": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x416"
    },
    "1041": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1042": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1044": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1045": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1047": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "POP",
      "path": "16"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "1051": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1054": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1055": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1056": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1815,
        1843
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1060": {
      "op": "SWAP1"
    },
    "1061": {
      "op": "DUP2"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1069": {
      "op": "JUMP"
    },
    "1070": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1071": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1072": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1078": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1080": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1081": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x449"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3006"
    },
    "1096": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6E"
    },
    "1101": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "3"
    },
    "1104": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1105": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1106": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1107": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1108": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45C"
    },
    "1111": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1112": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1114": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1115": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1116": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1121": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46B"
    },
    "1124": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1125": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30BC"
    },
    "1130": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1131": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1132": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC84"
    },
    "1135": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1136": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1137": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1138": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1139": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1140": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47C"
    },
    "1143": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1144": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1146": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1147": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1148": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1152": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1153": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x420"
    },
    "1156": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1157": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1158": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1159": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1160": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1161": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x491"
    },
    "1164": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1165": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1168": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1169": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "1174": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A0"
    },
    "1177": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1178": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3105"
    },
    "1183": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1184": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD84"
    },
    "1188": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1189": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1190": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1193": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B3"
    },
    "1196": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1197": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1199": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD1"
    },
    "1202": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1203": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1204": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB5"
    },
    "1207": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1208": {
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1209": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1210": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1211": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1212": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C4"
    },
    "1215": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1216": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1218": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1219": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1220": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1221": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "POP",
      "path": "16"
    },
    "1222": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "1225": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1227": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1228": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1229": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1230": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1231": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1232": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1233": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1234": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DA"
    },
    "1237": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1238": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1240": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1241": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x420"
    },
    "1247": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E9"
    },
    "1250": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1251": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1253": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3006"
    },
    "1256": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1257": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1258": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF95"
    },
    "1261": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1262": {
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1263": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1264": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1265": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1266": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FA"
    },
    "1269": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1270": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1272": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1273": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1274": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1275": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "POP",
      "path": "16"
    },
    "1276": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "1279": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "1281": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1282": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1283": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1604,
        1634
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1284": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1285": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1288": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x512"
    },
    "1291": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1292": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1294": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x318D"
    },
    "1297": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2981,
        3723
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1298": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1299": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102B"
    },
    "1302": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2981,
        3723
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1303": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1304": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1305": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1306": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1307": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x523"
    },
    "1310": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1311": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1313": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1314": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1315": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1316": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "POP",
      "path": "16"
    },
    "1317": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1320": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1295"
    },
    "1323": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7220,
        7508
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1324": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1325": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1326": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1327": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1328": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x538"
    },
    "1331": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1332": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1334": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1335": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1336": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1337": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "POP",
      "path": "16"
    },
    "1338": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1341": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13BC"
    },
    "1344": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1345": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1346": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1349": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54D"
    },
    "1352": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1353": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1355": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "1362": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55C"
    },
    "1365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3105"
    },
    "1371": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1372": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F6"
    },
    "1376": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1377": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1378": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1379": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1380": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1381": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56D"
    },
    "1384": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1385": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1387": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1388": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1389": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x581"
    },
    "1394": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57C"
    },
    "1397": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1398": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1400": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31CF"
    },
    "1403": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1404": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1405": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1411"
    },
    "1408": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1409": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1410": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1412": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1413": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "1416": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1417": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1418": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31EA"
    },
    "1421": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1422": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1423": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1424": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1425": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1426": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59A"
    },
    "1429": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1430": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1432": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1433": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1434": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x420"
    },
    "1439": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A9"
    },
    "1442": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD1"
    },
    "1448": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1449": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1450": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14B3"
    },
    "1453": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1454": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1455": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1456": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1457": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1458": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5BA"
    },
    "1461": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1462": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1464": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1465": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1466": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1467": {
      "op": "POP"
    },
    "1468": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1471": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C9"
    },
    "1474": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1475": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1477": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30BC"
    },
    "1480": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1481": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1482": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1546"
    },
    "1485": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1486": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1487": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1488": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1489": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1490": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DA"
    },
    "1493": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1494": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1496": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1497": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1498": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1499": {
      "op": "POP"
    },
    "1500": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1503": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E9"
    },
    "1506": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1507": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1509": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31CF"
    },
    "1512": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1513": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1514": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D1"
    },
    "1517": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1518": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1519": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1520": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1521": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1522": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FA"
    },
    "1525": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1526": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1528": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1529": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1530": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1534": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1535": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1537": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1538": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39B"
    },
    "1541": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1542": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1543": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1544": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1545": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1546": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x612"
    },
    "1549": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1550": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1552": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1553": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1554": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1559": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x621"
    },
    "1562": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1563": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1565": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD1"
    },
    "1568": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1569": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1570": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1622"
    },
    "1573": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x632"
    },
    "1581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F2"
    },
    "1591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x641"
    },
    "1594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FD1"
    },
    "1600": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1657"
    },
    "1605": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1606": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x652"
    },
    "1613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "1620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C5"
    },
    "1623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16CE"
    },
    "1626": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1627": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1628": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1629": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1630": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1631": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x667"
    },
    "1634": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1635": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1637": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1638": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1639": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1640": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "POP",
      "path": "16"
    },
    "1641": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F2"
    },
    "1644": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x175C"
    },
    "1647": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1648": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1649": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1650": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1651": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1652": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67C"
    },
    "1655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1659": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1660": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "1665": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x68B"
    },
    "1668": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1669": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1671": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31CF"
    },
    "1674": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1675": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1676": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x176F"
    },
    "1679": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69C"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44E"
    },
    "1697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F6"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1701": {
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B1"
    },
    "1708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "POP",
      "path": "16"
    },
    "1715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "1718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "1720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1879,
        1909
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1723": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1724": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1725": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1726": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1727": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C7"
    },
    "1730": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1731": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1733": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1734": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1735": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1740": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D6"
    },
    "1743": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1744": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1746": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323F"
    },
    "1749": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1750": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1751": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1830"
    },
    "1754": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1755": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1756": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1757": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1758": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1759": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E7"
    },
    "1762": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1763": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1765": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1767": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1772": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F6"
    },
    "1775": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1776": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1778": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD1"
    },
    "1781": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1782": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1783": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19EB"
    },
    "1786": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1787": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1788": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1789": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1790": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1791": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x707"
    },
    "1794": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1795": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1797": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1799": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1800": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "POP",
      "path": "16"
    },
    "1801": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1804": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A20"
    },
    "1807": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1808": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1809": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1810": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1811": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1812": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71C"
    },
    "1815": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1816": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1818": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1819": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1820": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1821": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "POP",
      "path": "16"
    },
    "1822": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1825": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B22"
    },
    "1828": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5227,
        5288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1829": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1831": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1833": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x731"
    },
    "1836": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1837": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1839": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1840": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1841": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1845": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1846": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1849": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1860": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F2"
    },
    "1863": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1865": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1866": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1867": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1868": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x754"
    },
    "1871": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1872": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1874": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1875": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1876": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1877": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "POP",
      "path": "3"
    },
    "1878": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C5"
    },
    "1881": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B5A"
    },
    "1884": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1885": {
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1886": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1887": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1888": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1889": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x769"
    },
    "1892": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1893": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1895": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1896": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1897": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1901": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1902": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "1905": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1906": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1909": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1910": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DIV",
      "path": "16"
    },
    "1911": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1913": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "AND",
      "path": "16"
    },
    "1914": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1915": {
      "fn": "ERC721.symbol",
      "offset": [
        1292,
        1332
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1916": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1917": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1918": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1919": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1920": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x788"
    },
    "1923": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1924": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1926": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1927": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1928": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "1933": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x797"
    },
    "1936": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1937": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1939": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x325A"
    },
    "1942": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1943": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1944": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B69"
    },
    "1947": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1948": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1949": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1950": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1951": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1952": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A8"
    },
    "1955": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1956": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1958": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1959": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1960": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "1965": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7B7"
    },
    "1968": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1969": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1971": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3296"
    },
    "1974": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1975": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1976": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B74"
    },
    "1979": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1980": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1981": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1982": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1983": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1984": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C8"
    },
    "1987": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1988": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1990": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1991": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1992": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "1997": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D7"
    },
    "2000": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2001": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2003": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32C9"
    },
    "2006": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2007": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2008": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB6"
    },
    "2011": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2014": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E8"
    },
    "2019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44E"
    },
    "2029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F7"
    },
    "2032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x331C"
    },
    "2038": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2040": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4A"
    },
    "2043": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2044": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2045": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2046": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2047": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2048": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x808"
    },
    "2051": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2052": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2054": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2055": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2056": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "2061": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x817"
    },
    "2064": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2065": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2067": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31CF"
    },
    "2070": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2071": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2072": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D82"
    },
    "2075": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2076": {
      "offset": [
        1925,
        1943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2077": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2078": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2079": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2080": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x828"
    },
    "2083": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2084": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2086": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2087": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2088": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2092": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2093": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x836"
    },
    "2096": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2097": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2099": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "AND",
      "path": "16"
    },
    "2100": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2101": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2102": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2103": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2105": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2106": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "2109": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2110": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2111": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1925,
        1943
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33AE"
    },
    "2114": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1925,
        1943
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2115": {
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2116": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2117": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2118": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2119": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84F"
    },
    "2122": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2123": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2125": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2127": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "2131": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2132": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "2135": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2136": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2138": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "AND",
      "path": "16"
    },
    "2139": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2140": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1252,
        1286
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2141": {
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2142": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2143": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2145": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x869"
    },
    "2148": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2149": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2151": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2152": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2153": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2154": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "POP",
      "path": "16"
    },
    "2155": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "2158": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "2160": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2161": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2162": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2163": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2164": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2165": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2166": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2167": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x87F"
    },
    "2170": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2171": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2173": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2174": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2175": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2176": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "POP",
      "path": "16"
    },
    "2177": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C5"
    },
    "2180": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DD6"
    },
    "2183": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2184": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2185": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2186": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2187": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2188": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x894"
    },
    "2191": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2194": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2195": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2197": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "POP",
      "path": "16"
    },
    "2198": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C5"
    },
    "2201": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE3"
    },
    "2204": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2205": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2206": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2207": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2208": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2209": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A9"
    },
    "2212": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2215": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2216": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2217": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2218": {
      "op": "POP"
    },
    "2219": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C5"
    },
    "2222": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B8"
    },
    "2225": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2226": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2228": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD1"
    },
    "2231": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2233": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DF0"
    },
    "2236": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2237": {
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2238": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2239": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2240": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2241": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C9"
    },
    "2244": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2245": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2247": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2248": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39B"
    },
    "2254": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D8"
    },
    "2257": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2258": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2260": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31CF"
    },
    "2263": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2265": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2267": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2270": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2272": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2275": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2277": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2278": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2280": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2282": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "AND",
      "path": "16"
    },
    "2283": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2284": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1663,
        1702
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2285": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2286": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2287": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2288": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F9"
    },
    "2292": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2293": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2295": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2296": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2297": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "2302": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x908"
    },
    "2305": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2306": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2308": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33D6"
    },
    "2311": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2312": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2313": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA5"
    },
    "2316": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2317": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2318": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2319": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2320": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x919"
    },
    "2324": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2327": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2328": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2329": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2330": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "POP",
      "path": "16"
    },
    "2331": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "2334": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE9"
    },
    "2337": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7938,
        8029
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2338": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2339": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2340": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2341": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2342": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x92E"
    },
    "2345": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2346": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2348": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2349": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2350": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "2355": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93D"
    },
    "2358": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2359": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2361": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30BC"
    },
    "2364": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2365": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FF4"
    },
    "2369": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2370": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2371": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2372": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2373": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2374": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94E"
    },
    "2377": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2378": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2380": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2381": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2382": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2383": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "POP",
      "path": "16"
    },
    "2384": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "2387": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2037"
    },
    "2390": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8308,
        8420
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2391": {
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2392": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2393": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2394": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2395": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x963"
    },
    "2398": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2399": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2401": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2402": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2403": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2404": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "POP",
      "path": "16"
    },
    "2405": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "2408": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2410": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2411": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2412": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1241
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2413": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2414": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2415": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2416": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2417": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x979"
    },
    "2420": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2423": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2424": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2425": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2426": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "POP",
      "path": "16"
    },
    "2427": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "2430": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x204F"
    },
    "2433": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2436": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2438": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98E"
    },
    "2441": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2445": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39B"
    },
    "2451": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99D"
    },
    "2454": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2455": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2457": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33F7"
    },
    "2460": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2468": {
      "op": "SHL"
    },
    "2469": {
      "op": "SUB"
    },
    "2470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "2473": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2478": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2484": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2490": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2494": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2505": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D7"
    },
    "2514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2515": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44E"
    },
    "2524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "2527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2528": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31CF"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x213F"
    },
    "2538": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2539": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2540": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2541": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2542": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2543": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9F7"
    },
    "2546": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2547": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2549": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2550": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2551": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44E"
    },
    "2556": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA06"
    },
    "2559": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2560": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2562": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31CF"
    },
    "2565": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2566": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2567": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21E0"
    },
    "2570": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2571": {
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2572": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2573": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2574": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2575": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA17"
    },
    "2578": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2579": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2581": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2583": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2584": {
      "op": "POP"
    },
    "2585": {
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "2587": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2588": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F2"
    },
    "2591": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2592": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "2596": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2597": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DIV",
      "path": "16"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2604": {
      "op": "SHL"
    },
    "2605": {
      "op": "SUB"
    },
    "2606": {
      "offset": [
        1339,
        1415
      ],
      "op": "AND",
      "path": "16"
    },
    "2607": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1339,
        1415
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2609": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2610": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9411,
        9415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2612": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9434,
        9470
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0xA3C"
    },
    "2615": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9458,
        9469
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2616": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9434,
        9457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2243"
    },
    "2619": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9434,
        9470
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2620": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9434,
        9470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2621": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9427,
        9470
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2622": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9308,
        9477
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        9308,
        9477
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2626": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2627": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2629": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "2631": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2632": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2633": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA51"
    },
    "2636": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2637": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3413"
    },
    "2640": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2641": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2642": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2643": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2645": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2646": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2648": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2649": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2650": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2651": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2652": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2654": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2655": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2657": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2658": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2659": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2660": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2661": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2663": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2664": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2665": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2666": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2667": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2668": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2669": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2670": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2671": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2673": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2674": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2675": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2677": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7D"
    },
    "2680": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3413"
    },
    "2684": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2686": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2687": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2688": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "2691": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2693": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "3"
    },
    "2696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2703": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2705": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2707": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2711": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2735": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2738": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2739": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2743": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2746": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2747": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "3"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAD"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2761": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2765": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2766": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2775": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2776": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2777": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2778": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2780": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2782": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2785": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2786": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2787": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0xB52"
    },
    "2800": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2801": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2803": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2810": {
      "op": "SHL"
    },
    "2811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2815": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2817": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "3"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2824": {
      "op": "DUP3"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2883": {
      "op": "DUP3"
    },
    "2884": {
      "op": "ADD"
    },
    "2885": {
      "op": "MSTORE"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2890": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2892": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2893": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2894": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2895": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "3"
    },
    "2896": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2907": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2909": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2914": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "3"
    },
    "2924": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2925": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2926": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2927": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2929": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB79"
    },
    "2932": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2933": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1657"
    },
    "2936": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2937": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2938": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "3"
    },
    "2940": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2947": {
      "op": "SHL"
    },
    "2948": {
      "op": "SUB"
    },
    "2949": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2950": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "op": "SUB"
    },
    "2959": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2960": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "3"
    },
    "2961": {
      "branch": 183,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2962": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE7"
    },
    "2965": {
      "branch": 183,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2966": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2968": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2977": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2980": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2982": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2983": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "3"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2989": {
      "op": "DUP3"
    },
    "2990": {
      "op": "ADD"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3034": {
      "op": "SHL"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3037": {
      "op": "DUP3"
    },
    "3038": {
      "op": "ADD"
    },
    "3039": {
      "op": "MSTORE"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3042": {
      "op": "ADD"
    },
    "3043": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "3046": {
      "op": "JUMP"
    },
    "3047": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3048": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "op": "SUB"
    },
    "3057": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "3058": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "3"
    },
    "3059": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "3"
    },
    "3060": {
      "branch": 184,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3061": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC03"
    },
    "3064": {
      "branch": 184,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3065": {
      "op": "POP"
    },
    "3066": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC03"
    },
    "3069": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3070": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3071": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99D"
    },
    "3074": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3075": {
      "branch": 185,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3076": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC75"
    },
    "3079": {
      "branch": 185,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3080": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3082": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3091": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3094": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3097": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "3"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "MSTORE"
    },
    "3144": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3179": {
      "op": "DUP3"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "3188": {
      "op": "JUMP"
    },
    "3189": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3190": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0xC7F"
    },
    "3193": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3194": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3195": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2268"
    },
    "3198": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3199": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3200": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3201": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3202": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3203": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3204": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3205": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3207": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "op": "SUB"
    },
    "3216": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3219": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3220": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3221": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3222": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3223": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3224": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3225": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB4"
    },
    "3228": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3229": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3241": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3244": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "3247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "3251": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3252": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3253": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6422,
        6423
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3255": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6396,
        6411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3256": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6390,
        6419
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3257": {
      "branch": 158,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6390,
        6423
      ],
      "op": "GT",
      "path": "16"
    },
    "3258": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD15"
    },
    "3261": {
      "branch": 158,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3262": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3264": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3273": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3276": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3278": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3279": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "ADD",
      "path": "16"
    },
    "3280": {
      "op": "MSTORE"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "ADD"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3348": {
      "op": "JUMP"
    },
    "3349": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6382,
        6467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3350": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x12"
    },
    "3352": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3353": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "3356": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3357": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "DIV",
      "path": "16"
    },
    "3358": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3360": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6486,
        6506
      ],
      "op": "AND",
      "path": "16"
    },
    "3361": {
      "branch": 159,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6485,
        6506
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3362": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD6D"
    },
    "3365": {
      "branch": 159,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3366": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3368": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3377": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3380": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3382": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3383": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "ADD",
      "path": "16"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3436": {
      "op": "JUMP"
    },
    "3437": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6477,
        6537
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3438": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "3439": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3440": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD80"
    },
    "3443": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3444": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3446": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3447": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3449": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3450": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "ADD",
      "path": "16"
    },
    "3451": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3452": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9A"
    },
    "3455": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6547,
        6579
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3456": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3457": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "POP",
      "path": "16"
    },
    "3458": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "POP",
      "path": "16"
    },
    "3459": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3460": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3461": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 16,
      "value": "0xD8E"
    },
    "3464": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3465": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3466": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D6"
    },
    "3469": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3470": {
      "branch": 186,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3471": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDAA"
    },
    "3474": {
      "branch": 186,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3475": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3477": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3484": {
      "op": "SHL"
    },
    "3485": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3486": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3487": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3489": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "3"
    },
    "3490": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "3493": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3494": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3483"
    },
    "3497": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3498": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3499": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0xC7F"
    },
    "3502": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3503": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3504": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3505": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23CD"
    },
    "3508": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3509": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3510": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3512": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3514": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3515": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "3516": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3517": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE08"
    },
    "3520": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3521": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3523": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3532": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3535": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3537": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3538": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "3539": {
      "op": "MSTORE"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "MSTORE"
    },
    "3547": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "MSTORE"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB49"
    },
    "3591": {
      "op": "JUMP"
    },
    "3592": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3593": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3595": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3597": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3598": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3600": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3601": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3603": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "3604": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3605": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE30"
    },
    "3608": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3609": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3611": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3618": {
      "op": "SHL"
    },
    "3619": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3620": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3621": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3623": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3624": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "3627": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3628": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D4"
    },
    "3631": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3632": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3633": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4622,
        4638
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 18,
      "value": "0x4"
    },
    "3635": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "3637": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4618
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3638": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3640": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4618
      ],
      "op": "AND",
      "path": "16"
    },
    "3641": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3643": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3644": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "GT",
      "path": "16"
    },
    "3645": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3646": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE49"
    },
    "3649": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3650": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE49"
    },
    "3653": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3398"
    },
    "3656": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4613,
        4638
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3657": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3658": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4613,
        4638
      ],
      "op": "EQ",
      "path": "16"
    },
    "3659": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE96"
    },
    "3662": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3663": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3665": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3674": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3677": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3679": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3680": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "ADD",
      "path": "16"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3686": {
      "op": "DUP3"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "MSTORE"
    },
    "3689": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3733": {
      "op": "JUMP"
    },
    "3734": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4605,
        4669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3735": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4786,
        4787
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x0"
    },
    "3737": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4773,
        4783
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3738": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4773,
        4787
      ],
      "op": "GT",
      "path": "16"
    },
    "3739": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB6"
    },
    "3742": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3743": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3745": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3746": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3752": {
      "op": "SHL"
    },
    "3753": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3754": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3755": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3757": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "ADD",
      "path": "16"
    },
    "3758": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3761": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3762": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34FE"
    },
    "3765": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4765,
        4827
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3766": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4765,
        4827
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3767": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4876,
        4891
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 20,
      "value": "0x17"
    },
    "3769": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4876,
        4891
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3770": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4862,
        4872
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3771": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4858
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEC3"
    },
    "3774": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3776": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3777": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3778": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3779": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4858
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3780": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xECD"
    },
    "3783": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4872
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3784": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4872
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3785": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4872
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "3788": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4845,
        4872
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3789": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4872
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3790": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4891
      ],
      "op": "GT",
      "path": "16"
    },
    "3791": {
      "branch": 162,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4845,
        4891
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3792": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEEB"
    },
    "3795": {
      "branch": 162,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3796": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3798": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3805": {
      "op": "SHL"
    },
    "3806": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3807": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3808": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3810": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "ADD",
      "path": "16"
    },
    "3811": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3814": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3815": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x356F"
    },
    "3818": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4837,
        4934
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3819": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4837,
        4934
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3820": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4966,
        4978
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x11"
    },
    "3822": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4966,
        4978
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3823": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4952,
        4962
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3824": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4952,
        4978
      ],
      "op": "GT",
      "path": "16"
    },
    "3825": {
      "branch": 163,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4952,
        4978
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3826": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF50"
    },
    "3829": {
      "branch": 163,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3830": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3832": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3839": {
      "op": "SHL"
    },
    "3840": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3841": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3844": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3846": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3847": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "ADD",
      "path": "16"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3853": {
      "op": "DUP3"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "op": "MSTORE"
    },
    "3856": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "ADD"
    },
    "3893": {
      "op": "MSTORE"
    },
    "3894": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3907": {
      "op": "SHL"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "3919": {
      "op": "JUMP"
    },
    "3920": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4944,
        5025
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3921": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5054,
        5055
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3923": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3924": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5062,
        5072
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3925": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5057,
        5058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3926": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5057,
        5072
      ],
      "op": "GT",
      "path": "16"
    },
    "3927": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF8C"
    },
    "3930": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3931": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5093,
        5141
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 22,
      "value": "0xF6C"
    },
    "3934": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5103,
        5113
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3935": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5115,
        5140
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF67"
    },
    "3938": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5115,
        5130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3940": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 23
    },
    "3941": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3942": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3943": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5115,
        5140
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3944": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5093,
        5102
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2574"
    },
    "3947": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5093,
        5141
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3948": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5093,
        5141
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3949": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5155,
        5182
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 24,
      "value": "0xF7A"
    },
    "3952": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5155,
        5170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3954": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 25
    },
    "3955": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3956": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3958": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "3959": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3960": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3961": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3962": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5155,
        5182
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3963": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 26
    },
    "3964": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF84"
    },
    "3967": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3968": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35B5"
    },
    "3971": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5074,
        5077
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3972": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3973": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3974": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "POP",
      "path": "16"
    },
    "3975": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5074,
        5077
      ],
      "op": "POP",
      "path": "16"
    },
    "3976": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF53"
    },
    "3979": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3980": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5037,
        5193
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3985": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3987": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3988": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4456,
        5199
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3989": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3990": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3992": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xFA0"
    },
    "3995": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3996": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176F"
    },
    "3999": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4000": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4001": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4002": {
      "branch": 196,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "4003": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1002"
    },
    "4006": {
      "branch": 196,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4007": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4009": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4018": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4021": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4023": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4024": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "4025": {
      "op": "MSTORE"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4030": {
      "op": "DUP3"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "op": "MSTORE"
    },
    "4033": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB49"
    },
    "4097": {
      "op": "JUMP"
    },
    "4098": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "op": "SUB"
    },
    "4108": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 28
    },
    "4109": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4110": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4111": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "4112": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4114": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4115": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4116": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4117": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4119": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4121": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4122": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4123": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4124": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4126": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4127": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4128": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4129": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4130": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4131": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4132": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4133": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4134": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4135": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4136": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4137": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4138": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4139": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2981,
        3723
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4140": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4142": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4144": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4145": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4146": {
      "branch": 205,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4147": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x107E"
    },
    "4150": {
      "branch": 205,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4151": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4153": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4160": {
      "op": "SHL"
    },
    "4161": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4162": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4165": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4167": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4168": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4212": {
      "op": "DUP3"
    },
    "4213": {
      "op": "ADD"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4217": {
      "op": "ADD"
    },
    "4218": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB49"
    },
    "4221": {
      "op": "JUMP"
    },
    "4222": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4223": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4225": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4227": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4228": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4230": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4231": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4233": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4234": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4235": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A6"
    },
    "4238": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4239": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4241": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4250": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4251": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4253": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4254": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "4257": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4258": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D4"
    },
    "4261": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4262": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4263": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3161,
        3176
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x2"
    },
    "4265": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "4267": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3157
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4268": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3157
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4270": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3157
      ],
      "op": "AND",
      "path": "16"
    },
    "4271": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4273": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4274": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "GT",
      "path": "16"
    },
    "4275": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4276": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10BF"
    },
    "4279": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4280": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10BF"
    },
    "4283": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3398"
    },
    "4286": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3152,
        3176
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4287": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4288": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3152,
        3176
      ],
      "op": "EQ",
      "path": "16"
    },
    "4289": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110C"
    },
    "4292": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4293": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4295": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4302": {
      "op": "SHL"
    },
    "4303": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4304": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4307": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4309": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4310": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "ADD",
      "path": "16"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4316": {
      "op": "DUP3"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "4363": {
      "op": "JUMP"
    },
    "4364": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3144,
        3210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4365": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3320,
        3330
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0xD"
    },
    "4367": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3320,
        3330
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4368": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4370": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4371": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4384": {
      "op": "NOT"
    },
    "4385": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3359,
        3369
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "op": "AND"
    },
    "4390": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4392": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4393": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "ADD",
      "path": "16"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1185"
    },
    "4398": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4399": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3320,
        3330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4405": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4406": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4408": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4409": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4410": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "SUB",
      "path": "16"
    },
    "4411": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "SUB",
      "path": "16"
    },
    "4412": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4413": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4414": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4415": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4417": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3342,
        3370
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4418": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4419": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4420": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4421": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4423": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "ADD",
      "path": "16"
    },
    "4424": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3332,
        3371
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4425": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3312
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4426": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3312
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4427": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4428": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4429": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4431": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MUL",
      "path": "16"
    },
    "4432": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4434": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "ADD",
      "path": "16"
    },
    "4435": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4437": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4438": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4439": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4440": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "ADD",
      "path": "16"
    },
    "4441": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4443": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4444": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4445": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4446": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4447": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4448": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4449": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4450": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4451": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4452": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4454": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "ADD",
      "path": "16"
    },
    "4455": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4456": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4457": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4459": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MUL",
      "path": "16"
    },
    "4460": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4461": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4462": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4463": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4464": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4466": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4467": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "ADD",
      "path": "16"
    },
    "4468": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4469": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4470": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4471": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4472": {
      "op": "POP"
    },
    "4473": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4474": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4475": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4476": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4477": {
      "op": "POP"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3319
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x258E"
    },
    "4482": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3301,
        3372
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4485": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3301,
        3372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4486": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11D1"
    },
    "4489": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4490": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4492": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4501": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4506": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4507": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "ADD",
      "path": "16"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F74206F6E2077686974656C6973742E00000000000000"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4556": {
      "op": "ADD"
    },
    "4557": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "4560": {
      "op": "JUMP"
    },
    "4561": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3293,
        3402
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4562": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3442,
        3457
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x17"
    },
    "4564": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3442,
        3457
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4565": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "4567": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4568": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11E2"
    },
    "4571": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3438
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4572": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3437,
        3438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4574": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3438
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "4577": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3420,
        3438
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4578": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3438
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4579": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3457
      ],
      "op": "GT",
      "path": "16"
    },
    "4580": {
      "branch": 166,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3420,
        3457
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4581": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1200"
    },
    "4584": {
      "branch": 166,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4585": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4587": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4594": {
      "op": "SHL"
    },
    "4595": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4596": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4597": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4599": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "ADD",
      "path": "16"
    },
    "4600": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "4603": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4604": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x356F"
    },
    "4607": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3412,
        3500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4608": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3412,
        3500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4609": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3528,
        3538
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 32
    },
    "4610": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4612": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4613": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4614": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4615": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3527
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "4617": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4619": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4620": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4622": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4623": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4624": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4625": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4627": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3539
      ],
      "op": "AND",
      "path": "16"
    },
    "4628": {
      "branch": 167,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3520,
        3548
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4629": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1260"
    },
    "4632": {
      "branch": 167,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4633": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4635": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4642": {
      "op": "SHL"
    },
    "4643": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4644": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4647": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4649": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4650": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "ADD",
      "path": "16"
    },
    "4651": {
      "op": "MSTORE"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "ADD"
    },
    "4658": {
      "op": "MSTORE"
    },
    "4659": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4694": {
      "op": "DUP3"
    },
    "4695": {
      "op": "ADD"
    },
    "4696": {
      "op": "MSTORE"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "4703": {
      "op": "JUMP"
    },
    "4704": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3512,
        3584
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4705": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3603,
        3613
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 33
    },
    "4706": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4708": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4709": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4710": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4711": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3602
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "4713": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4715": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4716": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4718": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4719": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3614
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4720": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4721": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4724": {
      "op": "NOT"
    },
    "4725": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "AND",
      "path": "16"
    },
    "4726": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3617,
        3621
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4728": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "OR",
      "path": "16"
    },
    "4729": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3595,
        3621
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3631,
        3679
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 34,
      "value": "0x1287"
    },
    "4734": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3631,
        3679
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4735": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3653,
        3678
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF67"
    },
    "4738": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3653,
        3668
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4740": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4741": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4742": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4743": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3631,
        3679
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4744": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3689,
        3716
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0xF8C"
    },
    "4747": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3689,
        3704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4749": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4750": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4751": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4753": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4754": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4755": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4756": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4757": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7220,
        7508
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4758": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4760": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4767": {
      "op": "SHL"
    },
    "4768": {
      "op": "SUB"
    },
    "4769": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4772": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4773": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4774": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4776": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4777": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4778": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C5"
    },
    "4781": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4791": {
      "op": "SHL"
    },
    "4792": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4797": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "4800": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4801": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "4804": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4806": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7287,
        7308
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4807": {
      "branch": 168,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7326,
        7337
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 36
    },
    "4808": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1313"
    },
    "4811": {
      "branch": 168,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4812": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4814": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4823": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4826": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4828": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4829": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "ADD",
      "path": "16"
    },
    "4830": {
      "op": "MSTORE"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4835": {
      "op": "DUP3"
    },
    "4836": {
      "op": "ADD"
    },
    "4837": {
      "op": "MSTORE"
    },
    "4838": {
      "op": "PUSH32",
      "value": "0x4E6F2062616C616E636520746F2077697468647261772E000000000000000000"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4873": {
      "op": "DUP3"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "4882": {
      "op": "JUMP"
    },
    "4883": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7318,
        7365
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4884": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "4886": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4887": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4889": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4890": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7376,
        7388
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4892": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7376,
        7388
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4893": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "4897": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4898": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "DIV",
      "path": "16"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "op": "SUB"
    },
    "4907": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "AND",
      "path": "16"
    },
    "4908": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4909": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7432,
        7439
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4910": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7432,
        7439
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4911": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7376,
        7388
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4912": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4913": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7376,
        7388
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4914": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4915": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7432,
        7439
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4916": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7402,
        7418
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4917": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "GAS",
      "path": "16"
    },
    "4918": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "CALL",
      "path": "16"
    },
    "4919": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4920": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4921": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4922": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4923": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4924": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4925": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4927": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4928": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "EQ",
      "path": "16"
    },
    "4929": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1366"
    },
    "4932": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4933": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4935": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4936": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4937": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4938": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4940": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "NOT",
      "path": "16"
    },
    "4941": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4943": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4944": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "ADD",
      "path": "16"
    },
    "4945": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "AND",
      "path": "16"
    },
    "4946": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4947": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "ADD",
      "path": "16"
    },
    "4948": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4950": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4951": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4952": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4953": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4954": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4955": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4957": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4959": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4960": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "ADD",
      "path": "16"
    },
    "4961": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4962": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x136B"
    },
    "4965": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4966": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4967": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4969": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4970": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4971": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4972": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7394,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4973": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7375,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4974": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7375,
        7444
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4975": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7375,
        7444
      ],
      "op": "POP",
      "path": "16"
    },
    "4976": {
      "branch": 169,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7462,
        7469
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 37
    },
    "4977": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD80"
    },
    "4980": {
      "branch": 169,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4981": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4983": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4990": {
      "op": "SHL"
    },
    "4991": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4992": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4995": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4997": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4998": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "ADD",
      "path": "16"
    },
    "4999": {
      "op": "MSTORE"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "ADD"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F2077697468647261772062616C616E63652E0000000000"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5042": {
      "op": "DUP3"
    },
    "5043": {
      "op": "ADD"
    },
    "5044": {
      "op": "MSTORE"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7454,
        7501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "5051": {
      "op": "JUMP"
    },
    "5052": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5053": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5055": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5062": {
      "op": "SHL"
    },
    "5063": {
      "op": "SUB"
    },
    "5064": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5067": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5068": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5069": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5070": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5071": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5072": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5073": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EC"
    },
    "5076": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5077": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "5095": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "5099": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5100": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5101": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5342,
        5352
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 38,
      "value": "0x13F4"
    },
    "5104": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5342,
        5350
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25A4"
    },
    "5107": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5342,
        5352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5108": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5342,
        5352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5109": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        5294,
        5359
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5110": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xC7F"
    },
    "5114": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5115": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5116": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5117": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5119": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5120": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5121": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5123": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "3"
    },
    "5124": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5126": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5130": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "3"
    },
    "5133": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4A"
    },
    "5136": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5137": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5138": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8491,
        8507
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5140": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8519,
        8542
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5142": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8545,
        8561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x141E"
    },
    "5145": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8555,
        8560
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5146": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8545,
        8554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x176F"
    },
    "5149": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8545,
        8561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5150": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8545,
        8561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5151": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8519,
        8561
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5152": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8519,
        8561
      ],
      "op": "POP",
      "path": "16"
    },
    "5153": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8571,
        8597
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5155": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8614,
        8629
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5156": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5165": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5166": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "GT",
      "path": "16"
    },
    "5167": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5168": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x143B"
    },
    "5171": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5172": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x143B"
    },
    "5175": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3030"
    },
    "5178": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8600,
        8630
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5179": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5180": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5182": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5183": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5184": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5185": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5186": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5187": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5188": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5190": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "MUL",
      "path": "16"
    },
    "5191": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5193": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ADD",
      "path": "16"
    },
    "5194": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5195": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ADD",
      "path": "16"
    },
    "5196": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5198": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5199": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5200": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5201": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1464"
    },
    "5204": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5205": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5206": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5208": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ADD",
      "path": "16"
    },
    "5209": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5211": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5212": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "MUL",
      "path": "16"
    },
    "5213": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5214": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "5215": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5216": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "5217": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "ADD",
      "path": "16"
    },
    "5218": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5219": {
      "op": "POP"
    },
    "5220": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5221": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8600,
        8630
      ],
      "op": "POP",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8571,
        8630
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5223": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8571,
        8630
      ],
      "op": "POP",
      "path": "16"
    },
    "5224": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8645,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5226": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5227": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8660,
        8675
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5228": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8656,
        8657
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5229": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8656,
        8675
      ],
      "op": "LT",
      "path": "16"
    },
    "5230": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5231": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14AB"
    },
    "5234": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5235": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8711,
        8740
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 40,
      "value": "0x147C"
    },
    "5238": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8731,
        8736
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5239": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8738,
        8739
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5240": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8711,
        8730
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF95"
    },
    "5243": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8711,
        8740
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5244": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8711,
        8740
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5245": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8705
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5246": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8706,
        8707
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5247": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5248": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5249": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5250": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "LT",
      "path": "16"
    },
    "5251": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148E"
    },
    "5254": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5255": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148E"
    },
    "5258": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "5261": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8696,
        8708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5262": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5263": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5265": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5266": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5267": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "MUL",
      "path": "16"
    },
    "5268": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5269": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5270": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5271": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "ADD",
      "path": "16"
    },
    "5272": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8708
      ],
      "op": "ADD",
      "path": "16"
    },
    "5273": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8696,
        8740
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5274": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 41
    },
    "5275": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A3"
    },
    "5278": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5279": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35B5"
    },
    "5282": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8677,
        8680
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5283": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5284": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5285": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "POP",
      "path": "16"
    },
    "5286": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8677,
        8680
      ],
      "op": "POP",
      "path": "16"
    },
    "5287": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x146A"
    },
    "5290": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5291": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8640,
        8751
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8767,
        8776
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 42
    },
    "5294": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8430,
        8783
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5295": {
      "op": "POP"
    },
    "5296": {
      "op": "POP"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        8430,
        8783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5299": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5300": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5302": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 43,
      "value": "0x14BE"
    },
    "5305": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5307": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5308": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5309": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5310": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5311": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5312": {
      "branch": 197,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5313": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1521"
    },
    "5316": {
      "branch": 197,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5317": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5319": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5326": {
      "op": "SHL"
    },
    "5327": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5328": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5331": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5333": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5334": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5335": {
      "op": "MSTORE"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5340": {
      "op": "DUP3"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5378": {
      "op": "DUP3"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "MSTORE"
    },
    "5381": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5396": {
      "op": "SHL"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5399": {
      "op": "DUP3"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "op": "MSTORE"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5404": {
      "op": "ADD"
    },
    "5405": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB49"
    },
    "5408": {
      "op": "JUMP"
    },
    "5409": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5410": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x8"
    },
    "5412": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5413": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5414": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5415": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5416": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5417": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1534"
    },
    "5420": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5421": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1534"
    },
    "5424": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35D0"
    },
    "5427": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5428": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5429": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5430": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5432": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5433": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5435": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5437": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5438": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5439": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5440": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5441": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5442": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5444": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5446": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5766,
        5926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5449": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5456": {
      "op": "SHL"
    },
    "5457": {
      "op": "SUB"
    },
    "5458": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5461": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5462": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5463": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5464": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5465": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5466": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5467": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1576"
    },
    "5470": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5473": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5480": {
      "op": "SHL"
    },
    "5481": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5485": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5486": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "5489": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5490": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "5493": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5494": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5495": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5851,
        5865
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x12"
    },
    "5497": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5851,
        5865
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5498": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5851,
        5865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5500": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5851,
        5865
      ],
      "op": "AND",
      "path": "16"
    },
    "5501": {
      "branch": 170,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5850,
        5865
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5502": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15BE"
    },
    "5505": {
      "branch": 170,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5506": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5508": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5515": {
      "op": "SHL"
    },
    "5516": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5517": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5520": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5522": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5523": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "ADD",
      "path": "16"
    },
    "5524": {
      "op": "MSTORE"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5529": {
      "op": "DUP3"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "MSTORE"
    },
    "5532": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5553": {
      "op": "SHL"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "MSTORE"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5561": {
      "op": "ADD"
    },
    "5562": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "5565": {
      "op": "JUMP"
    },
    "5566": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5842,
        5888
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5567": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 46
    },
    "5568": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5569": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD80"
    },
    "5572": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5573": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5575": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5905
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5576": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5578": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5579": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "ADD",
      "path": "16"
    },
    "5580": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5581": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5898,
        5919
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9A"
    },
    "5584": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5898,
        5919
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5585": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5586": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5588": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5595": {
      "op": "SHL"
    },
    "5596": {
      "op": "SUB"
    },
    "5597": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5600": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5601": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5602": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5603": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5604": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5605": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5606": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1601"
    },
    "5609": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5622": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "5628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "5632": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5633": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5640": {
      "op": "SHL"
    },
    "5641": {
      "op": "SUB"
    },
    "5642": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "AND",
      "path": "16",
      "statement": 47
    },
    "5643": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5638,
        5643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5645": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5646": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5647": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5648": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "5650": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5652": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5653": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5655": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5656": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5635
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5657": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5643
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5658": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5643
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5661": {
      "op": "NOT"
    },
    "5662": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5643
      ],
      "op": "AND",
      "path": "16"
    },
    "5663": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5643
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5664": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5617,
        5643
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5665": {
      "fn": "CryptidToken.undoClaim",
      "jump": "o",
      "offset": [
        5551,
        5650
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5666": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5667": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5676": {
      "op": "SHL"
    },
    "5677": {
      "op": "SUB"
    },
    "5678": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5681": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5682": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5683": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5684": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5685": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5686": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5687": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1652"
    },
    "5690": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5700": {
      "op": "SHL"
    },
    "5701": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "5709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5710": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "5713": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5714": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5715": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7179,
        7191
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x11"
    },
    "5717": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7179,
        7207
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5718": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        7102,
        7214
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5719": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5720": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5722": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5723": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5724": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5725": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5727": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5729": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5730": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5732": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5733": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5734": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5741": {
      "op": "SHL"
    },
    "5742": {
      "op": "SUB"
    },
    "5743": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "3"
    },
    "5744": {
      "branch": 187,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 49
    },
    "5745": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3C"
    },
    "5748": {
      "branch": 187,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5749": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5751": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5760": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5763": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5765": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5767": {
      "op": "MSTORE"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5772": {
      "op": "DUP3"
    },
    "5773": {
      "op": "ADD"
    },
    "5774": {
      "op": "MSTORE"
    },
    "5775": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5810": {
      "op": "DUP3"
    },
    "5811": {
      "op": "ADD"
    },
    "5812": {
      "op": "MSTORE"
    },
    "5813": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5825": {
      "op": "SHL"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5828": {
      "op": "DUP3"
    },
    "5829": {
      "op": "ADD"
    },
    "5830": {
      "op": "MSTORE"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5833": {
      "op": "ADD"
    },
    "5834": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "5837": {
      "op": "JUMP"
    },
    "5838": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5839": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5841": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5842": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5843": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16DB"
    },
    "5846": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5847": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "5850": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5851": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5852": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5853": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5855": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5856": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5858": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5859": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5861": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5862": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5864": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5865": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5868": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5870": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5871": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5874": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5876": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5878": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5879": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5880": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5881": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5883": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5884": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5885": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1707"
    },
    "5890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "5894": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5895": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1754"
    },
    "5901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5903": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5905": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "LT",
      "path": "16"
    },
    "5906": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1729"
    },
    "5909": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5910": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5913": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5914": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5915": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5916": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5917": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5918": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5919": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5920": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5921": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5923": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5924": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5925": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1754"
    },
    "5928": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5929": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5930": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5931": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5932": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5933": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5934": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5936": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5937": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5939": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5941": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5942": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5943": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5944": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5945": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5946": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5948": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5949": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5951": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5952": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5953": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5955": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5956": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5957": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5958": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "GT",
      "path": "16"
    },
    "5959": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1737"
    },
    "5962": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5963": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5964": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5965": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SUB",
      "path": "16"
    },
    "5966": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5968": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "AND",
      "path": "16"
    },
    "5969": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5970": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5971": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5972": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5973": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5974": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5975": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5977": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5978": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5979": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5980": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5981": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7885
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5983": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7903,
        7925
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 50,
      "value": "0x176A"
    },
    "5986": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7911,
        7924
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x641"
    },
    "5989": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5991": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5992": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5993": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5994": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7903,
        7925
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5995": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7896,
        7925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5996": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7896,
        7925
      ],
      "op": "POP",
      "path": "16"
    },
    "5997": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7828,
        7932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5998": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "o",
      "offset": [
        7828,
        7932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5999": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6000": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6008": {
      "op": "SHL"
    },
    "6009": {
      "op": "SUB"
    },
    "6010": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 51
    },
    "6011": {
      "branch": 188,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "6012": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17DA"
    },
    "6015": {
      "branch": 188,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6018": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6027": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6033": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6034": {
      "op": "MSTORE"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6039": {
      "op": "DUP3"
    },
    "6040": {
      "op": "ADD"
    },
    "6041": {
      "op": "MSTORE"
    },
    "6042": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6077": {
      "op": "DUP3"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "op": "MSTORE"
    },
    "6080": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6093": {
      "op": "SHL"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6096": {
      "op": "DUP3"
    },
    "6097": {
      "op": "ADD"
    },
    "6098": {
      "op": "MSTORE"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "6105": {
      "op": "JUMP"
    },
    "6106": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6107": {
      "op": "POP"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6114": {
      "op": "SHL"
    },
    "6115": {
      "op": "SUB"
    },
    "6116": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "3",
      "statement": 52
    },
    "6117": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6119": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6120": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6121": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6122": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6124": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6126": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6127": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6129": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6130": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6131": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6132": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6133": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6135": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6137": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6144": {
      "op": "SHL"
    },
    "6145": {
      "op": "SUB"
    },
    "6146": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6149": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6150": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6151": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6152": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6153": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6154": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6155": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1826"
    },
    "6158": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6161": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6168": {
      "op": "SHL"
    },
    "6169": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "6177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6178": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "6181": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6182": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x13F4"
    },
    "6186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2637"
    },
    "6191": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6192": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3756,
        4421
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6193": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6195": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6207": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6208": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6210": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6211": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6212": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6213": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1860"
    },
    "6216": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6226": {
      "op": "SHL"
    },
    "6227": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6229": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "6235": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6236": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "6239": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6241": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3875,
        3889
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x3"
    },
    "6243": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3871
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6245": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3871
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6246": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3871
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6248": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3871
      ],
      "op": "AND",
      "path": "16"
    },
    "6249": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6251": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6252": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "GT",
      "path": "16"
    },
    "6253": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6254": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1879"
    },
    "6257": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6258": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1879"
    },
    "6261": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3398"
    },
    "6264": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3866,
        3889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6265": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6266": {
      "branch": 171,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3889
      ],
      "op": "EQ",
      "path": "16"
    },
    "6267": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18C6"
    },
    "6270": {
      "branch": 171,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6271": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6273": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6274": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6280": {
      "op": "SHL"
    },
    "6281": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6282": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6285": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6287": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6288": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "ADD",
      "path": "16"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6294": {
      "op": "DUP3"
    },
    "6295": {
      "op": "ADD"
    },
    "6296": {
      "op": "MSTORE"
    },
    "6297": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6332": {
      "op": "DUP3"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6337": {
      "op": "ADD"
    },
    "6338": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6341": {
      "op": "JUMP"
    },
    "6342": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3858,
        3918
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6343": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3949,
        3950
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x0"
    },
    "6345": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3936,
        3946
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6346": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3936,
        3950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6348": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3936,
        3950
      ],
      "op": "AND",
      "path": "16"
    },
    "6349": {
      "branch": 172,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3936,
        3950
      ],
      "op": "GT",
      "path": "16"
    },
    "6350": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18E9"
    },
    "6353": {
      "branch": 172,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6354": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6356": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6365": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6366": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6368": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "ADD",
      "path": "16"
    },
    "6369": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6372": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6373": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34FE"
    },
    "6376": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3928,
        3990
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6377": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3928,
        3990
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6378": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4052
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x15"
    },
    "6380": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4052
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6381": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4021,
        4034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "6383": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4021,
        4034
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6384": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18FC"
    },
    "6387": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6388": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6390": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6391": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "AND",
      "path": "16"
    },
    "6392": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "6395": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4008,
        4034
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6396": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4034
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6397": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4052
      ],
      "op": "GT",
      "path": "16"
    },
    "6398": {
      "branch": 173,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4008,
        4052
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6399": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195E"
    },
    "6402": {
      "branch": 173,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6403": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6405": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6414": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6417": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6419": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6420": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "ADD",
      "path": "16"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6426": {
      "op": "DUP3"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "op": "MSTORE"
    },
    "6429": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6464": {
      "op": "DUP3"
    },
    "6465": {
      "op": "ADD"
    },
    "6466": {
      "op": "MSTORE"
    },
    "6467": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6481": {
      "op": "SHL"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6484": {
      "op": "DUP3"
    },
    "6485": {
      "op": "ADD"
    },
    "6486": {
      "op": "MSTORE"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6493": {
      "op": "JUMP"
    },
    "6494": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4000,
        4100
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6495": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4152,
        4167
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0x17"
    },
    "6497": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4152,
        4167
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6498": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4138,
        4148
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6499": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6501": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "AND",
      "path": "16"
    },
    "6502": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x196E"
    },
    "6505": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6507": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6508": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6509": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6510": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4134
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6511": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1978"
    },
    "6514": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6515": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6516": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "6519": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4121,
        4148
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6520": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4148
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6521": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4167
      ],
      "op": "GT",
      "path": "16"
    },
    "6522": {
      "branch": 174,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4121,
        4167
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6523": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1996"
    },
    "6526": {
      "branch": 174,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6527": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6529": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6536": {
      "op": "SHL"
    },
    "6537": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6538": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6539": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6541": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "ADD",
      "path": "16"
    },
    "6542": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6545": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6546": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x356F"
    },
    "6549": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4113,
        4210
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6550": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4113,
        4210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6551": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4239,
        4249
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 58
    },
    "6552": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6554": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "AND",
      "path": "16"
    },
    "6555": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "6557": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6559": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6560": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6561": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6562": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19AB"
    },
    "6565": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6566": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6567": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "6570": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4222,
        4249
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6571": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6572": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6573": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6574": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4222,
        4249
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6575": {
      "op": "POP"
    },
    "6576": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4276,
        4277
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6578": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4276,
        4277
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6579": {
      "op": "POP"
    },
    "6580": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4259,
        4415
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6581": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4284,
        4294
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6582": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4279,
        4294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6584": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4279,
        4294
      ],
      "op": "AND",
      "path": "16"
    },
    "6585": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4279,
        4280
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6586": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4279,
        4294
      ],
      "op": "GT",
      "path": "16"
    },
    "6587": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4259,
        4415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD80"
    },
    "6590": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4259,
        4415
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6591": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4315,
        4363
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 59,
      "value": "0x19CB"
    },
    "6594": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4325,
        4335
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6595": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4337,
        4362
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF67"
    },
    "6598": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4337,
        4352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6600": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6601": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6602": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6603": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4315,
        4363
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6604": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4377,
        4404
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 60,
      "value": "0x19D9"
    },
    "6607": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4377,
        4392
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6609": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6610": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6611": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6613": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6614": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6615": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6616": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6617": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4377,
        4404
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6618": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 61
    },
    "6619": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19E3"
    },
    "6622": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6623": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35B5"
    },
    "6626": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4296,
        4299
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6627": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6628": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6629": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "POP",
      "path": "16"
    },
    "6630": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4296,
        4299
      ],
      "op": "POP",
      "path": "16"
    },
    "6631": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4259,
        4415
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19B4"
    },
    "6634": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4259,
        4415
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6635": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6638": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "op": "SUB"
    },
    "6647": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6650": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6651": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6652": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6653": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6654": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6655": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6656": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1B"
    },
    "6659": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6669": {
      "op": "SHL"
    },
    "6670": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6671": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6674": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6675": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "6678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6679": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "6682": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6684": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5729,
        5739
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0xD"
    },
    "6686": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5729,
        5753
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6687": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5656,
        5760
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6688": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6689": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6691": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6698": {
      "op": "SHL"
    },
    "6699": {
      "op": "SUB"
    },
    "6700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6704": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6707": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6708": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6709": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A50"
    },
    "6712": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6722": {
      "op": "SHL"
    },
    "6723": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "6731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "6735": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6737": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6692,
        6693
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0x0"
    },
    "6739": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6667,
        6681
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6741": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6742": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6743": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A5F"
    },
    "6746": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6747": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "6750": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6661,
        6689
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6751": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6752": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6753": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6689
      ],
      "op": "POP",
      "path": "16"
    },
    "6754": {
      "branch": 175,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6661,
        6693
      ],
      "op": "GT",
      "path": "16"
    },
    "6755": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AAE"
    },
    "6758": {
      "branch": 175,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6759": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6761": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6768": {
      "op": "SHL"
    },
    "6769": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6770": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6773": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6775": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6776": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "ADD",
      "path": "16"
    },
    "6777": {
      "op": "MSTORE"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6782": {
      "op": "DUP3"
    },
    "6783": {
      "op": "ADD"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6820": {
      "op": "DUP3"
    },
    "6821": {
      "op": "ADD"
    },
    "6822": {
      "op": "MSTORE"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6825": {
      "op": "ADD"
    },
    "6826": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6829": {
      "op": "JUMP"
    },
    "6830": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6653,
        6725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6831": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 64,
      "value": "0x12"
    },
    "6833": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6834": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6837": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6838": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "DIV",
      "path": "16"
    },
    "6839": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6841": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6744,
        6764
      ],
      "op": "AND",
      "path": "16"
    },
    "6842": {
      "branch": 176,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6743,
        6764
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6843": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B11"
    },
    "6846": {
      "branch": 176,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6847": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6849": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6856": {
      "op": "SHL"
    },
    "6857": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6858": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6861": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6863": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6864": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "ADD",
      "path": "16"
    },
    "6865": {
      "op": "MSTORE"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6870": {
      "op": "DUP3"
    },
    "6871": {
      "op": "ADD"
    },
    "6872": {
      "op": "MSTORE"
    },
    "6873": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "6906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6908": {
      "op": "DUP3"
    },
    "6909": {
      "op": "ADD"
    },
    "6910": {
      "op": "MSTORE"
    },
    "6911": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6916": {
      "op": "SHL"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6919": {
      "op": "DUP3"
    },
    "6920": {
      "op": "ADD"
    },
    "6921": {
      "op": "MSTORE"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6924": {
      "op": "ADD"
    },
    "6925": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "6928": {
      "op": "JUMP"
    },
    "6929": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6735,
        6803
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6930": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6833
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 65,
      "value": "0x12"
    },
    "6932": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6933": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6934": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6937": {
      "op": "NOT"
    },
    "6938": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "AND",
      "path": "16"
    },
    "6939": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6942": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "OR",
      "path": "16"
    },
    "6943": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6944": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6813,
        6840
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6945": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6592,
        6847
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6946": {
      "fn": "CryptidToken.pause",
      "offset": [
        5227,
        5288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6947": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6949": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6956": {
      "op": "SHL"
    },
    "6957": {
      "op": "SUB"
    },
    "6958": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6961": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6962": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6963": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6964": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6965": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6966": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6967": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B52"
    },
    "6970": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6971": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6980": {
      "op": "SHL"
    },
    "6981": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6982": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6985": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6986": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "6989": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6990": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "6993": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6994": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6995": {
      "fn": "CryptidToken.pause",
      "offset": [
        5273,
        5281
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 66,
      "value": "0x13F4"
    },
    "6998": {
      "fn": "CryptidToken.pause",
      "offset": [
        5273,
        5279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2691"
    },
    "7001": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5273,
        5281
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7002": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7003": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7005": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x1"
    },
    "7007": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7008": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7009": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA51"
    },
    "7012": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7013": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3413"
    },
    "7016": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7017": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7018": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 68,
      "value": "0xD80"
    },
    "7021": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7022": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7023": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7024": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26E9"
    },
    "7027": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7028": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2489,
        2943
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7029": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7031": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "op": "SUB"
    },
    "7040": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7043": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7044": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7045": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7046": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7047": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7048": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7049": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA4"
    },
    "7052": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7068": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "7071": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "7075": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7077": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2633,
        2643
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0x0"
    },
    "7079": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "7081": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2630
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7082": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2630
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7084": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2630
      ],
      "op": "AND",
      "path": "16"
    },
    "7085": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7087": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7088": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "GT",
      "path": "16"
    },
    "7089": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7090": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BBD"
    },
    "7093": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7094": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BBD"
    },
    "7097": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3398"
    },
    "7100": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2625,
        2643
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7101": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7102": {
      "branch": 177,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2625,
        2643
      ],
      "op": "GT",
      "path": "16"
    },
    "7103": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C01"
    },
    "7106": {
      "branch": 177,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7107": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7109": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7116": {
      "op": "SHL"
    },
    "7117": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7118": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7121": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7123": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7124": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "ADD",
      "path": "16"
    },
    "7125": {
      "op": "MSTORE"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7130": {
      "op": "DUP3"
    },
    "7131": {
      "op": "ADD"
    },
    "7132": {
      "op": "MSTORE"
    },
    "7133": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7156": {
      "op": "SHL"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7159": {
      "op": "DUP3"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "MSTORE"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7164": {
      "op": "ADD"
    },
    "7165": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "7168": {
      "op": "JUMP"
    },
    "7169": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2617,
        2668
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7170": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2717,
        2732
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 70,
      "value": "0x17"
    },
    "7172": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2717,
        2732
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7173": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2703,
        2713
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7174": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7176": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "AND",
      "path": "16"
    },
    "7177": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2699
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C11"
    },
    "7180": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7182": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7183": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7184": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7185": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2699
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7186": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1B"
    },
    "7189": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7190": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7191": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3557"
    },
    "7194": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2686,
        2713
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7195": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2713
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7196": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2732
      ],
      "op": "GT",
      "path": "16"
    },
    "7197": {
      "branch": 178,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2686,
        2732
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7198": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C7C"
    },
    "7201": {
      "branch": 178,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7202": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7204": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7213": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7216": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7218": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7219": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "ADD",
      "path": "16"
    },
    "7220": {
      "op": "MSTORE"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7225": {
      "op": "DUP3"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "MSTORE"
    },
    "7228": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7263": {
      "op": "DUP3"
    },
    "7264": {
      "op": "ADD"
    },
    "7265": {
      "op": "MSTORE"
    },
    "7266": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7279": {
      "op": "SHL"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7282": {
      "op": "DUP3"
    },
    "7283": {
      "op": "ADD"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "7291": {
      "op": "JUMP"
    },
    "7292": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2678,
        2779
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7293": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2806,
        2807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7295": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2789,
        2937
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7296": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2814,
        2824
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7297": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2809,
        2824
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7299": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2809,
        2824
      ],
      "op": "AND",
      "path": "16"
    },
    "7300": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2809,
        2810
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7301": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2809,
        2824
      ],
      "op": "GT",
      "path": "16"
    },
    "7302": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2789,
        2937
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC7F"
    },
    "7305": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2789,
        2937
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7306": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2845,
        2885
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 71,
      "value": "0x1C96"
    },
    "7309": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2855,
        2857
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7310": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2859,
        2884
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF67"
    },
    "7313": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2859,
        2874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7315": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7316": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7317": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7318": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2845,
        2885
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7319": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2899,
        2926
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 72,
      "value": "0x1CA4"
    },
    "7322": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2899,
        2914
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7324": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7325": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7326": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7328": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7329": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7330": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7331": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7332": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2899,
        2926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 73
    },
    "7334": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CAE"
    },
    "7337": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7338": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35B5"
    },
    "7341": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2826,
        2829
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7342": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7343": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7344": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "POP",
      "path": "16"
    },
    "7345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2826,
        2829
      ],
      "op": "POP",
      "path": "16"
    },
    "7346": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2789,
        2937
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C7F"
    },
    "7349": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2789,
        2937
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7350": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7351": {
      "fn": "CryptidToken.verify",
      "offset": [
        8916,
        8926
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "7353": {
      "fn": "CryptidToken.verify",
      "offset": [
        8916,
        8926
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7354": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7356": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7357": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7370": {
      "op": "NOT"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7373": {
      "op": "DUP7"
    },
    "7374": {
      "op": "SWAP1"
    },
    "7375": {
      "op": "SHL"
    },
    "7376": {
      "op": "AND"
    },
    "7377": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7379": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7380": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "ADD",
      "path": "16"
    },
    "7381": {
      "op": "MSTORE"
    },
    "7382": {
      "fn": "CryptidToken.verify",
      "offset": [
        8877,
        8881
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7384": {
      "fn": "CryptidToken.verify",
      "offset": [
        8877,
        8881
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7385": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D32"
    },
    "7388": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7394": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7395": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7397": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7398": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7399": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "SUB",
      "path": "16"
    },
    "7400": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "SUB",
      "path": "16"
    },
    "7401": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7402": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7403": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7404": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7406": {
      "fn": "CryptidToken.verify",
      "offset": [
        8938,
        8963
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7407": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7408": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7409": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7410": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7412": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "ADD",
      "path": "16"
    },
    "7413": {
      "fn": "CryptidToken.verify",
      "offset": [
        8928,
        8964
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7414": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8908
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7415": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8908
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7416": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7417": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7418": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7420": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MUL",
      "path": "16"
    },
    "7421": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7423": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "ADD",
      "path": "16"
    },
    "7424": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7426": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7427": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7428": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7429": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "ADD",
      "path": "16"
    },
    "7430": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7432": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7433": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7434": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7435": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7436": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7437": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7438": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7439": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7440": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7441": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7443": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "ADD",
      "path": "16"
    },
    "7444": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7445": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7446": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7448": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MUL",
      "path": "16"
    },
    "7449": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7450": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7451": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7452": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "7453": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7455": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7456": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "ADD",
      "path": "16"
    },
    "7457": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7458": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7459": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7460": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7461": {
      "op": "POP"
    },
    "7462": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7463": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "7464": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7465": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7466": {
      "op": "POP"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8915
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x258E"
    },
    "7471": {
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8897,
        8965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7474": {
      "branch": 179,
      "fn": "CryptidToken.verify",
      "offset": [
        8897,
        8965
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7475": {
      "fn": "CryptidToken.verify",
      "offset": [
        8893,
        9003
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7476": {
      "fn": "CryptidToken.verify",
      "offset": [
        8893,
        9003
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D3F"
    },
    "7479": {
      "branch": 179,
      "fn": "CryptidToken.verify",
      "offset": [
        8893,
        9003
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7480": {
      "op": "POP"
    },
    "7481": {
      "fn": "CryptidToken.verify",
      "offset": [
        8988,
        8992
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 74,
      "value": "0x1"
    },
    "7483": {
      "fn": "CryptidToken.verify",
      "offset": [
        8981,
        8992
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D43"
    },
    "7486": {
      "fn": "CryptidToken.verify",
      "offset": [
        8981,
        8992
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7487": {
      "fn": "CryptidToken.verify",
      "offset": [
        8893,
        9003
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7488": {
      "op": "POP"
    },
    "7489": {
      "fn": "CryptidToken.verify",
      "offset": [
        9019,
        9024
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 75,
      "value": "0x0"
    },
    "7491": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7492": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7493": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7494": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "POP",
      "path": "16"
    },
    "7495": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "POP",
      "path": "16"
    },
    "7496": {
      "fn": "CryptidToken.verify",
      "offset": [
        8789,
        9031
      ],
      "op": "POP",
      "path": "16"
    },
    "7497": {
      "fn": "CryptidToken.verify",
      "jump": "o",
      "offset": [
        8789,
        9031
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 76,
      "value": "0x1D54"
    },
    "7502": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D6"
    },
    "7507": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7508": {
      "branch": 189,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D70"
    },
    "7512": {
      "branch": 189,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7513": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7522": {
      "op": "SHL"
    },
    "7523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7524": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "3"
    },
    "7528": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "7531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3483"
    },
    "7535": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 77,
      "value": "0x1D7C"
    },
    "7540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27B8"
    },
    "7547": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7552": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7553": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7554": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7555": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7557": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7564": {
      "op": "SHL"
    },
    "7565": {
      "op": "SUB"
    },
    "7566": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7569": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7572": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7573": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7574": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7575": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB2"
    },
    "7578": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7588": {
      "op": "SHL"
    },
    "7589": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "7597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "7601": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7602": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7609": {
      "op": "SHL"
    },
    "7610": {
      "op": "SUB"
    },
    "7611": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "AND",
      "path": "16",
      "statement": 78
    },
    "7612": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7614": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7615": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7616": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7617": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "7619": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7621": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7622": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7624": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7625": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5493
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7626": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7627": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7630": {
      "op": "NOT"
    },
    "7631": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "AND",
      "path": "16"
    },
    "7632": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5496,
        5500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7634": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "OR",
      "path": "16"
    },
    "7635": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7636": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5475,
        5500
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7637": {
      "fn": "CryptidToken.setClaim",
      "jump": "o",
      "offset": [
        5410,
        5507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7638": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7639": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7641": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7642": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7643": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16DB"
    },
    "7646": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7647": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "7650": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7651": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7652": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7654": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7655": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7656": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16DB"
    },
    "7659": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7660": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "7663": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7664": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7665": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7667": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7668": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7669": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7670": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7672": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7674": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7675": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7677": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7678": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7679": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7680": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8108,
        8121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7682": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8108,
        8121
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7689": {
      "op": "SHL"
    },
    "7690": {
      "op": "SUB"
    },
    "7691": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "7692": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 79,
      "value": "0x1E70"
    },
    "7695": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7696": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7698": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7707": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7710": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7712": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7713": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "ADD",
      "path": "16"
    },
    "7714": {
      "op": "MSTORE"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7719": {
      "op": "DUP3"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "MSTORE"
    },
    "7722": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7757": {
      "op": "DUP3"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "MSTORE"
    },
    "7760": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7779": {
      "op": "SHL"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7782": {
      "op": "DUP3"
    },
    "7783": {
      "op": "ADD"
    },
    "7784": {
      "op": "MSTORE"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "7791": {
      "op": "JUMP"
    },
    "7792": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8133,
        8210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7793": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8251,
        8258
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0xF"
    },
    "7795": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8260,
        8278
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E7B"
    },
    "7798": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8260,
        8267
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7799": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8260,
        8276
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x27EB"
    },
    "7802": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8260,
        8278
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7803": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8260,
        8278
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7804": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8280,
        8293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7806": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7808": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7809": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7811": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "ADD",
      "path": "16"
    },
    "7812": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E8F"
    },
    "7815": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7816": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7817": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7818": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7819": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3680"
    },
    "7822": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8234,
        8294
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7823": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7824": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7826": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7827": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7829": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7830": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7831": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SUB",
      "path": "16"
    },
    "7832": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SUB",
      "path": "16"
    },
    "7833": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7834": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7835": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7836": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7838": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8234,
        8294
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7839": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8220,
        8295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7840": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8220,
        8295
      ],
      "op": "POP",
      "path": "16"
    },
    "7841": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7842": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7843": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8035,
        8302
      ],
      "op": "POP",
      "path": "16"
    },
    "7844": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        8035,
        8302
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7845": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7846": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7855": {
      "op": "SHL"
    },
    "7856": {
      "op": "SUB"
    },
    "7857": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7860": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7863": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7864": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7865": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7866": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED5"
    },
    "7869": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7870": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7872": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7879": {
      "op": "SHL"
    },
    "7880": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "7888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "7892": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7894": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 81,
      "value": "0x12"
    },
    "7896": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7897": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7899": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "7902": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7903": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7904": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "DIV",
      "path": "16"
    },
    "7905": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "AND",
      "path": "16"
    },
    "7906": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7611
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7907": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7611
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7908": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7910": {
      "branch": 180,
      "fn": "CryptidToken.setStage",
      "offset": [
        7583,
        7611
      ],
      "op": "EQ",
      "path": "16"
    },
    "7911": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F58"
    },
    "7914": {
      "branch": 180,
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7915": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7917": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7924": {
      "op": "SHL"
    },
    "7925": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7926": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7929": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7931": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7932": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "ADD",
      "path": "16"
    },
    "7933": {
      "op": "MSTORE"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7938": {
      "op": "DUP3"
    },
    "7939": {
      "op": "ADD"
    },
    "7940": {
      "op": "MSTORE"
    },
    "7941": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7976": {
      "op": "DUP3"
    },
    "7977": {
      "op": "ADD"
    },
    "7978": {
      "op": "MSTORE"
    },
    "7979": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8014": {
      "op": "DUP3"
    },
    "8015": {
      "op": "ADD"
    },
    "8016": {
      "op": "MSTORE"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8019": {
      "op": "ADD"
    },
    "8020": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "8023": {
      "op": "JUMP"
    },
    "8024": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7575,
        7672
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8025": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7690,
        7700
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 82,
      "value": "0xD"
    },
    "8027": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7690,
        7700
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8028": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FC2"
    },
    "8031": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8032": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8034": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8041": {
      "op": "SHL"
    },
    "8042": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8043": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8046": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8048": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8049": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "ADD",
      "path": "16"
    },
    "8050": {
      "op": "MSTORE"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8055": {
      "op": "DUP3"
    },
    "8056": {
      "op": "ADD"
    },
    "8057": {
      "op": "MSTORE"
    },
    "8058": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8093": {
      "op": "DUP3"
    },
    "8094": {
      "op": "ADD"
    },
    "8095": {
      "op": "MSTORE"
    },
    "8096": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8117": {
      "op": "SHL"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8120": {
      "op": "DUP3"
    },
    "8121": {
      "op": "ADD"
    },
    "8122": {
      "op": "MSTORE"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "8129": {
      "op": "JUMP"
    },
    "8130": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7682,
        7760
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8131": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7775
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 83,
      "value": "0x18"
    },
    "8133": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8134": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8135": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7778,
        7784
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8136": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7778,
        7784
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8137": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7775
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8140": {
      "op": "NOT"
    },
    "8141": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "AND",
      "path": "16"
    },
    "8142": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8144": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7778,
        7784
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8145": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8147": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8148": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "GT",
      "path": "16"
    },
    "8149": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8150": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE1"
    },
    "8153": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8154": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FE1"
    },
    "8157": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3398"
    },
    "8160": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7770,
        7784
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8161": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8162": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "MUL",
      "path": "16"
    },
    "8163": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "OR",
      "path": "16"
    },
    "8164": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8165": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8166": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7770,
        7784
      ],
      "op": "POP",
      "path": "16"
    },
    "8167": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7514,
        7791
      ],
      "op": "POP",
      "path": "16"
    },
    "8168": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        7514,
        7791
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8169": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7938,
        8029
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8170": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7983,
        7990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8172": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8008,
        8021
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 84,
      "value": "0x176A"
    },
    "8175": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8177": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8178": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8179": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8180": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6161,
        6289
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8181": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8190": {
      "op": "SHL"
    },
    "8191": {
      "op": "SUB"
    },
    "8192": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8195": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8196": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8197": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8198": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8199": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8200": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8201": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2024"
    },
    "8204": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8207": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8214": {
      "op": "SHL"
    },
    "8215": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8216": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8217": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8220": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "8223": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8224": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "8227": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8229": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 85
    },
    "8230": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8231": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD80"
    },
    "8234": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8235": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8237": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8238": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8240": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8241": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "ADD",
      "path": "16"
    },
    "8242": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8243": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6249,
        6282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9A"
    },
    "8246": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6249,
        6282
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8247": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8308,
        8420
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8248": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8356,
        8363
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8250": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8400,
        8413
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 86,
      "value": "0x2042"
    },
    "8253": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8255": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8256": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8257": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8258": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8400,
        8413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8259": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "8261": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8397
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8262": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x176A"
    },
    "8265": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8413
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8266": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8267": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8382,
        8413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36B3"
    },
    "8270": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8382,
        8413
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8271": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8272": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8274": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8281": {
      "op": "SHL"
    },
    "8282": {
      "op": "SUB"
    },
    "8283": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8287": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8288": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8289": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8290": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8291": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8292": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207F"
    },
    "8295": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8305": {
      "op": "SHL"
    },
    "8306": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8311": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "8314": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "8318": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8320": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6023,
        6024
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0x0"
    },
    "8322": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6005,
        6012
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8324": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8325": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8326": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x208E"
    },
    "8329": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8330": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3413"
    },
    "8333": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5999,
        6020
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8334": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8335": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8336": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6020
      ],
      "op": "POP",
      "path": "16"
    },
    "8337": {
      "branch": 181,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5999,
        6024
      ],
      "op": "GT",
      "path": "16"
    },
    "8338": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20DD"
    },
    "8341": {
      "branch": 181,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8342": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8344": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8351": {
      "op": "SHL"
    },
    "8352": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8353": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8356": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8358": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8359": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "ADD",
      "path": "16"
    },
    "8360": {
      "op": "MSTORE"
    },
    "8361": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8365": {
      "op": "DUP3"
    },
    "8366": {
      "op": "ADD"
    },
    "8367": {
      "op": "MSTORE"
    },
    "8368": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8403": {
      "op": "DUP3"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "MSTORE"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8408": {
      "op": "ADD"
    },
    "8409": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "8412": {
      "op": "JUMP"
    },
    "8413": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5991,
        6053
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8414": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6072,
        6086
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 88,
      "value": "0x12"
    },
    "8416": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6072,
        6086
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8417": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6072,
        6086
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8419": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6072,
        6086
      ],
      "op": "AND",
      "path": "16"
    },
    "8420": {
      "branch": 182,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6071,
        6086
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8421": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2130"
    },
    "8424": {
      "branch": 182,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8425": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8427": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8434": {
      "op": "SHL"
    },
    "8435": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8436": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8442": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "ADD",
      "path": "16"
    },
    "8443": {
      "op": "MSTORE"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8448": {
      "op": "DUP3"
    },
    "8449": {
      "op": "ADD"
    },
    "8450": {
      "op": "MSTORE"
    },
    "8451": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8486": {
      "op": "DUP3"
    },
    "8487": {
      "op": "ADD"
    },
    "8488": {
      "op": "MSTORE"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "8495": {
      "op": "JUMP"
    },
    "8496": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6063,
        6117
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8497": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6141
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 89,
      "value": "0x12"
    },
    "8499": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8500": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8503": {
      "op": "NOT"
    },
    "8504": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "AND",
      "path": "16"
    },
    "8505": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6144,
        6148
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8507": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "OR",
      "path": "16"
    },
    "8508": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8509": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6127,
        6148
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8510": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5937,
        6155
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8512": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8514": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8521": {
      "op": "SHL"
    },
    "8522": {
      "op": "SUB"
    },
    "8523": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8526": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8527": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8529": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8530": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8531": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8532": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216F"
    },
    "8535": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8545": {
      "op": "SHL"
    },
    "8546": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8548": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8550": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8551": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "8554": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8555": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "8558": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8566": {
      "op": "SHL"
    },
    "8567": {
      "op": "SUB"
    },
    "8568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 90
    },
    "8569": {
      "branch": 204,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D4"
    },
    "8573": {
      "branch": 204,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8583": {
      "op": "SHL"
    },
    "8584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8592": {
      "op": "MSTORE"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8597": {
      "op": "DUP3"
    },
    "8598": {
      "op": "ADD"
    },
    "8599": {
      "op": "MSTORE"
    },
    "8600": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8635": {
      "op": "DUP3"
    },
    "8636": {
      "op": "ADD"
    },
    "8637": {
      "op": "MSTORE"
    },
    "8638": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8647": {
      "op": "SHL"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8650": {
      "op": "DUP3"
    },
    "8651": {
      "op": "ADD"
    },
    "8652": {
      "op": "MSTORE"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8655": {
      "op": "ADD"
    },
    "8656": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "8659": {
      "op": "JUMP"
    },
    "8660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 91,
      "value": "0x21DD"
    },
    "8664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2637"
    },
    "8668": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "8671": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8672": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8682": {
      "op": "SHL"
    },
    "8683": {
      "op": "SUB"
    },
    "8684": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8687": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8688": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8689": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8690": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8691": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8692": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8693": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2210"
    },
    "8696": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8706": {
      "op": "SHL"
    },
    "8707": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8712": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB49"
    },
    "8715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8716": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344E"
    },
    "8719": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8720": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8721": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6954
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 92,
      "value": "0x12"
    },
    "8723": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8724": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8731": {
      "op": "SHL"
    },
    "8732": {
      "op": "SUB"
    },
    "8733": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8734": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8735": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "AND",
      "path": "16"
    },
    "8736": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "8740": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "MUL",
      "path": "16"
    },
    "8741": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8749": {
      "op": "SHL"
    },
    "8750": {
      "op": "SUB"
    },
    "8751": {
      "op": "NOT"
    },
    "8752": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8753": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8754": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "AND",
      "path": "16"
    },
    "8755": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8756": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8757": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8758": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "OR",
      "path": "16"
    },
    "8759": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8760": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6938,
        6974
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8761": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6853,
        6981
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8762": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8763": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8764": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8765": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8767": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8768": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8769": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8770": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8771": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8772": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8780": {
      "op": "SHL"
    },
    "8781": {
      "op": "SUB"
    },
    "8782": {
      "op": "NOT"
    },
    "8783": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 93
    },
    "8784": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8785": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8792": {
      "op": "SHL"
    },
    "8793": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8794": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8795": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3C"
    },
    "8798": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8799": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8800": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3C"
    },
    "8803": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8804": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28E9"
    },
    "8807": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8808": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8809": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 94,
      "value": "0x0"
    },
    "8811": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8812": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8813": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8814": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8816": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8818": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8819": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8821": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8822": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8823": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8824": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8831": {
      "op": "SHL"
    },
    "8832": {
      "op": "SUB"
    },
    "8833": {
      "op": "NOT"
    },
    "8834": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8841": {
      "op": "SHL"
    },
    "8842": {
      "op": "SUB"
    },
    "8843": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8844": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8845": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8846": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8847": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "3"
    },
    "8848": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8849": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8850": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8851": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8852": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8853": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 95,
      "value": "0x229D"
    },
    "8856": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8857": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1657"
    },
    "8860": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8861": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8868": {
      "op": "SHL"
    },
    "8869": {
      "op": "SUB"
    },
    "8870": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "3"
    },
    "8871": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8904": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8906": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8907": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8909": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8910": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8911": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8912": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "3"
    },
    "8913": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8914": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "3"
    },
    "8915": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8916": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "8917": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8918": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8919": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8921": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8922": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8923": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8924": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8926": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8928": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8929": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8931": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8932": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8933": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8940": {
      "op": "SHL"
    },
    "8941": {
      "op": "SUB"
    },
    "8942": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "8943": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 96,
      "value": "0x234F"
    },
    "8946": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8947": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8949": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8956": {
      "op": "SHL"
    },
    "8957": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8958": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8961": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8963": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8964": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "3"
    },
    "8965": {
      "op": "MSTORE"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8970": {
      "op": "DUP3"
    },
    "8971": {
      "op": "ADD"
    },
    "8972": {
      "op": "MSTORE"
    },
    "8973": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9008": {
      "op": "DUP3"
    },
    "9009": {
      "op": "ADD"
    },
    "9010": {
      "op": "MSTORE"
    },
    "9011": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9026": {
      "op": "SHL"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9029": {
      "op": "DUP3"
    },
    "9030": {
      "op": "ADD"
    },
    "9031": {
      "op": "MSTORE"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9034": {
      "op": "ADD"
    },
    "9035": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "9038": {
      "op": "JUMP"
    },
    "9039": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9040": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9042": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "9045": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9046": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1657"
    },
    "9049": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9050": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9051": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9052": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "3"
    },
    "9053": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 97
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9060": {
      "op": "SHL"
    },
    "9061": {
      "op": "SUB"
    },
    "9062": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9063": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9070": {
      "op": "SHL"
    },
    "9071": {
      "op": "SUB"
    },
    "9072": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9073": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "3"
    },
    "9074": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9075": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2395"
    },
    "9078": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9079": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "3"
    },
    "9080": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9087": {
      "op": "SHL"
    },
    "9088": {
      "op": "SUB"
    },
    "9089": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x238A"
    },
    "9093": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD4"
    },
    "9097": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9105": {
      "op": "SHL"
    },
    "9106": {
      "op": "SUB"
    },
    "9107": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9108": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "3"
    },
    "9109": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9110": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9111": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C5"
    },
    "9114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9115": {
      "op": "POP"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9122": {
      "op": "SHL"
    },
    "9123": {
      "op": "SUB"
    },
    "9124": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9125": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "9127": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9132": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9137": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9138": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9141": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9145": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9146": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9148": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9150": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9151": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9152": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9153": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9157": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9158": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7683,
        7779
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9160": {
      "op": "POP"
    },
    "9161": {
      "op": "POP"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9165": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9166": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 98
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9173": {
      "op": "SHL"
    },
    "9174": {
      "op": "SUB"
    },
    "9175": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9176": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E0"
    },
    "9179": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9180": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1657"
    },
    "9183": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9184": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9191": {
      "op": "SHL"
    },
    "9192": {
      "op": "SUB"
    },
    "9193": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9194": {
      "branch": 190,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "3"
    },
    "9195": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2444"
    },
    "9198": {
      "branch": 190,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9199": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9201": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9208": {
      "op": "SHL"
    },
    "9209": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9210": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9213": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9215": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9216": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "3"
    },
    "9217": {
      "op": "MSTORE"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9222": {
      "op": "DUP3"
    },
    "9223": {
      "op": "ADD"
    },
    "9224": {
      "op": "MSTORE"
    },
    "9225": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9260": {
      "op": "DUP3"
    },
    "9261": {
      "op": "ADD"
    },
    "9262": {
      "op": "MSTORE"
    },
    "9263": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9271": {
      "op": "SHL"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9274": {
      "op": "DUP3"
    },
    "9275": {
      "op": "ADD"
    },
    "9276": {
      "op": "MSTORE"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9279": {
      "op": "ADD"
    },
    "9280": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "9283": {
      "op": "JUMP"
    },
    "9284": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9291": {
      "op": "SHL"
    },
    "9292": {
      "op": "SUB"
    },
    "9293": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 99
    },
    "9294": {
      "branch": 191,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "3"
    },
    "9295": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24A6"
    },
    "9298": {
      "branch": 191,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9299": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9301": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9308": {
      "op": "SHL"
    },
    "9309": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9310": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9313": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9315": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9316": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "3"
    },
    "9317": {
      "op": "MSTORE"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9320": {
      "op": "DUP1"
    },
    "9321": {
      "op": "DUP3"
    },
    "9322": {
      "op": "ADD"
    },
    "9323": {
      "op": "MSTORE"
    },
    "9324": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9359": {
      "op": "DUP3"
    },
    "9360": {
      "op": "ADD"
    },
    "9361": {
      "op": "MSTORE"
    },
    "9362": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9369": {
      "op": "SHL"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9372": {
      "op": "DUP3"
    },
    "9373": {
      "op": "ADD"
    },
    "9374": {
      "op": "MSTORE"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9377": {
      "op": "ADD"
    },
    "9378": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "9381": {
      "op": "JUMP"
    },
    "9382": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9383": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 100,
      "value": "0x24B1"
    },
    "9386": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9387": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9388": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9389": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2939"
    },
    "9392": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9393": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9394": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 101,
      "value": "0x24BC"
    },
    "9397": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9399": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9400": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2268"
    },
    "9403": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9404": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9411": {
      "op": "SHL"
    },
    "9412": {
      "op": "SUB"
    },
    "9413": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 102
    },
    "9414": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "3"
    },
    "9415": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9417": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9418": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9419": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9420": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9422": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9424": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9425": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9427": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9428": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9429": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9430": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9431": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9433": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9434": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9435": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E5"
    },
    "9438": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9439": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9440": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9441": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36B3"
    },
    "9444": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9445": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9446": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9447": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9448": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9449": {
      "op": "POP"
    },
    "9450": {
      "op": "POP"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9457": {
      "op": "SHL"
    },
    "9458": {
      "op": "SUB"
    },
    "9459": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 103
    },
    "9460": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "3"
    },
    "9461": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9463": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9464": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9465": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9466": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9468": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9470": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9471": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9473": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9474": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9475": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9476": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9477": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9479": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9480": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9481": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2513"
    },
    "9484": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9485": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9486": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9487": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3557"
    },
    "9490": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9491": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9492": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9493": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9494": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9495": {
      "op": "POP"
    },
    "9496": {
      "op": "POP"
    },
    "9497": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 104,
      "value": "0x0"
    },
    "9499": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9500": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9501": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9502": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9504": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9506": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9507": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9509": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9510": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9511": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9512": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9513": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9520": {
      "op": "SHL"
    },
    "9521": {
      "op": "SUB"
    },
    "9522": {
      "op": "NOT"
    },
    "9523": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9530": {
      "op": "SHL"
    },
    "9531": {
      "op": "SUB"
    },
    "9532": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9533": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9534": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9535": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9536": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9537": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "3"
    },
    "9538": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9539": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9540": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9541": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 105
    },
    "9542": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9543": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9544": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9545": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9546": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9547": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "3"
    },
    "9548": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9549": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9582": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9583": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9584": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9585": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9586": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9587": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9588": {
      "fn": "ERC721._safeMint",
      "offset": [
        8116,
        8224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9589": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 106,
      "value": "0xD80"
    },
    "9592": {
      "fn": "ERC721._safeMint",
      "offset": [
        8201,
        8203
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9593": {
      "fn": "ERC721._safeMint",
      "offset": [
        8205,
        8212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9594": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9596": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9597": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9598": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9600": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "ADD",
      "path": "3"
    },
    "9601": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9603": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9604": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9605": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9607": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9608": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9609": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "POP",
      "path": "3"
    },
    "9610": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2967"
    },
    "9613": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8191,
        8217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9614": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9615": {
      "fn": "MerkleProof.verify",
      "offset": [
        983,
        987
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9617": {
      "fn": "MerkleProof.verify",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 107
    },
    "9618": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x259B"
    },
    "9621": {
      "fn": "MerkleProof.verify",
      "offset": [
        1019,
        1024
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9622": {
      "fn": "MerkleProof.verify",
      "offset": [
        1026,
        1030
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9623": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x299A"
    },
    "9626": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9627": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9628": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "EQ",
      "path": "13"
    },
    "9629": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9630": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9631": {
      "op": "POP"
    },
    "9632": {
      "op": "POP"
    },
    "9633": {
      "op": "POP"
    },
    "9634": {
      "op": "POP"
    },
    "9635": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        862,
        1046
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9636": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9637": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9639": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9640": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9642": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9643": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25ED"
    },
    "9646": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9647": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9649": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9656": {
      "op": "SHL"
    },
    "9657": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9658": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9661": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9663": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9664": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9665": {
      "op": "MSTORE"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9670": {
      "op": "DUP3"
    },
    "9671": {
      "op": "ADD"
    },
    "9672": {
      "op": "MSTORE"
    },
    "9673": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9696": {
      "op": "SHL"
    },
    "9697": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9699": {
      "op": "DUP3"
    },
    "9700": {
      "op": "ADD"
    },
    "9701": {
      "op": "MSTORE"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9704": {
      "op": "ADD"
    },
    "9705": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "9708": {
      "op": "JUMP"
    },
    "9709": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9710": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 108,
      "value": "0xA"
    },
    "9712": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9713": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9716": {
      "op": "NOT"
    },
    "9717": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9718": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9719": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9720": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 109,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9753": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9754": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9755": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9757": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9764": {
      "op": "SHL"
    },
    "9765": {
      "op": "SUB"
    },
    "9766": {
      "op": "SWAP1"
    },
    "9767": {
      "op": "SWAP2"
    },
    "9768": {
      "op": "AND"
    },
    "9769": {
      "op": "DUP2"
    },
    "9770": {
      "op": "MSTORE"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9773": {
      "op": "ADD"
    },
    "9774": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9776": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9777": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9778": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9779": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9780": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9781": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9782": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9783": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9784": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9786": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9794": {
      "op": "SHL"
    },
    "9795": {
      "op": "SUB"
    },
    "9796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 110
    },
    "9797": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9799": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9802": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9803": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9804": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9805": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9812": {
      "op": "SHL"
    },
    "9813": {
      "op": "SUB"
    },
    "9814": {
      "op": "NOT"
    },
    "9815": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9816": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9817": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9818": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9819": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9820": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9821": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 111,
      "value": "0x40"
    },
    "9823": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9824": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9825": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9826": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9827": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "9828": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9829": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9830": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9831": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9865": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9866": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9869": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9871": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9872": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9873": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9874": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9876": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9877": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9879": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9880": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9881": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B4"
    },
    "9884": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9885": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9887": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9894": {
      "op": "SHL"
    },
    "9895": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9896": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9897": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9899": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "9900": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "9903": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9904": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D4"
    },
    "9907": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9908": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9909": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 112,
      "value": "0xA"
    },
    "9911": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9912": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9913": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9915": {
      "op": "NOT"
    },
    "9916": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "9917": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9919": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "9920": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9921": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9922": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 113,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "9955": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x261A"
    },
    "9958": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9959": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9960": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9961": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9962": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 114
    },
    "9963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9969": {
      "op": "SHL"
    },
    "9970": {
      "op": "SUB"
    },
    "9971": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "9972": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9979": {
      "op": "SHL"
    },
    "9980": {
      "op": "SUB"
    },
    "9981": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "9982": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "3"
    },
    "9983": {
      "branch": 192,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "9984": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274B"
    },
    "9987": {
      "branch": 192,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9988": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9990": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9997": {
      "op": "SHL"
    },
    "9998": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9999": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10002": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10004": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10005": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "3"
    },
    "10006": {
      "op": "MSTORE"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10049": {
      "op": "DUP3"
    },
    "10050": {
      "op": "ADD"
    },
    "10051": {
      "op": "MSTORE"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10054": {
      "op": "ADD"
    },
    "10055": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "10058": {
      "op": "JUMP"
    },
    "10059": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10066": {
      "op": "SHL"
    },
    "10067": {
      "op": "SUB"
    },
    "10068": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 115
    },
    "10069": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10070": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "3"
    },
    "10071": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10073": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10074": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10075": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10076": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10078": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10080": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10081": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10082": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10083": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10085": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10086": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10087": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10088": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10089": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10090": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "3"
    },
    "10091": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10092": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10093": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10094": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10095": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10096": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10097": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10098": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10099": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10100": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10101": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10102": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10105": {
      "op": "NOT"
    },
    "10106": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "3"
    },
    "10107": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10108": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10109": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10110": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10111": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10112": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "3"
    },
    "10113": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10114": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10115": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10116": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 116
    },
    "10117": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10118": {
      "op": "SWAP2"
    },
    "10119": {
      "op": "DUP3"
    },
    "10120": {
      "op": "MSTORE"
    },
    "10121": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10154": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10155": {
      "op": "ADD"
    },
    "10156": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10158": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10159": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10160": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10161": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "3"
    },
    "10162": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10163": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10164": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10165": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10166": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10167": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10168": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10169": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 117,
      "value": "0x27C3"
    },
    "10172": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10173": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10174": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10175": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23CD"
    },
    "10178": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10179": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10180": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 118,
      "value": "0x27CF"
    },
    "10183": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10184": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10185": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10186": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10187": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A06"
    },
    "10190": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10191": {
      "branch": 193,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10192": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D7C"
    },
    "10195": {
      "branch": 193,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10196": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10198": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10199": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10205": {
      "op": "SHL"
    },
    "10206": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10207": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10208": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10210": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "3"
    },
    "10211": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "10214": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10215": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36CA"
    },
    "10218": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10219": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10220": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10222": {
      "branch": 206,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10223": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x280F"
    },
    "10226": {
      "branch": 206,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10227": {
      "op": "POP"
    },
    "10228": {
      "op": "POP"
    },
    "10229": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 119,
      "value": "0x40"
    },
    "10231": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10232": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10233": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10234": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10235": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10236": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10237": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10238": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10239": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10241": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10242": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10247": {
      "op": "SHL"
    },
    "10248": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10250": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10251": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10252": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10253": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10254": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10255": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10256": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10257": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10259": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10260": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10261": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10262": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2839"
    },
    "10265": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10266": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 120
    },
    "10267": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2823"
    },
    "10270": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10271": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35B5"
    },
    "10274": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10275": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10276": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10277": {
      "op": "POP"
    },
    "10278": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x2832"
    },
    "10281": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10285": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10286": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3732"
    },
    "10289": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10290": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10291": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10292": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10293": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2813"
    },
    "10296": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10297": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10298": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10300": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10301": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10310": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10311": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10312": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10313": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2854"
    },
    "10316": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10317": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2854"
    },
    "10320": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3030"
    },
    "10323": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10324": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10325": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10327": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10328": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10329": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10330": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10331": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10332": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10333": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10335": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10336": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10338": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10339": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10340": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10342": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10343": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10344": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10345": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10347": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10348": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10349": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10350": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x287E"
    },
    "10353": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10354": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10356": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10357": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10358": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10359": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10360": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10361": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10362": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10363": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10364": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10365": {
      "op": "POP"
    },
    "10366": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10367": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10368": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10369": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10370": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10371": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10372": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10373": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x23C5"
    },
    "10376": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10377": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x2893"
    },
    "10380": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10382": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10383": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36B3"
    },
    "10386": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10387": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10388": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10389": {
      "op": "POP"
    },
    "10390": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 123,
      "value": "0x28A0"
    },
    "10393": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10395": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10396": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3746"
    },
    "10399": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10400": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10401": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28AB"
    },
    "10404": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10405": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10407": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3557"
    },
    "10410": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10411": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10412": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10414": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10415": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10416": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10417": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10418": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10419": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10420": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10421": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C0"
    },
    "10424": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10425": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C0"
    },
    "10428": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D0"
    },
    "10431": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10432": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10433": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10435": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10436": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10437": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10444": {
      "op": "SHL"
    },
    "10445": {
      "op": "SUB"
    },
    "10446": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10447": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10448": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10449": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10450": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10452": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10453": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10454": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 124,
      "value": "0x28E2"
    },
    "10459": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10461": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10462": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3732"
    },
    "10465": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10466": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10467": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10468": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10469": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2882"
    },
    "10472": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10473": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10474": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10480": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10482": {
      "op": "SHL"
    },
    "10483": {
      "op": "SUB"
    },
    "10484": {
      "op": "NOT"
    },
    "10485": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 125
    },
    "10486": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "10487": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10494": {
      "op": "SHL"
    },
    "10495": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "10496": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10497": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x291A"
    },
    "10500": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10501": {
      "op": "POP"
    },
    "10502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10508": {
      "op": "SHL"
    },
    "10509": {
      "op": "SUB"
    },
    "10510": {
      "op": "NOT"
    },
    "10511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "10513": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10520": {
      "op": "SHL"
    },
    "10521": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "10522": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3C"
    },
    "10527": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10528": {
      "op": "POP"
    },
    "10529": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10536": {
      "op": "SHL"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10543": {
      "op": "SHL"
    },
    "10544": {
      "op": "SUB"
    },
    "10545": {
      "op": "NOT"
    },
    "10546": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 126
    },
    "10547": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10548": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA3C"
    },
    "10552": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10553": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9041,
        9234
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10554": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10556": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10557": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10559": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10560": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10561": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295C"
    },
    "10564": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10565": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10567": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10574": {
      "op": "SHL"
    },
    "10575": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10576": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10577": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10579": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10580": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "10583": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10584": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D4"
    },
    "10587": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10588": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10589": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9182,
        9227
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 127,
      "value": "0xC7F"
    },
    "10592": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9209,
        9213
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10593": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9215,
        9217
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10594": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9219,
        9226
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10595": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9182,
        9208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B04"
    },
    "10598": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        9182,
        9227
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10599": {
      "fn": "ERC721._safeMint",
      "offset": [
        8445,
        8756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10600": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 128,
      "value": "0x2971"
    },
    "10603": {
      "fn": "ERC721._safeMint",
      "offset": [
        8576,
        8578
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10604": {
      "fn": "ERC721._safeMint",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10605": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BBC"
    },
    "10608": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10609": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10610": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 129,
      "value": "0x297E"
    },
    "10613": {
      "fn": "ERC721._safeMint",
      "offset": [
        8650,
        8651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10615": {
      "fn": "ERC721._safeMint",
      "offset": [
        8654,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10616": {
      "fn": "ERC721._safeMint",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10617": {
      "fn": "ERC721._safeMint",
      "offset": [
        8667,
        8672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10618": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A06"
    },
    "10621": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10622": {
      "branch": 194,
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10623": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7F"
    },
    "10626": {
      "branch": 194,
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10627": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10629": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10636": {
      "op": "SHL"
    },
    "10637": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10638": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10639": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10641": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "ADD",
      "path": "3"
    },
    "10642": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "10645": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10646": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36CA"
    },
    "10649": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10650": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1398,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10651": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10653": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1523,
        1527
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10654": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10655": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10656": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1566
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10657": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10658": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10659": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1573
      ],
      "op": "LT",
      "path": "13"
    },
    "10660": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10661": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14AB"
    },
    "10664": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10665": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1614
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10667": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1622
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10668": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1623,
        1624
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10669": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10670": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10671": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10672": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "LT",
      "path": "13"
    },
    "10673": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29BC"
    },
    "10676": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10677": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29BC"
    },
    "10680": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35D0"
    },
    "10683": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10684": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10685": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10687": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MUL",
      "path": "13"
    },
    "10688": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10690": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10691": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10692": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10693": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10694": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "POP",
      "path": "13"
    },
    "10695": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1659,
        1671
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10696": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10697": {
      "branch": 203,
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1671
      ],
      "op": "GT",
      "path": "13"
    },
    "10698": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29E2"
    },
    "10701": {
      "branch": 203,
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10702": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10704": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10705": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10706": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10707": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10709": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10710": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10711": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10712": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10714": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10715": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10716": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 130
    },
    "10717": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "POP",
      "path": "13"
    },
    "10718": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29F3"
    },
    "10721": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10722": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10723": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10725": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10726": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10727": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10728": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10730": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10731": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10732": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10733": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10735": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10736": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10737": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 131
    },
    "10738": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "POP",
      "path": "13"
    },
    "10739": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10740": {
      "op": "POP"
    },
    "10741": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 132
    },
    "10742": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x29FE"
    },
    "10745": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10746": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35B5"
    },
    "10749": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10750": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10751": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10752": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10753": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10754": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x299F"
    },
    "10757": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10758": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10767": {
      "op": "SHL"
    },
    "10768": {
      "op": "SUB"
    },
    "10769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "10771": {
      "op": "EXTCODESIZE"
    },
    "10772": {
      "op": "ISZERO"
    },
    "10773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF9"
    },
    "10776": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10780": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10785": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10787": {
      "op": "SHL"
    },
    "10788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10796": {
      "op": "SHL"
    },
    "10797": {
      "op": "SUB"
    },
    "10798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "3"
    },
    "10800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10801": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "10806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A4A"
    },
    "10810": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10811": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10812": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "10814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10819": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x375A"
    },
    "10825": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "3"
    },
    "10835": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "3"
    },
    "10840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "3"
    },
    "10841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A85"
    },
    "10850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10851": {
      "op": "POP"
    },
    "10852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10864": {
      "op": "NOT"
    },
    "10865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "3"
    },
    "10866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A82"
    },
    "10874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3797"
    },
    "10881": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ADF"
    },
    "10889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AB3"
    },
    "10897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "10903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "3"
    },
    "10906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "10908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "3"
    },
    "10911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "10926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "10927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AB8"
    },
    "10930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "10934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "10936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10937": {
      "op": "POP"
    },
    "10938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AD7"
    },
    "10943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 133,
      "value": "0x40"
    },
    "10946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10953": {
      "op": "SHL"
    },
    "10954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "10959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "10962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36CA"
    },
    "10966": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "3"
    },
    "10974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "3"
    },
    "10975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10982": {
      "op": "SHL"
    },
    "10983": {
      "op": "SUB"
    },
    "10984": {
      "op": "NOT"
    },
    "10985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "3",
      "statement": 134
    },
    "10986": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10993": {
      "op": "SHL"
    },
    "10994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "3"
    },
    "10995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10996": {
      "op": "POP"
    },
    "10997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C5"
    },
    "11000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11002": {
      "op": "POP"
    },
    "11003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 135,
      "value": "0x1"
    },
    "11005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "11007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11011": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11012": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11019": {
      "op": "SHL"
    },
    "11020": {
      "op": "SUB"
    },
    "11021": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11022": {
      "branch": 198,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "11023": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5F"
    },
    "11026": {
      "branch": 198,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11027": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 136,
      "value": "0x2B5A"
    },
    "11030": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11031": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 137,
      "value": "0x8"
    },
    "11033": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11034": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11035": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11037": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11038": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11039": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11040": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11042": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11044": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11045": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11047": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11048": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11049": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11050": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11051": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11052": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 138,
      "value": "0x1"
    },
    "11054": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11055": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11056": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11057": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11058": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11059": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11060": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11061": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11062": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11095": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11096": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11097": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11098": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11099": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B82"
    },
    "11102": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11103": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11104": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11111": {
      "op": "SHL"
    },
    "11112": {
      "op": "SUB"
    },
    "11113": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11114": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11121": {
      "op": "SHL"
    },
    "11122": {
      "op": "SUB"
    },
    "11123": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11124": {
      "branch": 199,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11125": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B82"
    },
    "11128": {
      "branch": 199,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11129": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 139,
      "value": "0x2B82"
    },
    "11132": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11133": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11134": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0A"
    },
    "11137": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11138": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11145": {
      "op": "SHL"
    },
    "11146": {
      "op": "SUB"
    },
    "11147": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11148": {
      "branch": 200,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11149": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B99"
    },
    "11152": {
      "branch": 200,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11153": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 140,
      "value": "0xC7F"
    },
    "11156": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11157": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DA7"
    },
    "11160": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11161": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11162": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11169": {
      "op": "SHL"
    },
    "11170": {
      "op": "SUB"
    },
    "11171": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11172": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11179": {
      "op": "SHL"
    },
    "11180": {
      "op": "SUB"
    },
    "11181": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11182": {
      "branch": 201,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11183": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7F"
    },
    "11186": {
      "branch": 201,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11187": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 141,
      "value": "0xC7F"
    },
    "11190": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11191": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11192": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E56"
    },
    "11195": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11196": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11203": {
      "op": "SHL"
    },
    "11204": {
      "op": "SUB"
    },
    "11205": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 142
    },
    "11206": {
      "branch": 195,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "3"
    },
    "11207": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C12"
    },
    "11210": {
      "branch": 195,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11211": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11213": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11220": {
      "op": "SHL"
    },
    "11221": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11222": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11225": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11227": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11228": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "3"
    },
    "11229": {
      "op": "DUP2"
    },
    "11230": {
      "op": "SWAP1"
    },
    "11231": {
      "op": "MSTORE"
    },
    "11232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11234": {
      "op": "DUP3"
    },
    "11235": {
      "op": "ADD"
    },
    "11236": {
      "op": "MSTORE"
    },
    "11237": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11270": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11272": {
      "op": "DUP3"
    },
    "11273": {
      "op": "ADD"
    },
    "11274": {
      "op": "MSTORE"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11277": {
      "op": "ADD"
    },
    "11278": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "11281": {
      "op": "JUMP"
    },
    "11282": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11283": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11285": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11286": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11287": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11288": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11290": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11292": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11293": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11295": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11296": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11297": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11304": {
      "op": "SHL"
    },
    "11305": {
      "op": "SUB"
    },
    "11306": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "11307": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11308": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 143,
      "value": "0x2C77"
    },
    "11311": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11312": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11314": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11321": {
      "op": "SHL"
    },
    "11322": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11323": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11326": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11328": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11329": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "3"
    },
    "11330": {
      "op": "MSTORE"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11335": {
      "op": "DUP3"
    },
    "11336": {
      "op": "ADD"
    },
    "11337": {
      "op": "MSTORE"
    },
    "11338": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11373": {
      "op": "DUP3"
    },
    "11374": {
      "op": "ADD"
    },
    "11375": {
      "op": "MSTORE"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11378": {
      "op": "ADD"
    },
    "11379": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "11382": {
      "op": "JUMP"
    },
    "11383": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11384": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 144,
      "value": "0x2C83"
    },
    "11387": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11389": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11390": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11391": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2939"
    },
    "11394": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11395": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11402": {
      "op": "SHL"
    },
    "11403": {
      "op": "SUB"
    },
    "11404": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 145
    },
    "11405": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "3"
    },
    "11406": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11408": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11409": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11410": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11411": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11413": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11415": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11416": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11418": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11419": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11420": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11421": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11422": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11424": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11425": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11426": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CAC"
    },
    "11429": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11430": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11431": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11432": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3557"
    },
    "11435": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11436": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11437": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11438": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11439": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11440": {
      "op": "POP"
    },
    "11441": {
      "op": "POP"
    },
    "11442": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 146,
      "value": "0x0"
    },
    "11444": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11445": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11446": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11447": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11449": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11451": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11452": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11454": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11455": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11456": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11457": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11458": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11465": {
      "op": "SHL"
    },
    "11466": {
      "op": "SUB"
    },
    "11467": {
      "op": "NOT"
    },
    "11468": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11475": {
      "op": "SHL"
    },
    "11476": {
      "op": "SUB"
    },
    "11477": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11478": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11479": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11480": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11481": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "3"
    },
    "11482": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11483": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11484": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11485": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 147
    },
    "11486": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11487": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11488": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11489": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11490": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11523": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11524": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11525": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11526": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11527": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6547,
        6579
      ],
      "op": "POP",
      "path": "16"
    },
    "11528": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6295,
        6586
      ],
      "op": "POP",
      "path": "16"
    },
    "11529": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        6295,
        6586
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11530": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11531": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11533": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11535": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D17"
    },
    "11538": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11539": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176F"
    },
    "11542": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11543": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11544": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D21"
    },
    "11547": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11548": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11549": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36B3"
    },
    "11552": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11553": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11554": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11556": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11557": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11558": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11559": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11561": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11563": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11564": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11566": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11567": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11568": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11569": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11570": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11571": {
      "op": "POP"
    },
    "11572": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11573": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11574": {
      "branch": 202,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11575": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D74"
    },
    "11578": {
      "branch": 202,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11585": {
      "op": "SHL"
    },
    "11586": {
      "op": "SUB"
    },
    "11587": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11588": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11589": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11591": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11592": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11593": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11594": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11596": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11598": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11599": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11600": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11601": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11603": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11604": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11605": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11606": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11607": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11608": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11609": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11610": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11611": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11612": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11613": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11614": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11615": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 148
    },
    "11616": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11617": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11618": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11619": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11620": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11621": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11622": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11623": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11624": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 149
    },
    "11625": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11626": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11628": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11629": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11630": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11631": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11632": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11633": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11634": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11635": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11636": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11637": {
      "op": "POP"
    },
    "11638": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 150,
      "value": "0x0"
    },
    "11640": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11641": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11642": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11643": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11645": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11647": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11649": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11652": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11654": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11657": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11664": {
      "op": "SHL"
    },
    "11665": {
      "op": "SUB"
    },
    "11666": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 151
    },
    "11667": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11668": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11669": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11670": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11671": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11673": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11674": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11675": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11676": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11677": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11678": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11679": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11680": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11682": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11683": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11684": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11685": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11686": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11687": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11688": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11690": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11691": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11693": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11694": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DB9"
    },
    "11697": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11698": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11700": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11701": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36B3"
    },
    "11704": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11705": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11706": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11708": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11709": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11710": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11711": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11713": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11715": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11716": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11718": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11719": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11720": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11721": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11723": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11724": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11725": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11726": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11727": {
      "op": "POP"
    },
    "11728": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11729": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11730": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11731": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11732": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11733": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11734": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE1"
    },
    "11737": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11738": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE1"
    },
    "11741": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35D0"
    },
    "11744": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11745": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11746": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11747": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11749": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11750": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11752": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11754": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11755": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11756": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11757": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11758": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11759": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 152
    },
    "11760": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11762": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11763": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11764": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11765": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11766": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "11767": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E02"
    },
    "11770": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11771": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E02"
    },
    "11774": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35D0"
    },
    "11777": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11778": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11779": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11781": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11782": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11783": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11784": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11786": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11787": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11788": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11789": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11790": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11791": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "11792": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11793": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11794": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11795": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11796": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 153
    },
    "11797": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11798": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11799": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11801": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11802": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11803": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11804": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11806": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11809": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11812": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 154
    },
    "11813": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11814": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11816": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11818": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 155,
      "value": "0x8"
    },
    "11820": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11821": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11823": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E3A"
    },
    "11826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E3A"
    },
    "11830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37B4"
    },
    "11833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11834": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11835": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11838": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "11839": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11840": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11844": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11845": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11850": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "11851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11853": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11859": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11860": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11862": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11863": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11865": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E61"
    },
    "11868": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11869": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176F"
    },
    "11872": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11873": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11880": {
      "op": "SHL"
    },
    "11881": {
      "op": "SUB"
    },
    "11882": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 156
    },
    "11883": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11884": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "11885": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11887": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11888": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11889": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11890": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11892": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11894": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11895": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11896": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11897": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11899": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11900": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11901": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11902": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "11903": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11904": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11905": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11906": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11907": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11908": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11909": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11910": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11911": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11912": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11913": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 157
    },
    "11914": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11915": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11916": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11918": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11919": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11920": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11921": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11922": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11923": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11924": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11925": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11926": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11927": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11928": {
      "op": "POP"
    },
    "11929": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11930": {
      "op": "JUMPDEST"
    },
    "11931": {
      "op": "DUP3"
    },
    "11932": {
      "op": "DUP1"
    },
    "11933": {
      "op": "SLOAD"
    },
    "11934": {
      "op": "PUSH2",
      "value": "0x2EA6"
    },
    "11937": {
      "op": "SWAP1"
    },
    "11938": {
      "op": "PUSH2",
      "value": "0x3413"
    },
    "11941": {
      "jump": "i",
      "op": "JUMP"
    },
    "11942": {
      "op": "JUMPDEST"
    },
    "11943": {
      "op": "SWAP1"
    },
    "11944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11946": {
      "op": "MSTORE"
    },
    "11947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11951": {
      "op": "KECCAK256"
    },
    "11952": {
      "op": "SWAP1"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11955": {
      "op": "ADD"
    },
    "11956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11958": {
      "op": "SWAP1"
    },
    "11959": {
      "op": "DIV"
    },
    "11960": {
      "op": "DUP2"
    },
    "11961": {
      "op": "ADD"
    },
    "11962": {
      "op": "SWAP3"
    },
    "11963": {
      "op": "DUP3"
    },
    "11964": {
      "op": "PUSH2",
      "value": "0x2EC8"
    },
    "11967": {
      "op": "JUMPI"
    },
    "11968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11970": {
      "op": "DUP6"
    },
    "11971": {
      "op": "SSTORE"
    },
    "11972": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "11975": {
      "op": "JUMP"
    },
    "11976": {
      "op": "JUMPDEST"
    },
    "11977": {
      "op": "DUP3"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11980": {
      "op": "LT"
    },
    "11981": {
      "op": "PUSH2",
      "value": "0x2EE1"
    },
    "11984": {
      "op": "JUMPI"
    },
    "11985": {
      "op": "DUP1"
    },
    "11986": {
      "op": "MLOAD"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11989": {
      "op": "NOT"
    },
    "11990": {
      "op": "AND"
    },
    "11991": {
      "op": "DUP4"
    },
    "11992": {
      "op": "DUP1"
    },
    "11993": {
      "op": "ADD"
    },
    "11994": {
      "op": "OR"
    },
    "11995": {
      "op": "DUP6"
    },
    "11996": {
      "op": "SSTORE"
    },
    "11997": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12000": {
      "op": "JUMP"
    },
    "12001": {
      "op": "JUMPDEST"
    },
    "12002": {
      "op": "DUP3"
    },
    "12003": {
      "op": "DUP1"
    },
    "12004": {
      "op": "ADD"
    },
    "12005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12007": {
      "op": "ADD"
    },
    "12008": {
      "op": "DUP6"
    },
    "12009": {
      "op": "SSTORE"
    },
    "12010": {
      "op": "DUP3"
    },
    "12011": {
      "op": "ISZERO"
    },
    "12012": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12015": {
      "op": "JUMPI"
    },
    "12016": {
      "op": "SWAP2"
    },
    "12017": {
      "op": "DUP3"
    },
    "12018": {
      "op": "ADD"
    },
    "12019": {
      "op": "JUMPDEST"
    },
    "12020": {
      "op": "DUP3"
    },
    "12021": {
      "op": "DUP2"
    },
    "12022": {
      "op": "GT"
    },
    "12023": {
      "op": "ISZERO"
    },
    "12024": {
      "op": "PUSH2",
      "value": "0x2F0E"
    },
    "12027": {
      "op": "JUMPI"
    },
    "12028": {
      "op": "DUP3"
    },
    "12029": {
      "op": "MLOAD"
    },
    "12030": {
      "op": "DUP3"
    },
    "12031": {
      "op": "SSTORE"
    },
    "12032": {
      "op": "SWAP2"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12035": {
      "op": "ADD"
    },
    "12036": {
      "op": "SWAP2"
    },
    "12037": {
      "op": "SWAP1"
    },
    "12038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12040": {
      "op": "ADD"
    },
    "12041": {
      "op": "SWAP1"
    },
    "12042": {
      "op": "PUSH2",
      "value": "0x2EF3"
    },
    "12045": {
      "op": "JUMP"
    },
    "12046": {
      "op": "JUMPDEST"
    },
    "12047": {
      "op": "POP"
    },
    "12048": {
      "op": "PUSH2",
      "value": "0x2F1A"
    },
    "12051": {
      "op": "SWAP3"
    },
    "12052": {
      "op": "SWAP2"
    },
    "12053": {
      "op": "POP"
    },
    "12054": {
      "op": "PUSH2",
      "value": "0x2F1E"
    },
    "12057": {
      "jump": "i",
      "op": "JUMP"
    },
    "12058": {
      "op": "JUMPDEST"
    },
    "12059": {
      "op": "POP"
    },
    "12060": {
      "op": "SWAP1"
    },
    "12061": {
      "jump": "o",
      "op": "JUMP"
    },
    "12062": {
      "op": "JUMPDEST"
    },
    "12063": {
      "op": "JUMPDEST"
    },
    "12064": {
      "op": "DUP1"
    },
    "12065": {
      "op": "DUP3"
    },
    "12066": {
      "op": "GT"
    },
    "12067": {
      "op": "ISZERO"
    },
    "12068": {
      "op": "PUSH2",
      "value": "0x2F1A"
    },
    "12071": {
      "op": "JUMPI"
    },
    "12072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12074": {
      "op": "DUP2"
    },
    "12075": {
      "op": "SSTORE"
    },
    "12076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12078": {
      "op": "ADD"
    },
    "12079": {
      "op": "PUSH2",
      "value": "0x2F1F"
    },
    "12082": {
      "op": "JUMP"
    },
    "12083": {
      "op": "JUMPDEST"
    },
    "12084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12088": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12090": {
      "op": "SHL"
    },
    "12091": {
      "op": "SUB"
    },
    "12092": {
      "op": "NOT"
    },
    "12093": {
      "op": "DUP2"
    },
    "12094": {
      "op": "AND"
    },
    "12095": {
      "op": "DUP2"
    },
    "12096": {
      "op": "EQ"
    },
    "12097": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "12100": {
      "op": "JUMPI"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12103": {
      "op": "DUP1"
    },
    "12104": {
      "op": "REVERT"
    },
    "12105": {
      "op": "JUMPDEST"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12110": {
      "op": "DUP3"
    },
    "12111": {
      "op": "DUP5"
    },
    "12112": {
      "op": "SUB"
    },
    "12113": {
      "op": "SLT"
    },
    "12114": {
      "op": "ISZERO"
    },
    "12115": {
      "op": "PUSH2",
      "value": "0x2F5B"
    },
    "12118": {
      "op": "JUMPI"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12121": {
      "op": "DUP1"
    },
    "12122": {
      "op": "REVERT"
    },
    "12123": {
      "op": "JUMPDEST"
    },
    "12124": {
      "op": "DUP2"
    },
    "12125": {
      "op": "CALLDATALOAD"
    },
    "12126": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "12129": {
      "op": "DUP2"
    },
    "12130": {
      "op": "PUSH2",
      "value": "0x2F33"
    },
    "12133": {
      "jump": "i",
      "op": "JUMP"
    },
    "12134": {
      "op": "JUMPDEST"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12137": {
      "op": "JUMPDEST"
    },
    "12138": {
      "op": "DUP4"
    },
    "12139": {
      "op": "DUP2"
    },
    "12140": {
      "op": "LT"
    },
    "12141": {
      "op": "ISZERO"
    },
    "12142": {
      "op": "PUSH2",
      "value": "0x2F81"
    },
    "12145": {
      "op": "JUMPI"
    },
    "12146": {
      "op": "DUP2"
    },
    "12147": {
      "op": "DUP2"
    },
    "12148": {
      "op": "ADD"
    },
    "12149": {
      "op": "MLOAD"
    },
    "12150": {
      "op": "DUP4"
    },
    "12151": {
      "op": "DUP3"
    },
    "12152": {
      "op": "ADD"
    },
    "12153": {
      "op": "MSTORE"
    },
    "12154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12156": {
      "op": "ADD"
    },
    "12157": {
      "op": "PUSH2",
      "value": "0x2F69"
    },
    "12160": {
      "op": "JUMP"
    },
    "12161": {
      "op": "JUMPDEST"
    },
    "12162": {
      "op": "DUP4"
    },
    "12163": {
      "op": "DUP2"
    },
    "12164": {
      "op": "GT"
    },
    "12165": {
      "op": "ISZERO"
    },
    "12166": {
      "op": "PUSH2",
      "value": "0x1D7C"
    },
    "12169": {
      "op": "JUMPI"
    },
    "12170": {
      "op": "POP"
    },
    "12171": {
      "op": "POP"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12174": {
      "op": "SWAP2"
    },
    "12175": {
      "op": "ADD"
    },
    "12176": {
      "op": "MSTORE"
    },
    "12177": {
      "jump": "o",
      "op": "JUMP"
    },
    "12178": {
      "op": "JUMPDEST"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12181": {
      "op": "DUP2"
    },
    "12182": {
      "op": "MLOAD"
    },
    "12183": {
      "op": "DUP1"
    },
    "12184": {
      "op": "DUP5"
    },
    "12185": {
      "op": "MSTORE"
    },
    "12186": {
      "op": "PUSH2",
      "value": "0x2FAA"
    },
    "12189": {
      "op": "DUP2"
    },
    "12190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12192": {
      "op": "DUP7"
    },
    "12193": {
      "op": "ADD"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12196": {
      "op": "DUP7"
    },
    "12197": {
      "op": "ADD"
    },
    "12198": {
      "op": "PUSH2",
      "value": "0x2F66"
    },
    "12201": {
      "jump": "i",
      "op": "JUMP"
    },
    "12202": {
      "op": "JUMPDEST"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12205": {
      "op": "ADD"
    },
    "12206": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12208": {
      "op": "NOT"
    },
    "12209": {
      "op": "AND"
    },
    "12210": {
      "op": "SWAP3"
    },
    "12211": {
      "op": "SWAP1"
    },
    "12212": {
      "op": "SWAP3"
    },
    "12213": {
      "op": "ADD"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12216": {
      "op": "ADD"
    },
    "12217": {
      "op": "SWAP3"
    },
    "12218": {
      "op": "SWAP2"
    },
    "12219": {
      "op": "POP"
    },
    "12220": {
      "op": "POP"
    },
    "12221": {
      "jump": "o",
      "op": "JUMP"
    },
    "12222": {
      "op": "JUMPDEST"
    },
    "12223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12225": {
      "op": "DUP2"
    },
    "12226": {
      "op": "MSTORE"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12229": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12234": {
      "op": "DUP4"
    },
    "12235": {
      "op": "ADD"
    },
    "12236": {
      "op": "DUP5"
    },
    "12237": {
      "op": "PUSH2",
      "value": "0x2F92"
    },
    "12240": {
      "jump": "i",
      "op": "JUMP"
    },
    "12241": {
      "op": "JUMPDEST"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12246": {
      "op": "DUP3"
    },
    "12247": {
      "op": "DUP5"
    },
    "12248": {
      "op": "SUB"
    },
    "12249": {
      "op": "SLT"
    },
    "12250": {
      "op": "ISZERO"
    },
    "12251": {
      "op": "PUSH2",
      "value": "0x2FE3"
    },
    "12254": {
      "op": "JUMPI"
    },
    "12255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12257": {
      "op": "DUP1"
    },
    "12258": {
      "op": "REVERT"
    },
    "12259": {
      "op": "JUMPDEST"
    },
    "12260": {
      "op": "POP"
    },
    "12261": {
      "op": "CALLDATALOAD"
    },
    "12262": {
      "op": "SWAP2"
    },
    "12263": {
      "op": "SWAP1"
    },
    "12264": {
      "op": "POP"
    },
    "12265": {
      "jump": "o",
      "op": "JUMP"
    },
    "12266": {
      "op": "JUMPDEST"
    },
    "12267": {
      "op": "DUP1"
    },
    "12268": {
      "op": "CALLDATALOAD"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12275": {
      "op": "SHL"
    },
    "12276": {
      "op": "SUB"
    },
    "12277": {
      "op": "DUP2"
    },
    "12278": {
      "op": "AND"
    },
    "12279": {
      "op": "DUP2"
    },
    "12280": {
      "op": "EQ"
    },
    "12281": {
      "op": "PUSH2",
      "value": "0x3001"
    },
    "12284": {
      "op": "JUMPI"
    },
    "12285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12287": {
      "op": "DUP1"
    },
    "12288": {
      "op": "REVERT"
    },
    "12289": {
      "op": "JUMPDEST"
    },
    "12290": {
      "op": "SWAP2"
    },
    "12291": {
      "op": "SWAP1"
    },
    "12292": {
      "op": "POP"
    },
    "12293": {
      "jump": "o",
      "op": "JUMP"
    },
    "12294": {
      "op": "JUMPDEST"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12297": {
      "op": "DUP1"
    },
    "12298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12300": {
      "op": "DUP4"
    },
    "12301": {
      "op": "DUP6"
    },
    "12302": {
      "op": "SUB"
    },
    "12303": {
      "op": "SLT"
    },
    "12304": {
      "op": "ISZERO"
    },
    "12305": {
      "op": "PUSH2",
      "value": "0x3019"
    },
    "12308": {
      "op": "JUMPI"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12311": {
      "op": "DUP1"
    },
    "12312": {
      "op": "REVERT"
    },
    "12313": {
      "op": "JUMPDEST"
    },
    "12314": {
      "op": "PUSH2",
      "value": "0x3022"
    },
    "12317": {
      "op": "DUP4"
    },
    "12318": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12321": {
      "jump": "i",
      "op": "JUMP"
    },
    "12322": {
      "op": "JUMPDEST"
    },
    "12323": {
      "op": "SWAP5"
    },
    "12324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12326": {
      "op": "SWAP4"
    },
    "12327": {
      "op": "SWAP1"
    },
    "12328": {
      "op": "SWAP4"
    },
    "12329": {
      "op": "ADD"
    },
    "12330": {
      "op": "CALLDATALOAD"
    },
    "12331": {
      "op": "SWAP4"
    },
    "12332": {
      "op": "POP"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "jump": "o",
      "op": "JUMP"
    },
    "12336": {
      "op": "JUMPDEST"
    },
    "12337": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12342": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12344": {
      "op": "SHL"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12347": {
      "op": "MSTORE"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12352": {
      "op": "MSTORE"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12357": {
      "op": "REVERT"
    },
    "12358": {
      "op": "JUMPDEST"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12361": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12370": {
      "op": "DUP1"
    },
    "12371": {
      "op": "DUP5"
    },
    "12372": {
      "op": "GT"
    },
    "12373": {
      "op": "ISZERO"
    },
    "12374": {
      "op": "PUSH2",
      "value": "0x3061"
    },
    "12377": {
      "op": "JUMPI"
    },
    "12378": {
      "op": "PUSH2",
      "value": "0x3061"
    },
    "12381": {
      "op": "PUSH2",
      "value": "0x3030"
    },
    "12384": {
      "jump": "i",
      "op": "JUMP"
    },
    "12385": {
      "op": "JUMPDEST"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12388": {
      "op": "MLOAD"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12391": {
      "op": "DUP6"
    },
    "12392": {
      "op": "ADD"
    },
    "12393": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12395": {
      "op": "NOT"
    },
    "12396": {
      "op": "SWAP1"
    },
    "12397": {
      "op": "DUP2"
    },
    "12398": {
      "op": "AND"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12401": {
      "op": "ADD"
    },
    "12402": {
      "op": "AND"
    },
    "12403": {
      "op": "DUP2"
    },
    "12404": {
      "op": "ADD"
    },
    "12405": {
      "op": "SWAP1"
    },
    "12406": {
      "op": "DUP3"
    },
    "12407": {
      "op": "DUP3"
    },
    "12408": {
      "op": "GT"
    },
    "12409": {
      "op": "DUP2"
    },
    "12410": {
      "op": "DUP4"
    },
    "12411": {
      "op": "LT"
    },
    "12412": {
      "op": "OR"
    },
    "12413": {
      "op": "ISZERO"
    },
    "12414": {
      "op": "PUSH2",
      "value": "0x3089"
    },
    "12417": {
      "op": "JUMPI"
    },
    "12418": {
      "op": "PUSH2",
      "value": "0x3089"
    },
    "12421": {
      "op": "PUSH2",
      "value": "0x3030"
    },
    "12424": {
      "jump": "i",
      "op": "JUMP"
    },
    "12425": {
      "op": "JUMPDEST"
    },
    "12426": {
      "op": "DUP2"
    },
    "12427": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12429": {
      "op": "MSTORE"
    },
    "12430": {
      "op": "DUP1"
    },
    "12431": {
      "op": "SWAP4"
    },
    "12432": {
      "op": "POP"
    },
    "12433": {
      "op": "DUP6"
    },
    "12434": {
      "op": "DUP2"
    },
    "12435": {
      "op": "MSTORE"
    },
    "12436": {
      "op": "DUP7"
    },
    "12437": {
      "op": "DUP7"
    },
    "12438": {
      "op": "DUP7"
    },
    "12439": {
      "op": "ADD"
    },
    "12440": {
      "op": "GT"
    },
    "12441": {
      "op": "ISZERO"
    },
    "12442": {
      "op": "PUSH2",
      "value": "0x30A2"
    },
    "12445": {
      "op": "JUMPI"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12448": {
      "op": "DUP1"
    },
    "12449": {
      "op": "REVERT"
    },
    "12450": {
      "op": "JUMPDEST"
    },
    "12451": {
      "op": "DUP6"
    },
    "12452": {
      "op": "DUP6"
    },
    "12453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12455": {
      "op": "DUP4"
    },
    "12456": {
      "op": "ADD"
    },
    "12457": {
      "op": "CALLDATACOPY"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12462": {
      "op": "DUP8"
    },
    "12463": {
      "op": "DUP4"
    },
    "12464": {
      "op": "ADD"
    },
    "12465": {
      "op": "ADD"
    },
    "12466": {
      "op": "MSTORE"
    },
    "12467": {
      "op": "POP"
    },
    "12468": {
      "op": "POP"
    },
    "12469": {
      "op": "POP"
    },
    "12470": {
      "op": "SWAP4"
    },
    "12471": {
      "op": "SWAP3"
    },
    "12472": {
      "op": "POP"
    },
    "12473": {
      "op": "POP"
    },
    "12474": {
      "op": "POP"
    },
    "12475": {
      "jump": "o",
      "op": "JUMP"
    },
    "12476": {
      "op": "JUMPDEST"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12481": {
      "op": "DUP3"
    },
    "12482": {
      "op": "DUP5"
    },
    "12483": {
      "op": "SUB"
    },
    "12484": {
      "op": "SLT"
    },
    "12485": {
      "op": "ISZERO"
    },
    "12486": {
      "op": "PUSH2",
      "value": "0x30CE"
    },
    "12489": {
      "op": "JUMPI"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12492": {
      "op": "DUP1"
    },
    "12493": {
      "op": "REVERT"
    },
    "12494": {
      "op": "JUMPDEST"
    },
    "12495": {
      "op": "DUP2"
    },
    "12496": {
      "op": "CALLDATALOAD"
    },
    "12497": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12506": {
      "op": "DUP2"
    },
    "12507": {
      "op": "GT"
    },
    "12508": {
      "op": "ISZERO"
    },
    "12509": {
      "op": "PUSH2",
      "value": "0x30E5"
    },
    "12512": {
      "op": "JUMPI"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12515": {
      "op": "DUP1"
    },
    "12516": {
      "op": "REVERT"
    },
    "12517": {
      "op": "JUMPDEST"
    },
    "12518": {
      "op": "DUP3"
    },
    "12519": {
      "op": "ADD"
    },
    "12520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12522": {
      "op": "DUP2"
    },
    "12523": {
      "op": "ADD"
    },
    "12524": {
      "op": "DUP5"
    },
    "12525": {
      "op": "SGT"
    },
    "12526": {
      "op": "PUSH2",
      "value": "0x30F6"
    },
    "12529": {
      "op": "JUMPI"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12532": {
      "op": "DUP1"
    },
    "12533": {
      "op": "REVERT"
    },
    "12534": {
      "op": "JUMPDEST"
    },
    "12535": {
      "op": "PUSH2",
      "value": "0x23C5"
    },
    "12538": {
      "op": "DUP5"
    },
    "12539": {
      "op": "DUP3"
    },
    "12540": {
      "op": "CALLDATALOAD"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12543": {
      "op": "DUP5"
    },
    "12544": {
      "op": "ADD"
    },
    "12545": {
      "op": "PUSH2",
      "value": "0x3046"
    },
    "12548": {
      "jump": "i",
      "op": "JUMP"
    },
    "12549": {
      "op": "JUMPDEST"
    },
    "12550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12552": {
      "op": "DUP1"
    },
    "12553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12555": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12557": {
      "op": "DUP5"
    },
    "12558": {
      "op": "DUP7"
    },
    "12559": {
      "op": "SUB"
    },
    "12560": {
      "op": "SLT"
    },
    "12561": {
      "op": "ISZERO"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x311A"
    },
    "12565": {
      "op": "JUMPI"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12568": {
      "op": "DUP1"
    },
    "12569": {
      "op": "REVERT"
    },
    "12570": {
      "op": "JUMPDEST"
    },
    "12571": {
      "op": "PUSH2",
      "value": "0x3123"
    },
    "12574": {
      "op": "DUP5"
    },
    "12575": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12578": {
      "jump": "i",
      "op": "JUMP"
    },
    "12579": {
      "op": "JUMPDEST"
    },
    "12580": {
      "op": "SWAP3"
    },
    "12581": {
      "op": "POP"
    },
    "12582": {
      "op": "PUSH2",
      "value": "0x3131"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12587": {
      "op": "DUP6"
    },
    "12588": {
      "op": "ADD"
    },
    "12589": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12592": {
      "jump": "i",
      "op": "JUMP"
    },
    "12593": {
      "op": "JUMPDEST"
    },
    "12594": {
      "op": "SWAP2"
    },
    "12595": {
      "op": "POP"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12598": {
      "op": "DUP5"
    },
    "12599": {
      "op": "ADD"
    },
    "12600": {
      "op": "CALLDATALOAD"
    },
    "12601": {
      "op": "SWAP1"
    },
    "12602": {
      "op": "POP"
    },
    "12603": {
      "op": "SWAP3"
    },
    "12604": {
      "op": "POP"
    },
    "12605": {
      "op": "SWAP3"
    },
    "12606": {
      "op": "POP"
    },
    "12607": {
      "op": "SWAP3"
    },
    "12608": {
      "jump": "o",
      "op": "JUMP"
    },
    "12609": {
      "op": "JUMPDEST"
    },
    "12610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12612": {
      "op": "DUP1"
    },
    "12613": {
      "op": "DUP4"
    },
    "12614": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12616": {
      "op": "DUP5"
    },
    "12617": {
      "op": "ADD"
    },
    "12618": {
      "op": "SLT"
    },
    "12619": {
      "op": "PUSH2",
      "value": "0x3153"
    },
    "12622": {
      "op": "JUMPI"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12625": {
      "op": "DUP1"
    },
    "12626": {
      "op": "REVERT"
    },
    "12627": {
      "op": "JUMPDEST"
    },
    "12628": {
      "op": "POP"
    },
    "12629": {
      "op": "DUP2"
    },
    "12630": {
      "op": "CALLDATALOAD"
    },
    "12631": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12640": {
      "op": "DUP2"
    },
    "12641": {
      "op": "GT"
    },
    "12642": {
      "op": "ISZERO"
    },
    "12643": {
      "op": "PUSH2",
      "value": "0x316B"
    },
    "12646": {
      "op": "JUMPI"
    },
    "12647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12649": {
      "op": "DUP1"
    },
    "12650": {
      "op": "REVERT"
    },
    "12651": {
      "op": "JUMPDEST"
    },
    "12652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12654": {
      "op": "DUP4"
    },
    "12655": {
      "op": "ADD"
    },
    "12656": {
      "op": "SWAP2"
    },
    "12657": {
      "op": "POP"
    },
    "12658": {
      "op": "DUP4"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12661": {
      "op": "DUP3"
    },
    "12662": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12664": {
      "op": "SHL"
    },
    "12665": {
      "op": "DUP6"
    },
    "12666": {
      "op": "ADD"
    },
    "12667": {
      "op": "ADD"
    },
    "12668": {
      "op": "GT"
    },
    "12669": {
      "op": "ISZERO"
    },
    "12670": {
      "op": "PUSH2",
      "value": "0x3186"
    },
    "12673": {
      "op": "JUMPI"
    },
    "12674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12676": {
      "op": "DUP1"
    },
    "12677": {
      "op": "REVERT"
    },
    "12678": {
      "op": "JUMPDEST"
    },
    "12679": {
      "op": "SWAP3"
    },
    "12680": {
      "op": "POP"
    },
    "12681": {
      "op": "SWAP3"
    },
    "12682": {
      "op": "SWAP1"
    },
    "12683": {
      "op": "POP"
    },
    "12684": {
      "jump": "o",
      "op": "JUMP"
    },
    "12685": {
      "op": "JUMPDEST"
    },
    "12686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12688": {
      "op": "DUP1"
    },
    "12689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12691": {
      "op": "DUP4"
    },
    "12692": {
      "op": "DUP6"
    },
    "12693": {
      "op": "SUB"
    },
    "12694": {
      "op": "SLT"
    },
    "12695": {
      "op": "ISZERO"
    },
    "12696": {
      "op": "PUSH2",
      "value": "0x31A0"
    },
    "12699": {
      "op": "JUMPI"
    },
    "12700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12702": {
      "op": "DUP1"
    },
    "12703": {
      "op": "REVERT"
    },
    "12704": {
      "op": "JUMPDEST"
    },
    "12705": {
      "op": "DUP3"
    },
    "12706": {
      "op": "CALLDATALOAD"
    },
    "12707": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12716": {
      "op": "DUP2"
    },
    "12717": {
      "op": "GT"
    },
    "12718": {
      "op": "ISZERO"
    },
    "12719": {
      "op": "PUSH2",
      "value": "0x31B7"
    },
    "12722": {
      "op": "JUMPI"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12725": {
      "op": "DUP1"
    },
    "12726": {
      "op": "REVERT"
    },
    "12727": {
      "op": "JUMPDEST"
    },
    "12728": {
      "op": "PUSH2",
      "value": "0x31C3"
    },
    "12731": {
      "op": "DUP6"
    },
    "12732": {
      "op": "DUP3"
    },
    "12733": {
      "op": "DUP7"
    },
    "12734": {
      "op": "ADD"
    },
    "12735": {
      "op": "PUSH2",
      "value": "0x3141"
    },
    "12738": {
      "jump": "i",
      "op": "JUMP"
    },
    "12739": {
      "op": "JUMPDEST"
    },
    "12740": {
      "op": "SWAP1"
    },
    "12741": {
      "op": "SWAP7"
    },
    "12742": {
      "op": "SWAP1"
    },
    "12743": {
      "op": "SWAP6"
    },
    "12744": {
      "op": "POP"
    },
    "12745": {
      "op": "SWAP4"
    },
    "12746": {
      "op": "POP"
    },
    "12747": {
      "op": "POP"
    },
    "12748": {
      "op": "POP"
    },
    "12749": {
      "op": "POP"
    },
    "12750": {
      "jump": "o",
      "op": "JUMP"
    },
    "12751": {
      "op": "JUMPDEST"
    },
    "12752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12756": {
      "op": "DUP3"
    },
    "12757": {
      "op": "DUP5"
    },
    "12758": {
      "op": "SUB"
    },
    "12759": {
      "op": "SLT"
    },
    "12760": {
      "op": "ISZERO"
    },
    "12761": {
      "op": "PUSH2",
      "value": "0x31E1"
    },
    "12764": {
      "op": "JUMPI"
    },
    "12765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12767": {
      "op": "DUP1"
    },
    "12768": {
      "op": "REVERT"
    },
    "12769": {
      "op": "JUMPDEST"
    },
    "12770": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "12773": {
      "op": "DUP3"
    },
    "12774": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12777": {
      "jump": "i",
      "op": "JUMP"
    },
    "12778": {
      "op": "JUMPDEST"
    },
    "12779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12781": {
      "op": "DUP1"
    },
    "12782": {
      "op": "DUP3"
    },
    "12783": {
      "op": "MSTORE"
    },
    "12784": {
      "op": "DUP3"
    },
    "12785": {
      "op": "MLOAD"
    },
    "12786": {
      "op": "DUP3"
    },
    "12787": {
      "op": "DUP3"
    },
    "12788": {
      "op": "ADD"
    },
    "12789": {
      "op": "DUP2"
    },
    "12790": {
      "op": "SWAP1"
    },
    "12791": {
      "op": "MSTORE"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12794": {
      "op": "SWAP2"
    },
    "12795": {
      "op": "SWAP1"
    },
    "12796": {
      "op": "DUP5"
    },
    "12797": {
      "op": "DUP3"
    },
    "12798": {
      "op": "ADD"
    },
    "12799": {
      "op": "SWAP1"
    },
    "12800": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12802": {
      "op": "DUP6"
    },
    "12803": {
      "op": "ADD"
    },
    "12804": {
      "op": "SWAP1"
    },
    "12805": {
      "op": "DUP5"
    },
    "12806": {
      "op": "JUMPDEST"
    },
    "12807": {
      "op": "DUP2"
    },
    "12808": {
      "op": "DUP2"
    },
    "12809": {
      "op": "LT"
    },
    "12810": {
      "op": "ISZERO"
    },
    "12811": {
      "op": "PUSH2",
      "value": "0x3222"
    },
    "12814": {
      "op": "JUMPI"
    },
    "12815": {
      "op": "DUP4"
    },
    "12816": {
      "op": "MLOAD"
    },
    "12817": {
      "op": "DUP4"
    },
    "12818": {
      "op": "MSTORE"
    },
    "12819": {
      "op": "SWAP3"
    },
    "12820": {
      "op": "DUP5"
    },
    "12821": {
      "op": "ADD"
    },
    "12822": {
      "op": "SWAP3"
    },
    "12823": {
      "op": "SWAP2"
    },
    "12824": {
      "op": "DUP5"
    },
    "12825": {
      "op": "ADD"
    },
    "12826": {
      "op": "SWAP2"
    },
    "12827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12829": {
      "op": "ADD"
    },
    "12830": {
      "op": "PUSH2",
      "value": "0x3206"
    },
    "12833": {
      "op": "JUMP"
    },
    "12834": {
      "op": "JUMPDEST"
    },
    "12835": {
      "op": "POP"
    },
    "12836": {
      "op": "SWAP1"
    },
    "12837": {
      "op": "SWAP7"
    },
    "12838": {
      "op": "SWAP6"
    },
    "12839": {
      "op": "POP"
    },
    "12840": {
      "op": "POP"
    },
    "12841": {
      "op": "POP"
    },
    "12842": {
      "op": "POP"
    },
    "12843": {
      "op": "POP"
    },
    "12844": {
      "op": "POP"
    },
    "12845": {
      "jump": "o",
      "op": "JUMP"
    },
    "12846": {
      "op": "JUMPDEST"
    },
    "12847": {
      "op": "DUP1"
    },
    "12848": {
      "op": "CALLDATALOAD"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12851": {
      "op": "DUP2"
    },
    "12852": {
      "op": "AND"
    },
    "12853": {
      "op": "DUP2"
    },
    "12854": {
      "op": "EQ"
    },
    "12855": {
      "op": "PUSH2",
      "value": "0x3001"
    },
    "12858": {
      "op": "JUMPI"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12861": {
      "op": "DUP1"
    },
    "12862": {
      "op": "REVERT"
    },
    "12863": {
      "op": "JUMPDEST"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12868": {
      "op": "DUP3"
    },
    "12869": {
      "op": "DUP5"
    },
    "12870": {
      "op": "SUB"
    },
    "12871": {
      "op": "SLT"
    },
    "12872": {
      "op": "ISZERO"
    },
    "12873": {
      "op": "PUSH2",
      "value": "0x3251"
    },
    "12876": {
      "op": "JUMPI"
    },
    "12877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12879": {
      "op": "DUP1"
    },
    "12880": {
      "op": "REVERT"
    },
    "12881": {
      "op": "JUMPDEST"
    },
    "12882": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "12885": {
      "op": "DUP3"
    },
    "12886": {
      "op": "PUSH2",
      "value": "0x322E"
    },
    "12889": {
      "jump": "i",
      "op": "JUMP"
    },
    "12890": {
      "op": "JUMPDEST"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12893": {
      "op": "DUP1"
    },
    "12894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12896": {
      "op": "DUP4"
    },
    "12897": {
      "op": "DUP6"
    },
    "12898": {
      "op": "SUB"
    },
    "12899": {
      "op": "SLT"
    },
    "12900": {
      "op": "ISZERO"
    },
    "12901": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12904": {
      "op": "JUMPI"
    },
    "12905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12907": {
      "op": "DUP1"
    },
    "12908": {
      "op": "REVERT"
    },
    "12909": {
      "op": "JUMPDEST"
    },
    "12910": {
      "op": "PUSH2",
      "value": "0x3276"
    },
    "12913": {
      "op": "DUP4"
    },
    "12914": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12917": {
      "jump": "i",
      "op": "JUMP"
    },
    "12918": {
      "op": "JUMPDEST"
    },
    "12919": {
      "op": "SWAP2"
    },
    "12920": {
      "op": "POP"
    },
    "12921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12923": {
      "op": "DUP4"
    },
    "12924": {
      "op": "ADD"
    },
    "12925": {
      "op": "CALLDATALOAD"
    },
    "12926": {
      "op": "DUP1"
    },
    "12927": {
      "op": "ISZERO"
    },
    "12928": {
      "op": "ISZERO"
    },
    "12929": {
      "op": "DUP2"
    },
    "12930": {
      "op": "EQ"
    },
    "12931": {
      "op": "PUSH2",
      "value": "0x328B"
    },
    "12934": {
      "op": "JUMPI"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12937": {
      "op": "DUP1"
    },
    "12938": {
      "op": "REVERT"
    },
    "12939": {
      "op": "JUMPDEST"
    },
    "12940": {
      "op": "DUP1"
    },
    "12941": {
      "op": "SWAP2"
    },
    "12942": {
      "op": "POP"
    },
    "12943": {
      "op": "POP"
    },
    "12944": {
      "op": "SWAP3"
    },
    "12945": {
      "op": "POP"
    },
    "12946": {
      "op": "SWAP3"
    },
    "12947": {
      "op": "SWAP1"
    },
    "12948": {
      "op": "POP"
    },
    "12949": {
      "jump": "o",
      "op": "JUMP"
    },
    "12950": {
      "op": "JUMPDEST"
    },
    "12951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12953": {
      "op": "DUP1"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12956": {
      "op": "DUP4"
    },
    "12957": {
      "op": "DUP6"
    },
    "12958": {
      "op": "SUB"
    },
    "12959": {
      "op": "SLT"
    },
    "12960": {
      "op": "ISZERO"
    },
    "12961": {
      "op": "PUSH2",
      "value": "0x32A9"
    },
    "12964": {
      "op": "JUMPI"
    },
    "12965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12967": {
      "op": "DUP1"
    },
    "12968": {
      "op": "REVERT"
    },
    "12969": {
      "op": "JUMPDEST"
    },
    "12970": {
      "op": "PUSH2",
      "value": "0x32B2"
    },
    "12973": {
      "op": "DUP4"
    },
    "12974": {
      "op": "PUSH2",
      "value": "0x322E"
    },
    "12977": {
      "jump": "i",
      "op": "JUMP"
    },
    "12978": {
      "op": "JUMPDEST"
    },
    "12979": {
      "op": "SWAP2"
    },
    "12980": {
      "op": "POP"
    },
    "12981": {
      "op": "PUSH2",
      "value": "0x32C0"
    },
    "12984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12986": {
      "op": "DUP5"
    },
    "12987": {
      "op": "ADD"
    },
    "12988": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12991": {
      "jump": "i",
      "op": "JUMP"
    },
    "12992": {
      "op": "JUMPDEST"
    },
    "12993": {
      "op": "SWAP1"
    },
    "12994": {
      "op": "POP"
    },
    "12995": {
      "op": "SWAP3"
    },
    "12996": {
      "op": "POP"
    },
    "12997": {
      "op": "SWAP3"
    },
    "12998": {
      "op": "SWAP1"
    },
    "12999": {
      "op": "POP"
    },
    "13000": {
      "jump": "o",
      "op": "JUMP"
    },
    "13001": {
      "op": "JUMPDEST"
    },
    "13002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13004": {
      "op": "DUP1"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13009": {
      "op": "DUP5"
    },
    "13010": {
      "op": "DUP7"
    },
    "13011": {
      "op": "SUB"
    },
    "13012": {
      "op": "SLT"
    },
    "13013": {
      "op": "ISZERO"
    },
    "13014": {
      "op": "PUSH2",
      "value": "0x32DE"
    },
    "13017": {
      "op": "JUMPI"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13020": {
      "op": "DUP1"
    },
    "13021": {
      "op": "REVERT"
    },
    "13022": {
      "op": "JUMPDEST"
    },
    "13023": {
      "op": "PUSH2",
      "value": "0x32E7"
    },
    "13026": {
      "op": "DUP5"
    },
    "13027": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "13030": {
      "jump": "i",
      "op": "JUMP"
    },
    "13031": {
      "op": "JUMPDEST"
    },
    "13032": {
      "op": "SWAP3"
    },
    "13033": {
      "op": "POP"
    },
    "13034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13036": {
      "op": "DUP5"
    },
    "13037": {
      "op": "ADD"
    },
    "13038": {
      "op": "CALLDATALOAD"
    },
    "13039": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13048": {
      "op": "DUP2"
    },
    "13049": {
      "op": "GT"
    },
    "13050": {
      "op": "ISZERO"
    },
    "13051": {
      "op": "PUSH2",
      "value": "0x3303"
    },
    "13054": {
      "op": "JUMPI"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13057": {
      "op": "DUP1"
    },
    "13058": {
      "op": "REVERT"
    },
    "13059": {
      "op": "JUMPDEST"
    },
    "13060": {
      "op": "PUSH2",
      "value": "0x330F"
    },
    "13063": {
      "op": "DUP7"
    },
    "13064": {
      "op": "DUP3"
    },
    "13065": {
      "op": "DUP8"
    },
    "13066": {
      "op": "ADD"
    },
    "13067": {
      "op": "PUSH2",
      "value": "0x3141"
    },
    "13070": {
      "jump": "i",
      "op": "JUMP"
    },
    "13071": {
      "op": "JUMPDEST"
    },
    "13072": {
      "op": "SWAP5"
    },
    "13073": {
      "op": "SWAP8"
    },
    "13074": {
      "op": "SWAP1"
    },
    "13075": {
      "op": "SWAP7"
    },
    "13076": {
      "op": "POP"
    },
    "13077": {
      "op": "SWAP4"
    },
    "13078": {
      "op": "SWAP5"
    },
    "13079": {
      "op": "POP"
    },
    "13080": {
      "op": "POP"
    },
    "13081": {
      "op": "POP"
    },
    "13082": {
      "op": "POP"
    },
    "13083": {
      "jump": "o",
      "op": "JUMP"
    },
    "13084": {
      "op": "JUMPDEST"
    },
    "13085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13087": {
      "op": "DUP1"
    },
    "13088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13090": {
      "op": "DUP1"
    },
    "13091": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13093": {
      "op": "DUP6"
    },
    "13094": {
      "op": "DUP8"
    },
    "13095": {
      "op": "SUB"
    },
    "13096": {
      "op": "SLT"
    },
    "13097": {
      "op": "ISZERO"
    },
    "13098": {
      "op": "PUSH2",
      "value": "0x3332"
    },
    "13101": {
      "op": "JUMPI"
    },
    "13102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13104": {
      "op": "DUP1"
    },
    "13105": {
      "op": "REVERT"
    },
    "13106": {
      "op": "JUMPDEST"
    },
    "13107": {
      "op": "PUSH2",
      "value": "0x333B"
    },
    "13110": {
      "op": "DUP6"
    },
    "13111": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "13114": {
      "jump": "i",
      "op": "JUMP"
    },
    "13115": {
      "op": "JUMPDEST"
    },
    "13116": {
      "op": "SWAP4"
    },
    "13117": {
      "op": "POP"
    },
    "13118": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13123": {
      "op": "DUP7"
    },
    "13124": {
      "op": "ADD"
    },
    "13125": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "13128": {
      "jump": "i",
      "op": "JUMP"
    },
    "13129": {
      "op": "JUMPDEST"
    },
    "13130": {
      "op": "SWAP3"
    },
    "13131": {
      "op": "POP"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13134": {
      "op": "DUP6"
    },
    "13135": {
      "op": "ADD"
    },
    "13136": {
      "op": "CALLDATALOAD"
    },
    "13137": {
      "op": "SWAP2"
    },
    "13138": {
      "op": "POP"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13141": {
      "op": "DUP6"
    },
    "13142": {
      "op": "ADD"
    },
    "13143": {
      "op": "CALLDATALOAD"
    },
    "13144": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13153": {
      "op": "DUP2"
    },
    "13154": {
      "op": "GT"
    },
    "13155": {
      "op": "ISZERO"
    },
    "13156": {
      "op": "PUSH2",
      "value": "0x336C"
    },
    "13159": {
      "op": "JUMPI"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13162": {
      "op": "DUP1"
    },
    "13163": {
      "op": "REVERT"
    },
    "13164": {
      "op": "JUMPDEST"
    },
    "13165": {
      "op": "DUP6"
    },
    "13166": {
      "op": "ADD"
    },
    "13167": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13169": {
      "op": "DUP2"
    },
    "13170": {
      "op": "ADD"
    },
    "13171": {
      "op": "DUP8"
    },
    "13172": {
      "op": "SGT"
    },
    "13173": {
      "op": "PUSH2",
      "value": "0x337D"
    },
    "13176": {
      "op": "JUMPI"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13179": {
      "op": "DUP1"
    },
    "13180": {
      "op": "REVERT"
    },
    "13181": {
      "op": "JUMPDEST"
    },
    "13182": {
      "op": "PUSH2",
      "value": "0x338C"
    },
    "13185": {
      "op": "DUP8"
    },
    "13186": {
      "op": "DUP3"
    },
    "13187": {
      "op": "CALLDATALOAD"
    },
    "13188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13190": {
      "op": "DUP5"
    },
    "13191": {
      "op": "ADD"
    },
    "13192": {
      "op": "PUSH2",
      "value": "0x3046"
    },
    "13195": {
      "jump": "i",
      "op": "JUMP"
    },
    "13196": {
      "op": "JUMPDEST"
    },
    "13197": {
      "op": "SWAP2"
    },
    "13198": {
      "op": "POP"
    },
    "13199": {
      "op": "POP"
    },
    "13200": {
      "op": "SWAP3"
    },
    "13201": {
      "op": "SWAP6"
    },
    "13202": {
      "op": "SWAP2"
    },
    "13203": {
      "op": "SWAP5"
    },
    "13204": {
      "op": "POP"
    },
    "13205": {
      "op": "SWAP3"
    },
    "13206": {
      "op": "POP"
    },
    "13207": {
      "jump": "o",
      "op": "JUMP"
    },
    "13208": {
      "op": "JUMPDEST"
    },
    "13209": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13216": {
      "op": "SHL"
    },
    "13217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13219": {
      "op": "MSTORE"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13222": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13224": {
      "op": "MSTORE"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13229": {
      "op": "REVERT"
    },
    "13230": {
      "op": "JUMPDEST"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13233": {
      "op": "DUP2"
    },
    "13234": {
      "op": "ADD"
    },
    "13235": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13237": {
      "op": "DUP4"
    },
    "13238": {
      "op": "LT"
    },
    "13239": {
      "op": "PUSH2",
      "value": "0x33D0"
    },
    "13242": {
      "op": "JUMPI"
    },
    "13243": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13250": {
      "op": "SHL"
    },
    "13251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13253": {
      "op": "MSTORE"
    },
    "13254": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13256": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13258": {
      "op": "MSTORE"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13263": {
      "op": "REVERT"
    },
    "13264": {
      "op": "JUMPDEST"
    },
    "13265": {
      "op": "SWAP2"
    },
    "13266": {
      "op": "SWAP1"
    },
    "13267": {
      "op": "MSTORE"
    },
    "13268": {
      "op": "SWAP1"
    },
    "13269": {
      "jump": "o",
      "op": "JUMP"
    },
    "13270": {
      "op": "JUMPDEST"
    },
    "13271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13275": {
      "op": "DUP3"
    },
    "13276": {
      "op": "DUP5"
    },
    "13277": {
      "op": "SUB"
    },
    "13278": {
      "op": "SLT"
    },
    "13279": {
      "op": "ISZERO"
    },
    "13280": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13283": {
      "op": "JUMPI"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13286": {
      "op": "DUP1"
    },
    "13287": {
      "op": "REVERT"
    },
    "13288": {
      "op": "JUMPDEST"
    },
    "13289": {
      "op": "DUP2"
    },
    "13290": {
      "op": "CALLDATALOAD"
    },
    "13291": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13293": {
      "op": "DUP2"
    },
    "13294": {
      "op": "LT"
    },
    "13295": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "13298": {
      "op": "JUMPI"
    },
    "13299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13301": {
      "op": "DUP1"
    },
    "13302": {
      "op": "REVERT"
    },
    "13303": {
      "op": "JUMPDEST"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13306": {
      "op": "DUP1"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13309": {
      "op": "DUP4"
    },
    "13310": {
      "op": "DUP6"
    },
    "13311": {
      "op": "SUB"
    },
    "13312": {
      "op": "SLT"
    },
    "13313": {
      "op": "ISZERO"
    },
    "13314": {
      "op": "PUSH2",
      "value": "0x340A"
    },
    "13317": {
      "op": "JUMPI"
    },
    "13318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13320": {
      "op": "DUP1"
    },
    "13321": {
      "op": "REVERT"
    },
    "13322": {
      "op": "JUMPDEST"
    },
    "13323": {
      "op": "PUSH2",
      "value": "0x32B2"
    },
    "13326": {
      "op": "DUP4"
    },
    "13327": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "13330": {
      "jump": "i",
      "op": "JUMP"
    },
    "13331": {
      "op": "JUMPDEST"
    },
    "13332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13334": {
      "op": "DUP2"
    },
    "13335": {
      "op": "DUP2"
    },
    "13336": {
      "op": "SHR"
    },
    "13337": {
      "op": "SWAP1"
    },
    "13338": {
      "op": "DUP3"
    },
    "13339": {
      "op": "AND"
    },
    "13340": {
      "op": "DUP1"
    },
    "13341": {
      "op": "PUSH2",
      "value": "0x3427"
    },
    "13344": {
      "op": "JUMPI"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13347": {
      "op": "DUP3"
    },
    "13348": {
      "op": "AND"
    },
    "13349": {
      "op": "SWAP2"
    },
    "13350": {
      "op": "POP"
    },
    "13351": {
      "op": "JUMPDEST"
    },
    "13352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13354": {
      "op": "DUP3"
    },
    "13355": {
      "op": "LT"
    },
    "13356": {
      "op": "DUP2"
    },
    "13357": {
      "op": "EQ"
    },
    "13358": {
      "op": "ISZERO"
    },
    "13359": {
      "op": "PUSH2",
      "value": "0x3448"
    },
    "13362": {
      "op": "JUMPI"
    },
    "13363": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13368": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13370": {
      "op": "SHL"
    },
    "13371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13373": {
      "op": "MSTORE"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13378": {
      "op": "MSTORE"
    },
    "13379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13383": {
      "op": "REVERT"
    },
    "13384": {
      "op": "JUMPDEST"
    },
    "13385": {
      "op": "POP"
    },
    "13386": {
      "op": "SWAP2"
    },
    "13387": {
      "op": "SWAP1"
    },
    "13388": {
      "op": "POP"
    },
    "13389": {
      "jump": "o",
      "op": "JUMP"
    },
    "13390": {
      "op": "JUMPDEST"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13393": {
      "op": "DUP1"
    },
    "13394": {
      "op": "DUP3"
    },
    "13395": {
      "op": "MSTORE"
    },
    "13396": {
      "op": "DUP2"
    },
    "13397": {
      "op": "DUP2"
    },
    "13398": {
      "op": "ADD"
    },
    "13399": {
      "op": "MSTORE"
    },
    "13400": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13435": {
      "op": "DUP3"
    },
    "13436": {
      "op": "ADD"
    },
    "13437": {
      "op": "MSTORE"
    },
    "13438": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13440": {
      "op": "ADD"
    },
    "13441": {
      "op": "SWAP1"
    },
    "13442": {
      "jump": "o",
      "op": "JUMP"
    },
    "13443": {
      "op": "JUMPDEST"
    },
    "13444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13446": {
      "op": "DUP1"
    },
    "13447": {
      "op": "DUP3"
    },
    "13448": {
      "op": "MSTORE"
    },
    "13449": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13451": {
      "op": "SWAP1"
    },
    "13452": {
      "op": "DUP3"
    },
    "13453": {
      "op": "ADD"
    },
    "13454": {
      "op": "MSTORE"
    },
    "13455": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13490": {
      "op": "DUP3"
    },
    "13491": {
      "op": "ADD"
    },
    "13492": {
      "op": "MSTORE"
    },
    "13493": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13511": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13513": {
      "op": "SHL"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13516": {
      "op": "DUP3"
    },
    "13517": {
      "op": "ADD"
    },
    "13518": {
      "op": "MSTORE"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13521": {
      "op": "ADD"
    },
    "13522": {
      "op": "SWAP1"
    },
    "13523": {
      "jump": "o",
      "op": "JUMP"
    },
    "13524": {
      "op": "JUMPDEST"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13527": {
      "op": "DUP1"
    },
    "13528": {
      "op": "DUP3"
    },
    "13529": {
      "op": "MSTORE"
    },
    "13530": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13532": {
      "op": "SWAP1"
    },
    "13533": {
      "op": "DUP3"
    },
    "13534": {
      "op": "ADD"
    },
    "13535": {
      "op": "MSTORE"
    },
    "13536": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13555": {
      "op": "SHL"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13558": {
      "op": "DUP3"
    },
    "13559": {
      "op": "ADD"
    },
    "13560": {
      "op": "MSTORE"
    },
    "13561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13563": {
      "op": "ADD"
    },
    "13564": {
      "op": "SWAP1"
    },
    "13565": {
      "jump": "o",
      "op": "JUMP"
    },
    "13566": {
      "op": "JUMPDEST"
    },
    "13567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13569": {
      "op": "DUP1"
    },
    "13570": {
      "op": "DUP3"
    },
    "13571": {
      "op": "MSTORE"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "13574": {
      "op": "SWAP1"
    },
    "13575": {
      "op": "DUP3"
    },
    "13576": {
      "op": "ADD"
    },
    "13577": {
      "op": "MSTORE"
    },
    "13578": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "13611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13613": {
      "op": "DUP3"
    },
    "13614": {
      "op": "ADD"
    },
    "13615": {
      "op": "MSTORE"
    },
    "13616": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "13622": {
      "op": "SHL"
    },
    "13623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13625": {
      "op": "DUP3"
    },
    "13626": {
      "op": "ADD"
    },
    "13627": {
      "op": "MSTORE"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13630": {
      "op": "ADD"
    },
    "13631": {
      "op": "SWAP1"
    },
    "13632": {
      "jump": "o",
      "op": "JUMP"
    },
    "13633": {
      "op": "JUMPDEST"
    },
    "13634": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13641": {
      "op": "SHL"
    },
    "13642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13644": {
      "op": "MSTORE"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13649": {
      "op": "MSTORE"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13654": {
      "op": "REVERT"
    },
    "13655": {
      "op": "JUMPDEST"
    },
    "13656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13658": {
      "op": "DUP3"
    },
    "13659": {
      "op": "NOT"
    },
    "13660": {
      "op": "DUP3"
    },
    "13661": {
      "op": "GT"
    },
    "13662": {
      "op": "ISZERO"
    },
    "13663": {
      "op": "PUSH2",
      "value": "0x356A"
    },
    "13666": {
      "op": "JUMPI"
    },
    "13667": {
      "op": "PUSH2",
      "value": "0x356A"
    },
    "13670": {
      "op": "PUSH2",
      "value": "0x3541"
    },
    "13673": {
      "jump": "i",
      "op": "JUMP"
    },
    "13674": {
      "op": "JUMPDEST"
    },
    "13675": {
      "op": "POP"
    },
    "13676": {
      "op": "ADD"
    },
    "13677": {
      "op": "SWAP1"
    },
    "13678": {
      "jump": "o",
      "op": "JUMP"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13682": {
      "op": "DUP1"
    },
    "13683": {
      "op": "DUP3"
    },
    "13684": {
      "op": "MSTORE"
    },
    "13685": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "13687": {
      "op": "SWAP1"
    },
    "13688": {
      "op": "DUP3"
    },
    "13689": {
      "op": "ADD"
    },
    "13690": {
      "op": "MSTORE"
    },
    "13691": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13726": {
      "op": "DUP3"
    },
    "13727": {
      "op": "ADD"
    },
    "13728": {
      "op": "MSTORE"
    },
    "13729": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "13736": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "13738": {
      "op": "SHL"
    },
    "13739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13741": {
      "op": "DUP3"
    },
    "13742": {
      "op": "ADD"
    },
    "13743": {
      "op": "MSTORE"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13746": {
      "op": "ADD"
    },
    "13747": {
      "op": "SWAP1"
    },
    "13748": {
      "jump": "o",
      "op": "JUMP"
    },
    "13749": {
      "op": "JUMPDEST"
    },
    "13750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13754": {
      "op": "NOT"
    },
    "13755": {
      "op": "DUP3"
    },
    "13756": {
      "op": "EQ"
    },
    "13757": {
      "op": "ISZERO"
    },
    "13758": {
      "op": "PUSH2",
      "value": "0x35C9"
    },
    "13761": {
      "op": "JUMPI"
    },
    "13762": {
      "op": "PUSH2",
      "value": "0x35C9"
    },
    "13765": {
      "op": "PUSH2",
      "value": "0x3541"
    },
    "13768": {
      "jump": "i",
      "op": "JUMP"
    },
    "13769": {
      "op": "JUMPDEST"
    },
    "13770": {
      "op": "POP"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13773": {
      "op": "ADD"
    },
    "13774": {
      "op": "SWAP1"
    },
    "13775": {
      "jump": "o",
      "op": "JUMP"
    },
    "13776": {
      "op": "JUMPDEST"
    },
    "13777": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13784": {
      "op": "SHL"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13787": {
      "op": "MSTORE"
    },
    "13788": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13792": {
      "op": "MSTORE"
    },
    "13793": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13797": {
      "op": "REVERT"
    },
    "13798": {
      "op": "JUMPDEST"
    },
    "13799": {
      "op": "DUP1"
    },
    "13800": {
      "op": "SLOAD"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13803": {
      "op": "SWAP1"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13806": {
      "op": "DUP2"
    },
    "13807": {
      "op": "DUP2"
    },
    "13808": {
      "op": "SHR"
    },
    "13809": {
      "op": "SWAP1"
    },
    "13810": {
      "op": "DUP1"
    },
    "13811": {
      "op": "DUP4"
    },
    "13812": {
      "op": "AND"
    },
    "13813": {
      "op": "DUP1"
    },
    "13814": {
      "op": "PUSH2",
      "value": "0x3600"
    },
    "13817": {
      "op": "JUMPI"
    },
    "13818": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13820": {
      "op": "DUP4"
    },
    "13821": {
      "op": "AND"
    },
    "13822": {
      "op": "SWAP3"
    },
    "13823": {
      "op": "POP"
    },
    "13824": {
      "op": "JUMPDEST"
    },
    "13825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13827": {
      "op": "DUP1"
    },
    "13828": {
      "op": "DUP5"
    },
    "13829": {
      "op": "LT"
    },
    "13830": {
      "op": "DUP3"
    },
    "13831": {
      "op": "EQ"
    },
    "13832": {
      "op": "ISZERO"
    },
    "13833": {
      "op": "PUSH2",
      "value": "0x3622"
    },
    "13836": {
      "op": "JUMPI"
    },
    "13837": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13844": {
      "op": "SHL"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13847": {
      "op": "MSTORE"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13852": {
      "op": "MSTORE"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13857": {
      "op": "REVERT"
    },
    "13858": {
      "op": "JUMPDEST"
    },
    "13859": {
      "op": "DUP2"
    },
    "13860": {
      "op": "DUP1"
    },
    "13861": {
      "op": "ISZERO"
    },
    "13862": {
      "op": "PUSH2",
      "value": "0x3636"
    },
    "13865": {
      "op": "JUMPI"
    },
    "13866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13868": {
      "op": "DUP2"
    },
    "13869": {
      "op": "EQ"
    },
    "13870": {
      "op": "PUSH2",
      "value": "0x3647"
    },
    "13873": {
      "op": "JUMPI"
    },
    "13874": {
      "op": "PUSH2",
      "value": "0x3674"
    },
    "13877": {
      "op": "JUMP"
    },
    "13878": {
      "op": "JUMPDEST"
    },
    "13879": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13881": {
      "op": "NOT"
    },
    "13882": {
      "op": "DUP7"
    },
    "13883": {
      "op": "AND"
    },
    "13884": {
      "op": "DUP10"
    },
    "13885": {
      "op": "MSTORE"
    },
    "13886": {
      "op": "DUP5"
    },
    "13887": {
      "op": "DUP10"
    },
    "13888": {
      "op": "ADD"
    },
    "13889": {
      "op": "SWAP7"
    },
    "13890": {
      "op": "POP"
    },
    "13891": {
      "op": "PUSH2",
      "value": "0x3674"
    },
    "13894": {
      "op": "JUMP"
    },
    "13895": {
      "op": "JUMPDEST"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13898": {
      "op": "DUP9"
    },
    "13899": {
      "op": "DUP2"
    },
    "13900": {
      "op": "MSTORE"
    },
    "13901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13903": {
      "op": "SWAP1"
    },
    "13904": {
      "op": "KECCAK256"
    },
    "13905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13907": {
      "op": "JUMPDEST"
    },
    "13908": {
      "op": "DUP7"
    },
    "13909": {
      "op": "DUP2"
    },
    "13910": {
      "op": "LT"
    },
    "13911": {
      "op": "ISZERO"
    },
    "13912": {
      "op": "PUSH2",
      "value": "0x366C"
    },
    "13915": {
      "op": "JUMPI"
    },
    "13916": {
      "op": "DUP2"
    },
    "13917": {
      "op": "SLOAD"
    },
    "13918": {
      "op": "DUP12"
    },
    "13919": {
      "op": "DUP3"
    },
    "13920": {
      "op": "ADD"
    },
    "13921": {
      "op": "MSTORE"
    },
    "13922": {
      "op": "SWAP1"
    },
    "13923": {
      "op": "DUP6"
    },
    "13924": {
      "op": "ADD"
    },
    "13925": {
      "op": "SWAP1"
    },
    "13926": {
      "op": "DUP4"
    },
    "13927": {
      "op": "ADD"
    },
    "13928": {
      "op": "PUSH2",
      "value": "0x3653"
    },
    "13931": {
      "op": "JUMP"
    },
    "13932": {
      "op": "JUMPDEST"
    },
    "13933": {
      "op": "POP"
    },
    "13934": {
      "op": "POP"
    },
    "13935": {
      "op": "DUP5"
    },
    "13936": {
      "op": "DUP10"
    },
    "13937": {
      "op": "ADD"
    },
    "13938": {
      "op": "SWAP7"
    },
    "13939": {
      "op": "POP"
    },
    "13940": {
      "op": "JUMPDEST"
    },
    "13941": {
      "op": "POP"
    },
    "13942": {
      "op": "POP"
    },
    "13943": {
      "op": "POP"
    },
    "13944": {
      "op": "POP"
    },
    "13945": {
      "op": "POP"
    },
    "13946": {
      "op": "POP"
    },
    "13947": {
      "op": "SWAP3"
    },
    "13948": {
      "op": "SWAP2"
    },
    "13949": {
      "op": "POP"
    },
    "13950": {
      "op": "POP"
    },
    "13951": {
      "jump": "o",
      "op": "JUMP"
    },
    "13952": {
      "op": "JUMPDEST"
    },
    "13953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13955": {
      "op": "PUSH2",
      "value": "0x368C"
    },
    "13958": {
      "op": "DUP3"
    },
    "13959": {
      "op": "DUP7"
    },
    "13960": {
      "op": "PUSH2",
      "value": "0x35E6"
    },
    "13963": {
      "jump": "i",
      "op": "JUMP"
    },
    "13964": {
      "op": "JUMPDEST"
    },
    "13965": {
      "op": "DUP5"
    },
    "13966": {
      "op": "MLOAD"
    },
    "13967": {
      "op": "PUSH2",
      "value": "0x369C"
    },
    "13970": {
      "op": "DUP2"
    },
    "13971": {
      "op": "DUP4"
    },
    "13972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13974": {
      "op": "DUP10"
    },
    "13975": {
      "op": "ADD"
    },
    "13976": {
      "op": "PUSH2",
      "value": "0x2F66"
    },
    "13979": {
      "jump": "i",
      "op": "JUMP"
    },
    "13980": {
      "op": "JUMPDEST"
    },
    "13981": {
      "op": "PUSH2",
      "value": "0x36A8"
    },
    "13984": {
      "op": "DUP2"
    },
    "13985": {
      "op": "DUP4"
    },
    "13986": {
      "op": "ADD"
    },
    "13987": {
      "op": "DUP7"
    },
    "13988": {
      "op": "PUSH2",
      "value": "0x35E6"
    },
    "13991": {
      "jump": "i",
      "op": "JUMP"
    },
    "13992": {
      "op": "JUMPDEST"
    },
    "13993": {
      "op": "SWAP8"
    },
    "13994": {
      "op": "SWAP7"
    },
    "13995": {
      "op": "POP"
    },
    "13996": {
      "op": "POP"
    },
    "13997": {
      "op": "POP"
    },
    "13998": {
      "op": "POP"
    },
    "13999": {
      "op": "POP"
    },
    "14000": {
      "op": "POP"
    },
    "14001": {
      "op": "POP"
    },
    "14002": {
      "jump": "o",
      "op": "JUMP"
    },
    "14003": {
      "op": "JUMPDEST"
    },
    "14004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14006": {
      "op": "DUP3"
    },
    "14007": {
      "op": "DUP3"
    },
    "14008": {
      "op": "LT"
    },
    "14009": {
      "op": "ISZERO"
    },
    "14010": {
      "op": "PUSH2",
      "value": "0x36C5"
    },
    "14013": {
      "op": "JUMPI"
    },
    "14014": {
      "op": "PUSH2",
      "value": "0x36C5"
    },
    "14017": {
      "op": "PUSH2",
      "value": "0x3541"
    },
    "14020": {
      "jump": "i",
      "op": "JUMP"
    },
    "14021": {
      "op": "JUMPDEST"
    },
    "14022": {
      "op": "POP"
    },
    "14023": {
      "op": "SUB"
    },
    "14024": {
      "op": "SWAP1"
    },
    "14025": {
      "jump": "o",
      "op": "JUMP"
    },
    "14026": {
      "op": "JUMPDEST"
    },
    "14027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14029": {
      "op": "DUP1"
    },
    "14030": {
      "op": "DUP3"
    },
    "14031": {
      "op": "MSTORE"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14034": {
      "op": "SWAP1"
    },
    "14035": {
      "op": "DUP3"
    },
    "14036": {
      "op": "ADD"
    },
    "14037": {
      "op": "MSTORE"
    },
    "14038": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14073": {
      "op": "DUP3"
    },
    "14074": {
      "op": "ADD"
    },
    "14075": {
      "op": "MSTORE"
    },
    "14076": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14095": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14097": {
      "op": "SHL"
    },
    "14098": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14100": {
      "op": "DUP3"
    },
    "14101": {
      "op": "ADD"
    },
    "14102": {
      "op": "MSTORE"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14105": {
      "op": "ADD"
    },
    "14106": {
      "op": "SWAP1"
    },
    "14107": {
      "jump": "o",
      "op": "JUMP"
    },
    "14108": {
      "op": "JUMPDEST"
    },
    "14109": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14116": {
      "op": "SHL"
    },
    "14117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14119": {
      "op": "MSTORE"
    },
    "14120": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14124": {
      "op": "MSTORE"
    },
    "14125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14129": {
      "op": "REVERT"
    },
    "14130": {
      "op": "JUMPDEST"
    },
    "14131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14133": {
      "op": "DUP3"
    },
    "14134": {
      "op": "PUSH2",
      "value": "0x3741"
    },
    "14137": {
      "op": "JUMPI"
    },
    "14138": {
      "op": "PUSH2",
      "value": "0x3741"
    },
    "14141": {
      "op": "PUSH2",
      "value": "0x371C"
    },
    "14144": {
      "jump": "i",
      "op": "JUMP"
    },
    "14145": {
      "op": "JUMPDEST"
    },
    "14146": {
      "op": "POP"
    },
    "14147": {
      "op": "DIV"
    },
    "14148": {
      "op": "SWAP1"
    },
    "14149": {
      "jump": "o",
      "op": "JUMP"
    },
    "14150": {
      "op": "JUMPDEST"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14153": {
      "op": "DUP3"
    },
    "14154": {
      "op": "PUSH2",
      "value": "0x3755"
    },
    "14157": {
      "op": "JUMPI"
    },
    "14158": {
      "op": "PUSH2",
      "value": "0x3755"
    },
    "14161": {
      "op": "PUSH2",
      "value": "0x371C"
    },
    "14164": {
      "jump": "i",
      "op": "JUMP"
    },
    "14165": {
      "op": "JUMPDEST"
    },
    "14166": {
      "op": "POP"
    },
    "14167": {
      "op": "MOD"
    },
    "14168": {
      "op": "SWAP1"
    },
    "14169": {
      "jump": "o",
      "op": "JUMP"
    },
    "14170": {
      "op": "JUMPDEST"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14177": {
      "op": "SHL"
    },
    "14178": {
      "op": "SUB"
    },
    "14179": {
      "op": "DUP6"
    },
    "14180": {
      "op": "DUP2"
    },
    "14181": {
      "op": "AND"
    },
    "14182": {
      "op": "DUP3"
    },
    "14183": {
      "op": "MSTORE"
    },
    "14184": {
      "op": "DUP5"
    },
    "14185": {
      "op": "AND"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14188": {
      "op": "DUP3"
    },
    "14189": {
      "op": "ADD"
    },
    "14190": {
      "op": "MSTORE"
    },
    "14191": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14193": {
      "op": "DUP2"
    },
    "14194": {
      "op": "ADD"
    },
    "14195": {
      "op": "DUP4"
    },
    "14196": {
      "op": "SWAP1"
    },
    "14197": {
      "op": "MSTORE"
    },
    "14198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14202": {
      "op": "DUP3"
    },
    "14203": {
      "op": "ADD"
    },
    "14204": {
      "op": "DUP2"
    },
    "14205": {
      "op": "SWAP1"
    },
    "14206": {
      "op": "MSTORE"
    },
    "14207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14209": {
      "op": "SWAP1"
    },
    "14210": {
      "op": "PUSH2",
      "value": "0x378D"
    },
    "14213": {
      "op": "SWAP1"
    },
    "14214": {
      "op": "DUP4"
    },
    "14215": {
      "op": "ADD"
    },
    "14216": {
      "op": "DUP5"
    },
    "14217": {
      "op": "PUSH2",
      "value": "0x2F92"
    },
    "14220": {
      "jump": "i",
      "op": "JUMP"
    },
    "14221": {
      "op": "JUMPDEST"
    },
    "14222": {
      "op": "SWAP7"
    },
    "14223": {
      "op": "SWAP6"
    },
    "14224": {
      "op": "POP"
    },
    "14225": {
      "op": "POP"
    },
    "14226": {
      "op": "POP"
    },
    "14227": {
      "op": "POP"
    },
    "14228": {
      "op": "POP"
    },
    "14229": {
      "op": "POP"
    },
    "14230": {
      "jump": "o",
      "op": "JUMP"
    },
    "14231": {
      "op": "JUMPDEST"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14236": {
      "op": "DUP3"
    },
    "14237": {
      "op": "DUP5"
    },
    "14238": {
      "op": "SUB"
    },
    "14239": {
      "op": "SLT"
    },
    "14240": {
      "op": "ISZERO"
    },
    "14241": {
      "op": "PUSH2",
      "value": "0x37A9"
    },
    "14244": {
      "op": "JUMPI"
    },
    "14245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14247": {
      "op": "DUP1"
    },
    "14248": {
      "op": "REVERT"
    },
    "14249": {
      "op": "JUMPDEST"
    },
    "14250": {
      "op": "DUP2"
    },
    "14251": {
      "op": "MLOAD"
    },
    "14252": {
      "op": "PUSH2",
      "value": "0x1D43"
    },
    "14255": {
      "op": "DUP2"
    },
    "14256": {
      "op": "PUSH2",
      "value": "0x2F33"
    },
    "14259": {
      "jump": "i",
      "op": "JUMP"
    },
    "14260": {
      "op": "JUMPDEST"
    },
    "14261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14268": {
      "op": "SHL"
    },
    "14269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14271": {
      "op": "MSTORE"
    },
    "14272": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14276": {
      "op": "MSTORE"
    },
    "14277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14281": {
      "op": "REVERT"
    }
  },
  "sha1": "5307eee767f5a8ed0baf69d0bb4c5f15c0af3f6d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title CryptidToken NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, send, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint256 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint256 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        // require(salePrice == msg.value, \"Incorrect ETH value sent.\");\n        require(merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not on whitelist.\");\n        require(totalSupply()  + 1 <= totalSaleSupply, \"Transaction exceeds total sale supply.\");  \n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] = true;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");   \n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");  \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint256 mintAmount\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        // require(salePrice * mintAmount == msg.value, \"Incorrect ETH value sent.\");\n        require(mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function setClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    // to be used in case of WL error\n    function undoClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = false;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    // function setSalePrice(uint256 _salePrice) external onlyOwner {\n    //     salePrice = _salePrice;\n    // }\n\n    function setMaxMintPerTx(uint256 _maxMintPerTx) external onlyOwner {\n        maxMintPerTx = _maxMintPerTx;\n    }\n\n    function withdraw() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No balance to withdraw.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: balance}(\"\");\n        require(success, \"Failed to withdraw balance.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n\n    function verify(address account, bytes32[] calldata merkleProof) external view returns (bool) {\n        if (merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(account)))) {\n            return true;\n        }\n        return false;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "1139:26:16:-:0;710:8770;1139:26;;;-1:-1:-1;710:8770:16;1139:26;;;;;;;;:::i;:::-;-1:-1:-1;1171:37:16;;;;;;;;;;;;;-1:-1:-1;;;1171:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1252:34:16;;;-1:-1:-1;;;;;;1339:76:16;;;;;1950:508;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:3;;2202:5:16;;2209:7;;1456:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2228:15:16::1;:34:::0;;;2272:14:::1;:32:::0;;;2314:15:::1;:34:::0;;;2358:12:::1;:28:::0;;;2396:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2424:27;:15;:25;;;;;:27;;:::i;:::-;1950:508:::0;;;;;;;710:8770;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;710:8770:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:8770:16;;;-1:-1:-1;710:8770:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:1014::-;1190:6;1198;1206;1214;1222;1230;1238;1291:3;1279:9;1270:7;1266:23;1262:33;1259:53;;;1308:1;1305;1298:12;1259:53;1335:16;;-1:-1:-1;;;;;1400:14:17;;;1397:34;;;1427:1;1424;1417:12;1397:34;1450:61;1503:7;1494:6;1483:9;1479:22;1450:61;:::i;:::-;1440:71;;1557:2;1546:9;1542:18;1536:25;1520:41;;1586:2;1576:8;1573:16;1570:36;;;1602:1;1599;1592:12;1570:36;1625:63;1680:7;1669:8;1658:9;1654:24;1625:63;:::i;:::-;1615:73;;1734:2;1723:9;1719:18;1713:25;1697:41;;1763:2;1753:8;1750:16;1747:36;;;1779:1;1776;1769:12;1747:36;;1802:63;1857:7;1846:8;1835:9;1831:24;1802:63;:::i;:::-;1792:73;;;1905:2;1894:9;1890:18;1884:25;1874:35;;1949:3;1938:9;1934:19;1928:26;1918:36;;1994:3;1983:9;1979:19;1973:26;1963:36;;2039:3;2028:9;2024:19;2018:26;2008:36;;1036:1014;;;;;;;;;;:::o;2055:380::-;2134:1;2130:12;;;;2177;;;2198:61;;2252:4;2244:6;2240:17;2230:27;;2198:61;2305:2;2297:6;2294:14;2274:18;2271:38;2268:161;;;2351:10;2346:3;2342:20;2339:1;2332:31;2386:4;2383:1;2376:15;2414:4;2411:1;2404:15;2268:161;;2055:380;;;:::o;:::-;710:8770:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}