{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wlAddress",
          "type": "address"
        }
      ],
      "name": "overrideClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prevStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dest1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest4",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest5",
          "type": "address"
        }
      ],
      "name": "setWithdrawAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest4",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest5",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "9": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        3028
      ],
      "Context": [
        2570
      ],
      "Counters": [
        2148
      ],
      "CryptidToken": [
        976
      ],
      "ERC165": [
        3255
      ],
      "ERC721": [
        2044
      ],
      "ERC721Burnable": [
        2074
      ],
      "IERC165": [
        3267
      ],
      "IERC721": [
        2686
      ],
      "IERC721Metadata": [
        2731
      ],
      "IERC721Receiver": [
        2704
      ],
      "MerkleProof": [
        2236
      ],
      "Ownable": [
        1081
      ],
      "Pausable": [
        1173
      ],
      "ReentrancyGuard": [
        1213
      ],
      "SafeMath": [
        2548
      ],
      "Strings": [
        3231
      ]
    },
    "id": 977,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2045,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1082,
        "src": "116:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1214,
        "src": "169:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2549,
        "src": "232:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2149,
        "src": "290:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1174,
        "src": "343:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2075,
        "src": "399:76:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2237,
        "src": "476:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2044,
              "src": "571:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "571:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1173,
              "src": "579:8:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "579:8:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1081,
              "src": "589:7:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "589:7:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1213,
              "src": "598:15:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "598:15:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2074,
              "src": "615:14:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "615:14:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 976,
        "linearizedBaseContracts": [
          976,
          2074,
          1213,
          1081,
          1173,
          2044,
          2731,
          2686,
          3255,
          3267,
          2570
        ],
        "name": "CryptidToken",
        "nameLocation": "555:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3231,
              "src": "642:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "636:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "id": 23,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2548,
              "src": "673:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "667:27:16",
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 29,
            "libraryName": {
              "id": 26,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2148,
              "src": "705:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "699:36:16",
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2080,
                "src": "718:16:16"
              },
              "referencedDeclaration": 2080,
              "src": "718:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2080_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 33,
            "libraryName": {
              "id": 30,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2236,
              "src": "746:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "740:32:16",
            "typeName": {
              "baseType": {
                "id": 31,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "762:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 32,
              "nodeType": "ArrayTypeName",
              "src": "762:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "803:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "778:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2080_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 35,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2080,
                "src": "778:16:16"
              },
              "referencedDeclaration": 2080,
              "src": "778:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2080_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 38,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "844:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "829:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "829:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 40,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "875:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "861:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "861:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 43,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "909:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "895:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "895:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "919:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 46,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "941:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "927:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "927:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "957:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "984:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "970:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 47,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "970:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "992:1:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1012:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "999:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 50,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "999:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1047:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1035:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1035:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1064:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1087:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1075:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1075:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61869a93",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawDest1",
            "nameLocation": "1137:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1122:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1153:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1214392",
            "id": 63,
            "mutability": "mutable",
            "name": "withdrawDest2",
            "nameLocation": "1225:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1210:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 61,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1210:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1241:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c795047",
            "id": 66,
            "mutability": "mutable",
            "name": "withdrawDest3",
            "nameLocation": "1317:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1302:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1302:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1333:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2fab8b9",
            "id": 69,
            "mutability": "mutable",
            "name": "withdrawDest4",
            "nameLocation": "1409:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1394:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1394:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1425:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db993f56",
            "id": 72,
            "mutability": "mutable",
            "name": "withdrawDest5",
            "nameLocation": "1501:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1486:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 70,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1486:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1517:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 74,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1808:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1793:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1793:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 78,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1884:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1852:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1860:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1852:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 76,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1871:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 80,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1958:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1943:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1943:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 82,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "2019:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2004:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2004:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 84,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "2083:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2068:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2068:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 87,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "2128:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2113:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2113:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2140:9:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "2424:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "2434:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2452:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2434:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:34:16"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "2478:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2495:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2478:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:32:16"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2520:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 117,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2538:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2520:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2520:34:16"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2564:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 121,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2579:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2564:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:28:16"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "2602:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2612:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2602:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 128,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2630:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2080_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "2630:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:27:16"
                }
              ]
            },
            "id": 134,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 104,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89,
                    "src": "2408:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 105,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "2415:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 103,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2044,
                  "src": "2401:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2401:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2193:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2179:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2222:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2208:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2253:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2239:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2279:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2271:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2313:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2305:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2346:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2338:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2378:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2372:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2372:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:229:16"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2424:0:16"
            },
            "scope": 976,
            "src": "2158:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2740:140:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 144,
                            "name": "_proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2777:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 145,
                            "name": "_root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2785:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 149,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2819:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2819:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 147,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2802:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2802:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2802:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 146,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2792:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2792:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 142,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2236,
                            "src": "2758:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$2236_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2172,
                          "src": "2758:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2758:74:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2834:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:112:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:112:16"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "2872:1:16"
                }
              ]
            },
            "id": 159,
            "name": "isValidMerkleProof",
            "nameLocation": "2679:18:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "2717:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2698:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2698:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "2698:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "2733:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2725:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2697:42:16"
            },
            "src": "2670:210:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2953:103:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 166,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2971:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 167,
                            "name": "_numberOfTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2980:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2971:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2999:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2999:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2971:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3010:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2963:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:75:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:75:16"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "3048:1:16"
                }
              ]
            },
            "id": 177,
            "name": "isCorrectPayment",
            "nameLocation": "2895:16:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2920:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2912:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "2936:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2928:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:41:16"
            },
            "src": "2886:170:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "3086:95:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 180,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "3104:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "3104:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3117:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3117:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3104:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063616c6c657220697320616e6f7468657220636f6e74726163742e",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_198257e8c33fabcd47ec4081ddcdad7319be62c40dd4bd8427944b514edb889a",
                          "typeString": "literal_string \"The caller is another contract.\""
                        },
                        "value": "The caller is another contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_198257e8c33fabcd47ec4081ddcdad7319be62c40dd4bd8427944b514edb889a",
                          "typeString": "literal_string \"The caller is another contract.\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3096:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:67:16"
                },
                {
                  "id": 188,
                  "nodeType": "PlaceholderStatement",
                  "src": "3173:1:16"
                }
              ]
            },
            "id": 190,
            "name": "callerIsUser",
            "nameLocation": "3071:12:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3083:2:16"
            },
            "src": "3062:119:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3333:349:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 200,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "3351:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3365:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3351:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3368:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        },
                        "value": "Airdrop amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        }
                      ],
                      "id": 199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3343:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 207,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "3426:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3426:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 209,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3443:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3426:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 211,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "3458:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3426:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3475:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3418:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3418:102:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3418:102:16"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "3573:103:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 227,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "3593:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 228,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "3598:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2092,
                                "src": "3598:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3598:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 226,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "3587:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3587:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "3587:37:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 233,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "3638:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2106,
                            "src": "3638:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3638:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "3638:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3550:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 221,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "3555:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3550:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "initializationExpression": {
                    "assignments": [
                      217
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3543:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "3535:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 219,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3547:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3535:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3568:3:16",
                      "subExpression": {
                        "id": 223,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3568:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 225,
                    "nodeType": "ExpressionStatement",
                    "src": "3568:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3530:146:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 196,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "3318:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3318:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "3223:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "3253:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3247:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3283:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3275:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3237:55:16"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3333:0:16"
            },
            "scope": 976,
            "src": "3214:468:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "3988:382:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 262,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "4006:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4015:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4006:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e74696e67206e6f7420696e697469617465642e",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4018:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a6df76625c31eaf4b0c0658ee94c4be1d0714ec40d8b0b8237b8032136ad3c8",
                          "typeString": "literal_string \"Whitelist minting not initiated.\""
                        },
                        "value": "Whitelist minting not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a6df76625c31eaf4b0c0658ee94c4be1d0714ec40d8b0b8237b8032136ad3c8",
                          "typeString": "literal_string \"Whitelist minting not initiated.\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3998:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3998:55:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 269,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "4071:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "expression": {
                              "id": 270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4079:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4079:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4071:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4094:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4071:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4063:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4063:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 279,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "4154:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4154:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4170:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4154:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 283,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4175:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4154:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4192:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4146:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4146:90:16"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 288,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "4246:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 291,
                      "indexExpression": {
                        "expression": {
                          "id": 289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4254:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4254:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4246:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4268:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4246:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "4246:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 296,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4288:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4288:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 298,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4300:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2080_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2092,
                          "src": "4300:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4300:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 295,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1794,
                      "src": "4282:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4282:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "4282:44:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 303,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4336:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2080_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "4336:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 247,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 244,
                    "src": "3851:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  },
                  {
                    "id": 248,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "3865:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 249,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 246,
                  "name": "isValidMerkleProof",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "3832:18:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3832:44:16"
              },
              {
                "arguments": [
                  {
                    "id": 251,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87,
                    "src": "3903:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3914:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 250,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "3886:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3886:30:16"
              },
              {
                "id": 255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 254,
                  "name": "callerIsUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "3926:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3926:12:16"
              },
              {
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1212,
                  "src": "3947:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3947:12:16"
              },
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1129,
                  "src": "3969:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3969:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3729:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "3771:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "3752:31:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3752:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "3752:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3742:47:16"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:16"
            },
            "scope": 976,
            "src": "3720:650:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "4496:380:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 317,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "4514:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4523:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "4514:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d2073616c65206e6f7420696e697469617465642e",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a9da6ef027a86290b07c6f7a39a1d36c6ec85eb1e3f804f92eeb9cb0747bff9",
                          "typeString": "literal_string \"Team sale not initiated.\""
                        },
                        "value": "Team sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a9da6ef027a86290b07c6f7a39a1d36c6ec85eb1e3f804f92eeb9cb0747bff9",
                          "typeString": "literal_string \"Team sale not initiated.\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4506:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4506:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4506:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 324,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "4571:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 325,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "4585:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4571:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 327,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "4602:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4571:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4618:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        },
                        "value": "Transaction exceeds total team-sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4563:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4563:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "4563:100:16"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "4679:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 333,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "4696:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4679:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:28:16"
                },
                {
                  "body": {
                    "id": 359,
                    "nodeType": "Block",
                    "src": "4760:110:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 347,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4780:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4780:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 349,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "4792:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2092,
                                "src": "4792:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4792:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 346,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "4774:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4774:44:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "4774:44:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 354,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "4832:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2106,
                            "src": "4832:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4832:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "4832:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 340,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "4737:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 341,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "4742:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4737:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 360,
                  "initializationExpression": {
                    "assignments": [
                      337
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4730:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "4722:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4722:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 339,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4734:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4722:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4755:3:16",
                      "subExpression": {
                        "id": 343,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "4755:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 345,
                    "nodeType": "ExpressionStatement",
                    "src": "4755:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4717:153:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 313,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "4481:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4481:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "4412:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4436:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4430:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:33:16"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4496:0:16"
            },
            "scope": 976,
            "src": "4403:473:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "5119:504:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 378,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "5137:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5146:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "5137:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74206e6f7420696e69746961697465642e",
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5149:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaddfbe00c3303d8dbd1c0586a7dd64593b4d340a7dba01e5c873a6dbc89a961",
                          "typeString": "literal_string \"Public mint not initiaited.\""
                        },
                        "value": "Public mint not initiaited."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aaddfbe00c3303d8dbd1c0586a7dd64593b4d340a7dba01e5c873a6dbc89a961",
                          "typeString": "literal_string \"Public mint not initiaited.\""
                        }
                      ],
                      "id": 377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5129:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:50:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 385,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "5197:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5197:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 387,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "5214:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5197:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 389,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "5229:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5197:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5246:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        },
                        "value": "Transaction exceeds total sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5189:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5189:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "5189:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 395,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "5304:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5318:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5304:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5321:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5296:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5296:63:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "5296:63:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 402,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "5377:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 403,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "5392:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "5377:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5406:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5369:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5369:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "5369:82:16"
                },
                {
                  "body": {
                    "id": 431,
                    "nodeType": "Block",
                    "src": "5507:110:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 419,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5527:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5527:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 421,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "5539:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 422,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2092,
                                "src": "5539:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5539:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 418,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1794,
                            "src": "5521:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5521:44:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 425,
                        "nodeType": "ExpressionStatement",
                        "src": "5521:44:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 426,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "5579:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2080_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 428,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2106,
                            "src": "5579:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5579:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "5579:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 412,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "5484:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 413,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "5489:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5484:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "initializationExpression": {
                    "assignments": [
                      409
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5477:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "5469:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5469:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 411,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5481:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5469:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5502:3:16",
                      "subExpression": {
                        "id": 415,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 409,
                        "src": "5502:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 417,
                    "nodeType": "ExpressionStatement",
                    "src": "5502:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "5464:153:16"
                }
              ]
            },
            "functionSelector": "858e83b5",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 367,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87,
                    "src": "5023:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 368,
                    "name": "_mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "5034:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 366,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "5006:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5006:40:16"
              },
              {
                "id": 371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 370,
                  "name": "callerIsUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "5056:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5056:12:16"
              },
              {
                "id": 373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 372,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1212,
                  "src": "5077:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5077:12:16"
              },
              {
                "id": 375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 374,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1129,
                  "src": "5099:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5099:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4920:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4946:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "4940:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4940:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4930:33:16"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5119:0:16"
            },
            "scope": 976,
            "src": "4911:712:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "5685:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 439,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "5695:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5695:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "5695:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "5675:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5675:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "5660:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5665:2:16"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5685:0:16"
            },
            "scope": 976,
            "src": "5651:59:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "5752:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 448,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "5762:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5762:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 445,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "5742:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5742:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "5725:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5732:2:16"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:16"
            },
            "scope": 976,
            "src": "5716:63:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "5889:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 459,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "5899:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 461,
                      "indexExpression": {
                        "id": 460,
                        "name": "_wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "5907:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5899:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5921:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5899:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5899:26:16"
                }
              ]
            },
            "functionSelector": "bbc903ea",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 457,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 456,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "5880:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5880:9:16"
              }
            ],
            "name": "overrideClaim",
            "nameLocation": "5839:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_wlAddress",
                  "nameLocation": "5861:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "5853:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5853:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5852:20:16"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5889:0:16"
            },
            "scope": 976,
            "src": "5830:102:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "5999:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 473,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "6009:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 474,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "6022:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6009:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "6009:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 471,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 470,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "5989:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5989:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5947:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5969:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5961:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5961:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5960:21:16"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5999:0:16"
            },
            "scope": 976,
            "src": "5938:102:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "6110:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6128:15:16",
                        "subExpression": {
                          "id": 486,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6129:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6145:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6120:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6120:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6120:46:16"
                },
                {
                  "expression": {
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 491,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6176:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 492,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "6186:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6176:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "6176:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 482,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "6100:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6100:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "6055:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "6080:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "6066:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6066:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6065:27:16"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6110:0:16"
            },
            "scope": 976,
            "src": "6046:158:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "6257:173:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 504,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6281:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6275:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 502,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6275:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6275:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6275:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6299:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6275:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6302:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6267:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6267:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6267:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6346:15:16",
                        "subExpression": {
                          "id": 513,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6347:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6363:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6338:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6338:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "6338:54:16"
                },
                {
                  "expression": {
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 518,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6402:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6419:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6402:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "6402:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 499,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 498,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "6247:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6247:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "6224:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6237:2:16"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6257:0:16"
            },
            "scope": 976,
            "src": "6215:215:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 554,
              "nodeType": "Block",
              "src": "6474:290:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 529,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6492:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6516:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6492:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6522:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6484:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6484:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "6484:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 536,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6599:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 538,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6610:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6599:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6616:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6599:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652077686974656c697374206d696e74696e672063616e20626567696e",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6619:61:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        },
                        "value": "Merkle root must be set beefore whitelist minting can begin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6591:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6591:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "6591:90:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 545,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "6699:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6707:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6699:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206166746572207075626c69632073616c65",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6710:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        },
                        "value": "No stages after public sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6691:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6691:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "6691:49:16"
                },
                {
                  "expression": {
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6750:7:16",
                    "subExpression": {
                      "id": 551,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6750:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "6750:7:16"
                }
              ]
            },
            "functionSelector": "ee3743ab",
            "id": 555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 525,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "6464:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6464:9:16"
              }
            ],
            "name": "nextStage",
            "nameLocation": "6445:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6454:2:16"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6474:0:16"
            },
            "scope": 976,
            "src": "6436:328:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "6808:75:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 561,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "6826:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6834:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6826:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206265666f726520302e",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6837:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b14feeaf9ee5da0aef43e4daedec3bd379df734212251649ae5005294daebc80",
                          "typeString": "literal_string \"No stages before 0.\""
                        },
                        "value": "No stages before 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b14feeaf9ee5da0aef43e4daedec3bd379df734212251649ae5005294daebc80",
                          "typeString": "literal_string \"No stages before 0.\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6818:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6818:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "6818:41:16"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6869:7:16",
                    "subExpression": {
                      "id": 567,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6869:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "6869:7:16"
                }
              ]
            },
            "functionSelector": "cbd0a2b5",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 558,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 557,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "6798:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6798:9:16"
              }
            ],
            "name": "prevStage",
            "nameLocation": "6779:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6788:2:16"
            },
            "returnParameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6808:0:16"
            },
            "scope": 976,
            "src": "6770:113:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "6961:52:16",
              "statements": [
                {
                  "expression": {
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 578,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "6971:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 579,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "6988:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6971:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "6971:35:16"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 576,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 575,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "6951:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6951:9:16"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "6898:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "6924:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "6916:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6916:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6915:28:16"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6961:0:16"
            },
            "scope": 976,
            "src": "6889:124:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "7095:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "7105:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 591,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "7121:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7105:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 587,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "7085:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7085:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "7028:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "7059:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "7045:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7045:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7044:33:16"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:16"
            },
            "scope": 976,
            "src": "7019:126:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "7219:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 602,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "7229:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 603,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "7241:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7229:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "7229:25:16"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 600,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 599,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "7209:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7209:9:16"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "7160:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "7187:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "7179:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7179:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7178:23:16"
            },
            "returnParameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7219:0:16"
            },
            "scope": 976,
            "src": "7151:110:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "7333:48:16",
              "statements": [
                {
                  "expression": {
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 614,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "7343:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 615,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "7358:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "7343:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "7343:31:16"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 611,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "7323:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7323:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "7276:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "7298:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "7292:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:24:16"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7333:0:16"
            },
            "scope": 976,
            "src": "7267:114:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "7462:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 629,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "7486:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7480:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 627,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7480:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7480:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7480:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7512:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7480:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7515:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7472:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7575:21:16",
                        "subExpression": {
                          "id": 638,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7576:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7598:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7567:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7567:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "7567:60:16"
                },
                {
                  "expression": {
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 643,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "7637:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 644,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "7654:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7637:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "7637:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 623,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "7452:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7452:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "7396:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "7428:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "7414:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7414:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7413:31:16"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7462:0:16"
            },
            "scope": 976,
            "src": "7387:289:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 674,
              "nodeType": "Block",
              "src": "7731:209:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 656,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "7755:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7749:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 654,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7749:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7749:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7749:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7780:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7749:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7783:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7741:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7741:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "7741:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7836:21:16",
                        "subExpression": {
                          "id": 665,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7837:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7859:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7828:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7828:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "7828:68:16"
                },
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 670,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7906:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7929:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7906:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "7906:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 675,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 650,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "7721:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7721:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "7691:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7711:2:16"
            },
            "returnParameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7731:0:16"
            },
            "scope": 976,
            "src": "7682:258:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 710,
              "nodeType": "Block",
              "src": "8071:167:16",
              "statements": [
                {
                  "expression": {
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 690,
                      "name": "withdrawDest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "8081:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 691,
                      "name": "_dest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "8097:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8081:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "8081:22:16"
                },
                {
                  "expression": {
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 694,
                      "name": "withdrawDest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "8113:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 695,
                      "name": "_dest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "8129:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8113:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "8113:22:16"
                },
                {
                  "expression": {
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 698,
                      "name": "withdrawDest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "8145:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 699,
                      "name": "_dest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "8161:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8145:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "8145:22:16"
                },
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "withdrawDest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "8177:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 703,
                      "name": "_dest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "8193:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8177:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "8177:22:16"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 706,
                      "name": "withdrawDest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "8209:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "_dest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "8225:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8209:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:22:16"
                }
              ]
            },
            "functionSelector": "ea74e190",
            "id": 711,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 688,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 687,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "8061:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8061:9:16"
              }
            ],
            "name": "setWithdrawAddress",
            "nameLocation": "7955:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_dest1",
                  "nameLocation": "7982:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "7974:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7974:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_dest2",
                  "nameLocation": "7998:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "7990:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_dest3",
                  "nameLocation": "8014:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "8006:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_dest4",
                  "nameLocation": "8030:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "8022:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8022:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "_dest5",
                  "nameLocation": "8046:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "8038:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8038:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7973:80:16"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8071:0:16"
            },
            "scope": 976,
            "src": "7946:292:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "8289:794:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 719,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8315:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$976",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$976",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8307:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 717,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8307:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8307:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8307:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8331:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8307:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8334:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8299:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8299:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "8299:60:16"
                },
                {
                  "assignments": [
                    728,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "ms",
                      "nameLocation": "8375:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "8370:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8370:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 748,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8460:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 731,
                              "name": "withdrawDest1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "8391:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8383:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 729,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8383:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8383:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8383:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8453:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "373030",
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8444:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  },
                                  "value": "700"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 736,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8426:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 735,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8418:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 734,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8418:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 737,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8418:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8418:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "8418:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8418:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2457,
                            "src": "8418:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8418:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8383:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8383:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8369:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "ms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "8481:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2031206661696c6564",
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8485:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        },
                        "value": "withdrawl 1 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        }
                      ],
                      "id": 749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8473:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8473:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "8473:33:16"
                },
                {
                  "assignments": [
                    755,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "ns",
                      "nameLocation": "8522:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "8517:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8517:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 775,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8607:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 758,
                              "name": "withdrawDest2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "8538:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8530:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 756,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8530:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8530:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8530:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8600:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 767,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8591:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 763,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8573:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8565:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 761,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8565:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8565:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8565:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "8565:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8565:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2457,
                            "src": "8565:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8565:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8530:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8530:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8516:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 777,
                        "name": "ns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "8629:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2032206661696c6564",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8633:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        },
                        "value": "withdrawl 2 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8621:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8621:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "8621:33:16"
                },
                {
                  "assignments": [
                    782,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 782,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "8670:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "8665:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 781,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8665:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 802,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8755:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 785,
                              "name": "withdrawDest3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "8686:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8678:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 783,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8678:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8678:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8748:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8739:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 790,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8721:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 789,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8713:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 788,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8713:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8713:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8713:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "8713:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8713:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2457,
                            "src": "8713:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8713:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8678:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8678:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8664:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 804,
                        "name": "cr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "8777:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2033206661696c6564",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8781:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        },
                        "value": "withdrawl 3 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        }
                      ],
                      "id": 803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8769:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8769:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "8769:33:16"
                },
                {
                  "assignments": [
                    809,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 809,
                      "mutability": "mutable",
                      "name": "sn",
                      "nameLocation": "8818:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "8813:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 808,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8813:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 829,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8902:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 812,
                              "name": "withdrawDest4",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "8834:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8826:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 810,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8826:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8826:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8826:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8895:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "3435",
                                  "id": 821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8887:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  },
                                  "value": "45"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 817,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8869:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$976",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 816,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8861:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 815,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8861:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8861:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8861:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "8861:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8861:29:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2457,
                            "src": "8861:33:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8861:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8826:75:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8826:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8812:93:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "sn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "8923:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2034206661696c6564",
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8927:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        },
                        "value": "withdrawl 4 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        }
                      ],
                      "id": 830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8915:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8915:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "8915:33:16"
                },
                {
                  "assignments": [
                    836,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "mutability": "mutable",
                      "name": "gr",
                      "nameLocation": "8964:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 856,
                      "src": "8959:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8959:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 850,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9030:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 839,
                              "name": "withdrawDest5",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "8980:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8972:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 837,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8972:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8972:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8972:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 844,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9015:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$976",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$976",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9007:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 842,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9007:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9007:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9007:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8972:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8972:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8958:75:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 852,
                        "name": "gr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "9051:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2035206661696c6564",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9055:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        },
                        "value": "withdrawl 5 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        }
                      ],
                      "id": 851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9043:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9043:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "9043:33:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 714,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 713,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1023,
                  "src": "8279:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8279:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "8253:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8261:2:16"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8289:0:16"
            },
            "scope": 976,
            "src": "8244:839:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "9174:108:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 863,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "9192:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9192:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9208:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9192:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9211:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9184:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9184:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "9184:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 871,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 906,
                          "src": "9261:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9261:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 870,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1359,
                      "src": "9253:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9253:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 861,
                  "id": 874,
                  "nodeType": "Return",
                  "src": "9246:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "9127:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9142:2:16"
            },
            "returnParameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "9166:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9166:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9165:9:16"
            },
            "scope": 976,
            "src": "9118:164:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "9339:100:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 882,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "9357:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9357:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9373:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9357:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9376:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9349:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9349:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "9349:52:16"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 889,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 906,
                          "src": "9418:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9418:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 891,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9417:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "9411:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "9297:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9307:2:16"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "9331:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9331:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9330:9:16"
            },
            "scope": 976,
            "src": "9288:151:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "9498:53:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 899,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "9515:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$2080_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2092,
                        "src": "9515:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2080_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9515:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9543:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9515:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 898,
                  "id": 904,
                  "nodeType": "Return",
                  "src": "9508:36:16"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9454:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9465:2:16"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "9489:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9489:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9488:9:16"
            },
            "scope": 976,
            "src": "9445:106:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1421
            ],
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "9645:178:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 916,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "9671:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 915,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1652,
                          "src": "9663:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9663:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9681:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 914,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9655:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9655:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "9655:76:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 925,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "9772:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 926,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 908,
                                "src": "9781:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3113,
                              "src": "9781:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9781:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 929,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "9801:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 923,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9755:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9755:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9755:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9748:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 921,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9748:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 932,
                  "nodeType": "Return",
                  "src": "9741:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9566:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9612:8:16"
            },
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9583:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "9575:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9575:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9574:17:16"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "9630:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9630:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9629:15:16"
            },
            "scope": 976,
            "src": "9557:266:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "9884:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 939,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "9901:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 940,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "9919:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9919:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9901:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 938,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "9894:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "9838:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9851:2:16"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "9875:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9875:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9874:9:16"
            },
            "scope": 976,
            "src": "9829:110:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 952,
              "nodeType": "Block",
              "src": "9997:29:16",
              "statements": [
                {
                  "expression": {
                    "id": 950,
                    "name": "stage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "10014:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 949,
                  "id": 951,
                  "nodeType": "Return",
                  "src": "10007:12:16"
                }
              ]
            },
            "functionSelector": "fcaa7664",
            "id": 953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStage",
            "nameLocation": "9958:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9966:2:16"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "9990:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9990:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9989:7:16"
            },
            "scope": 976,
            "src": "9949:77:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2043
            ],
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "10145:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 969,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "10182:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 970,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 957,
                        "src": "10188:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 971,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "10192:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 966,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10155:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$976_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2043,
                      "src": "10155:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10155:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 973,
                  "nodeType": "ExpressionStatement",
                  "src": "10155:45:16"
                }
              ]
            },
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 961,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1129,
                  "src": "10114:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "10114:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10041:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 964,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 963,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2044,
                  "src": "10137:6:16"
                }
              ],
              "src": "10128:16:16"
            },
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10070:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10062:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10062:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10084:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10076:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10076:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10096:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10088:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10088:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10061:43:16"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10145:0:16"
            },
            "scope": 976,
            "src": "10032:175:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 977,
        "src": "546:9664:16",
        "usedErrors": []
      }
    ],
    "src": "32:10178:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600b916200021d565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600c916200021d565b50600d805461ff01600160c01b031916771953bc1ff76f5e61cd775a4482bd85bac56ad1eb00000000179055600e80547312b58f5331a6dc897932aa7fb5101667acdf03e26001600160a01b03199182168117909255600f8054731953bc1ff76f5e61cd775a4482bd85bac56ad1eb9083161790556010805482168317905560118054909116909117905567016345785d8a0000601755348015620000ee57600080fd5b5060405162003f1938038062003f19833981016040819052620001119162000390565b8651879087906200012a9060009060208501906200021d565b508051620001409060019060208401906200021d565b50506006805460ff19169055506200015833620001ba565b6001600755601284905560148390556016829055600d805461ff00191661010060ff84160217905584516200019590600b9060208801906200021d565b50620001ad60086200021460201b620027a41760201c565b5050505050505062000497565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b8280546200022b906200045a565b90600052602060002090601f0160209004810192826200024f57600085556200029a565b82601f106200026a57805160ff19168380011785556200029a565b828001600101855582156200029a579182015b828111156200029a5782518255916020019190600101906200027d565b50620002a8929150620002ac565b5090565b5b80821115620002a85760008155600101620002ad565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002eb57600080fd5b81516001600160401b0380821115620003085762000308620002c3565b604051601f8301601f19908116603f01168101908282118183101715620003335762000333620002c3565b816040528381526020925086838588010111156200035057600080fd5b600091505b8382101562000374578582018301518183018401529082019062000355565b83821115620003865760008385830101525b9695505050505050565b600080600080600080600060e0888a031215620003ac57600080fd5b87516001600160401b0380821115620003c457600080fd5b620003d28b838c01620002d9565b985060208a0151915080821115620003e957600080fd5b620003f78b838c01620002d9565b975060408a01519150808211156200040e57600080fd5b506200041d8a828b01620002d9565b955050606088015193506080880151925060a0880151915060c088015160ff811681146200044a57600080fd5b8091505092959891949750929550565b600181811c908216806200046f57607f821691505b602082108114156200049157634e487b7160e01b600052602260045260246000fd5b50919050565b613a7280620004a76000396000f3fe6080604052600436106103a25760003560e01c806381c162f2116101e7578063c87b56dd1161010d578063de7fcb1d116100a0578063ee3743ab1161006f578063ee3743ab14610a56578063f2fde38b14610a6b578063f51f96dd14610a8b578063fcaa766414610aa157600080fd5b8063de7fcb1d146109a7578063e7bc8208146109d8578063e985e9c5146109ed578063ea74e19014610a3657600080fd5b8063d6d67a09116100dc578063d6d67a091461093d578063da3ef23f14610952578063db993f5614610972578063de5f98661461099257600080fd5b8063c87b56dd146108b8578063c884ef83146108d8578063cbd0a2b514610908578063d2fab8b91461091d57600080fd5b8063b121439211610185578063c29de63011610154578063c29de63014610858578063c321458114610878578063c66828621461088e578063c6ab67a3146108a357600080fd5b8063b1214392146107d8578063b3caad01146107f8578063b88d4fde14610818578063bbc903ea1461083857600080fd5b80638da5cb5b116101c15780638da5cb5b1461075f57806395d89b41146107825780639a2a9c3d14610797578063a22cb465146107b857600080fd5b806381c162f2146107225780638456cb5914610737578063858e83b51461074c57600080fd5b806342842e0e116102cc5780636c0360eb1161026a578063782319781161023957806378231978146106ac578063791a2519146106c25780637b671780146106e25780637cb647591461070257600080fd5b80636c0360eb1461064d5780636cbb89851461066257806370a0823114610677578063715018a61461069757600080fd5b80635c975abb116102a65780635c975abb146105cd57806361869a93146105e5578063622e4e781461060d5780636352211e1461062d57600080fd5b806342842e0e1461056d57806342966c681461058d57806355f804b3146105ad57600080fd5b806320841a6a11610344578063372f657c11610313578063372f657c1461051d5780633c795047146105305780633ccfd60b146105505780633f4ba83a1461055857600080fd5b806320841a6a146104b157806323b872dd146104d15780632eb4a7ab146104f157806333e614131461050757600080fd5b8063088139a611610380578063088139a614610436578063095ea7b31461045a578063109695231461047c57806318160ddd1461049c57600080fd5b806301ffc9a7146103a757806306fdde03146103dc578063081812fc146103fe575b600080fd5b3480156103b357600080fd5b506103c76103c23660046132a8565b610ab9565b60405190151581526020015b60405180910390f35b3480156103e857600080fd5b506103f1610b0b565b6040516103d3919061331d565b34801561040a57600080fd5b5061041e610419366004613330565b610b9d565b6040516001600160a01b0390911681526020016103d3565b34801561044257600080fd5b5061044c60155481565b6040519081526020016103d3565b34801561046657600080fd5b5061047a610475366004613365565b610c37565b005b34801561048857600080fd5b5061047a61049736600461341b565b610d4d565b3480156104a857600080fd5b5061044c610e4f565b3480156104bd57600080fd5b5061047a6104cc366004613330565b610e6b565b3480156104dd57600080fd5b5061047a6104ec366004613464565b610ea0565b3480156104fd57600080fd5b5061044c60095481565b34801561051357600080fd5b5061044c60125481565b61047a61052b3660046134a0565b610ed2565b34801561053c57600080fd5b50600f5461041e906001600160a01b031681565b61047a61122b565b34801561056457600080fd5b5061047a6115ee565b34801561057957600080fd5b5061047a610588366004613464565b611628565b34801561059957600080fd5b5061047a6105a8366004613330565b611643565b3480156105b957600080fd5b5061047a6105c836600461341b565b6116bd565b3480156105d957600080fd5b5060065460ff166103c7565b3480156105f157600080fd5b50600d5461041e9064010000000090046001600160a01b031681565b34801561061957600080fd5b5061047a610628366004613526565b61174e565b34801561063957600080fd5b5061041e610648366004613330565b61179a565b34801561065957600080fd5b506103f1611811565b34801561066e57600080fd5b5061041e61189f565b34801561068357600080fd5b5061044c610692366004613541565b6118fb565b3480156106a357600080fd5b5061047a611982565b3480156106b857600080fd5b5061044c60165481565b3480156106ce57600080fd5b5061047a6106dd366004613330565b6119bc565b3480156106ee57600080fd5b5061047a6106fd366004613526565b6119f1565b34801561070e57600080fd5b5061047a61071d366004613330565b611b3f565b34801561072e57600080fd5b5061047a611b74565b34801561074357600080fd5b5061047a611c7c565b61047a61075a366004613526565b611cb4565b34801561076b57600080fd5b5060065461010090046001600160a01b031661041e565b34801561078e57600080fd5b506103f1611fb8565b3480156107a357600080fd5b50600d546103c7906301000000900460ff1681565b3480156107c457600080fd5b5061047a6107d336600461355c565b611fc7565b3480156107e457600080fd5b50600e5461041e906001600160a01b031681565b34801561080457600080fd5b5061047a610813366004613598565b611fd2565b34801561082457600080fd5b5061047a6108333660046135cb565b612117565b34801561084457600080fd5b5061047a610853366004613541565b61214f565b34801561086457600080fd5b50600d546103c79062010000900460ff1681565b34801561088457600080fd5b5061044c60145481565b34801561089a57600080fd5b506103f16121a3565b3480156108af57600080fd5b506103f16121b0565b3480156108c457600080fd5b506103f16108d3366004613330565b6121bd565b3480156108e457600080fd5b506103c76108f3366004613541565b60136020526000908152604090205460ff1681565b34801561091457600080fd5b5061047a612271565b34801561092957600080fd5b5060105461041e906001600160a01b031681565b34801561094957600080fd5b5061044c612317565b34801561095e57600080fd5b5061047a61096d36600461341b565b612370565b34801561097e57600080fd5b5060115461041e906001600160a01b031681565b34801561099e57600080fd5b5061044c6123b3565b3480156109b357600080fd5b50600d546109c690610100900460ff1681565b60405160ff90911681526020016103d3565b3480156109e457600080fd5b5061047a6123ca565b3480156109f957600080fd5b506103c7610a08366004613647565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a4257600080fd5b5061047a610a51366004613663565b6124c4565b348015610a6257600080fd5b5061047a612563565b348015610a7757600080fd5b5061047a610a86366004613541565b612706565b348015610a9757600080fd5b5061044c60175481565b348015610aad57600080fd5b50600d5460ff166109c6565b60006001600160e01b031982166380ac58cd60e01b1480610aea57506001600160e01b03198216635b5e139f60e01b145b80610b0557506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610b1a906136c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b46906136c8565b8015610b935780601f10610b6857610100808354040283529160200191610b93565b820191906000526020600020905b815481529060010190602001808311610b7657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c1b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c428261179a565b9050806001600160a01b0316836001600160a01b03161415610cb05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c12565b336001600160a01b0382161480610ccc5750610ccc8133610a08565b610d3e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c12565b610d4883836127ad565b505050565b6006546001600160a01b03610100909104163314610d7d5760405162461bcd60e51b8152600401610c1290613703565b6000815111610dde5760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610c12565b600d546301000000900460ff1615610e385760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610c12565b8051610e4b90600a9060208401906131f9565b5050565b60006001610e5c60085490565b610e66919061374e565b905090565b6006546001600160a01b03610100909104163314610e9b5760405162461bcd60e51b8152600401610c1290613703565b601455565b610eab335b8261281b565b610ec75760405162461bcd60e51b8152600401610c1290613765565b610d48838383612912565b8181600954610f49838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b166020820152859250603401905060405160208183030381529060405280519060200120612abd565b610f955760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610c12565b601754600134610fa582846137b6565b14610fee5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610c12565b32331461103d5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610c12565b600260075414156110905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610c12565b600260075560065460ff16156110b85760405162461bcd60e51b8152600401610c12906137d5565b600d5460ff1660021461110d5760405162461bcd60e51b815260206004820181905260248201527f57686974656c697374206d696e74696e67206e6f7420696e697469617465642e6044820152606401610c12565b3360009081526013602052604090205460ff161561116d5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610c12565b601254611178610e4f565b6111839060016137ff565b11156111e35760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610c12565b336000818152601360205260409020805460ff1916600117905561120f9061120a60085490565b612ad3565b61121d600880546001019055565b505060016007555050505050565b6006546001600160a01b0361010090910416331461125b5760405162461bcd60e51b8152600401610c1290613703565b600047116112a45760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610c12565b600d5460009064010000000090046001600160a01b03166112d36103e86112cd476102bc612c21565b90612c34565b604051600081818185875af1925050503d806000811461130f576040519150601f19603f3d011682016040523d82523d6000602084013e611314565b606091505b505090508061135a5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610c12565b600e546000906001600160a01b031661137a6103e86112cd476069612c21565b604051600081818185875af1925050503d80600081146113b6576040519150601f19603f3d011682016040523d82523d6000602084013e6113bb565b606091505b50509050806114015760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610c12565b600f546000906001600160a01b03166114216103e86112cd476069612c21565b604051600081818185875af1925050503d806000811461145d576040519150601f19603f3d011682016040523d82523d6000602084013e611462565b606091505b50509050806114a85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080cc819985a5b195960721b6044820152606401610c12565b6010546000906001600160a01b03166114c86103e86112cd47602d612c21565b604051600081818185875af1925050503d8060008114611504576040519150601f19603f3d011682016040523d82523d6000602084013e611509565b606091505b505090508061154f5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d0819985a5b195960721b6044820152606401610c12565b6011546040516000916001600160a01b03169047908381818185875af1925050503d806000811461159c576040519150601f19603f3d011682016040523d82523d6000602084013e6115a1565b606091505b50509050806115e75760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d4819985a5b195960721b6044820152606401610c12565b5050505050565b6006546001600160a01b0361010090910416331461161e5760405162461bcd60e51b8152600401610c1290613703565b611626612c40565b565b610d4883838360405180602001604052806000815250612117565b61164c33610ea5565b6116b15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610c12565b6116ba81612cd3565b50565b6006546001600160a01b036101009091041633146116ed5760405162461bcd60e51b8152600401610c1290613703565b600d5462010000900460ff161561173b5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610c12565b8051610e4b90600b9060208401906131f9565b6006546001600160a01b0361010090910416331461177e5760405162461bcd60e51b8152600401610c1290613703565b600d805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610b055760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c12565b600b805461181e906136c8565b80601f016020809104026020016040519081016040528092919081815260200182805461184a906136c8565b80156118975780601f1061186c57610100808354040283529160200191611897565b820191906000526020600020905b81548152906001019060200180831161187a57829003601f168201915b505050505081565b6000806118aa610e4f565b116118f05760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c12565b610e66610648610e4f565b60006001600160a01b0382166119665760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c12565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146119b25760405162461bcd60e51b8152600401610c1290613703565b6116266000612d7a565b6006546001600160a01b036101009091041633146119ec5760405162461bcd60e51b8152600401610c1290613703565b601755565b6006546001600160a01b03610100909104163314611a215760405162461bcd60e51b8152600401610c1290613703565b600d5460ff16600314611a765760405162461bcd60e51b815260206004820152601860248201527f5465616d2073616c65206e6f7420696e697469617465642e00000000000000006044820152606401610c12565b601454601554611a899060ff84166137ff565b1115611aea5760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610c12565b8060ff1660156000828254611aff91906137ff565b90915550600190505b8160ff168111610e4b57611b1f3361120a60085490565b611b2d600880546001019055565b80611b3781613817565b915050611b08565b6006546001600160a01b03610100909104163314611b6f5760405162461bcd60e51b8152600401610c1290613703565b600955565b6006546001600160a01b03610100909104163314611ba45760405162461bcd60e51b8152600401610c1290613703565b6000600a8054611bb3906136c8565b905011611c025760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610c12565b600d546301000000900460ff1615611c675760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610c12565b600d805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611cac5760405162461bcd60e51b8152600401610c1290613703565b611626612dd4565b60175460ff821634611cc682846137b6565b14611d0f5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610c12565b323314611d5e5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610c12565b60026007541415611db15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610c12565b600260075560065460ff1615611dd95760405162461bcd60e51b8152600401610c12906137d5565b600d5460ff16600414611e2e5760405162461bcd60e51b815260206004820152601b60248201527f5075626c6963206d696e74206e6f7420696e69746961697465642e00000000006044820152606401610c12565b6016548360ff16611e3d610e4f565b611e4791906137ff565b1115611ea35760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610c12565b60008360ff1611611f025760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610c12565b600d5460ff61010090910481169084161115611f735760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610c12565b60015b8360ff168111611fad57611f8d3361120a60085490565b611f9b600880546001019055565b80611fa581613817565b915050611f76565b505060016007555050565b606060018054610b1a906136c8565b610e4b338383612e2c565b6006546001600160a01b036101009091041633146120025760405162461bcd60e51b8152600401610c1290613703565b60008260ff16116120635760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610c12565b6016548260ff16612072610e4f565b61207c91906137ff565b11156120dd5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610c12565b60015b8260ff168111610d48576120f78261120a60085490565b612105600880546001019055565b8061210f81613817565b9150506120e0565b612121338361281b565b61213d5760405162461bcd60e51b8152600401610c1290613765565b61214984848484612efb565b50505050565b6006546001600160a01b0361010090910416331461217f5760405162461bcd60e51b8152600401610c1290613703565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b600c805461181e906136c8565b600a805461181e906136c8565b6000818152600260205260409020546060906001600160a01b031661223c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c12565b600b61224783612f2e565b600c60405160200161225b939291906138cc565b6040516020818303038152906040529050919050565b6006546001600160a01b036101009091041633146122a15760405162461bcd60e51b8152600401610c1290613703565b600d5460ff166122e95760405162461bcd60e51b815260206004820152601360248201527227379039ba30b3b2b9903132b337b93290181760691b6044820152606401610c12565b600d805460ff169060006122fc836138ff565b91906101000a81548160ff021916908360ff16021790555050565b600080612322610e4f565b116123685760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c12565b610e66610e4f565b6006546001600160a01b036101009091041633146123a05760405162461bcd60e51b8152600401610c1290613703565b8051610e4b90600c9060208401906131f9565b60006123bd610e4f565b601654610e66919061374e565b6006546001600160a01b036101009091041633146123fa5760405162461bcd60e51b8152600401610c1290613703565b6000600b8054612409906136c8565b9050116124585760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610c12565b600d5462010000900460ff16156124b15760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610c12565b600d805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146124f45760405162461bcd60e51b8152600401610c1290613703565b600d80546001600160a01b0396871664010000000002640100000000600160c01b0319909116179055600e80549486166001600160a01b0319958616179055600f8054938616938516939093179092556010805491851691841691909117905560118054919093169116179055565b6006546001600160a01b036101009091041633146125935760405162461bcd60e51b8152600401610c1290613703565b600d546301000000900460ff1615156001146126175760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610c12565b60095460001a60f81b6001600160f81b03191661269c5760405162461bcd60e51b815260206004820152603b60248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527f77686974656c697374206d696e74696e672063616e20626567696e00000000006064820152608401610c12565b600d54600460ff909116106126f35760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610c12565b600d805460ff169060006122fc83613932565b6006546001600160a01b036101009091041633146127365760405162461bcd60e51b8152600401610c1290613703565b6001600160a01b03811661279b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c12565b6116ba81612d7a565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906127e28261179a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166128945760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c12565b600061289f8361179a565b9050806001600160a01b0316846001600160a01b031614806128da5750836001600160a01b03166128cf84610b9d565b6001600160a01b0316145b8061290a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166129258261179a565b6001600160a01b03161461298d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c12565b6001600160a01b0382166129ef5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c12565b6129fa83838361302c565b612a056000826127ad565b6001600160a01b0383166000908152600360205260408120805460019290612a2e90849061374e565b90915550506001600160a01b0382166000908152600360205260408120805460019290612a5c9084906137ff565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600082612aca858461304f565b14949350505050565b6001600160a01b038216612b295760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c12565b6000818152600260205260409020546001600160a01b031615612b8e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c12565b612b9a6000838361302c565b6001600160a01b0382166000908152600360205260408120805460019290612bc39084906137ff565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000612c2d82846137b6565b9392505050565b6000612c2d8284613968565b60065460ff16612c895760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c12565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612cde8261179a565b9050612cec8160008461302c565b612cf76000836127ad565b6001600160a01b0381166000908152600360205260408120805460019290612d2090849061374e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612df75760405162461bcd60e51b8152600401610c12906137d5565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612cb63390565b816001600160a01b0316836001600160a01b03161415612e8e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c12565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612f06848484612912565b612f12848484846130fb565b6121495760405162461bcd60e51b8152600401610c129061397c565b606081612f525750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612f7c5780612f6681613817565b9150612f759050600a83613968565b9150612f56565b60008167ffffffffffffffff811115612f9757612f9761338f565b6040519080825280601f01601f191660200182016040528015612fc1576020820181803683370190505b5090505b841561290a57612fd660018361374e565b9150612fe3600a866139ce565b612fee9060306137ff565b60f81b8183815181106130035761300361391c565b60200101906001600160f81b031916908160001a905350613025600a86613968565b9450612fc5565b60065460ff1615610d485760405162461bcd60e51b8152600401610c12906137d5565b600081815b84518110156130f35760008582815181106130715761307161391c565b602002602001015190508083116130b35760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506130e0565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806130eb81613817565b915050613054565b509392505050565b60006001600160a01b0384163b156131ee57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061313f9033908990889088906004016139e2565b6020604051808303816000875af192505050801561317a575060408051601f3d908101601f1916820190925261317791810190613a1f565b60015b6131d4573d8080156131a8576040519150601f19603f3d011682016040523d82523d6000602084013e6131ad565b606091505b5080516131cc5760405162461bcd60e51b8152600401610c129061397c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061290a565b506001949350505050565b828054613205906136c8565b90600052602060002090601f016020900481019282613227576000855561326d565b82601f1061324057805160ff191683800117855561326d565b8280016001018555821561326d579182015b8281111561326d578251825591602001919060010190613252565b5061327992915061327d565b5090565b5b80821115613279576000815560010161327e565b6001600160e01b0319811681146116ba57600080fd5b6000602082840312156132ba57600080fd5b8135612c2d81613292565b60005b838110156132e05781810151838201526020016132c8565b838111156121495750506000910152565b600081518084526133098160208601602086016132c5565b601f01601f19169290920160200192915050565b602081526000612c2d60208301846132f1565b60006020828403121561334257600080fd5b5035919050565b80356001600160a01b038116811461336057600080fd5b919050565b6000806040838503121561337857600080fd5b61338183613349565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156133c0576133c061338f565b604051601f8501601f19908116603f011681019082821181831017156133e8576133e861338f565b8160405280935085815286868601111561340157600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561342d57600080fd5b813567ffffffffffffffff81111561344457600080fd5b8201601f8101841361345557600080fd5b61290a848235602084016133a5565b60008060006060848603121561347957600080fd5b61348284613349565b925061349060208501613349565b9150604084013590509250925092565b600080602083850312156134b357600080fd5b823567ffffffffffffffff808211156134cb57600080fd5b818501915085601f8301126134df57600080fd5b8135818111156134ee57600080fd5b8660208260051b850101111561350357600080fd5b60209290920196919550909350505050565b803560ff8116811461336057600080fd5b60006020828403121561353857600080fd5b612c2d82613515565b60006020828403121561355357600080fd5b612c2d82613349565b6000806040838503121561356f57600080fd5b61357883613349565b91506020830135801515811461358d57600080fd5b809150509250929050565b600080604083850312156135ab57600080fd5b6135b483613515565b91506135c260208401613349565b90509250929050565b600080600080608085870312156135e157600080fd5b6135ea85613349565b93506135f860208601613349565b925060408501359150606085013567ffffffffffffffff81111561361b57600080fd5b8501601f8101871361362c57600080fd5b61363b878235602084016133a5565b91505092959194509250565b6000806040838503121561365a57600080fd5b6135b483613349565b600080600080600060a0868803121561367b57600080fd5b61368486613349565b945061369260208701613349565b93506136a060408701613349565b92506136ae60608701613349565b91506136bc60808701613349565b90509295509295909350565b600181811c908216806136dc57607f821691505b602082108114156136fd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561376057613760613738565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008160001904831182151516156137d0576137d0613738565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000821982111561381257613812613738565b500190565b600060001982141561382b5761382b613738565b5060010190565b8054600090600181811c908083168061384c57607f831692505b602080841082141561386e57634e487b7160e01b600052602260045260246000fd5b8180156138825760018114613893576138c0565b60ff198616895284890196506138c0565b60008881526020902060005b868110156138b85781548b82015290850190830161389f565b505084890196505b50505050505092915050565b60006138d88286613832565b84516138e88183602089016132c5565b6138f481830186613832565b979650505050505050565b600060ff82168061391257613912613738565b6000190192915050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561394957613949613738565b60010192915050565b634e487b7160e01b600052601260045260246000fd5b60008261397757613977613952565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826139dd576139dd613952565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a15908301846132f1565b9695505050505050565b600060208284031215613a3157600080fd5b8151612c2d8161329256fea2646970667358221220d6965f5a87b183e268c6d5f9e24bdd4af5adef5daebf90c0c876534384c3c3ed64736f6c634300080a0033",
  "bytecodeSha1": "58434c6835ea8250641bff87d4b7c586125568a1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "193": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "Strings.toString": {
          "195": [
            601,
            611,
            false
          ]
        }
      },
      "12": {
        "MerkleProof.processProof": {
          "192": [
            1628,
            1656,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "171": [
            3351,
            3366,
            true
          ],
          "172": [
            3426,
            3473,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "174": [
            6275,
            6300,
            true
          ],
          "175": [
            6346,
            6361,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "165": [
            7749,
            7781,
            true
          ],
          "166": [
            7836,
            7857,
            true
          ]
        },
        "CryptidToken.lastMintAddress": {
          "162": [
            9192,
            9209,
            true
          ]
        },
        "CryptidToken.lastMintID": {
          "173": [
            9357,
            9374,
            true
          ]
        },
        "CryptidToken.nextStage": {
          "176": [
            6492,
            6520,
            true
          ],
          "177": [
            6599,
            6617,
            true
          ],
          "178": [
            6699,
            6708,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "167": [
            5137,
            5147,
            true
          ],
          "168": [
            5197,
            5244,
            true
          ],
          "169": [
            5304,
            5319,
            true
          ],
          "170": [
            5377,
            5404,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "161": [
            6128,
            6143,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "149": [
            7480,
            7513,
            true
          ],
          "150": [
            7575,
            7596,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "163": [
            4514,
            4524,
            true
          ],
          "164": [
            4571,
            4616,
            true
          ]
        },
        "CryptidToken.whitelistMint": {
          "151": [
            2758,
            2832,
            true
          ],
          "152": [
            4006,
            4016,
            true
          ],
          "153": [
            4071,
            4099,
            true
          ],
          "154": [
            4154,
            4190,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "155": [
            8307,
            8332,
            true
          ],
          "156": [
            8481,
            8483,
            true
          ],
          "157": [
            8629,
            8631,
            true
          ],
          "158": [
            8777,
            8779,
            true
          ],
          "159": [
            8923,
            8925,
            true
          ],
          "160": [
            9051,
            9053,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.publicMint": {
          "194": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "188": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "190": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "189": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "186": [
            10451,
            10482,
            true
          ],
          "187": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "179": [
            3659,
            3670,
            true
          ],
          "180": [
            3740,
            3761,
            true
          ],
          "181": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "184": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "183": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "185": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "182": [
            4900,
            4941,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Burnable.burn": {
          "191": [
            645,
            686,
            true
          ]
        }
      },
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "127": [
            2378,
            2395
          ],
          "128": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "47": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "97": [
            1998,
            2071
          ],
          "98": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "129": [
            1922,
            1936
          ],
          "130": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "120": [
            2168,
            2183
          ],
          "121": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Counters.current": {
          "18": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "28": [
            1032,
            1051
          ]
        }
      },
      "11": {
        "Strings.toString": {
          "136": [
            627,
            637
          ],
          "137": [
            743,
            751
          ],
          "138": [
            765,
            775
          ],
          "139": [
            877,
            888
          ],
          "140": [
            902,
            958
          ],
          "141": [
            972,
            983
          ]
        }
      },
      "12": {
        "MerkleProof.processProof": {
          "142": [
            1754,
            1824
          ],
          "143": [
            1941,
            2011
          ],
          "144": [
            1560,
            1563
          ],
          "145": [
            2045,
            2064
          ]
        },
        "MerkleProof.verify": {
          "111": [
            984,
            1024
          ]
        }
      },
      "13": {
        "ERC165.supportsInterface": {
          "5": [
            930,
            977
          ]
        }
      },
      "14": {},
      "15": {
        "SafeMath.div": {
          "119": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "118": [
            3528,
            3540
          ]
        }
      },
      "16": {
        "CryptidToken.airdropCryptid": {
          "69": [
            3343,
            3408
          ],
          "70": [
            3418,
            3520
          ],
          "71": [
            3587,
            3624
          ],
          "72": [
            3638,
            3665
          ],
          "73": [
            3568,
            3571
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "85": [
            6267,
            6328
          ],
          "86": [
            6338,
            6392
          ],
          "87": [
            6402,
            6423
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "56": [
            7741,
            7818
          ],
          "57": [
            7828,
            7896
          ],
          "58": [
            7906,
            7933
          ]
        },
        "CryptidToken.getStage": {
          "3": [
            10007,
            10019
          ]
        },
        "CryptidToken.getTokensLeft": {
          "84": [
            9894,
            9932
          ]
        },
        "CryptidToken.lastMintAddress": {
          "43": [
            9184,
            9236
          ],
          "44": [
            9246,
            9275
          ]
        },
        "CryptidToken.lastMintID": {
          "81": [
            9349,
            9401
          ],
          "82": [
            9411,
            9432
          ]
        },
        "CryptidToken.nextStage": {
          "93": [
            6484,
            6581
          ],
          "94": [
            6591,
            6681
          ],
          "95": [
            6691,
            6740
          ],
          "96": [
            6750,
            6757
          ]
        },
        "CryptidToken.overrideClaim": {
          "76": [
            5899,
            5925
          ]
        },
        "CryptidToken.pause": {
          "59": [
            5695,
            5703
          ]
        },
        "CryptidToken.prevStage": {
          "79": [
            6818,
            6859
          ],
          "80": [
            6869,
            6876
          ]
        },
        "CryptidToken.publicMint": {
          "60": [
            5129,
            5179
          ],
          "61": [
            5189,
            5286
          ],
          "62": [
            5296,
            5359
          ],
          "63": [
            5369,
            5451
          ],
          "64": [
            5521,
            5565
          ],
          "65": [
            5579,
            5606
          ],
          "66": [
            5502,
            5505
          ]
        },
        "CryptidToken.setBaseExtension": {
          "83": [
            7105,
            7138
          ]
        },
        "CryptidToken.setBaseURI": {
          "39": [
            6120,
            6166
          ],
          "40": [
            6176,
            6197
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "41": [
            7343,
            7374
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "55": [
            6009,
            6033
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "14": [
            7472,
            7557
          ],
          "15": [
            7567,
            7627
          ],
          "16": [
            7637,
            7669
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "48": [
            7229,
            7254
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "19": [
            6971,
            7006
          ]
        },
        "CryptidToken.setWithdrawAddress": {
          "88": [
            8081,
            8103
          ],
          "89": [
            8113,
            8135
          ],
          "90": [
            8145,
            8167
          ],
          "91": [
            8177,
            8199
          ],
          "92": [
            8209,
            8231
          ]
        },
        "CryptidToken.teamMint": {
          "49": [
            4506,
            4553
          ],
          "50": [
            4563,
            4663
          ],
          "51": [
            4679,
            4707
          ],
          "52": [
            4774,
            4818
          ],
          "53": [
            4832,
            4859
          ],
          "54": [
            4755,
            4758
          ]
        },
        "CryptidToken.tokenURI": {
          "77": [
            9655,
            9731
          ],
          "78": [
            9741,
            9816
          ]
        },
        "CryptidToken.totalSupply": {
          "17": [
            9508,
            9544
          ]
        },
        "CryptidToken.unpause": {
          "35": [
            5762,
            5772
          ]
        },
        "CryptidToken.whitelistMint": {
          "22": [
            3998,
            4053
          ],
          "23": [
            4063,
            4135
          ],
          "24": [
            4146,
            4236
          ],
          "25": [
            4246,
            4272
          ],
          "26": [
            4282,
            4326
          ],
          "27": [
            4336,
            4363
          ]
        },
        "CryptidToken.withdraw": {
          "29": [
            8299,
            8359
          ],
          "30": [
            8473,
            8506
          ],
          "31": [
            8621,
            8654
          ],
          "32": [
            8769,
            8802
          ],
          "33": [
            8915,
            8948
          ],
          "34": [
            9043,
            9076
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "99": [
            11069,
            11098
          ],
          "100": [
            11108,
            11159
          ]
        },
        "ERC721._burn": {
          "122": [
            9761,
            9809
          ],
          "123": [
            9847,
            9876
          ],
          "124": [
            9887,
            9908
          ],
          "125": [
            9918,
            9941
          ],
          "126": [
            9952,
            9993
          ]
        },
        "ERC721._checkOnERC721Received": {
          "146": [
            12647,
            12707
          ],
          "147": [
            12481,
            12539
          ],
          "148": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "7": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "101": [
            7536,
            7609
          ],
          "102": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "112": [
            9134,
            9195
          ],
          "113": [
            9205,
            9263
          ],
          "114": [
            9274,
            9319
          ],
          "115": [
            9330,
            9348
          ],
          "116": [
            9358,
            9379
          ],
          "117": [
            9390,
            9428
          ]
        },
        "ERC721._safeTransfer": {
          "134": [
            6685,
            6713
          ],
          "135": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "131": [
            11434,
            11489
          ],
          "132": [
            11499,
            11545
          ],
          "133": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "103": [
            10443,
            10528
          ],
          "104": [
            10538,
            10603
          ],
          "105": [
            10614,
            10653
          ],
          "106": [
            10715,
            10744
          ],
          "107": [
            10755,
            10775
          ],
          "108": [
            10785,
            10803
          ],
          "109": [
            10813,
            10834
          ],
          "110": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "10": [
            3651,
            3708
          ],
          "12": [
            3719,
            3884
          ],
          "13": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "45": [
            2005,
            2079
          ],
          "46": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4079,
            4152
          ],
          "9": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "6": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "42": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "36": [
            5240,
            5279
          ],
          "74": [
            5513,
            5616
          ],
          "75": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "68": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "4": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "67": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            4892,
            4995
          ],
          "21": [
            5006,
            5034
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Burnable.burn": {
          "37": [
            637,
            739
          ],
          "38": [
            749,
            763
          ]
        }
      },
      "7": {},
      "9": {
        "Context._msgSender": {
          "11": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "6080604052600436106103a25760003560e01c806381c162f2116101e7578063c87b56dd1161010d578063de7fcb1d116100a0578063ee3743ab1161006f578063ee3743ab14610a56578063f2fde38b14610a6b578063f51f96dd14610a8b578063fcaa766414610aa157600080fd5b8063de7fcb1d146109a7578063e7bc8208146109d8578063e985e9c5146109ed578063ea74e19014610a3657600080fd5b8063d6d67a09116100dc578063d6d67a091461093d578063da3ef23f14610952578063db993f5614610972578063de5f98661461099257600080fd5b8063c87b56dd146108b8578063c884ef83146108d8578063cbd0a2b514610908578063d2fab8b91461091d57600080fd5b8063b121439211610185578063c29de63011610154578063c29de63014610858578063c321458114610878578063c66828621461088e578063c6ab67a3146108a357600080fd5b8063b1214392146107d8578063b3caad01146107f8578063b88d4fde14610818578063bbc903ea1461083857600080fd5b80638da5cb5b116101c15780638da5cb5b1461075f57806395d89b41146107825780639a2a9c3d14610797578063a22cb465146107b857600080fd5b806381c162f2146107225780638456cb5914610737578063858e83b51461074c57600080fd5b806342842e0e116102cc5780636c0360eb1161026a578063782319781161023957806378231978146106ac578063791a2519146106c25780637b671780146106e25780637cb647591461070257600080fd5b80636c0360eb1461064d5780636cbb89851461066257806370a0823114610677578063715018a61461069757600080fd5b80635c975abb116102a65780635c975abb146105cd57806361869a93146105e5578063622e4e781461060d5780636352211e1461062d57600080fd5b806342842e0e1461056d57806342966c681461058d57806355f804b3146105ad57600080fd5b806320841a6a11610344578063372f657c11610313578063372f657c1461051d5780633c795047146105305780633ccfd60b146105505780633f4ba83a1461055857600080fd5b806320841a6a146104b157806323b872dd146104d15780632eb4a7ab146104f157806333e614131461050757600080fd5b8063088139a611610380578063088139a614610436578063095ea7b31461045a578063109695231461047c57806318160ddd1461049c57600080fd5b806301ffc9a7146103a757806306fdde03146103dc578063081812fc146103fe575b600080fd5b3480156103b357600080fd5b506103c76103c23660046132a8565b610ab9565b60405190151581526020015b60405180910390f35b3480156103e857600080fd5b506103f1610b0b565b6040516103d3919061331d565b34801561040a57600080fd5b5061041e610419366004613330565b610b9d565b6040516001600160a01b0390911681526020016103d3565b34801561044257600080fd5b5061044c60155481565b6040519081526020016103d3565b34801561046657600080fd5b5061047a610475366004613365565b610c37565b005b34801561048857600080fd5b5061047a61049736600461341b565b610d4d565b3480156104a857600080fd5b5061044c610e4f565b3480156104bd57600080fd5b5061047a6104cc366004613330565b610e6b565b3480156104dd57600080fd5b5061047a6104ec366004613464565b610ea0565b3480156104fd57600080fd5b5061044c60095481565b34801561051357600080fd5b5061044c60125481565b61047a61052b3660046134a0565b610ed2565b34801561053c57600080fd5b50600f5461041e906001600160a01b031681565b61047a61122b565b34801561056457600080fd5b5061047a6115ee565b34801561057957600080fd5b5061047a610588366004613464565b611628565b34801561059957600080fd5b5061047a6105a8366004613330565b611643565b3480156105b957600080fd5b5061047a6105c836600461341b565b6116bd565b3480156105d957600080fd5b5060065460ff166103c7565b3480156105f157600080fd5b50600d5461041e9064010000000090046001600160a01b031681565b34801561061957600080fd5b5061047a610628366004613526565b61174e565b34801561063957600080fd5b5061041e610648366004613330565b61179a565b34801561065957600080fd5b506103f1611811565b34801561066e57600080fd5b5061041e61189f565b34801561068357600080fd5b5061044c610692366004613541565b6118fb565b3480156106a357600080fd5b5061047a611982565b3480156106b857600080fd5b5061044c60165481565b3480156106ce57600080fd5b5061047a6106dd366004613330565b6119bc565b3480156106ee57600080fd5b5061047a6106fd366004613526565b6119f1565b34801561070e57600080fd5b5061047a61071d366004613330565b611b3f565b34801561072e57600080fd5b5061047a611b74565b34801561074357600080fd5b5061047a611c7c565b61047a61075a366004613526565b611cb4565b34801561076b57600080fd5b5060065461010090046001600160a01b031661041e565b34801561078e57600080fd5b506103f1611fb8565b3480156107a357600080fd5b50600d546103c7906301000000900460ff1681565b3480156107c457600080fd5b5061047a6107d336600461355c565b611fc7565b3480156107e457600080fd5b50600e5461041e906001600160a01b031681565b34801561080457600080fd5b5061047a610813366004613598565b611fd2565b34801561082457600080fd5b5061047a6108333660046135cb565b612117565b34801561084457600080fd5b5061047a610853366004613541565b61214f565b34801561086457600080fd5b50600d546103c79062010000900460ff1681565b34801561088457600080fd5b5061044c60145481565b34801561089a57600080fd5b506103f16121a3565b3480156108af57600080fd5b506103f16121b0565b3480156108c457600080fd5b506103f16108d3366004613330565b6121bd565b3480156108e457600080fd5b506103c76108f3366004613541565b60136020526000908152604090205460ff1681565b34801561091457600080fd5b5061047a612271565b34801561092957600080fd5b5060105461041e906001600160a01b031681565b34801561094957600080fd5b5061044c612317565b34801561095e57600080fd5b5061047a61096d36600461341b565b612370565b34801561097e57600080fd5b5060115461041e906001600160a01b031681565b34801561099e57600080fd5b5061044c6123b3565b3480156109b357600080fd5b50600d546109c690610100900460ff1681565b60405160ff90911681526020016103d3565b3480156109e457600080fd5b5061047a6123ca565b3480156109f957600080fd5b506103c7610a08366004613647565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a4257600080fd5b5061047a610a51366004613663565b6124c4565b348015610a6257600080fd5b5061047a612563565b348015610a7757600080fd5b5061047a610a86366004613541565b612706565b348015610a9757600080fd5b5061044c60175481565b348015610aad57600080fd5b50600d5460ff166109c6565b60006001600160e01b031982166380ac58cd60e01b1480610aea57506001600160e01b03198216635b5e139f60e01b145b80610b0557506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610b1a906136c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b46906136c8565b8015610b935780601f10610b6857610100808354040283529160200191610b93565b820191906000526020600020905b815481529060010190602001808311610b7657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c1b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c428261179a565b9050806001600160a01b0316836001600160a01b03161415610cb05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610c12565b336001600160a01b0382161480610ccc5750610ccc8133610a08565b610d3e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610c12565b610d4883836127ad565b505050565b6006546001600160a01b03610100909104163314610d7d5760405162461bcd60e51b8152600401610c1290613703565b6000815111610dde5760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610c12565b600d546301000000900460ff1615610e385760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610c12565b8051610e4b90600a9060208401906131f9565b5050565b60006001610e5c60085490565b610e66919061374e565b905090565b6006546001600160a01b03610100909104163314610e9b5760405162461bcd60e51b8152600401610c1290613703565b601455565b610eab335b8261281b565b610ec75760405162461bcd60e51b8152600401610c1290613765565b610d48838383612912565b8181600954610f49838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b166020820152859250603401905060405160208183030381529060405280519060200120612abd565b610f955760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610c12565b601754600134610fa582846137b6565b14610fee5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610c12565b32331461103d5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610c12565b600260075414156110905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610c12565b600260075560065460ff16156110b85760405162461bcd60e51b8152600401610c12906137d5565b600d5460ff1660021461110d5760405162461bcd60e51b815260206004820181905260248201527f57686974656c697374206d696e74696e67206e6f7420696e697469617465642e6044820152606401610c12565b3360009081526013602052604090205460ff161561116d5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610c12565b601254611178610e4f565b6111839060016137ff565b11156111e35760405162461bcd60e51b815260206004820152602960248201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736044820152683a1039bab838363c9760b91b6064820152608401610c12565b336000818152601360205260409020805460ff1916600117905561120f9061120a60085490565b612ad3565b61121d600880546001019055565b505060016007555050505050565b6006546001600160a01b0361010090910416331461125b5760405162461bcd60e51b8152600401610c1290613703565b600047116112a45760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610c12565b600d5460009064010000000090046001600160a01b03166112d36103e86112cd476102bc612c21565b90612c34565b604051600081818185875af1925050503d806000811461130f576040519150601f19603f3d011682016040523d82523d6000602084013e611314565b606091505b505090508061135a5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610c12565b600e546000906001600160a01b031661137a6103e86112cd476069612c21565b604051600081818185875af1925050503d80600081146113b6576040519150601f19603f3d011682016040523d82523d6000602084013e6113bb565b606091505b50509050806114015760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610c12565b600f546000906001600160a01b03166114216103e86112cd476069612c21565b604051600081818185875af1925050503d806000811461145d576040519150601f19603f3d011682016040523d82523d6000602084013e611462565b606091505b50509050806114a85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080cc819985a5b195960721b6044820152606401610c12565b6010546000906001600160a01b03166114c86103e86112cd47602d612c21565b604051600081818185875af1925050503d8060008114611504576040519150601f19603f3d011682016040523d82523d6000602084013e611509565b606091505b505090508061154f5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d0819985a5b195960721b6044820152606401610c12565b6011546040516000916001600160a01b03169047908381818185875af1925050503d806000811461159c576040519150601f19603f3d011682016040523d82523d6000602084013e6115a1565b606091505b50509050806115e75760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d4819985a5b195960721b6044820152606401610c12565b5050505050565b6006546001600160a01b0361010090910416331461161e5760405162461bcd60e51b8152600401610c1290613703565b611626612c40565b565b610d4883838360405180602001604052806000815250612117565b61164c33610ea5565b6116b15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610c12565b6116ba81612cd3565b50565b6006546001600160a01b036101009091041633146116ed5760405162461bcd60e51b8152600401610c1290613703565b600d5462010000900460ff161561173b5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610c12565b8051610e4b90600b9060208401906131f9565b6006546001600160a01b0361010090910416331461177e5760405162461bcd60e51b8152600401610c1290613703565b600d805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610b055760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610c12565b600b805461181e906136c8565b80601f016020809104026020016040519081016040528092919081815260200182805461184a906136c8565b80156118975780601f1061186c57610100808354040283529160200191611897565b820191906000526020600020905b81548152906001019060200180831161187a57829003601f168201915b505050505081565b6000806118aa610e4f565b116118f05760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c12565b610e66610648610e4f565b60006001600160a01b0382166119665760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610c12565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146119b25760405162461bcd60e51b8152600401610c1290613703565b6116266000612d7a565b6006546001600160a01b036101009091041633146119ec5760405162461bcd60e51b8152600401610c1290613703565b601755565b6006546001600160a01b03610100909104163314611a215760405162461bcd60e51b8152600401610c1290613703565b600d5460ff16600314611a765760405162461bcd60e51b815260206004820152601860248201527f5465616d2073616c65206e6f7420696e697469617465642e00000000000000006044820152606401610c12565b601454601554611a899060ff84166137ff565b1115611aea5760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610c12565b8060ff1660156000828254611aff91906137ff565b90915550600190505b8160ff168111610e4b57611b1f3361120a60085490565b611b2d600880546001019055565b80611b3781613817565b915050611b08565b6006546001600160a01b03610100909104163314611b6f5760405162461bcd60e51b8152600401610c1290613703565b600955565b6006546001600160a01b03610100909104163314611ba45760405162461bcd60e51b8152600401610c1290613703565b6000600a8054611bb3906136c8565b905011611c025760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610c12565b600d546301000000900460ff1615611c675760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610c12565b600d805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611cac5760405162461bcd60e51b8152600401610c1290613703565b611626612dd4565b60175460ff821634611cc682846137b6565b14611d0f5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610c12565b323314611d5e5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610c12565b60026007541415611db15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610c12565b600260075560065460ff1615611dd95760405162461bcd60e51b8152600401610c12906137d5565b600d5460ff16600414611e2e5760405162461bcd60e51b815260206004820152601b60248201527f5075626c6963206d696e74206e6f7420696e69746961697465642e00000000006044820152606401610c12565b6016548360ff16611e3d610e4f565b611e4791906137ff565b1115611ea35760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610c12565b60008360ff1611611f025760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610c12565b600d5460ff61010090910481169084161115611f735760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610c12565b60015b8360ff168111611fad57611f8d3361120a60085490565b611f9b600880546001019055565b80611fa581613817565b915050611f76565b505060016007555050565b606060018054610b1a906136c8565b610e4b338383612e2c565b6006546001600160a01b036101009091041633146120025760405162461bcd60e51b8152600401610c1290613703565b60008260ff16116120635760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610c12565b6016548260ff16612072610e4f565b61207c91906137ff565b11156120dd5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610c12565b60015b8260ff168111610d48576120f78261120a60085490565b612105600880546001019055565b8061210f81613817565b9150506120e0565b612121338361281b565b61213d5760405162461bcd60e51b8152600401610c1290613765565b61214984848484612efb565b50505050565b6006546001600160a01b0361010090910416331461217f5760405162461bcd60e51b8152600401610c1290613703565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b600c805461181e906136c8565b600a805461181e906136c8565b6000818152600260205260409020546060906001600160a01b031661223c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610c12565b600b61224783612f2e565b600c60405160200161225b939291906138cc565b6040516020818303038152906040529050919050565b6006546001600160a01b036101009091041633146122a15760405162461bcd60e51b8152600401610c1290613703565b600d5460ff166122e95760405162461bcd60e51b815260206004820152601360248201527227379039ba30b3b2b9903132b337b93290181760691b6044820152606401610c12565b600d805460ff169060006122fc836138ff565b91906101000a81548160ff021916908360ff16021790555050565b600080612322610e4f565b116123685760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610c12565b610e66610e4f565b6006546001600160a01b036101009091041633146123a05760405162461bcd60e51b8152600401610c1290613703565b8051610e4b90600c9060208401906131f9565b60006123bd610e4f565b601654610e66919061374e565b6006546001600160a01b036101009091041633146123fa5760405162461bcd60e51b8152600401610c1290613703565b6000600b8054612409906136c8565b9050116124585760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610c12565b600d5462010000900460ff16156124b15760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610c12565b600d805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146124f45760405162461bcd60e51b8152600401610c1290613703565b600d80546001600160a01b0396871664010000000002640100000000600160c01b0319909116179055600e80549486166001600160a01b0319958616179055600f8054938616938516939093179092556010805491851691841691909117905560118054919093169116179055565b6006546001600160a01b036101009091041633146125935760405162461bcd60e51b8152600401610c1290613703565b600d546301000000900460ff1615156001146126175760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610c12565b60095460001a60f81b6001600160f81b03191661269c5760405162461bcd60e51b815260206004820152603b60248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527f77686974656c697374206d696e74696e672063616e20626567696e00000000006064820152608401610c12565b600d54600460ff909116106126f35760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610c12565b600d805460ff169060006122fc83613932565b6006546001600160a01b036101009091041633146127365760405162461bcd60e51b8152600401610c1290613703565b6001600160a01b03811661279b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c12565b6116ba81612d7a565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906127e28261179a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166128945760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610c12565b600061289f8361179a565b9050806001600160a01b0316846001600160a01b031614806128da5750836001600160a01b03166128cf84610b9d565b6001600160a01b0316145b8061290a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166129258261179a565b6001600160a01b03161461298d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610c12565b6001600160a01b0382166129ef5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610c12565b6129fa83838361302c565b612a056000826127ad565b6001600160a01b0383166000908152600360205260408120805460019290612a2e90849061374e565b90915550506001600160a01b0382166000908152600360205260408120805460019290612a5c9084906137ff565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600082612aca858461304f565b14949350505050565b6001600160a01b038216612b295760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c12565b6000818152600260205260409020546001600160a01b031615612b8e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c12565b612b9a6000838361302c565b6001600160a01b0382166000908152600360205260408120805460019290612bc39084906137ff565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000612c2d82846137b6565b9392505050565b6000612c2d8284613968565b60065460ff16612c895760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610c12565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612cde8261179a565b9050612cec8160008461302c565b612cf76000836127ad565b6001600160a01b0381166000908152600360205260408120805460019290612d2090849061374e565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612df75760405162461bcd60e51b8152600401610c12906137d5565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612cb63390565b816001600160a01b0316836001600160a01b03161415612e8e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c12565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612f06848484612912565b612f12848484846130fb565b6121495760405162461bcd60e51b8152600401610c129061397c565b606081612f525750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612f7c5780612f6681613817565b9150612f759050600a83613968565b9150612f56565b60008167ffffffffffffffff811115612f9757612f9761338f565b6040519080825280601f01601f191660200182016040528015612fc1576020820181803683370190505b5090505b841561290a57612fd660018361374e565b9150612fe3600a866139ce565b612fee9060306137ff565b60f81b8183815181106130035761300361391c565b60200101906001600160f81b031916908160001a905350613025600a86613968565b9450612fc5565b60065460ff1615610d485760405162461bcd60e51b8152600401610c12906137d5565b600081815b84518110156130f35760008582815181106130715761307161391c565b602002602001015190508083116130b35760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506130e0565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806130eb81613817565b915050613054565b509392505050565b60006001600160a01b0384163b156131ee57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061313f9033908990889088906004016139e2565b6020604051808303816000875af192505050801561317a575060408051601f3d908101601f1916820190925261317791810190613a1f565b60015b6131d4573d8080156131a8576040519150601f19603f3d011682016040523d82523d6000602084013e6131ad565b606091505b5080516131cc5760405162461bcd60e51b8152600401610c129061397c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061290a565b506001949350505050565b828054613205906136c8565b90600052602060002090601f016020900481019282613227576000855561326d565b82601f1061324057805160ff191683800117855561326d565b8280016001018555821561326d579182015b8281111561326d578251825591602001919060010190613252565b5061327992915061327d565b5090565b5b80821115613279576000815560010161327e565b6001600160e01b0319811681146116ba57600080fd5b6000602082840312156132ba57600080fd5b8135612c2d81613292565b60005b838110156132e05781810151838201526020016132c8565b838111156121495750506000910152565b600081518084526133098160208601602086016132c5565b601f01601f19169290920160200192915050565b602081526000612c2d60208301846132f1565b60006020828403121561334257600080fd5b5035919050565b80356001600160a01b038116811461336057600080fd5b919050565b6000806040838503121561337857600080fd5b61338183613349565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156133c0576133c061338f565b604051601f8501601f19908116603f011681019082821181831017156133e8576133e861338f565b8160405280935085815286868601111561340157600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561342d57600080fd5b813567ffffffffffffffff81111561344457600080fd5b8201601f8101841361345557600080fd5b61290a848235602084016133a5565b60008060006060848603121561347957600080fd5b61348284613349565b925061349060208501613349565b9150604084013590509250925092565b600080602083850312156134b357600080fd5b823567ffffffffffffffff808211156134cb57600080fd5b818501915085601f8301126134df57600080fd5b8135818111156134ee57600080fd5b8660208260051b850101111561350357600080fd5b60209290920196919550909350505050565b803560ff8116811461336057600080fd5b60006020828403121561353857600080fd5b612c2d82613515565b60006020828403121561355357600080fd5b612c2d82613349565b6000806040838503121561356f57600080fd5b61357883613349565b91506020830135801515811461358d57600080fd5b809150509250929050565b600080604083850312156135ab57600080fd5b6135b483613515565b91506135c260208401613349565b90509250929050565b600080600080608085870312156135e157600080fd5b6135ea85613349565b93506135f860208601613349565b925060408501359150606085013567ffffffffffffffff81111561361b57600080fd5b8501601f8101871361362c57600080fd5b61363b878235602084016133a5565b91505092959194509250565b6000806040838503121561365a57600080fd5b6135b483613349565b600080600080600060a0868803121561367b57600080fd5b61368486613349565b945061369260208701613349565b93506136a060408701613349565b92506136ae60608701613349565b91506136bc60808701613349565b90509295509295909350565b600181811c908216806136dc57607f821691505b602082108114156136fd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561376057613760613738565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008160001904831182151516156137d0576137d0613738565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000821982111561381257613812613738565b500190565b600060001982141561382b5761382b613738565b5060010190565b8054600090600181811c908083168061384c57607f831692505b602080841082141561386e57634e487b7160e01b600052602260045260246000fd5b8180156138825760018114613893576138c0565b60ff198616895284890196506138c0565b60008881526020902060005b868110156138b85781548b82015290850190830161389f565b505084890196505b50505050505092915050565b60006138d88286613832565b84516138e88183602089016132c5565b6138f481830186613832565b979650505050505050565b600060ff82168061391257613912613738565b6000190192915050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561394957613949613738565b60010192915050565b634e487b7160e01b600052601260045260246000fd5b60008261397757613977613952565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826139dd576139dd613952565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613a15908301846132f1565b9695505050505050565b600060208284031215613a3157600080fd5b8151612c2d8161329256fea2646970667358221220d6965f5a87b183e268c6d5f9e24bdd4af5adef5daebf90c0c876534384c3c3ed64736f6c634300080a0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1555:300:3;;;;;;;;2473:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3984:217:3;1528:203:17;2004:28:16;;;;;;;;;;;;;;;;;;;1882:25:17;;;1870:2;1855:18;2004:28:16;1736:177:17;3522:401:3;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;7387:289:16;;;;;;;;;;-1:-1:-1;7387:289:16;;;;;:::i;:::-;;:::i;9445:106::-;;;;;;;;;;;;;:::i;6889:124::-;;;;;;;;;;-1:-1:-1;6889:124:16;;;;;:::i;:::-;;:::i;4711:330:3:-;;;;;;;;;;-1:-1:-1;4711:330:3;;;;;:::i;:::-;;:::i;829:25:16:-;;;;;;;;;;;;;;;;1793:30;;;;;;;;;;;;;;;;3720:650;;;;;;:::i;:::-;;:::i;1302:73::-;;;;;;;;;;-1:-1:-1;1302:73:16;;;;-1:-1:-1;;;;;1302:73:16;;;8244:839;;;:::i;5716:63::-;;;;;;;;;;;;;:::i;5107:179:3:-;;;;;;;;;;-1:-1:-1;5107:179:3;;;;;:::i;:::-;;:::i;529:241:6:-;;;;;;;;;;-1:-1:-1;529:241:6;;;;;:::i;:::-;;:::i;6046:158:16:-;;;;;;;;;;-1:-1:-1;6046:158:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;1122:73:16;;;;;;;;;;-1:-1:-1;1122:73:16;;;;;;;-1:-1:-1;;;;;1122:73:16;;;7267:114;;;;;;;;;;-1:-1:-1;7267:114:16;;;;;:::i;:::-;;:::i;2176:235:3:-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;895:26:16:-;;;;;;;;;;;;;:::i;9118:164::-;;;;;;;;;;;;;:::i;1914:205:3:-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;2068:30:16:-;;;;;;;;;;;;;;;;7151:110;;;;;;;;;;-1:-1:-1;7151:110:16;;;;;:::i;:::-;;:::i;4403:473::-;;;;;;;;;;-1:-1:-1;4403:473:16;;;;;:::i;:::-;;:::i;5938:102::-;;;;;;;;;;-1:-1:-1;5938:102:16;;;;;:::i;:::-;;:::i;7682:258::-;;;;;;;;;;;;;:::i;5651:59::-;;;;;;;;;;;;;:::i;4911:712::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:3;;;;;;;;;;;;;:::i;1075:40:16:-;;;;;;;;;;-1:-1:-1;1075:40:16;;;;;;;;;;;4268:153:3;;;;;;;;;;-1:-1:-1;4268:153:3;;;;;:::i;:::-;;:::i;1210:73:16:-;;;;;;;;;;-1:-1:-1;1210:73:16;;;;-1:-1:-1;;;;;1210:73:16;;;3214:468;;;;;;;;;;-1:-1:-1;3214:468:16;;;;;:::i;:::-;;:::i;5352:320:3:-;;;;;;;;;;-1:-1:-1;5352:320:3;;;;;:::i;:::-;;:::i;5830:102:16:-;;;;;;;;;;-1:-1:-1;5830:102:16;;;;;:::i;:::-;;:::i;1035:34::-;;;;;;;;;;-1:-1:-1;1035:34:16;;;;;;;;;;;1943:29;;;;;;;;;;;;;;;;927:37;;;;;;;;;;;;;:::i;861:28::-;;;;;;;;;;;;;:::i;9557:266::-;;;;;;;;;;-1:-1:-1;9557:266:16;;;;;:::i;:::-;;:::i;1852:39::-;;;;;;;;;;-1:-1:-1;1852:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;6770:113;;;;;;;;;;;;;:::i;1394:73::-;;;;;;;;;;-1:-1:-1;1394:73:16;;;;-1:-1:-1;;;;;1394:73:16;;;9288:151;;;;;;;;;;;;;:::i;7019:126::-;;;;;;;;;;-1:-1:-1;7019:126:16;;;;;:::i;:::-;;:::i;1486:73::-;;;;;;;;;;-1:-1:-1;1486:73:16;;;;-1:-1:-1;;;;;1486:73:16;;;9829:110;;;;;;;;;;;;;:::i;999:25::-;;;;;;;;;;-1:-1:-1;999:25:16;;;;;;;;;;;;;;6896:4:17;6884:17;;;6866:36;;6854:2;6839:18;999:25:16;6724:184:17;6215:215:16;;;;;;;;;;;;;:::i;4487:162:3:-;;;;;;;;;;-1:-1:-1;4487:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;7946:292:16;;;;;;;;;;-1:-1:-1;7946:292:16;;;;;:::i;:::-;;:::i;6436:328::-;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2113:36:16:-;;;;;;;;;;;;;;;;9949:77;;;;;;;;;;-1:-1:-1;10014:5:16;;;;9949:77;;1555:300:3;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1812:36:3;1673:175;1555:300;-1:-1:-1;;1555:300:3:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;4079:73;;;;-1:-1:-1;;;4079:73:3;;8254:2:17;4079:73:3;;;8236:21:17;8293:2;8273:18;;;8266:30;8332:34;8312:18;;;8305:62;-1:-1:-1;;;8383:18:17;;;8376:42;8435:19;;4079:73:3;;;;;;;;;-1:-1:-1;4170:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:3;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;8667:2:17;3651:57:3;;;8649:21:17;8706:2;8686:18;;;8679:30;8745:34;8725:18;;;8718:62;-1:-1:-1;;;8796:18:17;;;8789:31;8837:19;;3651:57:3;8465:397:17;3651:57:3;719:10:9;-1:-1:-1;;;;;3740:21:3;;;;:62;;-1:-1:-1;3765:37:3;3782:5;719:10:9;4487:162:3;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;9069:2:17;3719:165:3;;;9051:21:17;9108:2;9088:18;;;9081:30;9147:34;9127:18;;;9120:62;9218:26;9198:18;;;9191:54;9262:19;;3719:165:3;8867:420:17;3719:165:3;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;7387:289:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7512:1:16::1;7486:15;7480:29;:33;7472:85;;;::::0;-1:-1:-1;;;7472:85:16;;9855:2:17;7472:85:16::1;::::0;::::1;9837:21:17::0;9894:2;9874:18;;;9867:30;9933:34;9913:18;;;9906:62;-1:-1:-1;;;9984:18:17;;;9977:37;10031:19;;7472:85:16::1;9653:403:17::0;7472:85:16::1;7576:20;::::0;;;::::1;;;7575:21;7567:60;;;::::0;-1:-1:-1;;;7567:60:16;;10263:2:17;7567:60:16::1;::::0;::::1;10245:21:17::0;10302:2;10282:18;;;10275:30;10341:28;10321:18;;;10314:56;10387:18;;7567:60:16::1;10061:350:17::0;7567:60:16::1;7637:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;7387:289:::0;:::o;9445:106::-;9489:7;9543:1;9515:25;:15;918:14:10;;827:112;9515:25:16;:29;;;;:::i;:::-;9508:36;;9445:106;:::o;6889:124::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6971:14:16::1;:35:::0;6889:124::o;4711:330:3:-;4900:41;719:10:9;4919:12:3;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:3;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;3720:650:16:-;3851:12;;3865:10;;2758:74;2777:6;;2758:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2802:28:16;;-1:-1:-1;;2819:10:16;11245:2:17;11241:15;11237:53;2802:28:16;;;11225:66:17;2785:5:16;;-1:-1:-1;11307:12:17;;;-1:-1:-1;2802:28:16;;;;;;;;;;;;2792:39;;;;;;2758:18;:74::i;:::-;2750:112;;;;-1:-1:-1;;;2750:112:16;;11532:2:17;2750:112:16;;;11514:21:17;11571:2;11551:18;;;11544:30;11610:27;11590:18;;;11583:55;11655:18;;2750:112:16;11330:349:17;2750:112:16;3903:9:::1;::::0;3914:1:::1;2999:9;2971:24;3914:1:::0;3903:9;2971:24:::1;:::i;:::-;:37;2963:75;;;::::0;-1:-1:-1;;;2963:75:16;;12059:2:17;2963:75:16::1;::::0;::::1;12041:21:17::0;12098:2;12078:18;;;12071:30;-1:-1:-1;;;12117:18:17;;;12110:55;12182:18;;2963:75:16::1;11857:349:17::0;2963:75:16::1;3104:9:::2;3117:10;3104:23;3096:67;;;::::0;-1:-1:-1;;;3096:67:16;;12413:2:17;3096:67:16::2;::::0;::::2;12395:21:17::0;12452:2;12432:18;;;12425:30;12491:33;12471:18;;;12464:61;12542:18;;3096:67:16::2;12211:355:17::0;3096:67:16::2;1744:1:2::3;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;12773:2:17;2317:63:2::3;::::0;::::3;12755:21:17::0;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:2::3;12571:355:17::0;2317:63:2::3;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::4;1403:38;;;;-1:-1:-1::0;;;1403:38:1::4;;;;;;;:::i;:::-;4006:5:16::5;::::0;::::5;;4015:1;4006:10;3998:55;;;::::0;-1:-1:-1;;;3998:55:16;;13478:2:17;3998:55:16::5;::::0;::::5;13460:21:17::0;;;13497:18;;;13490:30;13556:34;13536:18;;;13529:62;13608:18;;3998:55:16::5;13276:356:17::0;3998:55:16::5;4079:10;4071:19;::::0;;;:7:::5;:19;::::0;;;;;::::5;;:28;4063:72;;;::::0;-1:-1:-1;;;4063:72:16;;13839:2:17;4063:72:16::5;::::0;::::5;13821:21:17::0;13878:2;13858:18;;;13851:30;13917:33;13897:18;;;13890:61;13968:18;;4063:72:16::5;13637:355:17::0;4063:72:16::5;4175:15;;4154:13;:11;:13::i;:::-;:17;::::0;4170:1:::5;4154:17;:::i;:::-;:36;;4146:90;;;::::0;-1:-1:-1;;;4146:90:16;;14332:2:17;4146:90:16::5;::::0;::::5;14314:21:17::0;14371:2;14351:18;;;14344:30;14410:34;14390:18;;;14383:62;-1:-1:-1;;;14461:18:17;;;14454:39;14510:19;;4146:90:16::5;14130:405:17::0;4146:90:16::5;4254:10;4246:19;::::0;;;:7:::5;:19;::::0;;;;:26;;-1:-1:-1;;4246:26:16::5;4268:4;4246:26;::::0;;4282:44:::5;::::0;4300:25:::5;:15;918:14:10::0;;827:112;4300:25:16::5;4282:5;:44::i;:::-;4336:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;4336:27:16::5;-1:-1:-1::0;;1701:1:2::3;2628:7;:22:::0;-1:-1:-1;;;;;3720:650:16:o;8244:839::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8331:1:16::1;8307:21;:25;8299:60;;;::::0;-1:-1:-1;;;8299:60:16;;14742:2:17;8299:60:16::1;::::0;::::1;14724:21:17::0;14781:2;14761:18;;;14754:30;-1:-1:-1;;;14800:18:17;;;14793:52;14862:18;;8299:60:16::1;14540:346:17::0;8299:60:16::1;8391:13;::::0;8370:7:::1;::::0;8391:13;;::::1;-1:-1:-1::0;;;;;8391:13:16::1;8418:40;8453:4;8418:30;:21;8444:3;8418:25;:30::i;:::-;:34:::0;::::1;:40::i;:::-;8383:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:94;;;8481:2;8473:33;;;::::0;-1:-1:-1;;;8473:33:16;;15303:2:17;8473:33:16::1;::::0;::::1;15285:21:17::0;15342:2;15322:18;;;15315:30;-1:-1:-1;;;15361:18:17;;;15354:48;15419:18;;8473:33:16::1;15101:342:17::0;8473:33:16::1;8538:13;::::0;8517:7:::1;::::0;-1:-1:-1;;;;;8538:13:16::1;8565:40;8600:4;8565:30;:21;8591:3;8565:25;:30::i;:40::-;8530:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8516:94;;;8629:2;8621:33;;;::::0;-1:-1:-1;;;8621:33:16;;15650:2:17;8621:33:16::1;::::0;::::1;15632:21:17::0;15689:2;15669:18;;;15662:30;-1:-1:-1;;;15708:18:17;;;15701:48;15766:18;;8621:33:16::1;15448:342:17::0;8621:33:16::1;8686:13;::::0;8665:7:::1;::::0;-1:-1:-1;;;;;8686:13:16::1;8713:40;8748:4;8713:30;:21;8739:3;8713:25;:30::i;:40::-;8678:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8664:94;;;8777:2;8769:33;;;::::0;-1:-1:-1;;;8769:33:16;;15997:2:17;8769:33:16::1;::::0;::::1;15979:21:17::0;16036:2;16016:18;;;16009:30;-1:-1:-1;;;16055:18:17;;;16048:48;16113:18;;8769:33:16::1;15795:342:17::0;8769:33:16::1;8834:13;::::0;8813:7:::1;::::0;-1:-1:-1;;;;;8834:13:16::1;8861:39;8895:4;8861:29;:21;8887:2;8861:25;:29::i;:39::-;8826:79;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8812:93;;;8923:2;8915:33;;;::::0;-1:-1:-1;;;8915:33:16;;16344:2:17;8915:33:16::1;::::0;::::1;16326:21:17::0;16383:2;16363:18;;;16356:30;-1:-1:-1;;;16402:18:17;;;16395:48;16460:18;;8915:33:16::1;16142:342:17::0;8915:33:16::1;8980:13;::::0;8972:61:::1;::::0;8959:7:::1;::::0;-1:-1:-1;;;;;8980:13:16::1;::::0;9007:21:::1;::::0;8959:7;8972:61;8959:7;8972:61;9007:21;8980:13;8972:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8958:75;;;9051:2;9043:33;;;::::0;-1:-1:-1;;;9043:33:16;;16691:2:17;9043:33:16::1;::::0;::::1;16673:21:17::0;16730:2;16710:18;;;16703:30;-1:-1:-1;;;16749:18:17;;;16742:48;16807:18;;9043:33:16::1;16489:342:17::0;9043:33:16::1;8289:794;;;;;8244:839::o:0;5716:63::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5762:10:16::1;:8;:10::i;:::-;5716:63::o:0;5107:179:3:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:6:-;645:41;719:10:9;664:12:6;640:96:9;645:41:6;637:102;;;;-1:-1:-1;;;637:102:6;;17038:2:17;637:102:6;;;17020:21:17;17077:2;17057:18;;;17050:30;17116:34;17096:18;;;17089:62;-1:-1:-1;;;17167:18:17;;;17160:46;17223:19;;637:102:6;16836:412:17;637:102:6;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;6046:158:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6129:14:16::1;::::0;;;::::1;;;6128:15;6120:46;;;::::0;-1:-1:-1;;;6120:46:16;;17455:2:17;6120:46:16::1;::::0;::::1;17437:21:17::0;17494:2;17474:18;;;17467:30;-1:-1:-1;;;17513:18:17;;;17506:48;17571:18;;6120:46:16::1;17253:342:17::0;6120:46:16::1;6176:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;7267:114::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7343:12:16::1;:31:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7343:31:16;;::::1;::::0;;;::::1;::::0;;7267:114::o;2176:235:3:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;17802:2:17;2309:73:3;;;17784:21:17;17841:2;17821:18;;;17814:30;17880:34;17860:18;;;17853:62;-1:-1:-1;;;17931:18:17;;;17924:39;17980:19;;2309:73:3;17600:405:17;895:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9118:164::-;9166:7;9208:1;9192:13;:11;:13::i;:::-;:17;9184:52;;;;-1:-1:-1;;;9184:52:16;;18212:2:17;9184:52:16;;;18194:21:17;18251:2;18231:18;;;18224:30;-1:-1:-1;;;18270:18:17;;;18263:52;18332:18;;9184:52:16;18010:346:17;9184:52:16;9253:22;9261:13;:11;:13::i;1914:205:3:-;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;18563:2:17;2005:74:3;;;18545:21:17;18602:2;18582:18;;;18575:30;18641:34;18621:18;;;18614:62;-1:-1:-1;;;18692:18:17;;;18685:40;18742:19;;2005:74:3;18361:406:17;2005:74:3;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;7151:110:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7229:9:16::1;:25:::0;7151:110::o;4403:473::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4514:5:16::1;::::0;::::1;;4523:1;4514:10;4506:47;;;::::0;-1:-1:-1;;;4506:47:16;;18974:2:17;4506:47:16::1;::::0;::::1;18956:21:17::0;19013:2;18993:18;;;18986:30;19052:26;19032:18;;;19025:54;19096:18;;4506:47:16::1;18772:348:17::0;4506:47:16::1;4602:14;::::0;4585:13:::1;::::0;4571:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;4563:100;;;::::0;-1:-1:-1;;;4563:100:16;;19327:2:17;4563:100:16::1;::::0;::::1;19309:21:17::0;19366:2;19346:18;;;19339:30;19405:34;19385:18;;;19378:62;-1:-1:-1;;;19456:18:17;;;19449:40;19506:19;;4563:100:16::1;19125:406:17::0;4563:100:16::1;4696:11;4679:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4734:1:16::1;::::0;-1:-1:-1;4717:153:16::1;4742:11;4737:16;;:1;:16;4717:153;;4774:44;4780:10;4792:25;:15;918:14:10::0;;827:112;4774:44:16::1;4832:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;4832:27:16::1;4755:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4717:153;;5938:102:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6009:10:16::1;:24:::0;5938:102::o;7682:258::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7780:1:16::1;7755:14;7749:28;;;;;:::i;:::-;;;:32;7741:77;;;::::0;-1:-1:-1;;;7741:77:16;;19878:2:17;7741:77:16::1;::::0;::::1;19860:21:17::0;;;19897:18;;;19890:30;19956:34;19936:18;;;19929:62;20008:18;;7741:77:16::1;19676:356:17::0;7741:77:16::1;7837:20;::::0;;;::::1;;;7836:21;7828:68;;;::::0;-1:-1:-1;;;7828:68:16;;20239:2:17;7828:68:16::1;::::0;::::1;20221:21:17::0;20278:2;20258:18;;;20251:30;20317:34;20297:18;;;20290:62;-1:-1:-1;;;20368:18:17;;;20361:32;20410:19;;7828:68:16::1;20037:398:17::0;7828:68:16::1;7906:20;:27:::0;;-1:-1:-1;;7906:27:16::1;::::0;::::1;::::0;;7682:258::o;5651:59::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5695:8:16::1;:6;:8::i;4911:712::-:0;5023:9;;2886:170;;;2999:9;2971:24;2886:170;5023:9;2971:24;:::i;:::-;:37;2963:75;;;;-1:-1:-1;;;2963:75:16;;12059:2:17;2963:75:16;;;12041:21:17;12098:2;12078:18;;;12071:30;-1:-1:-1;;;12117:18:17;;;12110:55;12182:18;;2963:75:16;11857:349:17;2963:75:16;3104:9:::1;3117:10;3104:23;3096:67;;;::::0;-1:-1:-1;;;3096:67:16;;12413:2:17;3096:67:16::1;::::0;::::1;12395:21:17::0;12452:2;12432:18;;;12425:30;12491:33;12471:18;;;12464:61;12542:18;;3096:67:16::1;12211:355:17::0;3096:67:16::1;1744:1:2::2;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;12773:2:17;2317:63:2::2;::::0;::::2;12755:21:17::0;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:2::2;12571:355:17::0;2317:63:2::2;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::3;1403:38;;;;-1:-1:-1::0;;;1403:38:1::3;;;;;;;:::i;:::-;5137:5:16::4;::::0;::::4;;5146:1;5137:10;5129:50;;;::::0;-1:-1:-1;;;5129:50:16;;20642:2:17;5129:50:16::4;::::0;::::4;20624:21:17::0;20681:2;20661:18;;;20654:30;20720:29;20700:18;;;20693:57;20767:18;;5129:50:16::4;20440:351:17::0;5129:50:16::4;5229:15;;5214:11;5197:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;5189:97;;;::::0;-1:-1:-1;;;5189:97:16;;20998:2:17;5189:97:16::4;::::0;::::4;20980:21:17::0;21037:2;21017:18;;;21010:30;21076:34;21056:18;;;21049:62;-1:-1:-1;;;21127:18:17;;;21120:35;21172:19;;5189:97:16::4;20796:401:17::0;5189:97:16::4;5318:1;5304:11;:15;;;5296:63;;;::::0;-1:-1:-1;;;5296:63:16;;21404:2:17;5296:63:16::4;::::0;::::4;21386:21:17::0;21443:2;21423:18;;;21416:30;21482:34;21462:18;;;21455:62;-1:-1:-1;;;21533:18:17;;;21526:33;21576:19;;5296:63:16::4;21202:399:17::0;5296:63:16::4;5392:12;::::0;::::4;;::::0;;::::4;::::0;::::4;5377:27:::0;;::::4;;;5369:82;;;::::0;-1:-1:-1;;;5369:82:16;;21808:2:17;5369:82:16::4;::::0;::::4;21790:21:17::0;21847:2;21827:18;;;21820:30;21886:34;21866:18;;;21859:62;-1:-1:-1;;;21937:18:17;;;21930:40;21987:19;;5369:82:16::4;21606:406:17::0;5369:82:16::4;5481:1;5464:153;5489:11;5484:16;;:1;:16;5464:153;;5521:44;5527:10;5539:25;:15;918:14:10::0;;827:112;5521:44:16::4;5579:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;5579:27:16::4;5502:3:::0;::::4;::::0;::::4;:::i;:::-;;;;5464:153;;;-1:-1:-1::0;;1701:1:2::2;2628:7;:22:::0;-1:-1:-1;;4911:712:16:o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:9;4395:8:3;4405;4362:18;:52::i;3214:468:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3365:1:16::1;3351:11;:15;;;3343:65;;;::::0;-1:-1:-1;;;3343:65:16;;22219:2:17;3343:65:16::1;::::0;::::1;22201:21:17::0;22258:2;22238:18;;;22231:30;22297:34;22277:18;;;22270:62;-1:-1:-1;;;22348:18:17;;;22341:35;22393:19;;3343:65:16::1;22017:401:17::0;3343:65:16::1;3458:15;;3443:11;3426:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;3418:102;;;::::0;-1:-1:-1;;;3418:102:16;;22625:2:17;3418:102:16::1;::::0;::::1;22607:21:17::0;22664:2;22644:18;;;22637:30;22703:34;22683:18;;;22676:62;-1:-1:-1;;;22754:18:17;;;22747:40;22804:19;;3418:102:16::1;22423:406:17::0;3418:102:16::1;3547:1;3530:146;3555:11;3550:16;;:1;:16;3530:146;;3587:37;3593:3;3598:25;:15;918:14:10::0;;827:112;3587:37:16::1;3638:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;3638:27:16::1;3568:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3530:146;;5352:320:3::0;5521:41;719:10:9;5554:7:3;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:3;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;5830:102:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5899:19:16::1;;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;5899:26:16::1;5921:4;5899:26;::::0;;5830:102::o;927:37::-;;;;;;;:::i;861:28::-;;;;;;;:::i;9557:266::-;7209:4:3;7232:16;;;:7;:16;;;;;;9630:13:16;;-1:-1:-1;;;;;7232:16:3;9655:76:16;;;;-1:-1:-1;;;9655:76:16;;23036:2:17;9655:76:16;;;23018:21:17;23075:2;23055:18;;;23048:30;23114:34;23094:18;;;23087:62;-1:-1:-1;;;23165:18:17;;;23158:45;23220:19;;9655:76:16;22834:411:17;9655:76:16;9772:7;9781:18;:7;:16;:18::i;:::-;9801:13;9755:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9741:75;;9557:266;;;:::o;6770:113::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6826:5:16::1;::::0;::::1;;6818:41;;;::::0;-1:-1:-1;;;6818:41:16;;25017:2:17;6818:41:16::1;::::0;::::1;24999:21:17::0;25056:2;25036:18;;;25029:30;-1:-1:-1;;;25075:18:17;;;25068:49;25134:18;;6818:41:16::1;24815:343:17::0;6818:41:16::1;6869:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6770:113::o:0;9288:151::-;9331:7;9373:1;9357:13;:11;:13::i;:::-;:17;9349:52;;;;-1:-1:-1;;;9349:52:16;;18212:2:17;9349:52:16;;;18194:21:17;18251:2;18231:18;;;18224:30;-1:-1:-1;;;18270:18:17;;;18263:52;18332:18;;9349:52:16;18010:346:17;9349:52:16;9418:13;:11;:13::i;7019:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7105:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;9829:110::-:0;9875:7;9919:13;:11;:13::i;:::-;9901:15;;:31;;;;:::i;6215:215::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6299:1:16::1;6281:7;6275:21;;;;;:::i;:::-;;;:25;6267:61;;;::::0;-1:-1:-1;;;6267:61:16;;25548:2:17;6267:61:16::1;::::0;::::1;25530:21:17::0;25587:2;25567:18;;;25560:30;25626:25;25606:18;;;25599:53;25669:18;;6267:61:16::1;25346:347:17::0;6267:61:16::1;6347:14;::::0;;;::::1;;;6346:15;6338:54;;;::::0;-1:-1:-1;;;6338:54:16;;25900:2:17;6338:54:16::1;::::0;::::1;25882:21:17::0;25939:2;25919:18;;;25912:30;25978:28;25958:18;;;25951:56;26024:18;;6338:54:16::1;25698:350:17::0;6338:54:16::1;6402:14;:21:::0;;-1:-1:-1;;6402:21:16::1;::::0;::::1;::::0;;6215:215::o;7946:292::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8081:13:16::1;:22:::0;;-1:-1:-1;;;;;8081:22:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;8081:22:16;;::::1;;::::0;;8113:13:::1;:22:::0;;;;::::1;-1:-1:-1::0;;;;;;8113:22:16;;::::1;;::::0;;8145:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;8177:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8209:13:::1;:22:::0;;;;;::::1;::::0;::::1;;::::0;;7946:292::o;6436:328::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6492:20:16::1;::::0;;;::::1;;;:28;;6516:4;6492:28;6484:97;;;::::0;-1:-1:-1;;;6484:97:16;;26255:2:17;6484:97:16::1;::::0;::::1;26237:21:17::0;26294:2;26274:18;;;26267:30;26333:34;26313:18;;;26306:62;26404:26;26384:18;;;26377:54;26448:19;;6484:97:16::1;26053:420:17::0;6484:97:16::1;6599:10;::::0;6610:1:::1;6599:13;;;-1:-1:-1::0;;;;;;6599:18:16::1;6591:90;;;::::0;-1:-1:-1;;;6591:90:16;;26812:2:17;6591:90:16::1;::::0;::::1;26794:21:17::0;26851:2;26831:18;;;26824:30;26890:34;26870:18;;;26863:62;26961:29;26941:18;;;26934:57;27008:19;;6591:90:16::1;26610:423:17::0;6591:90:16::1;6699:5;::::0;6707:1:::1;6699:5;::::0;;::::1;:9;6691:49;;;::::0;-1:-1:-1;;;6691:49:16;;27240:2:17;6691:49:16::1;::::0;::::1;27222:21:17::0;27279:2;27259:18;;;27252:30;27318:29;27298:18;;;27291:57;27365:18;;6691:49:16::1;27038:351:17::0;6691:49:16::1;6750:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;1918:198:0:-:0;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;27776:2:17;1998:73:0::1;::::0;::::1;27758:21:17::0;27815:2;27795:18;;;27788:30;27854:34;27834:18;;;27827:62;-1:-1:-1;;;27905:18:17;;;27898:36;27951:19;;1998:73:0::1;27574:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;945:123:10:-:0;1032:19;;1050:1;1032:19;;;945:123::o;10995:171:3:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:3;-1:-1:-1;;;;;11069:29:3;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:3;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;7536:73;;;;-1:-1:-1;;;7536:73:3;;28183:2:17;7536:73:3;;;28165:21:17;28222:2;28202:18;;;28195:30;28261:34;28241:18;;;28234:62;-1:-1:-1;;;28312:18:17;;;28305:42;28364:19;;7536:73:3;27981:408:17;7536:73:3;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:3;:7;-1:-1:-1;;;;;7676:16:3;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:3;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:3;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:3:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:3;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:3;;10443:85;;;;-1:-1:-1;;;10443:85:3;;28596:2:17;10443:85:3;;;28578:21:17;28635:2;28615:18;;;28608:30;28674:34;28654:18;;;28647:62;-1:-1:-1;;;28725:18:17;;;28718:39;28774:19;;10443:85:3;28394:405:17;10443:85:3;-1:-1:-1;;;;;10546:16:3;;10538:65;;;;-1:-1:-1;;;10538:65:3;;29006:2:17;10538:65:3;;;28988:21:17;29045:2;29025:18;;;29018:30;29084:34;29064:18;;;29057:62;-1:-1:-1;;;29135:18:17;;;29128:34;29179:19;;10538:65:3;28804:400:17;10538:65:3;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:3;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:3;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:3;-1:-1:-1;;;;;10813:21:3;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;847:184:12:-;968:4;1020;991:25;1004:5;1011:4;991:12;:25::i;:::-;:33;;847:184;-1:-1:-1;;;;847:184:12:o;9063:372:3:-;-1:-1:-1;;;;;9142:16:3;;9134:61;;;;-1:-1:-1;;;9134:61:3;;29411:2:17;9134:61:3;;;29393:21:17;;;29430:18;;;29423:30;29489:34;29469:18;;;29462:62;29541:18;;9134:61:3;29209:356:17;9134:61:3;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;:30;9205:58;;;;-1:-1:-1;;;9205:58:3;;29772:2:17;9205:58:3;;;29754:21:17;29811:2;29791:18;;;29784:30;29850;29830:18;;;29823:58;29898:18;;9205:58:3;29570:352:17;9205:58:3;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:3;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:3;-1:-1:-1;;;;;9358:21:3;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;3451:96:15:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:15:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;30386:2:17;1669:41:1;;;30368:21:17;30425:2;30405:18;;;30398:30;-1:-1:-1;;;30444:18:17;;;30437:50;30504:18;;1669:41:1;30184:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:9::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;9652:348:3:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:3;;;;;;:9;:16;;;;;:21;;9907:1;;9887:16;:21;;9907:1;;9887:21;:::i;:::-;;;;-1:-1:-1;;9925:16:3;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:3;;;9957:36;9933:7;;9925:16;-1:-1:-1;;;;;9957:36:3;;;;;9925:16;;9957:36;9701:299;9652:348;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:9::0;;640:96;11301:307:3;11451:8;-1:-1:-1;;;;;11442:17:3;:5;-1:-1:-1;;;;;11442:17:3;;;11434:55;;;;-1:-1:-1;;;11434:55:3;;30735:2:17;11434:55:3;;;30717:21:17;30774:2;30754:18;;;30747:30;30813:27;30793:18;;;30786:55;30858:18;;11434:55:3;30533:349:17;11434:55:3;-1:-1:-1;;;;;11499:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:3;;;;;;;;;;11560:41;;540::17;;;11560::3;;513:18:17;11560:41:3;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:3;;;;;;;:::i;328:703:11:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:11;;;;;;;;;;;;-1:-1:-1;;;627:10:11;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:11;;-1:-1:-1;773:2:11;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:11;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:11;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:11;;;;;;;;-1:-1:-1;972:11:11;981:2;972:11;;:::i;:::-;;;844:150;;10032:175:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;1383:688:12:-;1466:7;1508:4;1466:7;1522:514;1546:5;:12;1542:1;:16;1522:514;;;1579:20;1602:5;1608:1;1602:8;;;;;;;;:::i;:::-;;;;;;;1579:31;;1644:12;1628;:28;1624:402;;1779:44;;;;;;31580:19:17;;;31615:12;;;31608:28;;;31652:12;;1779:44:12;;;;;;;;;;;;1769:55;;;;;;1754:70;;1624:402;;;1966:44;;;;;;31580:19:17;;;31615:12;;;31608:28;;;31652:12;;1966:44:12;;;;;;;;;;;;1956:55;;;;;;1941:70;;1624:402;-1:-1:-1;1560:3:12;;;;:::i;:::-;;;;1522:514;;;-1:-1:-1;2052:12:12;1383:688;-1:-1:-1;;;1383:688:12:o;12161:778:3:-;12311:4;-1:-1:-1;;;;;12331:13:3;;1087:20:8;1133:8;12327:606:3;;12366:72;;-1:-1:-1;;;12366:72:3;;-1:-1:-1;;;;;12366:36:3;;;;;:72;;719:10:9;;12417:4:3;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:3;;;;;;;;-1:-1:-1;;12366:72:3;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:3;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:3;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:3;-1:-1:-1;;;12488:51:3;;-1:-1:-1;12481:58:3;;12327:606;-1:-1:-1;12918:4:3;12161:778;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:17;;-1:-1:-1;;;;4095:615:17:o;4715:156::-;4781:20;;4841:4;4830:16;;4820:27;;4810:55;;4861:1;4858;4851:12;4876:182;4933:6;4986:2;4974:9;4965:7;4961:23;4957:32;4954:52;;;5002:1;4999;4992:12;4954:52;5025:27;5042:9;5025:27;:::i;5063:186::-;5122:6;5175:2;5163:9;5154:7;5150:23;5146:32;5143:52;;;5191:1;5188;5181:12;5143:52;5214:29;5233:9;5214:29;:::i;5439:347::-;5504:6;5512;5565:2;5553:9;5544:7;5540:23;5536:32;5533:52;;;5581:1;5578;5571:12;5533:52;5604:29;5623:9;5604:29;:::i;:::-;5594:39;;5683:2;5672:9;5668:18;5655:32;5730:5;5723:13;5716:21;5709:5;5706:32;5696:60;;5752:1;5749;5742:12;5696:60;5775:5;5765:15;;;5439:347;;;;;:::o;5791:256::-;5857:6;5865;5918:2;5906:9;5897:7;5893:23;5889:32;5886:52;;;5934:1;5931;5924:12;5886:52;5957:27;5974:9;5957:27;:::i;:::-;5947:37;;6003:38;6037:2;6026:9;6022:18;6003:38;:::i;:::-;5993:48;;5791:256;;;;;:::o;6052:667::-;6147:6;6155;6163;6171;6224:3;6212:9;6203:7;6199:23;6195:33;6192:53;;;6241:1;6238;6231:12;6192:53;6264:29;6283:9;6264:29;:::i;:::-;6254:39;;6312:38;6346:2;6335:9;6331:18;6312:38;:::i;:::-;6302:48;;6397:2;6386:9;6382:18;6369:32;6359:42;;6452:2;6441:9;6437:18;6424:32;6479:18;6471:6;6468:30;6465:50;;;6511:1;6508;6501:12;6465:50;6534:22;;6587:4;6579:13;;6575:27;-1:-1:-1;6565:55:17;;6616:1;6613;6606:12;6565:55;6639:74;6705:7;6700:2;6687:16;6682:2;6678;6674:11;6639:74;:::i;:::-;6629:84;;;6052:667;;;;;;;:::o;6913:260::-;6981:6;6989;7042:2;7030:9;7021:7;7017:23;7013:32;7010:52;;;7058:1;7055;7048:12;7010:52;7081:29;7100:9;7081:29;:::i;7178:484::-;7273:6;7281;7289;7297;7305;7358:3;7346:9;7337:7;7333:23;7329:33;7326:53;;;7375:1;7372;7365:12;7326:53;7398:29;7417:9;7398:29;:::i;:::-;7388:39;;7446:38;7480:2;7469:9;7465:18;7446:38;:::i;:::-;7436:48;;7503:38;7537:2;7526:9;7522:18;7503:38;:::i;:::-;7493:48;;7560:38;7594:2;7583:9;7579:18;7560:38;:::i;:::-;7550:48;;7617:39;7651:3;7640:9;7636:19;7617:39;:::i;:::-;7607:49;;7178:484;;;;;;;;:::o;7667:380::-;7746:1;7742:12;;;;7789;;;7810:61;;7864:4;7856:6;7852:17;7842:27;;7810:61;7917:2;7909:6;7906:14;7886:18;7883:38;7880:161;;;7963:10;7958:3;7954:20;7951:1;7944:31;7998:4;7995:1;7988:15;8026:4;8023:1;8016:15;7880:161;;7667:380;;;:::o;9292:356::-;9494:2;9476:21;;;9513:18;;;9506:30;9572:34;9567:2;9552:18;;9545:62;9639:2;9624:18;;9292:356::o;10416:127::-;10477:10;10472:3;10468:20;10465:1;10458:31;10508:4;10505:1;10498:15;10532:4;10529:1;10522:15;10548:125;10588:4;10616:1;10613;10610:8;10607:34;;;10621:18;;:::i;:::-;-1:-1:-1;10658:9:17;;10548:125::o;10678:413::-;10880:2;10862:21;;;10919:2;10899:18;;;10892:30;10958:34;10953:2;10938:18;;10931:62;-1:-1:-1;;;11024:2:17;11009:18;;11002:47;11081:3;11066:19;;10678:413::o;11684:168::-;11724:7;11790:1;11786;11782:6;11778:14;11775:1;11772:21;11767:1;11760:9;11753:17;11749:45;11746:71;;;11797:18;;:::i;:::-;-1:-1:-1;11837:9:17;;11684:168::o;12931:340::-;13133:2;13115:21;;;13172:2;13152:18;;;13145:30;-1:-1:-1;;;13206:2:17;13191:18;;13184:46;13262:2;13247:18;;12931:340::o;13997:128::-;14037:3;14068:1;14064:6;14061:1;14058:13;14055:39;;;14074:18;;:::i;:::-;-1:-1:-1;14110:9:17;;13997:128::o;19536:135::-;19575:3;-1:-1:-1;;19596:17:17;;19593:43;;;19616:18;;:::i;:::-;-1:-1:-1;19663:1:17;19652:13;;19536:135::o;23376:973::-;23461:12;;23426:3;;23516:1;23536:18;;;;23589;;;;23616:61;;23670:4;23662:6;23658:17;23648:27;;23616:61;23696:2;23744;23736:6;23733:14;23713:18;23710:38;23707:161;;;23790:10;23785:3;23781:20;23778:1;23771:31;23825:4;23822:1;23815:15;23853:4;23850:1;23843:15;23707:161;23884:18;23911:104;;;;24029:1;24024:319;;;;23877:466;;23911:104;-1:-1:-1;;23944:24:17;;23932:37;;23989:16;;;;-1:-1:-1;23911:104:17;;24024:319;23323:1;23316:14;;;23360:4;23347:18;;24118:1;24132:165;24146:6;24143:1;24140:13;24132:165;;;24224:14;;24211:11;;;24204:35;24267:16;;;;24161:10;;24132:165;;;24136:3;;24326:6;24321:3;24317:16;24310:23;;23877:466;;;;;;;23376:973;;;;:::o;24354:456::-;24575:3;24603:38;24637:3;24629:6;24603:38;:::i;:::-;24670:6;24664:13;24686:52;24731:6;24727:2;24720:4;24712:6;24708:17;24686:52;:::i;:::-;24754:50;24796:6;24792:2;24788:15;24780:6;24754:50;:::i;:::-;24747:57;24354:456;-1:-1:-1;;;;;;;24354:456:17:o;25163:178::-;25200:3;25244:4;25237:5;25233:16;25268:7;25258:41;;25279:18;;:::i;:::-;-1:-1:-1;;25315:20:17;;25163:178;-1:-1:-1;;25163:178:17:o;26478:127::-;26539:10;26534:3;26530:20;26527:1;26520:31;26570:4;26567:1;26560:15;26594:4;26591:1;26584:15;27394:175;27431:3;27475:4;27468:5;27464:16;27504:4;27495:7;27492:17;27489:43;;;27512:18;;:::i;:::-;27561:1;27548:15;;27394:175;-1:-1:-1;;27394:175:17:o;29927:127::-;29988:10;29983:3;29979:20;29976:1;29969:31;30019:4;30016:1;30009:15;30043:4;30040:1;30033:15;30059:120;30099:1;30125;30115:35;;30130:18;;:::i;:::-;-1:-1:-1;30164:9:17;;30059:120::o;30887:414::-;31089:2;31071:21;;;31128:2;31108:18;;;31101:30;31167:34;31162:2;31147:18;;31140:62;-1:-1:-1;;;31233:2:17;31218:18;;31211:48;31291:3;31276:19;;30887:414::o;31306:112::-;31338:1;31364;31354:35;;31369:18;;:::i;:::-;-1:-1:-1;31403:9:17;;31306:112::o;31675:489::-;-1:-1:-1;;;;;31944:15:17;;;31926:34;;31996:15;;31991:2;31976:18;;31969:43;32043:2;32028:18;;32021:34;;;32091:3;32086:2;32071:18;;32064:31;;;31869:4;;32112:46;;32138:19;;32130:6;32112:46;:::i;:::-;32104:54;31675:489;-1:-1:-1;;;;;;31675:489:17:o;32169:249::-;32238:6;32291:2;32279:9;32270:7;32266:23;32262:32;32259:52;;;32307:1;32304;32297:12;32259:52;32339:9;32333:16;32358:30;32382:5;32358:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    546,
    10210
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81C162F2 GT PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xDE7FCB1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEE3743AB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEE3743AB EQ PUSH2 0xA56 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA8B JUMPI DUP1 PUSH4 0xFCAA7664 EQ PUSH2 0xAA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x9D8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0xEA74E190 EQ PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD6D67A09 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xDB993F56 EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8B8 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0xCBD0A2B5 EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0xD2FAB8B9 EQ PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1214392 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0xC29DE630 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1214392 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xBBC903EA EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x75F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x782 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x722 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x858E83B5 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x2CC JUMPI DUP1 PUSH4 0x6C0360EB GT PUSH2 0x26A JUMPI DUP1 PUSH4 0x78231978 GT PUSH2 0x239 JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0x61869A93 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A GT PUSH2 0x344 JUMPI DUP1 PUSH4 0x372F657C GT PUSH2 0x313 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x3C795047 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x380 JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A8 JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x331D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x3365 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xE4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x3464 JUMP JUMPDEST PUSH2 0xEA0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x47A PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x34A0 JUMP JUMPDEST PUSH2 0xED2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x47A PUSH2 0x122B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x15EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x3464 JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x5A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x1643 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x5C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0x16BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x3C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x41E SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x628 CALLDATASIZE PUSH1 0x4 PUSH2 0x3526 JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x648 CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x179A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x1811 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41E PUSH2 0x189F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x692 CALLDATASIZE PUSH1 0x4 PUSH2 0x3541 JUMP JUMPDEST PUSH2 0x18FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x1982 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x6DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x19BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x6FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3526 JUMP JUMPDEST PUSH2 0x19F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x1B3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x1B74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x47A PUSH2 0x75A CALLDATASIZE PUSH1 0x4 PUSH2 0x3526 JUMP JUMPDEST PUSH2 0x1CB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x1FB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3C7 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x7D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x355C JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x813 CALLDATASIZE PUSH1 0x4 PUSH2 0x3598 JUMP JUMPDEST PUSH2 0x1FD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x833 CALLDATASIZE PUSH1 0x4 PUSH2 0x35CB JUMP JUMPDEST PUSH2 0x2117 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x853 CALLDATASIZE PUSH1 0x4 PUSH2 0x3541 JUMP JUMPDEST PUSH2 0x214F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3C7 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x21A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x21B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x8D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x21BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0x8F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x2271 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x2317 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x96D CALLDATASIZE PUSH1 0x4 PUSH2 0x341B JUMP JUMPDEST PUSH2 0x2370 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x41E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0x23B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x9C6 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x23CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xA08 CALLDATASIZE PUSH1 0x4 PUSH2 0x3647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0xA51 CALLDATASIZE PUSH1 0x4 PUSH2 0x3663 JUMP JUMPDEST PUSH2 0x24C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0x2563 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47A PUSH2 0xA86 CALLDATASIZE PUSH1 0x4 PUSH2 0x3541 JUMP JUMPDEST PUSH2 0x2706 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xAEA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB05 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xB1A SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB46 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB93 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB93 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC42 DUP3 PUSH2 0x179A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xCCC JUMPI POP PUSH2 0xCCC DUP2 CALLER PUSH2 0xA08 JUMP JUMPDEST PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xD48 DUP4 DUP4 PUSH2 0x27AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE4B SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x31F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE5C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0xEAB CALLER JUMPDEST DUP3 PUSH2 0x281B JUMP JUMPDEST PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0xD48 DUP4 DUP4 DUP4 PUSH2 0x2912 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x9 SLOAD PUSH2 0xF49 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE DUP6 SWAP3 POP PUSH1 0x34 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x2ABD JUMP JUMPDEST PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 CALLVALUE PUSH2 0xFA5 DUP3 DUP5 PUSH2 0x37B6 JUMP JUMPDEST EQ PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x103D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1090 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E74696E67206E6F7420696E697469617465642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1178 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1183 SWAP1 PUSH1 0x1 PUSH2 0x37FF JUMP JUMPDEST GT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3A1039BAB838363C97 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x120F SWAP1 PUSH2 0x120A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AD3 JUMP JUMPDEST PUSH2 0x121D PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12D3 PUSH2 0x3E8 PUSH2 0x12CD SELFBALANCE PUSH2 0x2BC PUSH2 0x2C21 JUMP JUMPDEST SWAP1 PUSH2 0x2C34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x135A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x137A PUSH2 0x3E8 PUSH2 0x12CD SELFBALANCE PUSH1 0x69 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1421 PUSH2 0x3E8 PUSH2 0x12CD SELFBALANCE PUSH1 0x69 PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080CC819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14C8 PUSH2 0x3E8 PUSH2 0x12CD SELFBALANCE PUSH1 0x2D PUSH2 0x2C21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH2 0x1626 PUSH2 0x2C40 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD48 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x164C CALLER PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x16BA DUP2 PUSH2 0x2CD3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE4B SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x177E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xB05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x181E SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x184A SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x186C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x187A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x18AA PUSH2 0xE4F JUMP JUMPDEST GT PUSH2 0x18F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xE66 PUSH2 0x648 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH2 0x1626 PUSH1 0x0 PUSH2 0x2D7A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x19EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0x1A76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D2073616C65206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1A89 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x37FF JUMP JUMPDEST GT ISZERO PUSH2 0x1AEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x37FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xE4B JUMPI PUSH2 0x1B1F CALLER PUSH2 0x120A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2D PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1B37 DUP2 PUSH2 0x3817 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1BA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0x1BB3 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1C02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1CAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH2 0x1626 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF DUP3 AND CALLVALUE PUSH2 0x1CC6 DUP3 DUP5 PUSH2 0x37B6 JUMP JUMPDEST EQ PUSH2 0x1D0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x1D5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0x1E2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206E6F7420696E69746961697465642E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 PUSH1 0xFF AND PUSH2 0x1E3D PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x1E47 SWAP2 SWAP1 PUSH2 0x37FF JUMP JUMPDEST GT ISZERO PUSH2 0x1EA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xFF AND GT PUSH2 0x1F02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP5 AND GT ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 GT PUSH2 0x1FAD JUMPI PUSH2 0x1F8D CALLER PUSH2 0x120A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F9B PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1FA5 DUP2 PUSH2 0x3817 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F76 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB1A SWAP1 PUSH2 0x36C8 JUMP JUMPDEST PUSH2 0xE4B CALLER DUP4 DUP4 PUSH2 0x2E2C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x2063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x2072 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x207C SWAP2 SWAP1 PUSH2 0x37FF JUMP JUMPDEST GT ISZERO PUSH2 0x20DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xD48 JUMPI PUSH2 0x20F7 DUP3 PUSH2 0x120A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2105 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x210F DUP2 PUSH2 0x3817 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0x2121 CALLER DUP4 PUSH2 0x281B JUMP JUMPDEST PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x2149 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2EFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x217F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x181E SWAP1 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x181E SWAP1 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x223C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xB PUSH2 0x2247 DUP4 PUSH2 0x2F2E JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x225B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x22E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27379039BA30B3B2B9903132B337B932901817 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x22FC DUP4 PUSH2 0x38FF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2322 PUSH2 0xE4F JUMP JUMPDEST GT PUSH2 0x2368 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xE66 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x23A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE4B SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BD PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x374E JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x23FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP1 SLOAD PUSH2 0x2409 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x2458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x24F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xE DUP1 SLOAD SWAP5 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD SWAP4 DUP7 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2593 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH2 0x269C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x77686974656C697374206D696E74696E672063616E20626567696E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x26F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20737461676573206166746572207075626C69632073616C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x22FC DUP4 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x3703 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x279B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x16BA DUP2 PUSH2 0x2D7A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x27E2 DUP3 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289F DUP4 PUSH2 0x179A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x28DA JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28CF DUP5 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x290A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2925 DUP3 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x298D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x29FA DUP4 DUP4 DUP4 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x0 DUP3 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A2E SWAP1 DUP5 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2A5C SWAP1 DUP5 SWAP1 PUSH2 0x37FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2ACA DUP6 DUP5 PUSH2 0x304F JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2B8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x2B9A PUSH1 0x0 DUP4 DUP4 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2BC3 SWAP1 DUP5 SWAP1 PUSH2 0x37FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2D DUP3 DUP5 PUSH2 0x37B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2D DUP3 DUP5 PUSH2 0x3968 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x2C89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDE DUP3 PUSH2 0x179A JUMP JUMPDEST SWAP1 POP PUSH2 0x2CEC DUP2 PUSH1 0x0 DUP5 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x2CF7 PUSH1 0x0 DUP4 PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2D20 SWAP1 DUP5 SWAP1 PUSH2 0x374E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2CB6 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2E8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2F06 DUP5 DUP5 DUP5 PUSH2 0x2912 JUMP JUMPDEST PUSH2 0x2F12 DUP5 DUP5 DUP5 DUP5 PUSH2 0x30FB JUMP JUMPDEST PUSH2 0x2149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x397C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2F52 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2F7C JUMPI DUP1 PUSH2 0x2F66 DUP2 PUSH2 0x3817 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F75 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3968 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F56 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F97 JUMPI PUSH2 0x2F97 PUSH2 0x338F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2FC1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x290A JUMPI PUSH2 0x2FD6 PUSH1 0x1 DUP4 PUSH2 0x374E JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE3 PUSH1 0xA DUP7 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x2FEE SWAP1 PUSH1 0x30 PUSH2 0x37FF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3003 JUMPI PUSH2 0x3003 PUSH2 0x391C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x3025 PUSH1 0xA DUP7 PUSH2 0x3968 JUMP JUMPDEST SWAP5 POP PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x37D5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x30F3 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3071 JUMPI PUSH2 0x3071 PUSH2 0x391C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x30B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x30E0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x30EB DUP2 PUSH2 0x3817 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3054 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x31EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x313F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x39E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x317A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3177 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3A1F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x31D4 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x31A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x31CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP1 PUSH2 0x397C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x290A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3205 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3227 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x326D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3240 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x326D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x326D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x326D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3252 JUMP JUMPDEST POP PUSH2 0x3279 SWAP3 SWAP2 POP PUSH2 0x327D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3279 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x327E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C2D DUP2 PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32E0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x32C8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2149 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3309 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x32C5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2C2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3381 DUP4 PUSH2 0x3349 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x33C0 JUMPI PUSH2 0x33C0 PUSH2 0x338F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x33E8 JUMPI PUSH2 0x33E8 PUSH2 0x338F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x290A DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x33A5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3482 DUP5 PUSH2 0x3349 JUMP JUMPDEST SWAP3 POP PUSH2 0x3490 PUSH1 0x20 DUP6 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x34EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C2D DUP3 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C2D DUP3 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x356F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3578 DUP4 PUSH2 0x3349 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x358D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B4 DUP4 PUSH2 0x3515 JUMP JUMPDEST SWAP2 POP PUSH2 0x35C2 PUSH1 0x20 DUP5 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35EA DUP6 PUSH2 0x3349 JUMP JUMPDEST SWAP4 POP PUSH2 0x35F8 PUSH1 0x20 DUP7 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x361B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x362C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x363B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x33A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B4 DUP4 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x367B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3684 DUP7 PUSH2 0x3349 JUMP JUMPDEST SWAP5 POP PUSH2 0x3692 PUSH1 0x20 DUP8 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP4 POP PUSH2 0x36A0 PUSH1 0x40 DUP8 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP3 POP PUSH2 0x36AE PUSH1 0x60 DUP8 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP2 POP PUSH2 0x36BC PUSH1 0x80 DUP8 ADD PUSH2 0x3349 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x36DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x36FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3760 JUMPI PUSH2 0x3760 PUSH2 0x3738 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x37D0 JUMPI PUSH2 0x37D0 PUSH2 0x3738 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3812 JUMPI PUSH2 0x3812 PUSH2 0x3738 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x382B JUMPI PUSH2 0x382B PUSH2 0x3738 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x384C JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x386E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3882 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3893 JUMPI PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x38B8 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x389F JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D8 DUP3 DUP7 PUSH2 0x3832 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x38E8 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x32C5 JUMP JUMPDEST PUSH2 0x38F4 DUP2 DUP4 ADD DUP7 PUSH2 0x3832 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND DUP1 PUSH2 0x3912 JUMPI PUSH2 0x3912 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3949 JUMPI PUSH2 0x3949 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3977 JUMPI PUSH2 0x3977 PUSH2 0x3952 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x39DD JUMPI PUSH2 0x39DD PUSH2 0x3952 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3A15 SWAP1 DUP4 ADD DUP5 PUSH2 0x32F1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C2D DUP2 PUSH2 0x3292 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 SWAP7 0x5F GAS DUP8 0xB1 DUP4 0xE2 PUSH9 0xC6D5F9E24BDD4AF5AD 0xEF 0x5D 0xAE 0xBF SWAP1 0xC0 0xC8 PUSH23 0x534384C3C3ED64736F6C634300080A0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A2"
    },
    "12": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "25": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E7"
    },
    "29": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "36": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10D"
    },
    "40": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "47": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEE3743AB"
    },
    "58": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEE3743AB"
    },
    "69": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA56"
    },
    "73": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA6B"
    },
    "84": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA8B"
    },
    "95": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFCAA7664"
    },
    "102": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAA1"
    },
    "106": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "118": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9A7"
    },
    "122": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9D8"
    },
    "133": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9ED"
    },
    "144": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEA74E190"
    },
    "151": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA36"
    },
    "155": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "167": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "178": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93D"
    },
    "182": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "189": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x952"
    },
    "193": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDB993F56"
    },
    "200": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x972"
    },
    "204": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "211": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "215": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "227": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B8"
    },
    "231": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "238": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D8"
    },
    "242": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCBD0A2B5"
    },
    "249": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x908"
    },
    "253": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD2FAB8B9"
    },
    "260": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "261": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91D"
    },
    "264": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "265": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "267": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "268": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "269": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB1214392"
    },
    "276": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x185"
    },
    "280": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "287": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x154"
    },
    "291": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "298": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x858"
    },
    "302": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "309": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x878"
    },
    "313": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "320": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88E"
    },
    "324": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "326": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "331": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "332": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A3"
    },
    "335": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "336": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "338": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "339": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "340": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB1214392"
    },
    "347": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D8"
    },
    "351": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "358": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F8"
    },
    "362": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "369": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x818"
    },
    "373": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "374": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBBC903EA"
    },
    "380": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "381": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x838"
    },
    "384": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "385": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "388": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "389": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "396": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1"
    },
    "400": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "407": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75F"
    },
    "411": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "418": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x782"
    },
    "422": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "424": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "429": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "430": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x797"
    },
    "433": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "440": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "441": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7B8"
    },
    "444": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "445": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "447": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "448": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "449": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "456": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x722"
    },
    "460": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "467": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x737"
    },
    "471": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "472": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x858E83B5"
    },
    "478": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "479": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74C"
    },
    "482": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "483": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "485": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "486": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "487": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "494": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CC"
    },
    "498": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "505": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "509": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "516": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x239"
    },
    "520": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "527": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AC"
    },
    "531": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x791A2519"
    },
    "538": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C2"
    },
    "542": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "544": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "549": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "550": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E2"
    },
    "553": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "554": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "555": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "560": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "561": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x702"
    },
    "564": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "565": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "567": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "568": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "569": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "576": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64D"
    },
    "580": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "587": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x662"
    },
    "591": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "598": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "599": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x677"
    },
    "602": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "603": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "604": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "609": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "610": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x697"
    },
    "613": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "614": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "616": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "617": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "618": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "625": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A6"
    },
    "629": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "636": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CD"
    },
    "640": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x61869A93"
    },
    "647": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E5"
    },
    "651": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x622E4E78"
    },
    "658": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "659": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60D"
    },
    "662": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "663": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "664": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "669": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "670": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x62D"
    },
    "673": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "674": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "676": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "677": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "678": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "685": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x56D"
    },
    "689": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42966C68"
    },
    "696": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "697": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58D"
    },
    "700": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "701": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "707": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "708": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AD"
    },
    "711": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "712": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "714": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "715": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "716": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "723": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x344"
    },
    "727": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "734": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x313"
    },
    "738": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "745": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51D"
    },
    "749": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3C795047"
    },
    "756": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x530"
    },
    "760": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "767": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "768": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x550"
    },
    "771": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "772": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "773": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "778": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "779": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x558"
    },
    "782": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "783": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "785": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "786": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "787": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "794": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B1"
    },
    "798": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "805": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "806": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D1"
    },
    "809": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "810": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "816": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "817": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F1"
    },
    "820": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "821": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "827": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "828": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x507"
    },
    "831": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "832": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "834": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "835": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "836": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "843": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "GT",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x380"
    },
    "847": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "854": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "858": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "865": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "866": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45A"
    },
    "869": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "870": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "876": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "877": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47C"
    },
    "880": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "881": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "887": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "888": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49C"
    },
    "891": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "892": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "894": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "895": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "896": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "903": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "904": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A7"
    },
    "907": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "908": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "909": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "914": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "915": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DC"
    },
    "918": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "919": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "920": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "925": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "EQ",
      "path": "16"
    },
    "926": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FE"
    },
    "929": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "930": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "931": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "933": {
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "DUP1",
      "path": "16"
    },
    "934": {
      "first_revert": true,
      "fn": null,
      "offset": [
        546,
        10210
      ],
      "op": "REVERT",
      "path": "16"
    },
    "935": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "936": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "937": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "938": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "939": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B3"
    },
    "942": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "943": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "945": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "REVERT",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C7"
    },
    "952": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C2"
    },
    "955": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "958": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32A8"
    },
    "961": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "962": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "963": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB9"
    },
    "966": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "970": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "971": {
      "op": "SWAP1"
    },
    "972": {
      "op": "ISZERO"
    },
    "973": {
      "op": "ISZERO"
    },
    "974": {
      "op": "DUP2"
    },
    "975": {
      "op": "MSTORE"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "982": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "983": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "984": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "985": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "3"
    },
    "986": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "987": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "989": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "992": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "995": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "996": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "998": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "999": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "3"
    },
    "1002": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F1"
    },
    "1005": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0B"
    },
    "1008": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1009": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1010": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1012": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1013": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D3"
    },
    "1016": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1017": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1018": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x331D"
    },
    "1021": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1022": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1024": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1025": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40A"
    },
    "1029": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41E"
    },
    "1039": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x419"
    },
    "1042": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1043": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1045": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3330"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1049": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1050": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9D"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1054": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1055": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "op": "SWAP1"
    },
    "1067": {
      "op": "SWAP2"
    },
    "1068": {
      "op": "AND"
    },
    "1069": {
      "op": "DUP2"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D3"
    },
    "1077": {
      "op": "JUMP"
    },
    "1078": {
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1080": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1082": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x442"
    },
    "1085": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1086": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1088": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1089": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1090": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1091": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "POP",
      "path": "16"
    },
    "1092": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "1095": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1097": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1098": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1099": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1100": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1101": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1103": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1104": {
      "op": "SWAP1"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1109": {
      "op": "ADD"
    },
    "1110": {
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D3"
    },
    "1113": {
      "op": "JUMP"
    },
    "1114": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1116": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1117": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1118": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x466"
    },
    "1121": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1122": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1124": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1125": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1126": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "1131": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x475"
    },
    "1134": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1135": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1137": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3365"
    },
    "1140": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1141": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1142": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC37"
    },
    "1145": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1146": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1147": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "3"
    },
    "1148": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1149": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1150": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1151": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1152": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x488"
    },
    "1155": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1156": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1158": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1159": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1160": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1165": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x497"
    },
    "1168": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1169": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1171": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "1174": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1175": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1176": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD4D"
    },
    "1179": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1181": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1182": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1183": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1184": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A8"
    },
    "1187": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1188": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1190": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1191": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1192": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1193": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "POP",
      "path": "16"
    },
    "1194": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "1197": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "1200": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1201": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1202": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1203": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1204": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1205": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1209": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1211": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1212": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1213": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1218": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4CC"
    },
    "1221": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1222": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1224": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3330"
    },
    "1227": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1228": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1229": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE6B"
    },
    "1232": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1233": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1235": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DD"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EC"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3464"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1261": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA0"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1265": {
      "offset": [
        829,
        854
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1269": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1276": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "POP",
      "path": "16"
    },
    "1279": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "1282": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1285": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1286": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1287": {
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1288": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1289": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1290": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1291": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x513"
    },
    "1294": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1295": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1297": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1298": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1299": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1300": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "POP",
      "path": "16"
    },
    "1301": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "1304": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1306": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1307": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1308": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1309": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1310": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1313": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x52B"
    },
    "1316": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1317": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1319": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34A0"
    },
    "1322": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1323": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1324": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xED2"
    },
    "1327": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1328": {
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1329": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1330": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1331": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1332": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53C"
    },
    "1335": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1336": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1338": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1339": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1340": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "1344": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1345": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "1348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "offset": [
        1302,
        1375
      ],
      "op": "AND",
      "path": "16"
    },
    "1358": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1359": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1360": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8244,
        9083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1361": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8244,
        9083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1364": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8244,
        9083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x122B"
    },
    "1367": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8244,
        9083
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1368": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1369": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1370": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1371": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1372": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x564"
    },
    "1375": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1376": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1378": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1379": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1380": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1381": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "POP",
      "path": "16"
    },
    "1382": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1385": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15EE"
    },
    "1388": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1391": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1392": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1393": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x579"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1397": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1400": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "1406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x588"
    },
    "1409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1410": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1412": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3464"
    },
    "1415": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1417": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1628"
    },
    "1420": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1421": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1422": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1423": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1424": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1425": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x599"
    },
    "1428": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1429": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1431": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1432": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1433": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1434": {
      "op": "POP"
    },
    "1435": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47A"
    },
    "1438": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A8"
    },
    "1441": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1442": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1444": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3330"
    },
    "1447": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1448": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1449": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1643"
    },
    "1452": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1453": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1454": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1455": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1456": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1457": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1461": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1463": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1464": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1465": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1466": {
      "op": "POP"
    },
    "1467": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1470": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C8"
    },
    "1473": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1474": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1476": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "1479": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1480": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1481": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16BD"
    },
    "1484": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1485": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1486": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1487": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1488": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1489": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D9"
    },
    "1492": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1493": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1495": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1496": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1497": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x6"
    },
    "1501": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1502": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1504": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1505": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C7"
    },
    "1508": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1509": {
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1510": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1511": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1512": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1513": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F1"
    },
    "1516": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1517": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1519": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1520": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1521": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1525": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1526": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "1529": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1530": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "1536": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1537": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DIV",
      "path": "16"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "offset": [
        1122,
        1195
      ],
      "op": "AND",
      "path": "16"
    },
    "1547": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1548": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1549": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1550": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1551": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1552": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1553": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x619"
    },
    "1556": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1557": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1559": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1560": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1561": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1566": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x628"
    },
    "1569": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1570": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1572": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3526"
    },
    "1575": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1576": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1577": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x174E"
    },
    "1580": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x639"
    },
    "1588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41E"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x648"
    },
    "1601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3330"
    },
    "1607": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "1612": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1613": {
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x659"
    },
    "1620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1624": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "1627": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F1"
    },
    "1630": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1811"
    },
    "1633": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1634": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1635": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1636": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1637": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1638": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66E"
    },
    "1641": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1642": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1644": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1645": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1646": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1647": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "POP",
      "path": "16"
    },
    "1648": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "1651": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x189F"
    },
    "1654": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9118,
        9282
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1657": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1659": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x683"
    },
    "1662": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1663": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1665": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1666": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1667": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44C"
    },
    "1672": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x692"
    },
    "1675": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1676": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1678": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3541"
    },
    "1681": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1682": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1683": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18FB"
    },
    "1686": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A3"
    },
    "1694": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1697": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1699": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1982"
    },
    "1707": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1708": {
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "POP",
      "path": "16"
    },
    "1722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "1725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1730": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1731": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1732": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1733": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1734": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6CE"
    },
    "1737": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1738": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1740": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1741": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1742": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1747": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DD"
    },
    "1750": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1751": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1753": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3330"
    },
    "1756": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1757": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1758": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19BC"
    },
    "1761": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1762": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1763": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1764": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1765": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6EE"
    },
    "1769": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1770": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1772": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1773": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1774": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1779": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FD"
    },
    "1782": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1783": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1785": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3526"
    },
    "1788": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1789": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1790": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19F1"
    },
    "1793": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1794": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1795": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1796": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1797": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x70E"
    },
    "1801": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1802": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1804": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1805": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1806": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1811": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71D"
    },
    "1814": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1815": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1817": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3330"
    },
    "1820": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1821": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1822": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B3F"
    },
    "1825": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1826": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1827": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1828": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1829": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1830": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72E"
    },
    "1833": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1834": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1836": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1837": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1838": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1839": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "POP",
      "path": "16"
    },
    "1840": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1843": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B74"
    },
    "1846": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1847": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1848": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1849": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1850": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1851": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x743"
    },
    "1854": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1855": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1857": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1858": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1859": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1860": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "POP",
      "path": "16"
    },
    "1861": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1864": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C7C"
    },
    "1867": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5651,
        5710
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1868": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1869": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "1872": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75A"
    },
    "1875": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1876": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1878": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3526"
    },
    "1881": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1882": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1883": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB4"
    },
    "1886": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1887": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1888": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1889": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1890": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1891": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1894": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1895": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1897": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1898": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1899": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x6"
    },
    "1903": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1904": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1907": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1908": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1918": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "1921": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1922": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1923": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1924": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1925": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1926": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "1929": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1930": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1932": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1933": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1934": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1935": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "3"
    },
    "1936": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F1"
    },
    "1939": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FB8"
    },
    "1942": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1943": {
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1944": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1945": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1946": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1947": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A3"
    },
    "1950": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1951": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1953": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1954": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1955": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1956": {
      "op": "POP"
    },
    "1957": {
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1959": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1960": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C7"
    },
    "1963": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1964": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "1969": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1970": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DIV",
      "path": "16"
    },
    "1971": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1973": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "AND",
      "path": "16"
    },
    "1974": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1975": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1976": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1977": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1978": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1979": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1980": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C4"
    },
    "1983": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1984": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1986": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1987": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1988": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "1993": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D3"
    },
    "1996": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1997": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1999": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x355C"
    },
    "2002": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2003": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2004": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FC7"
    },
    "2007": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2008": {
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2009": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2010": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2011": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2012": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E4"
    },
    "2015": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2016": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2018": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2019": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2020": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2021": {
      "op": "POP"
    },
    "2022": {
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "2024": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2025": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "2028": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "offset": [
        1210,
        1283
      ],
      "op": "AND",
      "path": "16"
    },
    "2038": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2039": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2040": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2041": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2042": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2043": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2044": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x804"
    },
    "2047": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2048": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2050": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2051": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2052": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2057": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x813"
    },
    "2060": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2061": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2063": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3598"
    },
    "2066": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2067": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2068": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FD2"
    },
    "2071": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2072": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x824"
    },
    "2079": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2082": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2084": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47A"
    },
    "2089": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x833"
    },
    "2092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2093": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2095": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35CB"
    },
    "2098": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2099": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2100": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2117"
    },
    "2103": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2104": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2105": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2106": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2107": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2108": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x844"
    },
    "2111": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2112": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2114": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2115": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2116": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2117": {
      "op": "POP"
    },
    "2118": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2121": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x853"
    },
    "2124": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2125": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2127": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3541"
    },
    "2130": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2131": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2132": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x214F"
    },
    "2135": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2136": {
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2137": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2138": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2139": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2140": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x864"
    },
    "2143": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2146": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2147": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2148": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "2152": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2153": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C7"
    },
    "2156": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2157": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "2161": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2162": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DIV",
      "path": "16"
    },
    "2163": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2165": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "AND",
      "path": "16"
    },
    "2166": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2167": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2168": {
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2169": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2170": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2171": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2172": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x884"
    },
    "2175": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2176": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2178": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2179": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2180": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2181": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "POP",
      "path": "16"
    },
    "2182": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "2185": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2187": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2188": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2189": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2190": {
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2193": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2194": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x89A"
    },
    "2197": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2198": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2200": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2203": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "POP",
      "path": "16"
    },
    "2204": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F1"
    },
    "2207": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21A3"
    },
    "2210": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        927,
        964
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2211": {
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2214": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2215": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AF"
    },
    "2218": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2219": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2221": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2222": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2223": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2224": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "POP",
      "path": "16"
    },
    "2225": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F1"
    },
    "2228": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21B0"
    },
    "2231": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        861,
        889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2233": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2234": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2235": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2236": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C4"
    },
    "2239": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2240": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2242": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2243": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2244": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F1"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D3"
    },
    "2252": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2253": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2255": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3330"
    },
    "2258": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2259": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2260": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21BD"
    },
    "2263": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2264": {
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2265": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2266": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2267": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2268": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E4"
    },
    "2271": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2272": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2275": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2276": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C7"
    },
    "2281": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F3"
    },
    "2284": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2285": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2287": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3541"
    },
    "2290": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2291": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2292": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2294": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2296": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2297": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2299": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2300": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2301": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2302": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2304": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2305": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2306": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2307": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2309": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "AND",
      "path": "16"
    },
    "2310": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2311": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2312": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2313": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2314": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2315": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2316": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x914"
    },
    "2319": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2320": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2322": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2323": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2324": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "POP",
      "path": "16"
    },
    "2326": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2329": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2271"
    },
    "2332": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2333": {
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2336": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2337": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x929"
    },
    "2340": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2341": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2343": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2344": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2345": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "2349": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2350": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "2353": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "offset": [
        1394,
        1467
      ],
      "op": "AND",
      "path": "16"
    },
    "2363": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2364": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2365": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2367": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2368": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2369": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x949"
    },
    "2372": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2373": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2375": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2376": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2377": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2378": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "POP",
      "path": "16"
    },
    "2379": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "2382": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2317"
    },
    "2385": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9288,
        9439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2386": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2388": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2389": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2390": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95E"
    },
    "2393": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2394": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2396": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2397": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2398": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2403": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x96D"
    },
    "2406": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2407": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2409": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "2412": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2413": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2414": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2370"
    },
    "2417": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2418": {
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2420": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2422": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97E"
    },
    "2425": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2426": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2428": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2429": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2430": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2434": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2435": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x41E"
    },
    "2438": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "op": "SUB"
    },
    "2447": {
      "offset": [
        1486,
        1559
      ],
      "op": "AND",
      "path": "16"
    },
    "2448": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2449": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2450": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2451": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2452": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2453": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2454": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x99E"
    },
    "2457": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2458": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2460": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2461": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2462": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2463": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "POP",
      "path": "16"
    },
    "2464": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "2467": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23B3"
    },
    "2470": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9829,
        9939
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2471": {
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2472": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2473": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2474": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2475": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B3"
    },
    "2478": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2479": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2481": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2482": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2483": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "2487": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2488": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9C6"
    },
    "2491": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2492": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2495": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2496": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DIV",
      "path": "16"
    },
    "2497": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2499": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "AND",
      "path": "16"
    },
    "2500": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2501": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2502": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2503": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2505": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2508": {
      "op": "SWAP1"
    },
    "2509": {
      "op": "SWAP2"
    },
    "2510": {
      "op": "AND"
    },
    "2511": {
      "op": "DUP2"
    },
    "2512": {
      "op": "MSTORE"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D3"
    },
    "2519": {
      "op": "JUMP"
    },
    "2520": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2521": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2522": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2523": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2524": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E4"
    },
    "2527": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2528": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2530": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2531": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2532": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2533": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "POP",
      "path": "16"
    },
    "2534": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2537": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23CA"
    },
    "2540": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F9"
    },
    "2548": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2553": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C7"
    },
    "2558": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA08"
    },
    "2561": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2564": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3647"
    },
    "2567": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 2
    },
    "2578": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2579": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "2580": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2582": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2583": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2584": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2585": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2587": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2589": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2590": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2591": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2592": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2594": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2595": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2596": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2597": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2598": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2599": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2600": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2601": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2602": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2603": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2604": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2605": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2606": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2607": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2608": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2609": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2611": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2612": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2613": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2614": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2615": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2616": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2617": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2618": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA42"
    },
    "2621": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2624": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2625": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2626": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2631": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA51"
    },
    "2634": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2635": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2637": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3663"
    },
    "2640": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2641": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2642": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24C4"
    },
    "2645": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2646": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2647": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2648": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2649": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2650": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "2653": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2654": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2656": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2657": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2658": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2659": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "POP",
      "path": "16"
    },
    "2660": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47A"
    },
    "2663": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2563"
    },
    "2666": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6436,
        6764
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA77"
    },
    "2674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2675": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "2684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA86"
    },
    "2687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3541"
    },
    "2693": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2706"
    },
    "2698": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2699": {
      "offset": [
        2113,
        2149
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA97"
    },
    "2706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2710": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "POP",
      "path": "16"
    },
    "2713": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44C"
    },
    "2716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2149
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2721": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2722": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2723": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2724": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2725": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAAD"
    },
    "2728": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2729": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2731": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2732": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2733": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "fn": "CryptidToken.getStage",
      "offset": [
        10014,
        10019
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0xD"
    },
    "2737": {
      "fn": "CryptidToken.getStage",
      "offset": [
        10014,
        10019
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2738": {
      "fn": "CryptidToken.getStage",
      "offset": [
        10014,
        10019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2740": {
      "fn": "CryptidToken.getStage",
      "offset": [
        10014,
        10019
      ],
      "op": "AND",
      "path": "16"
    },
    "2741": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9C6"
    },
    "2744": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9949,
        10026
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2745": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2746": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "op": "NOT"
    },
    "2757": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 4
    },
    "2758": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "3"
    },
    "2759": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEA"
    },
    "2772": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "3"
    },
    "2785": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "3"
    },
    "2794": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2795": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "2799": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "op": "SUB"
    },
    "2817": {
      "op": "NOT"
    },
    "2818": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 5
    },
    "2819": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "13"
    },
    "2820": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "13"
    },
    "2821": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2822": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2823": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2828": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2830": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "2832": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2833": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1A"
    },
    "2837": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2838": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C8"
    },
    "2841": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2842": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2843": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2844": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2846": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2847": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2849": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2851": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2852": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2853": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2855": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2856": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2858": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2859": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2860": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2862": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2864": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2865": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2866": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2867": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2868": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2869": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2870": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2871": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2872": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2874": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2875": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2876": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2877": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2878": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB46"
    },
    "2881": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2882": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C8"
    },
    "2885": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2886": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2887": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2888": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2889": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB93"
    },
    "2892": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2893": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2894": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2896": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "3"
    },
    "2897": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB68"
    },
    "2900": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2901": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2904": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2905": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2906": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2907": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2908": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2909": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2910": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2911": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2912": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2914": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2915": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2916": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB93"
    },
    "2919": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2920": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2921": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2922": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2923": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2924": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2925": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2927": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2928": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2930": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2932": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2933": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2934": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2935": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2936": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2937": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2938": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2940": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2942": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2943": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2944": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2946": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2947": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2948": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2949": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "3"
    },
    "2950": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB76"
    },
    "2953": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2954": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2955": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2956": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "3"
    },
    "2957": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2959": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "3"
    },
    "2960": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2961": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2962": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2963": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2964": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2965": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2966": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2967": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2968": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2969": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2970": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2971": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2972": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2973": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2974": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2976": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 7
    },
    "2977": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2978": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2979": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2981": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2983": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2984": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2986": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "2998": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0xC1B"
    },
    "3001": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3002": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3004": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3011": {
      "op": "SHL"
    },
    "3012": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3013": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3016": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3018": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3019": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "3"
    },
    "3020": {
      "op": "MSTORE"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3025": {
      "op": "DUP3"
    },
    "3026": {
      "op": "ADD"
    },
    "3027": {
      "op": "MSTORE"
    },
    "3028": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3063": {
      "op": "DUP3"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "MSTORE"
    },
    "3066": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3081": {
      "op": "SHL"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3084": {
      "op": "DUP3"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "op": "MSTORE"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3091": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3093": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3094": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3095": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3096": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "3"
    },
    "3097": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3098": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "3099": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "3103": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3104": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3105": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3106": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3108": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3110": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3111": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3113": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3114": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3115": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3122": {
      "op": "SHL"
    },
    "3123": {
      "op": "SUB"
    },
    "3124": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "3"
    },
    "3125": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3126": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3127": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3128": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3130": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC42"
    },
    "3133": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3134": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "3137": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3138": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3139": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3140": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "3"
    },
    "3141": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 10
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "op": "SUB"
    },
    "3150": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3151": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3161": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "3"
    },
    "3162": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3163": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB0"
    },
    "3166": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3167": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3169": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3176": {
      "op": "SHL"
    },
    "3177": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3178": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3181": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3183": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3184": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "3"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3190": {
      "op": "DUP3"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "MSTORE"
    },
    "3193": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "ADD"
    },
    "3230": {
      "op": "MSTORE"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3235": {
      "op": "SHL"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3238": {
      "op": "DUP3"
    },
    "3239": {
      "op": "ADD"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "3247": {
      "op": "JUMP"
    },
    "3248": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3249": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 11
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 12
    },
    "3259": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "3"
    },
    "3260": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "3"
    },
    "3261": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3262": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCC"
    },
    "3265": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCC"
    },
    "3270": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3271": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA08"
    },
    "3275": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3276": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3277": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3E"
    },
    "3280": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3281": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3283": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3290": {
      "op": "SHL"
    },
    "3291": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3292": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3295": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3297": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3298": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "3"
    },
    "3299": {
      "op": "MSTORE"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3304": {
      "op": "DUP3"
    },
    "3305": {
      "op": "ADD"
    },
    "3306": {
      "op": "MSTORE"
    },
    "3307": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3342": {
      "op": "DUP3"
    },
    "3343": {
      "op": "ADD"
    },
    "3344": {
      "op": "MSTORE"
    },
    "3345": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3380": {
      "op": "DUP3"
    },
    "3381": {
      "op": "ADD"
    },
    "3382": {
      "op": "MSTORE"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "3389": {
      "op": "JUMP"
    },
    "3390": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3391": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0xD48"
    },
    "3394": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3395": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3396": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27AD"
    },
    "3399": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3400": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3401": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3402": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3403": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3404": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3405": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3406": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3420": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3421": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3422": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3423": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3424": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3425": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3426": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7D"
    },
    "3429": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3432": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3442": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3444": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "3448": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3449": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "3452": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3453": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3454": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7512,
        7513
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x0"
    },
    "3456": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7486,
        7501
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3457": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7480,
        7509
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3458": {
      "branch": 149,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7480,
        7513
      ],
      "op": "GT",
      "path": "16"
    },
    "3459": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDE"
    },
    "3462": {
      "branch": 149,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3463": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3465": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3474": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3479": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3480": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "ADD",
      "path": "16"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3486": {
      "op": "DUP3"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3540": {
      "op": "DUP3"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "MSTORE"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "3549": {
      "op": "JUMP"
    },
    "3550": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7472,
        7557
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3551": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0xD"
    },
    "3553": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3554": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "3559": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3560": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "DIV",
      "path": "16"
    },
    "3561": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3563": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7576,
        7596
      ],
      "op": "AND",
      "path": "16"
    },
    "3564": {
      "branch": 150,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7575,
        7596
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3565": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE38"
    },
    "3568": {
      "branch": 150,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3569": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3571": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3580": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3583": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3585": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3586": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "ADD",
      "path": "16"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3592": {
      "op": "DUP3"
    },
    "3593": {
      "op": "ADD"
    },
    "3594": {
      "op": "MSTORE"
    },
    "3595": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3630": {
      "op": "DUP3"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "MSTORE"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "3639": {
      "op": "JUMP"
    },
    "3640": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7567,
        7627
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3641": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 16
    },
    "3642": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3643": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4B"
    },
    "3646": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3647": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7651
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3649": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7651
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3650": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3652": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3653": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "ADD",
      "path": "16"
    },
    "3654": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3655": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31F9"
    },
    "3658": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7637,
        7669
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3659": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3660": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7637,
        7669
      ],
      "op": "POP",
      "path": "16"
    },
    "3661": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7387,
        7676
      ],
      "op": "POP",
      "path": "16"
    },
    "3662": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        7387,
        7676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3663": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3664": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9489,
        9496
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3666": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9543,
        9544
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x1"
    },
    "3668": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9540
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE5C"
    },
    "3671": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9530
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "3673": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10",
      "statement": 18
    },
    "3674": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3675": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3676": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9540
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3677": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE66"
    },
    "3680": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9544
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3681": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9544
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3682": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9544
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x374E"
    },
    "3685": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9515,
        9544
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3686": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9515,
        9544
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3687": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9508,
        9544
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3688": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9508,
        9544
      ],
      "op": "POP",
      "path": "16"
    },
    "3689": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9445,
        9551
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3690": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        9445,
        9551
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3691": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3692": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3694": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3707": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3708": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3709": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3710": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3711": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3712": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9B"
    },
    "3715": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3716": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3730": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "3734": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "3738": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3740": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6971,
        6985
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x14"
    },
    "3742": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6971,
        7006
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3743": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        6889,
        7013
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3744": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0xEAB"
    },
    "3748": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3750": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281B"
    },
    "3754": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3755": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3756": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC7"
    },
    "3759": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3769": {
      "op": "SHL"
    },
    "3770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3771": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3772": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3774": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "3"
    },
    "3775": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "3778": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3779": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3765"
    },
    "3782": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3783": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3784": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xD48"
    },
    "3787": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3788": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3789": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3790": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2912"
    },
    "3793": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3794": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3795": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3851,
        3863
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3796": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3851,
        3863
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3797": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3865,
        3875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3799": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3865,
        3875
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3800": {
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF49"
    },
    "3803": {
      "offset": [
        2777,
        2783
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3804": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2777,
        2783
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3805": {
      "offset": [
        2758,
        2832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3806": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3807": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3809": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MUL",
      "path": "16"
    },
    "3810": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3812": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "ADD",
      "path": "16"
    },
    "3813": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3815": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3816": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3817": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3818": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "ADD",
      "path": "16"
    },
    "3819": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3821": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3822": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3823": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3824": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3825": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3826": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3827": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3828": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3829": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3830": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3832": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "ADD",
      "path": "16"
    },
    "3833": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3834": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3835": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3837": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MUL",
      "path": "16"
    },
    "3838": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3839": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3840": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3841": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "3842": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3844": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3845": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "ADD",
      "path": "16"
    },
    "3846": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3847": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3848": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3849": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "offset": [
        2802,
        2830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3854": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3855": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3868": {
      "op": "NOT"
    },
    "3869": {
      "offset": [
        2819,
        2829
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "AND"
    },
    "3874": {
      "offset": [
        2802,
        2830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3876": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3877": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "ADD",
      "path": "16"
    },
    "3878": {
      "op": "MSTORE"
    },
    "3879": {
      "offset": [
        2785,
        2790
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3880": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2785,
        2790
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3884": {
      "op": "ADD"
    },
    "3885": {
      "op": "SWAP1"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "offset": [
        2802,
        2830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3889": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3890": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3892": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3893": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3894": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "SUB",
      "path": "16"
    },
    "3895": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "SUB",
      "path": "16"
    },
    "3896": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3897": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3898": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3899": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3901": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2802,
        2830
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3902": {
      "offset": [
        2792,
        2831
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3903": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2792,
        2831
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3904": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2792,
        2831
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3905": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2792,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3907": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2792,
        2831
      ],
      "op": "ADD",
      "path": "16"
    },
    "3908": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2792,
        2831
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3909": {
      "offset": [
        2758,
        2776
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2ABD"
    },
    "3912": {
      "jump": "i",
      "offset": [
        2758,
        2832
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3913": {
      "branch": 151,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2758,
        2832
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3914": {
      "offset": [
        2750,
        2862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF95"
    },
    "3917": {
      "branch": 151,
      "offset": [
        2750,
        2862
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3918": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2750,
        2862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3920": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2750,
        2862
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "offset": [
        2750,
        2862
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3929": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2750,
        2862
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3932": {
      "offset": [
        2750,
        2862
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3934": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2750,
        2862
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3935": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2750,
        2862
      ],
      "op": "ADD",
      "path": "16"
    },
    "3936": {
      "op": "MSTORE"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3941": {
      "op": "DUP3"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "MSTORE"
    },
    "3944": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3979": {
      "op": "DUP3"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "op": "MSTORE"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3984": {
      "op": "ADD"
    },
    "3985": {
      "offset": [
        2750,
        2862
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "3988": {
      "op": "JUMP"
    },
    "3989": {
      "offset": [
        2750,
        2862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3990": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3903,
        3912
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "3992": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3903,
        3912
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3993": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3914,
        3915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3995": {
      "offset": [
        2999,
        3008
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "3996": {
      "offset": [
        2971,
        2995
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFA5"
    },
    "3999": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3914,
        3915
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4000": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3903,
        3912
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4001": {
      "offset": [
        2971,
        2995
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37B6"
    },
    "4004": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2971,
        2995
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4005": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2971,
        2995
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4006": {
      "offset": [
        2971,
        3008
      ],
      "op": "EQ",
      "path": "16"
    },
    "4007": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFEE"
    },
    "4010": {
      "offset": [
        2963,
        3038
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4011": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4013": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2963,
        3038
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4020": {
      "op": "SHL"
    },
    "4021": {
      "offset": [
        2963,
        3038
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4022": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2963,
        3038
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4025": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4027": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2963,
        3038
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4028": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2963,
        3038
      ],
      "op": "ADD",
      "path": "16"
    },
    "4029": {
      "op": "MSTORE"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4034": {
      "op": "DUP3"
    },
    "4035": {
      "op": "ADD"
    },
    "4036": {
      "op": "MSTORE"
    },
    "4037": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4077": {
      "op": "JUMP"
    },
    "4078": {
      "offset": [
        2963,
        3038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4079": {
      "offset": [
        3104,
        3113
      ],
      "op": "ORIGIN",
      "path": "16"
    },
    "4080": {
      "offset": [
        3117,
        3127
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4081": {
      "offset": [
        3104,
        3127
      ],
      "op": "EQ",
      "path": "16"
    },
    "4082": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x103D"
    },
    "4085": {
      "offset": [
        3096,
        3163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4086": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4088": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3096,
        3163
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4095": {
      "op": "SHL"
    },
    "4096": {
      "offset": [
        3096,
        3163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4097": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3096,
        3163
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4102": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3096,
        3163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4103": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3096,
        3163
      ],
      "op": "ADD",
      "path": "16"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4109": {
      "op": "DUP3"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH32",
      "value": "0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4147": {
      "op": "DUP3"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4156": {
      "op": "JUMP"
    },
    "4157": {
      "offset": [
        3096,
        3163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4158": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4160": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4162": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4163": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4164": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4165": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1090"
    },
    "4168": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4169": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4171": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4178": {
      "op": "SHL"
    },
    "4179": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4180": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4183": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4185": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4186": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4187": {
      "op": "MSTORE"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4192": {
      "op": "DUP3"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC12"
    },
    "4239": {
      "op": "JUMP"
    },
    "4240": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4241": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4243": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4245": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4246": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "4248": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4249": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4251": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4252": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4253": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10B8"
    },
    "4256": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4257": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4259": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4266": {
      "op": "SHL"
    },
    "4267": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4268": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4269": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4271": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4272": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "4275": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4276": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37D5"
    },
    "4279": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4280": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4281": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4006,
        4011
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0xD"
    },
    "4283": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4006,
        4011
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4284": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4006,
        4011
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4286": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4006,
        4011
      ],
      "op": "AND",
      "path": "16"
    },
    "4287": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4015,
        4016
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4289": {
      "branch": 152,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4006,
        4016
      ],
      "op": "EQ",
      "path": "16"
    },
    "4290": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110D"
    },
    "4293": {
      "branch": 152,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4294": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4296": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4297": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4303": {
      "op": "SHL"
    },
    "4304": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4305": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4308": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4310": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4311": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "ADD",
      "path": "16"
    },
    "4312": {
      "op": "DUP2"
    },
    "4313": {
      "op": "SWAP1"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4317": {
      "op": "DUP3"
    },
    "4318": {
      "op": "ADD"
    },
    "4319": {
      "op": "MSTORE"
    },
    "4320": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E74696E67206E6F7420696E697469617465642E"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4355": {
      "op": "DUP3"
    },
    "4356": {
      "op": "ADD"
    },
    "4357": {
      "op": "MSTORE"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4360": {
      "op": "ADD"
    },
    "4361": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4364": {
      "op": "JUMP"
    },
    "4365": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3998,
        4053
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4366": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4079,
        4089
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 23
    },
    "4367": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4369": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4370": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4371": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4372": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4078
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4374": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4376": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4377": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4379": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4380": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4381": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4382": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4384": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4090
      ],
      "op": "AND",
      "path": "16"
    },
    "4385": {
      "branch": 153,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4071,
        4099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4386": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x116D"
    },
    "4389": {
      "branch": 153,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4390": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4392": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4399": {
      "op": "SHL"
    },
    "4400": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4401": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4404": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4406": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4407": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "ADD",
      "path": "16"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4413": {
      "op": "DUP3"
    },
    "4414": {
      "op": "ADD"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4451": {
      "op": "DUP3"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "op": "MSTORE"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4456": {
      "op": "ADD"
    },
    "4457": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4460": {
      "op": "JUMP"
    },
    "4461": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4063,
        4135
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4462": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4175,
        4190
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x12"
    },
    "4464": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4175,
        4190
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4465": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1178"
    },
    "4468": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "4471": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4154,
        4167
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4472": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4473": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4171
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1183"
    },
    "4476": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4477": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4170,
        4171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4479": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4171
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37FF"
    },
    "4482": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4154,
        4171
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4483": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4171
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4484": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4190
      ],
      "op": "GT",
      "path": "16"
    },
    "4485": {
      "branch": 154,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4154,
        4190
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4486": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11E3"
    },
    "4489": {
      "branch": 154,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4490": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4492": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4501": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4506": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4507": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "ADD",
      "path": "16"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH9",
      "value": "0x3A1039BAB838363C97"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4578": {
      "op": "JUMP"
    },
    "4579": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4146,
        4236
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4580": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4254,
        4264
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 25
    },
    "4581": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4583": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4584": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4585": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4586": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4588": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4590": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4591": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4593": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4594": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4265
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4595": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4596": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4599": {
      "op": "NOT"
    },
    "4600": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "AND",
      "path": "16"
    },
    "4601": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4268,
        4272
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4603": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "OR",
      "path": "16"
    },
    "4604": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4605": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4246,
        4272
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4606": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4282,
        4326
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 26,
      "value": "0x120F"
    },
    "4609": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4282,
        4326
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4610": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4300,
        4325
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120A"
    },
    "4613": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4300,
        4315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4615": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4616": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4617": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4618": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4300,
        4325
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4619": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4282,
        4287
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AD3"
    },
    "4622": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4282,
        4326
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4623": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4282,
        4326
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4624": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4336,
        4363
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 27,
      "value": "0x121D"
    },
    "4627": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4336,
        4351
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4629": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 28
    },
    "4630": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4631": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4633": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "4634": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4635": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4636": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4637": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4336,
        4363
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4642": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4644": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "o",
      "offset": [
        3720,
        4370
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4651": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8244,
        9083
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4652": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4654": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4661": {
      "op": "SHL"
    },
    "4662": {
      "op": "SUB"
    },
    "4663": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4666": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4667": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4668": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4670": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4671": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4672": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125B"
    },
    "4675": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4676": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4687": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "4694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "4698": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4700": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8331,
        8332
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x0"
    },
    "4702": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8307,
        8328
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4703": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8307,
        8332
      ],
      "op": "GT",
      "path": "16"
    },
    "4704": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12A4"
    },
    "4707": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4708": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4710": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4717": {
      "op": "SHL"
    },
    "4718": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4719": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4722": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4724": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4725": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "ADD",
      "path": "16"
    },
    "4726": {
      "op": "MSTORE"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4731": {
      "op": "DUP3"
    },
    "4732": {
      "op": "ADD"
    },
    "4733": {
      "op": "MSTORE"
    },
    "4734": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4759": {
      "op": "SHL"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4762": {
      "op": "DUP3"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "MSTORE"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4767": {
      "op": "ADD"
    },
    "4768": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4771": {
      "op": "JUMP"
    },
    "4772": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8299,
        8359
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4773": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "4775": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4776": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8370,
        8377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4778": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8370,
        8377
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4779": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "4785": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4786": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "DIV",
      "path": "16"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4793": {
      "op": "SHL"
    },
    "4794": {
      "op": "SUB"
    },
    "4795": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8391,
        8404
      ],
      "op": "AND",
      "path": "16"
    },
    "4796": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8458
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12D3"
    },
    "4799": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8453,
        8457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "4802": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8448
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CD"
    },
    "4805": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8439
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4806": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8444,
        8447
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BC"
    },
    "4809": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8443
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C21"
    },
    "4812": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8418,
        8448
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4813": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8448
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4814": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8452
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4815": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8452
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C34"
    },
    "4818": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8418,
        8458
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4819": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8418,
        8458
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4820": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4822": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4823": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4825": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4826": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4827": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4828": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4829": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4830": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "GAS",
      "path": "16"
    },
    "4831": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "CALL",
      "path": "16"
    },
    "4832": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4833": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4834": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4835": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4836": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4837": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4838": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4840": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4841": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "EQ",
      "path": "16"
    },
    "4842": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x130F"
    },
    "4845": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4846": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4848": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4849": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4850": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4851": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4853": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "NOT",
      "path": "16"
    },
    "4854": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4856": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4857": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "ADD",
      "path": "16"
    },
    "4858": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "AND",
      "path": "16"
    },
    "4859": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4860": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "ADD",
      "path": "16"
    },
    "4861": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4863": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4864": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4865": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4866": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4867": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4868": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4870": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4872": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4873": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "ADD",
      "path": "16"
    },
    "4874": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4875": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1314"
    },
    "4878": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4879": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4880": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4882": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4883": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4884": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4885": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8383,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4886": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8369,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4887": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8369,
        8463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4888": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8369,
        8463
      ],
      "op": "POP",
      "path": "16"
    },
    "4889": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8481,
        8483
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 30
    },
    "4890": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x135A"
    },
    "4893": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4894": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4896": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4905": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4908": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4910": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4911": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "ADD",
      "path": "16"
    },
    "4912": {
      "op": "MSTORE"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4917": {
      "op": "DUP3"
    },
    "4918": {
      "op": "ADD"
    },
    "4919": {
      "op": "MSTORE"
    },
    "4920": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C4819985A5B1959"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4941": {
      "op": "SHL"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4944": {
      "op": "DUP3"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4949": {
      "op": "ADD"
    },
    "4950": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "4953": {
      "op": "JUMP"
    },
    "4954": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8473,
        8506
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4955": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8538,
        8551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "4957": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8538,
        8551
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4958": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8517,
        8524
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4960": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8517,
        8524
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4967": {
      "op": "SHL"
    },
    "4968": {
      "op": "SUB"
    },
    "4969": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8538,
        8551
      ],
      "op": "AND",
      "path": "16"
    },
    "4970": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8565,
        8605
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x137A"
    },
    "4973": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8600,
        8604
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "4976": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8565,
        8595
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CD"
    },
    "4979": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8565,
        8586
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4980": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8591,
        8594
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x69"
    },
    "4982": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8565,
        8590
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C21"
    },
    "4985": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8565,
        8595
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4986": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8565,
        8605
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4987": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4989": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4990": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4992": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4993": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4994": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4995": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4996": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4997": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "GAS",
      "path": "16"
    },
    "4998": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "CALL",
      "path": "16"
    },
    "4999": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5000": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5001": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5002": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5003": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5004": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5005": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5007": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5008": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "EQ",
      "path": "16"
    },
    "5009": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B6"
    },
    "5012": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5013": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5015": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5016": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5017": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5018": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5020": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "NOT",
      "path": "16"
    },
    "5021": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5023": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5024": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "ADD",
      "path": "16"
    },
    "5025": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "AND",
      "path": "16"
    },
    "5026": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5027": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "ADD",
      "path": "16"
    },
    "5028": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5030": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5031": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5032": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5033": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5034": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5035": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5037": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5039": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5040": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "ADD",
      "path": "16"
    },
    "5041": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5042": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13BB"
    },
    "5045": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5046": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5047": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5049": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5050": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5051": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5052": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8530,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5053": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8516,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5054": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8516,
        8610
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5055": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8516,
        8610
      ],
      "op": "POP",
      "path": "16"
    },
    "5056": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8629,
        8631
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 31
    },
    "5057": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1401"
    },
    "5060": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5061": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5063": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5072": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5075": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5077": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5078": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "ADD",
      "path": "16"
    },
    "5079": {
      "op": "MSTORE"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5084": {
      "op": "DUP3"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "op": "MSTORE"
    },
    "5087": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C8819985A5B1959"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5111": {
      "op": "DUP3"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "5120": {
      "op": "JUMP"
    },
    "5121": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8621,
        8654
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5122": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8686,
        8699
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5124": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8686,
        8699
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5125": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8665,
        8672
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5127": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8665,
        8672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5134": {
      "op": "SHL"
    },
    "5135": {
      "op": "SUB"
    },
    "5136": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8686,
        8699
      ],
      "op": "AND",
      "path": "16"
    },
    "5137": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8713,
        8753
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1421"
    },
    "5140": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8748,
        8752
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5143": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8713,
        8743
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CD"
    },
    "5146": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8713,
        8734
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5147": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8739,
        8742
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x69"
    },
    "5149": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8713,
        8738
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C21"
    },
    "5152": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8713,
        8743
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5153": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8713,
        8753
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5154": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5156": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5157": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5159": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5160": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5161": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5162": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5163": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5164": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "GAS",
      "path": "16"
    },
    "5165": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "CALL",
      "path": "16"
    },
    "5166": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5167": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5168": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5169": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5170": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5171": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5172": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5174": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5175": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "EQ",
      "path": "16"
    },
    "5176": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x145D"
    },
    "5179": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5180": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5182": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5183": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5184": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5185": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5187": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "NOT",
      "path": "16"
    },
    "5188": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5190": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5191": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "ADD",
      "path": "16"
    },
    "5192": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "AND",
      "path": "16"
    },
    "5193": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5194": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "ADD",
      "path": "16"
    },
    "5195": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5197": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5198": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5199": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5200": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5201": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5202": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5204": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5206": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5207": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "ADD",
      "path": "16"
    },
    "5208": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5209": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1462"
    },
    "5212": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5213": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5214": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5216": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5217": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5218": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5219": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8678,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5220": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8664,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5221": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8664,
        8758
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8664,
        8758
      ],
      "op": "POP",
      "path": "16"
    },
    "5223": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8777,
        8779
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 32
    },
    "5224": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A8"
    },
    "5227": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5228": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5230": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5237": {
      "op": "SHL"
    },
    "5238": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5239": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5242": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5244": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5245": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "ADD",
      "path": "16"
    },
    "5246": {
      "op": "MSTORE"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "ADD"
    },
    "5253": {
      "op": "MSTORE"
    },
    "5254": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080CC819985A5B1959"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5275": {
      "op": "SHL"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5278": {
      "op": "DUP3"
    },
    "5279": {
      "op": "ADD"
    },
    "5280": {
      "op": "MSTORE"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5283": {
      "op": "ADD"
    },
    "5284": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "5287": {
      "op": "JUMP"
    },
    "5288": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8769,
        8802
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5289": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8834,
        8847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "5291": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8834,
        8847
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5292": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8813,
        8820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5294": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8813,
        8820
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8834,
        8847
      ],
      "op": "AND",
      "path": "16"
    },
    "5304": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8861,
        8900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14C8"
    },
    "5307": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8895,
        8899
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5310": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8861,
        8890
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12CD"
    },
    "5313": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8861,
        8882
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5314": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8887,
        8889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2D"
    },
    "5316": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8861,
        8886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C21"
    },
    "5319": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8861,
        8890
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5320": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8861,
        8900
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5321": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5323": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5324": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5326": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5327": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5328": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5329": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5330": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5331": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "GAS",
      "path": "16"
    },
    "5332": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "CALL",
      "path": "16"
    },
    "5333": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5334": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5335": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5336": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5337": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5338": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5339": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5341": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5342": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "EQ",
      "path": "16"
    },
    "5343": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1504"
    },
    "5346": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5347": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5349": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5350": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5351": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5352": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5354": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "NOT",
      "path": "16"
    },
    "5355": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5357": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5358": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "ADD",
      "path": "16"
    },
    "5359": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "AND",
      "path": "16"
    },
    "5360": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5361": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "ADD",
      "path": "16"
    },
    "5362": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5364": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5365": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5366": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5367": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5368": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5369": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5371": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5373": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5374": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "ADD",
      "path": "16"
    },
    "5375": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5376": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1509"
    },
    "5379": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5380": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5381": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5383": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5384": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5385": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5386": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8826,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5387": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8812,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5388": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8812,
        8905
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5389": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8812,
        8905
      ],
      "op": "POP",
      "path": "16"
    },
    "5390": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8923,
        8925
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 33
    },
    "5391": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x154F"
    },
    "5394": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5395": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5397": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5404": {
      "op": "SHL"
    },
    "5405": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5406": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5409": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5411": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5412": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "ADD",
      "path": "16"
    },
    "5413": {
      "op": "MSTORE"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5418": {
      "op": "DUP3"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D0819985A5B1959"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5445": {
      "op": "DUP3"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5450": {
      "op": "ADD"
    },
    "5451": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "5454": {
      "op": "JUMP"
    },
    "5455": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8915,
        8948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5456": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8980,
        8993
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "5458": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8980,
        8993
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5459": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5461": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5462": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8959,
        8966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5464": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8959,
        8966
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5471": {
      "op": "SHL"
    },
    "5472": {
      "op": "SUB"
    },
    "5473": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8980,
        8993
      ],
      "op": "AND",
      "path": "16"
    },
    "5474": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8980,
        8993
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5475": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9007,
        9028
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5476": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9007,
        9028
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5477": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8959,
        8966
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5478": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5479": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8959,
        8966
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5480": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5481": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9007,
        9028
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5482": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8980,
        8993
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5483": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "GAS",
      "path": "16"
    },
    "5484": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "CALL",
      "path": "16"
    },
    "5485": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5486": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5487": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5488": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5489": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5490": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5491": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5493": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5494": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "EQ",
      "path": "16"
    },
    "5495": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159C"
    },
    "5498": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5499": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5501": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5502": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5503": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5504": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5506": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "NOT",
      "path": "16"
    },
    "5507": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5509": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5510": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "ADD",
      "path": "16"
    },
    "5511": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "AND",
      "path": "16"
    },
    "5512": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5513": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "ADD",
      "path": "16"
    },
    "5514": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5516": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5517": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5518": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5519": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5520": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5521": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5523": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5525": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5526": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "ADD",
      "path": "16"
    },
    "5527": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5528": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15A1"
    },
    "5531": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5532": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5533": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5535": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5536": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5537": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5538": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8972,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5539": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8958,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5540": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8958,
        9033
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5541": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8958,
        9033
      ],
      "op": "POP",
      "path": "16"
    },
    "5542": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        9051,
        9053
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 34
    },
    "5543": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15E7"
    },
    "5546": {
      "branch": 160,
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5547": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5549": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5556": {
      "op": "SHL"
    },
    "5557": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5558": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5561": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5563": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5564": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "ADD",
      "path": "16"
    },
    "5565": {
      "op": "MSTORE"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5570": {
      "op": "DUP3"
    },
    "5571": {
      "op": "ADD"
    },
    "5572": {
      "op": "MSTORE"
    },
    "5573": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D4819985A5B1959"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5597": {
      "op": "DUP3"
    },
    "5598": {
      "op": "ADD"
    },
    "5599": {
      "op": "MSTORE"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "5606": {
      "op": "JUMP"
    },
    "5607": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        9043,
        9076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5608": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        9083
      ],
      "op": "POP",
      "path": "16"
    },
    "5609": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        9083
      ],
      "op": "POP",
      "path": "16"
    },
    "5610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        9083
      ],
      "op": "POP",
      "path": "16"
    },
    "5611": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        9083
      ],
      "op": "POP",
      "path": "16"
    },
    "5612": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8289,
        9083
      ],
      "op": "POP",
      "path": "16"
    },
    "5613": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        8244,
        9083
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5614": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5615": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5617": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "op": "SUB"
    },
    "5626": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5629": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5630": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5631": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5632": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5633": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5634": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5635": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161E"
    },
    "5638": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5641": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5648": {
      "op": "SHL"
    },
    "5649": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5654": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "5657": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "5661": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5663": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5762,
        5772
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0x1626"
    },
    "5666": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5762,
        5770
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C40"
    },
    "5669": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5762,
        5772
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5670": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5762,
        5772
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5671": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        5716,
        5779
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5672": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5673": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 36,
      "value": "0xD48"
    },
    "5676": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5677": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5678": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5679": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5681": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5682": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "3"
    },
    "5686": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5688": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "3"
    },
    "5695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2117"
    },
    "5698": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5699": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5700": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 37,
      "value": "0x164C"
    },
    "5703": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5704": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        664,
        676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA5"
    },
    "5707": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5708": {
      "branch": 191,
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5709": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16B1"
    },
    "5712": {
      "branch": 191,
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5713": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5715": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5722": {
      "op": "SHL"
    },
    "5723": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5724": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5727": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5729": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5730": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "ADD",
      "path": "6"
    },
    "5731": {
      "op": "MSTORE"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5736": {
      "op": "DUP3"
    },
    "5737": {
      "op": "ADD"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH32",
      "value": "0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "PUSH16",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD9959"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5796": {
      "op": "SHL"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5799": {
      "op": "DUP3"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "MSTORE"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC12"
    },
    "5808": {
      "op": "JUMP"
    },
    "5809": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5810": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0x16BA"
    },
    "5813": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        755,
        762
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5814": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        754
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CD3"
    },
    "5817": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        749,
        763
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5818": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5819": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "POP",
      "path": "6"
    },
    "5820": {
      "fn": "ERC721Burnable.burn",
      "jump": "o",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5821": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6046,
        6204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5824": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5831": {
      "op": "SHL"
    },
    "5832": {
      "op": "SUB"
    },
    "5833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5836": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5837": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5838": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5839": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5840": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5841": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5842": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16ED"
    },
    "5845": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5846": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5848": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5855": {
      "op": "SHL"
    },
    "5856": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5858": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "5864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "5868": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5870": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0xD"
    },
    "5872": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5873": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "5877": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5878": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "DIV",
      "path": "16"
    },
    "5879": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5881": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6129,
        6143
      ],
      "op": "AND",
      "path": "16"
    },
    "5882": {
      "branch": 161,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6128,
        6143
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5883": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x173B"
    },
    "5886": {
      "branch": 161,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5887": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5889": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5898": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5901": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5903": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5904": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "ADD",
      "path": "16"
    },
    "5905": {
      "op": "MSTORE"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5910": {
      "op": "DUP3"
    },
    "5911": {
      "op": "ADD"
    },
    "5912": {
      "op": "MSTORE"
    },
    "5913": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5934": {
      "op": "SHL"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5937": {
      "op": "DUP3"
    },
    "5938": {
      "op": "ADD"
    },
    "5939": {
      "op": "MSTORE"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5942": {
      "op": "ADD"
    },
    "5943": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "5946": {
      "op": "JUMP"
    },
    "5947": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6120,
        6166
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5948": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 40
    },
    "5949": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5950": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4B"
    },
    "5953": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5954": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6183
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5956": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6183
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5957": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5959": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5960": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "ADD",
      "path": "16"
    },
    "5961": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5962": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6176,
        6197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31F9"
    },
    "5965": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6176,
        6197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5966": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5967": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5969": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5976": {
      "op": "SHL"
    },
    "5977": {
      "op": "SUB"
    },
    "5978": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5981": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5982": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5983": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5984": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5985": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5986": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5987": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177E"
    },
    "5990": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5991": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5993": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6000": {
      "op": "SHL"
    },
    "6001": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6002": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6003": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6005": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6006": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "6009": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6010": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "6013": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6014": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6015": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7355
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 41,
      "value": "0xD"
    },
    "6017": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6018": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6019": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6021": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6022": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6023": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "AND",
      "path": "16"
    },
    "6024": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6027": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "MUL",
      "path": "16"
    },
    "6028": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6031": {
      "op": "NOT"
    },
    "6032": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6033": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6034": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "AND",
      "path": "16"
    },
    "6035": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6036": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6037": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6038": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "OR",
      "path": "16"
    },
    "6039": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6040": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7343,
        7374
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6041": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        7267,
        7381
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6042": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6043": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6045": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6046": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6047": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6048": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6050": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6052": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6053": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6055": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6056": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6057": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6064": {
      "op": "SHL"
    },
    "6065": {
      "op": "SUB"
    },
    "6066": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "3"
    },
    "6067": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 42
    },
    "6068": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "6071": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6072": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6074": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6081": {
      "op": "SHL"
    },
    "6082": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6083": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6086": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6088": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6089": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "3"
    },
    "6090": {
      "op": "MSTORE"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6095": {
      "op": "DUP3"
    },
    "6096": {
      "op": "ADD"
    },
    "6097": {
      "op": "MSTORE"
    },
    "6098": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6133": {
      "op": "DUP3"
    },
    "6134": {
      "op": "ADD"
    },
    "6135": {
      "op": "MSTORE"
    },
    "6136": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "6160": {
      "op": "JUMP"
    },
    "6161": {
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6162": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6164": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6165": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6166": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181E"
    },
    "6169": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6170": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "6173": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6174": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6175": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6176": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6179": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6181": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6183": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DIV",
      "path": "16"
    },
    "6184": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MUL",
      "path": "16"
    },
    "6185": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6187": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6188": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6190": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6191": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6192": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6193": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6194": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6196": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6197": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6200": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6204": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6208": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6210": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x184A"
    },
    "6213": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6214": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "6217": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6219": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6220": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1897"
    },
    "6224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6225": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6226": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6228": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "LT",
      "path": "16"
    },
    "6229": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186C"
    },
    "6232": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6233": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6236": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6238": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6239": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DIV",
      "path": "16"
    },
    "6240": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MUL",
      "path": "16"
    },
    "6241": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6242": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6243": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6244": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6248": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1897"
    },
    "6251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6253": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6255": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6259": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6262": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6264": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6265": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6266": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6267": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6268": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6274": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6275": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6278": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6279": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6280": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6281": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "GT",
      "path": "16"
    },
    "6282": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x187A"
    },
    "6285": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SUB",
      "path": "16"
    },
    "6289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "AND",
      "path": "16"
    },
    "6292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6302": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6303": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9118,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6304": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9166,
        9173
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6306": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9208,
        9209
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 43
    },
    "6307": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9192,
        9205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18AA"
    },
    "6310": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9192,
        9203
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "6313": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9192,
        9205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6314": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9192,
        9205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6315": {
      "branch": 162,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9192,
        9209
      ],
      "op": "GT",
      "path": "16"
    },
    "6316": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18F0"
    },
    "6319": {
      "branch": 162,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6320": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6322": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6329": {
      "op": "SHL"
    },
    "6330": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6331": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6334": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6336": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6337": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "ADD",
      "path": "16"
    },
    "6338": {
      "op": "MSTORE"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6343": {
      "op": "DUP3"
    },
    "6344": {
      "op": "ADD"
    },
    "6345": {
      "op": "MSTORE"
    },
    "6346": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "6371": {
      "op": "SHL"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6374": {
      "op": "DUP3"
    },
    "6375": {
      "op": "ADD"
    },
    "6376": {
      "op": "MSTORE"
    },
    "6377": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "6383": {
      "op": "JUMP"
    },
    "6384": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9184,
        9236
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6385": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9253,
        9275
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 44,
      "value": "0xE66"
    },
    "6388": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9261,
        9274
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x648"
    },
    "6391": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9261,
        9272
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "6394": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9261,
        9274
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6396": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6404": {
      "op": "SHL"
    },
    "6405": {
      "op": "SUB"
    },
    "6406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 45
    },
    "6407": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "3"
    },
    "6408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1966"
    },
    "6411": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6412": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6421": {
      "op": "SHL"
    },
    "6422": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6428": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6429": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "3"
    },
    "6430": {
      "op": "MSTORE"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6435": {
      "op": "DUP3"
    },
    "6436": {
      "op": "ADD"
    },
    "6437": {
      "op": "MSTORE"
    },
    "6438": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6473": {
      "op": "DUP3"
    },
    "6474": {
      "op": "ADD"
    },
    "6475": {
      "op": "MSTORE"
    },
    "6476": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6489": {
      "op": "SHL"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6492": {
      "op": "DUP3"
    },
    "6493": {
      "op": "ADD"
    },
    "6494": {
      "op": "MSTORE"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6497": {
      "op": "ADD"
    },
    "6498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "6501": {
      "op": "JUMP"
    },
    "6502": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6510": {
      "op": "SHL"
    },
    "6511": {
      "op": "SUB"
    },
    "6512": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "3",
      "statement": 46
    },
    "6513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6515": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6516": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6517": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6518": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6520": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6522": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6529": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6531": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6533": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6540": {
      "op": "SHL"
    },
    "6541": {
      "op": "SUB"
    },
    "6542": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6545": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6546": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6547": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6548": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6549": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6550": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6551": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B2"
    },
    "6554": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6555": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6557": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6558": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6564": {
      "op": "SHL"
    },
    "6565": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6566": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6567": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6569": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "6573": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6574": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "6577": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6578": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x1626"
    },
    "6582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7A"
    },
    "6587": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6588": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6589": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6591": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "op": "SUB"
    },
    "6600": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6603": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6604": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6605": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6606": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6607": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6608": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6609": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19EC"
    },
    "6612": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6613": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6615": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6622": {
      "op": "SHL"
    },
    "6623": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "6631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "6635": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6637": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7229,
        7238
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x17"
    },
    "6639": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7229,
        7254
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6640": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        7151,
        7261
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6641": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4403,
        4876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6642": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6644": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6651": {
      "op": "SHL"
    },
    "6652": {
      "op": "SUB"
    },
    "6653": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6657": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6659": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6660": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6661": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6662": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A21"
    },
    "6665": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6668": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6675": {
      "op": "SHL"
    },
    "6676": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6680": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "6684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "6688": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6690": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4514,
        4519
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0xD"
    },
    "6692": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4514,
        4519
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6693": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4514,
        4519
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6695": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4514,
        4519
      ],
      "op": "AND",
      "path": "16"
    },
    "6696": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4523,
        4524
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6698": {
      "branch": 163,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4514,
        4524
      ],
      "op": "EQ",
      "path": "16"
    },
    "6699": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A76"
    },
    "6702": {
      "branch": 163,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6703": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6705": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6712": {
      "op": "SHL"
    },
    "6713": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6714": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6717": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6719": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6720": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "ADD",
      "path": "16"
    },
    "6721": {
      "op": "MSTORE"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6726": {
      "op": "DUP3"
    },
    "6727": {
      "op": "ADD"
    },
    "6728": {
      "op": "MSTORE"
    },
    "6729": {
      "op": "PUSH32",
      "value": "0x5465616D2073616C65206E6F7420696E697469617465642E0000000000000000"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6764": {
      "op": "DUP3"
    },
    "6765": {
      "op": "ADD"
    },
    "6766": {
      "op": "MSTORE"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6769": {
      "op": "ADD"
    },
    "6770": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "6773": {
      "op": "JUMP"
    },
    "6774": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4506,
        4553
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6775": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4602,
        4616
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 50,
      "value": "0x14"
    },
    "6777": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4602,
        4616
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6778": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4585,
        4598
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6780": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4585,
        4598
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6781": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A89"
    },
    "6784": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6785": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6787": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6788": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "AND",
      "path": "16"
    },
    "6789": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37FF"
    },
    "6792": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4571,
        4598
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6793": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4598
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6794": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4616
      ],
      "op": "GT",
      "path": "16"
    },
    "6795": {
      "branch": 164,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4571,
        4616
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6796": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AEA"
    },
    "6799": {
      "branch": 164,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6800": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6802": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6809": {
      "op": "SHL"
    },
    "6810": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6811": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6814": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6816": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6817": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "ADD",
      "path": "16"
    },
    "6818": {
      "op": "MSTORE"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6823": {
      "op": "DUP3"
    },
    "6824": {
      "op": "ADD"
    },
    "6825": {
      "op": "MSTORE"
    },
    "6826": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6861": {
      "op": "DUP3"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "MSTORE"
    },
    "6864": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6877": {
      "op": "SHL"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6880": {
      "op": "DUP3"
    },
    "6881": {
      "op": "ADD"
    },
    "6882": {
      "op": "MSTORE"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6885": {
      "op": "ADD"
    },
    "6886": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "6889": {
      "op": "JUMP"
    },
    "6890": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4563,
        4663
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6891": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4696,
        4707
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 51
    },
    "6892": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6894": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "AND",
      "path": "16"
    },
    "6895": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4692
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6897": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4692
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6899": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6900": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6901": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6902": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AFF"
    },
    "6905": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6906": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6907": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37FF"
    },
    "6910": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4679,
        4707
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6911": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6912": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6913": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6914": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4679,
        4707
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6915": {
      "op": "POP"
    },
    "6916": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4734,
        4735
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6918": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4734,
        4735
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6919": {
      "op": "POP"
    },
    "6920": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4717,
        4870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6921": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4742,
        4753
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6922": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4753
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6924": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4753
      ],
      "op": "AND",
      "path": "16"
    },
    "6925": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4738
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6926": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4753
      ],
      "op": "GT",
      "path": "16"
    },
    "6927": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4717,
        4870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4B"
    },
    "6930": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4717,
        4870
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6931": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4774,
        4818
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 52,
      "value": "0x1B1F"
    },
    "6934": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4780,
        4790
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6935": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4792,
        4817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120A"
    },
    "6938": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4792,
        4807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "6940": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6941": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6942": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6943": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4774,
        4818
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6944": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4832,
        4859
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 53,
      "value": "0x1B2D"
    },
    "6947": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4832,
        4847
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "6949": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6950": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6951": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6953": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "6954": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6955": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6956": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6957": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4832,
        4859
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6958": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 54
    },
    "6959": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B37"
    },
    "6962": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6963": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3817"
    },
    "6966": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4755,
        4758
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6967": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6968": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6969": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "POP",
      "path": "16"
    },
    "6970": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4755,
        4758
      ],
      "op": "POP",
      "path": "16"
    },
    "6971": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4717,
        4870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B08"
    },
    "6974": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4717,
        4870
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6975": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6976": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6978": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6985": {
      "op": "SHL"
    },
    "6986": {
      "op": "SUB"
    },
    "6987": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6990": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6991": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6992": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6993": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6994": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6995": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6996": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6F"
    },
    "6999": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7000": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7002": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7009": {
      "op": "SHL"
    },
    "7010": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7011": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7012": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7014": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7015": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "7018": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7019": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "7022": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7023": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7024": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        6009,
        6019
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x9"
    },
    "7026": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        6009,
        6033
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7027": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5938,
        6040
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7028": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7029": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7031": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "op": "SUB"
    },
    "7040": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7043": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7044": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7045": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7046": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7047": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7048": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7049": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA4"
    },
    "7052": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7064": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7068": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "7071": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7072": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "7075": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7077": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7780,
        7781
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x0"
    },
    "7079": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7755,
        7769
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "7081": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7082": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7083": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BB3"
    },
    "7086": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7087": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "7090": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7749,
        7777
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7091": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7092": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7093": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7777
      ],
      "op": "POP",
      "path": "16"
    },
    "7094": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7749,
        7781
      ],
      "op": "GT",
      "path": "16"
    },
    "7095": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C02"
    },
    "7098": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7099": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7101": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7108": {
      "op": "SHL"
    },
    "7109": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7110": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7113": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7115": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7116": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "ADD",
      "path": "16"
    },
    "7117": {
      "op": "DUP2"
    },
    "7118": {
      "op": "SWAP1"
    },
    "7119": {
      "op": "MSTORE"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7122": {
      "op": "DUP3"
    },
    "7123": {
      "op": "ADD"
    },
    "7124": {
      "op": "MSTORE"
    },
    "7125": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7160": {
      "op": "DUP3"
    },
    "7161": {
      "op": "ADD"
    },
    "7162": {
      "op": "MSTORE"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7165": {
      "op": "ADD"
    },
    "7166": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7169": {
      "op": "JUMP"
    },
    "7170": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7741,
        7818
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7171": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0xD"
    },
    "7173": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7174": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "7179": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7180": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "DIV",
      "path": "16"
    },
    "7181": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7183": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7837,
        7857
      ],
      "op": "AND",
      "path": "16"
    },
    "7184": {
      "branch": 166,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7836,
        7857
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7185": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C67"
    },
    "7188": {
      "branch": 166,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7189": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7191": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7198": {
      "op": "SHL"
    },
    "7199": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7200": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7203": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7205": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7206": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "ADD",
      "path": "16"
    },
    "7207": {
      "op": "MSTORE"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7212": {
      "op": "DUP3"
    },
    "7213": {
      "op": "ADD"
    },
    "7214": {
      "op": "MSTORE"
    },
    "7215": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7250": {
      "op": "DUP3"
    },
    "7251": {
      "op": "ADD"
    },
    "7252": {
      "op": "MSTORE"
    },
    "7253": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7258": {
      "op": "SHL"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7261": {
      "op": "DUP3"
    },
    "7262": {
      "op": "ADD"
    },
    "7263": {
      "op": "MSTORE"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7266": {
      "op": "ADD"
    },
    "7267": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7270": {
      "op": "JUMP"
    },
    "7271": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7828,
        7896
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7272": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7926
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0xD"
    },
    "7274": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7275": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7276": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "7281": {
      "op": "NOT"
    },
    "7282": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "AND",
      "path": "16"
    },
    "7283": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "7288": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "OR",
      "path": "16"
    },
    "7289": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7290": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7906,
        7933
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7291": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        7682,
        7940
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7292": {
      "fn": "CryptidToken.pause",
      "offset": [
        5651,
        5710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7293": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7302": {
      "op": "SHL"
    },
    "7303": {
      "op": "SUB"
    },
    "7304": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7307": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7308": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7309": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7311": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7312": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7313": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CAC"
    },
    "7316": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7317": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7326": {
      "op": "SHL"
    },
    "7327": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7329": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7332": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "7335": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7336": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "7339": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7341": {
      "fn": "CryptidToken.pause",
      "offset": [
        5695,
        5703
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 59,
      "value": "0x1626"
    },
    "7344": {
      "fn": "CryptidToken.pause",
      "offset": [
        5695,
        5701
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DD4"
    },
    "7347": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5695,
        5703
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7348": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7349": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5023,
        5032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "7351": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5023,
        5032
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7352": {
      "offset": [
        2886,
        3056
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7354": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2886,
        3056
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7355": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2886,
        3056
      ],
      "op": "AND",
      "path": "16"
    },
    "7356": {
      "offset": [
        2999,
        3008
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "7357": {
      "offset": [
        2971,
        2995
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CC6"
    },
    "7360": {
      "offset": [
        2886,
        3056
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7361": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5023,
        5032
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7362": {
      "offset": [
        2971,
        2995
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37B6"
    },
    "7365": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        2971,
        2995
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7366": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2971,
        2995
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7367": {
      "offset": [
        2971,
        3008
      ],
      "op": "EQ",
      "path": "16"
    },
    "7368": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0F"
    },
    "7371": {
      "offset": [
        2963,
        3038
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7372": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7374": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2963,
        3038
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7381": {
      "op": "SHL"
    },
    "7382": {
      "offset": [
        2963,
        3038
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7383": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2963,
        3038
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7386": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7388": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2963,
        3038
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7389": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2963,
        3038
      ],
      "op": "ADD",
      "path": "16"
    },
    "7390": {
      "op": "MSTORE"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7395": {
      "op": "DUP3"
    },
    "7396": {
      "op": "ADD"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7429": {
      "op": "DUP3"
    },
    "7430": {
      "op": "ADD"
    },
    "7431": {
      "op": "MSTORE"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "offset": [
        2963,
        3038
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7438": {
      "op": "JUMP"
    },
    "7439": {
      "offset": [
        2963,
        3038
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7440": {
      "offset": [
        3104,
        3113
      ],
      "op": "ORIGIN",
      "path": "16"
    },
    "7441": {
      "offset": [
        3117,
        3127
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7442": {
      "offset": [
        3104,
        3127
      ],
      "op": "EQ",
      "path": "16"
    },
    "7443": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D5E"
    },
    "7446": {
      "offset": [
        3096,
        3163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7447": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7449": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3096,
        3163
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7456": {
      "op": "SHL"
    },
    "7457": {
      "offset": [
        3096,
        3163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7458": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3096,
        3163
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7461": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7463": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3096,
        3163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7464": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3096,
        3163
      ],
      "op": "ADD",
      "path": "16"
    },
    "7465": {
      "op": "MSTORE"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7470": {
      "op": "DUP3"
    },
    "7471": {
      "op": "ADD"
    },
    "7472": {
      "op": "MSTORE"
    },
    "7473": {
      "op": "PUSH32",
      "value": "0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7508": {
      "op": "DUP3"
    },
    "7509": {
      "op": "ADD"
    },
    "7510": {
      "op": "MSTORE"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7513": {
      "op": "ADD"
    },
    "7514": {
      "offset": [
        3096,
        3163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7517": {
      "op": "JUMP"
    },
    "7518": {
      "offset": [
        3096,
        3163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7519": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7521": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7523": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7524": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "7525": {
      "branch": 194,
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7526": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB1"
    },
    "7529": {
      "branch": 194,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7530": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7532": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7541": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7544": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7546": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7547": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "7548": {
      "op": "MSTORE"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7553": {
      "op": "DUP3"
    },
    "7554": {
      "op": "ADD"
    },
    "7555": {
      "op": "MSTORE"
    },
    "7556": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7591": {
      "op": "DUP3"
    },
    "7592": {
      "op": "ADD"
    },
    "7593": {
      "op": "MSTORE"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7596": {
      "op": "ADD"
    },
    "7597": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC12"
    },
    "7600": {
      "op": "JUMP"
    },
    "7601": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7602": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7604": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7606": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7607": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "7609": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7610": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7612": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "7613": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7614": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DD9"
    },
    "7617": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7618": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7620": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7627": {
      "op": "SHL"
    },
    "7628": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7629": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7630": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7632": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "7633": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "7636": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7637": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37D5"
    },
    "7640": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7641": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7642": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5137,
        5142
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0xD"
    },
    "7644": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5137,
        5142
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7645": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5137,
        5142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7647": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5137,
        5142
      ],
      "op": "AND",
      "path": "16"
    },
    "7648": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5146,
        5147
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7650": {
      "branch": 167,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5137,
        5147
      ],
      "op": "EQ",
      "path": "16"
    },
    "7651": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E2E"
    },
    "7654": {
      "branch": 167,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7655": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7657": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7664": {
      "op": "SHL"
    },
    "7665": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7666": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7669": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7671": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7672": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "ADD",
      "path": "16"
    },
    "7673": {
      "op": "MSTORE"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7678": {
      "op": "DUP3"
    },
    "7679": {
      "op": "ADD"
    },
    "7680": {
      "op": "MSTORE"
    },
    "7681": {
      "op": "PUSH32",
      "value": "0x5075626C6963206D696E74206E6F7420696E69746961697465642E0000000000"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7716": {
      "op": "DUP3"
    },
    "7717": {
      "op": "ADD"
    },
    "7718": {
      "op": "MSTORE"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7721": {
      "op": "ADD"
    },
    "7722": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7725": {
      "op": "JUMP"
    },
    "7726": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5129,
        5179
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7727": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5229,
        5244
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x16"
    },
    "7729": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5229,
        5244
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7730": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5214,
        5225
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7731": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7733": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "AND",
      "path": "16"
    },
    "7734": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5210
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E3D"
    },
    "7737": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "7740": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5197,
        5210
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7741": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5210
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7742": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E47"
    },
    "7745": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7746": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7747": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37FF"
    },
    "7750": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5197,
        5225
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7751": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5225
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7752": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5244
      ],
      "op": "GT",
      "path": "16"
    },
    "7753": {
      "branch": 168,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5197,
        5244
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7754": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA3"
    },
    "7757": {
      "branch": 168,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7758": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7760": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7767": {
      "op": "SHL"
    },
    "7768": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7769": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7772": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7774": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7775": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "ADD",
      "path": "16"
    },
    "7776": {
      "op": "MSTORE"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7781": {
      "op": "DUP3"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "op": "MSTORE"
    },
    "7784": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7819": {
      "op": "DUP3"
    },
    "7820": {
      "op": "ADD"
    },
    "7821": {
      "op": "MSTORE"
    },
    "7822": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7830": {
      "op": "SHL"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7833": {
      "op": "DUP3"
    },
    "7834": {
      "op": "ADD"
    },
    "7835": {
      "op": "MSTORE"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7838": {
      "op": "ADD"
    },
    "7839": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7842": {
      "op": "JUMP"
    },
    "7843": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5189,
        5286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7844": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5318,
        5319
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x0"
    },
    "7846": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5304,
        5315
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7847": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5304,
        5319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7849": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5304,
        5319
      ],
      "op": "AND",
      "path": "16"
    },
    "7850": {
      "branch": 169,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5304,
        5319
      ],
      "op": "GT",
      "path": "16"
    },
    "7851": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F02"
    },
    "7854": {
      "branch": 169,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7855": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7857": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7864": {
      "op": "SHL"
    },
    "7865": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7866": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7869": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7871": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7872": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "ADD",
      "path": "16"
    },
    "7873": {
      "op": "MSTORE"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7878": {
      "op": "DUP3"
    },
    "7879": {
      "op": "ADD"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7916": {
      "op": "DUP3"
    },
    "7917": {
      "op": "ADD"
    },
    "7918": {
      "op": "MSTORE"
    },
    "7919": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "7925": {
      "op": "SHL"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7928": {
      "op": "DUP3"
    },
    "7929": {
      "op": "ADD"
    },
    "7930": {
      "op": "MSTORE"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7933": {
      "op": "ADD"
    },
    "7934": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "7937": {
      "op": "JUMP"
    },
    "7938": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5296,
        5359
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7939": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0xD"
    },
    "7941": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7942": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7944": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "7947": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7948": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7949": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "DIV",
      "path": "16"
    },
    "7950": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7951": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5392,
        5404
      ],
      "op": "AND",
      "path": "16"
    },
    "7952": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5377,
        5404
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7953": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5377,
        5404
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7954": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5377,
        5404
      ],
      "op": "AND",
      "path": "16"
    },
    "7955": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5377,
        5404
      ],
      "op": "GT",
      "path": "16"
    },
    "7956": {
      "branch": 170,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5377,
        5404
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7957": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F73"
    },
    "7960": {
      "branch": 170,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7961": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7963": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7972": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7975": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7977": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7978": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "ADD",
      "path": "16"
    },
    "7979": {
      "op": "MSTORE"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7984": {
      "op": "DUP3"
    },
    "7985": {
      "op": "ADD"
    },
    "7986": {
      "op": "MSTORE"
    },
    "7987": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8022": {
      "op": "DUP3"
    },
    "8023": {
      "op": "ADD"
    },
    "8024": {
      "op": "MSTORE"
    },
    "8025": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "8038": {
      "op": "SHL"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8046": {
      "op": "ADD"
    },
    "8047": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "8050": {
      "op": "JUMP"
    },
    "8051": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5369,
        5451
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8052": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5481,
        5482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8054": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8055": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5489,
        5500
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8056": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5484,
        5500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8058": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5484,
        5500
      ],
      "op": "AND",
      "path": "16"
    },
    "8059": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5484,
        5485
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8060": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5484,
        5500
      ],
      "op": "GT",
      "path": "16"
    },
    "8061": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FAD"
    },
    "8064": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8065": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5521,
        5565
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 64,
      "value": "0x1F8D"
    },
    "8068": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5527,
        5537
      ],
      "op": "CALLER",
      "path": "16"
    },
    "8069": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5539,
        5564
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120A"
    },
    "8072": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5539,
        5554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8074": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8075": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8076": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8077": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5521,
        5565
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8078": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5579,
        5606
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 65,
      "value": "0x1F9B"
    },
    "8081": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5579,
        5594
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8083": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8084": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8085": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8087": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "8088": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8089": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8090": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8091": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5579,
        5606
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8092": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 66
    },
    "8093": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FA5"
    },
    "8096": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8097": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3817"
    },
    "8100": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5502,
        5505
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8101": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8102": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8103": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "POP",
      "path": "16"
    },
    "8104": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5502,
        5505
      ],
      "op": "POP",
      "path": "16"
    },
    "8105": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F76"
    },
    "8108": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8109": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5464,
        5617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8110": {
      "op": "POP"
    },
    "8111": {
      "op": "POP"
    },
    "8112": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8114": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8116": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8117": {
      "op": "POP"
    },
    "8118": {
      "op": "POP"
    },
    "8119": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4911,
        5623
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8120": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8121": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8123": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x1"
    },
    "8125": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8126": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8127": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1A"
    },
    "8130": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8131": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36C8"
    },
    "8134": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8135": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8136": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 68,
      "value": "0xE4B"
    },
    "8139": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8140": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8141": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8142": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E2C"
    },
    "8145": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8146": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3682
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8147": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8149": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8156": {
      "op": "SHL"
    },
    "8157": {
      "op": "SUB"
    },
    "8158": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8161": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8162": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8163": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8164": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8165": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8166": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8167": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2002"
    },
    "8170": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8180": {
      "op": "SHL"
    },
    "8181": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8182": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8183": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8185": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8186": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "8189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "8193": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8195": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3365,
        3366
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0x0"
    },
    "8197": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3351,
        3362
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8198": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3351,
        3366
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8200": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3351,
        3366
      ],
      "op": "AND",
      "path": "16"
    },
    "8201": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3351,
        3366
      ],
      "op": "GT",
      "path": "16"
    },
    "8202": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2063"
    },
    "8205": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8206": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8208": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8215": {
      "op": "SHL"
    },
    "8216": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8217": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8220": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8222": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8223": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "ADD",
      "path": "16"
    },
    "8224": {
      "op": "MSTORE"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8229": {
      "op": "DUP3"
    },
    "8230": {
      "op": "ADD"
    },
    "8231": {
      "op": "MSTORE"
    },
    "8232": {
      "op": "PUSH32",
      "value": "0x41697264726F7020616D6F756E74206D75737420626520677265617465722074"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8267": {
      "op": "DUP3"
    },
    "8268": {
      "op": "ADD"
    },
    "8269": {
      "op": "MSTORE"
    },
    "8270": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "8278": {
      "op": "SHL"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8281": {
      "op": "DUP3"
    },
    "8282": {
      "op": "ADD"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8286": {
      "op": "ADD"
    },
    "8287": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "8290": {
      "op": "JUMP"
    },
    "8291": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3343,
        3408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8292": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3458,
        3473
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 70,
      "value": "0x16"
    },
    "8294": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3458,
        3473
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8295": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3443,
        3454
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8296": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8298": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "AND",
      "path": "16"
    },
    "8299": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3439
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2072"
    },
    "8302": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3437
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "8305": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3426,
        3439
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8306": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8307": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x207C"
    },
    "8310": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8311": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8312": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37FF"
    },
    "8315": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3426,
        3454
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8316": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3454
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8317": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3473
      ],
      "op": "GT",
      "path": "16"
    },
    "8318": {
      "branch": 172,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3426,
        3473
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8319": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20DD"
    },
    "8322": {
      "branch": 172,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8323": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8325": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8332": {
      "op": "SHL"
    },
    "8333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8334": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8337": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8340": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "ADD",
      "path": "16"
    },
    "8341": {
      "op": "MSTORE"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8346": {
      "op": "DUP3"
    },
    "8347": {
      "op": "ADD"
    },
    "8348": {
      "op": "MSTORE"
    },
    "8349": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8384": {
      "op": "DUP3"
    },
    "8385": {
      "op": "ADD"
    },
    "8386": {
      "op": "MSTORE"
    },
    "8387": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "8400": {
      "op": "SHL"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8403": {
      "op": "DUP3"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "MSTORE"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8408": {
      "op": "ADD"
    },
    "8409": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "8412": {
      "op": "JUMP"
    },
    "8413": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3418,
        3520
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8414": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3547,
        3548
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8416": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3530,
        3676
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8417": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3555,
        3566
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8418": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3550,
        3566
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8420": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3550,
        3566
      ],
      "op": "AND",
      "path": "16"
    },
    "8421": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3550,
        3551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8422": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3550,
        3566
      ],
      "op": "GT",
      "path": "16"
    },
    "8423": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3530,
        3676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD48"
    },
    "8426": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3530,
        3676
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8427": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3587,
        3624
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 71,
      "value": "0x20F7"
    },
    "8430": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3593,
        3596
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8431": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3598,
        3623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x120A"
    },
    "8434": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3598,
        3613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8436": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8437": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8438": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8439": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3587,
        3624
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8440": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3638,
        3665
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 72,
      "value": "0x2105"
    },
    "8443": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3638,
        3653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8445": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8446": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8447": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8449": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "8450": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8451": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8452": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8453": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3638,
        3665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8454": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 73
    },
    "8455": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x210F"
    },
    "8458": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8459": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3817"
    },
    "8462": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3568,
        3571
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8463": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8464": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8465": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "POP",
      "path": "16"
    },
    "8466": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3568,
        3571
      ],
      "op": "POP",
      "path": "16"
    },
    "8467": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3530,
        3676
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20E0"
    },
    "8470": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3530,
        3676
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8471": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 74,
      "value": "0x2121"
    },
    "8475": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8477": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281B"
    },
    "8480": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8481": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x213D"
    },
    "8485": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8486": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8495": {
      "op": "SHL"
    },
    "8496": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8500": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "3"
    },
    "8501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "8504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3765"
    },
    "8508": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x2149"
    },
    "8513": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8517": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EFB"
    },
    "8520": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8521": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8522": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8524": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8526": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8527": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8530": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8537": {
      "op": "SHL"
    },
    "8538": {
      "op": "SUB"
    },
    "8539": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8542": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8543": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8544": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8545": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8546": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8547": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8548": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217F"
    },
    "8551": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8552": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8554": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8561": {
      "op": "SHL"
    },
    "8562": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8566": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8567": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "8570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8571": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "8574": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8575": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8582": {
      "op": "SHL"
    },
    "8583": {
      "op": "SUB"
    },
    "8584": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "AND",
      "path": "16",
      "statement": 76
    },
    "8585": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8587": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8588": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8589": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8590": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "8592": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8594": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8595": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8597": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8598": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5918
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8599": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8600": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8603": {
      "op": "NOT"
    },
    "8604": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "AND",
      "path": "16"
    },
    "8605": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5921,
        5925
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8607": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "OR",
      "path": "16"
    },
    "8608": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8609": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5899,
        5925
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8610": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "o",
      "offset": [
        5830,
        5932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8611": {
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8612": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "8614": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8615": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8616": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181E"
    },
    "8619": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8620": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "8623": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        927,
        964
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8624": {
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8625": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "8627": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8628": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8629": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181E"
    },
    "8632": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8633": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "8636": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        861,
        889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8637": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8638": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8640": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8641": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8642": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8643": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8645": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8647": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8648": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8650": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8651": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8652": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8653": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9630,
        9643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "8655": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9630,
        9643
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8662": {
      "op": "SHL"
    },
    "8663": {
      "op": "SUB"
    },
    "8664": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "8665": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 77,
      "value": "0x223C"
    },
    "8668": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8669": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8671": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8678": {
      "op": "SHL"
    },
    "8679": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8680": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8683": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8685": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8686": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "ADD",
      "path": "16"
    },
    "8687": {
      "op": "MSTORE"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8692": {
      "op": "DUP3"
    },
    "8693": {
      "op": "ADD"
    },
    "8694": {
      "op": "MSTORE"
    },
    "8695": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8730": {
      "op": "DUP3"
    },
    "8731": {
      "op": "ADD"
    },
    "8732": {
      "op": "MSTORE"
    },
    "8733": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8751": {
      "op": "SHL"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8754": {
      "op": "DUP3"
    },
    "8755": {
      "op": "ADD"
    },
    "8756": {
      "op": "MSTORE"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8759": {
      "op": "ADD"
    },
    "8760": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "8763": {
      "op": "JUMP"
    },
    "8764": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9655,
        9731
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8765": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9772,
        9779
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 78,
      "value": "0xB"
    },
    "8767": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9781,
        9799
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2247"
    },
    "8770": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9781,
        9788
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8771": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9781,
        9797
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F2E"
    },
    "8774": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9781,
        9799
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8775": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9781,
        9799
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8776": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9801,
        9814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "8778": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8780": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8781": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8783": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "ADD",
      "path": "16"
    },
    "8784": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x225B"
    },
    "8787": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8788": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8789": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8790": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8791": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38CC"
    },
    "8794": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9755,
        9815
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8795": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8796": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8798": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8799": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8801": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8802": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8803": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SUB",
      "path": "16"
    },
    "8804": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SUB",
      "path": "16"
    },
    "8805": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8806": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8807": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8808": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8810": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9755,
        9815
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8811": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9741,
        9816
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8812": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9741,
        9816
      ],
      "op": "POP",
      "path": "16"
    },
    "8813": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8814": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8815": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9557,
        9823
      ],
      "op": "POP",
      "path": "16"
    },
    "8816": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        9557,
        9823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8817": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8818": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8820": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8827": {
      "op": "SHL"
    },
    "8828": {
      "op": "SUB"
    },
    "8829": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8836": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8837": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8838": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A1"
    },
    "8841": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8842": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8844": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8851": {
      "op": "SHL"
    },
    "8852": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8854": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "8860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "8864": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8866": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6831
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 79,
      "value": "0xD"
    },
    "8868": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6831
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8869": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8871": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6826,
        6831
      ],
      "op": "AND",
      "path": "16"
    },
    "8872": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22E9"
    },
    "8875": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8876": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8878": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8885": {
      "op": "SHL"
    },
    "8886": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8887": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8890": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8892": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8893": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "ADD",
      "path": "16"
    },
    "8894": {
      "op": "MSTORE"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8899": {
      "op": "DUP3"
    },
    "8900": {
      "op": "ADD"
    },
    "8901": {
      "op": "MSTORE"
    },
    "8902": {
      "op": "PUSH19",
      "value": "0x27379039BA30B3B2B9903132B337B932901817"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "8924": {
      "op": "SHL"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8927": {
      "op": "DUP3"
    },
    "8928": {
      "op": "ADD"
    },
    "8929": {
      "op": "MSTORE"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8932": {
      "op": "ADD"
    },
    "8933": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "8936": {
      "op": "JUMP"
    },
    "8937": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6818,
        6859
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8938": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6874
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0xD"
    },
    "8940": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8941": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8942": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8944": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "AND",
      "path": "16"
    },
    "8945": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8946": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6874
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8948": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22FC"
    },
    "8951": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8952": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38FF"
    },
    "8955": {
      "fn": "CryptidToken.prevStage",
      "jump": "i",
      "offset": [
        6869,
        6876
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8956": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8957": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8958": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8959": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8962": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "EXP",
      "path": "16"
    },
    "8963": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8964": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8965": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8966": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8968": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "MUL",
      "path": "16"
    },
    "8969": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "NOT",
      "path": "16"
    },
    "8970": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "AND",
      "path": "16"
    },
    "8971": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8972": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8973": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8975": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "AND",
      "path": "16"
    },
    "8976": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "MUL",
      "path": "16"
    },
    "8977": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "OR",
      "path": "16"
    },
    "8978": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8979": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8980": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "8981": {
      "fn": "CryptidToken.prevStage",
      "offset": [
        6869,
        6876
      ],
      "op": "POP",
      "path": "16"
    },
    "8982": {
      "fn": "CryptidToken.prevStage",
      "jump": "o",
      "offset": [
        6770,
        6883
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8983": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9288,
        9439
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8984": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9331,
        9338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8986": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9373,
        9374
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 81
    },
    "8987": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9357,
        9370
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2322"
    },
    "8990": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9357,
        9368
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "8993": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9357,
        9370
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8994": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9357,
        9370
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8995": {
      "branch": 173,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9357,
        9374
      ],
      "op": "GT",
      "path": "16"
    },
    "8996": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2368"
    },
    "8999": {
      "branch": 173,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9000": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9002": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9009": {
      "op": "SHL"
    },
    "9010": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9011": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9014": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9016": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9017": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "ADD",
      "path": "16"
    },
    "9018": {
      "op": "MSTORE"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9023": {
      "op": "DUP3"
    },
    "9024": {
      "op": "ADD"
    },
    "9025": {
      "op": "MSTORE"
    },
    "9026": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9051": {
      "op": "SHL"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9054": {
      "op": "DUP3"
    },
    "9055": {
      "op": "ADD"
    },
    "9056": {
      "op": "MSTORE"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9059": {
      "op": "ADD"
    },
    "9060": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9063": {
      "op": "JUMP"
    },
    "9064": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9349,
        9401
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9065": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9418,
        9431
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 82,
      "value": "0xE66"
    },
    "9068": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9418,
        9429
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "9071": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9418,
        9431
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9072": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7019,
        7145
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9073": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9075": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9082": {
      "op": "SHL"
    },
    "9083": {
      "op": "SUB"
    },
    "9084": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9087": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9088": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9089": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9090": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9091": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9092": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9093": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A0"
    },
    "9096": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9097": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9106": {
      "op": "SHL"
    },
    "9107": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9108": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9109": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9111": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9112": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "9115": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9116": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "9119": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9121": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 83
    },
    "9122": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9123": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4B"
    },
    "9126": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9127": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7118
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "9129": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7118
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9130": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9132": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9133": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "ADD",
      "path": "16"
    },
    "9134": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9135": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        7105,
        7138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31F9"
    },
    "9138": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        7105,
        7138
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9139": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9829,
        9939
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9140": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9875,
        9882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9142": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9919,
        9932
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 84,
      "value": "0x23BD"
    },
    "9145": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9919,
        9930
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4F"
    },
    "9148": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9919,
        9932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9149": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9919,
        9932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9150": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9916
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "9152": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9916
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9153": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE66"
    },
    "9156": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9932
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9157": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9932
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9158": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9901,
        9932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x374E"
    },
    "9161": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9901,
        9932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9162": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9163": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9165": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9172": {
      "op": "SHL"
    },
    "9173": {
      "op": "SUB"
    },
    "9174": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9177": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9178": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9179": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9180": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9181": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9182": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9183": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23FA"
    },
    "9186": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9187": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9196": {
      "op": "SHL"
    },
    "9197": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9198": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9199": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9202": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "9205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "9209": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9210": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9211": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6299,
        6300
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 85,
      "value": "0x0"
    },
    "9213": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6281,
        6288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "9215": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9216": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9217": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2409"
    },
    "9220": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9221": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36C8"
    },
    "9224": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6275,
        6296
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9225": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9226": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9227": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6296
      ],
      "op": "POP",
      "path": "16"
    },
    "9228": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6275,
        6300
      ],
      "op": "GT",
      "path": "16"
    },
    "9229": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2458"
    },
    "9232": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9233": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9235": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9242": {
      "op": "SHL"
    },
    "9243": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9244": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9247": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9249": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9250": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "ADD",
      "path": "16"
    },
    "9251": {
      "op": "MSTORE"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9256": {
      "op": "DUP3"
    },
    "9257": {
      "op": "ADD"
    },
    "9258": {
      "op": "MSTORE"
    },
    "9259": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9294": {
      "op": "DUP3"
    },
    "9295": {
      "op": "ADD"
    },
    "9296": {
      "op": "MSTORE"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9299": {
      "op": "ADD"
    },
    "9300": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9303": {
      "op": "JUMP"
    },
    "9304": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6267,
        6328
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9305": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0xD"
    },
    "9307": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9308": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "9312": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9313": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "DIV",
      "path": "16"
    },
    "9314": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9316": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6347,
        6361
      ],
      "op": "AND",
      "path": "16"
    },
    "9317": {
      "branch": 175,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6346,
        6361
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9318": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24B1"
    },
    "9321": {
      "branch": 175,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9322": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9324": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9333": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9336": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9338": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9339": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "ADD",
      "path": "16"
    },
    "9340": {
      "op": "MSTORE"
    },
    "9341": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9345": {
      "op": "DUP3"
    },
    "9346": {
      "op": "ADD"
    },
    "9347": {
      "op": "MSTORE"
    },
    "9348": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9392": {
      "op": "JUMP"
    },
    "9393": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6338,
        6392
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9394": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6416
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0xD"
    },
    "9396": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9397": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9398": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "9402": {
      "op": "NOT"
    },
    "9403": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "AND",
      "path": "16"
    },
    "9404": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "9408": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "OR",
      "path": "16"
    },
    "9409": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9410": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6402,
        6423
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9411": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        6215,
        6430
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9412": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9413": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9415": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9422": {
      "op": "SHL"
    },
    "9423": {
      "op": "SUB"
    },
    "9424": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9427": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9428": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9429": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9430": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9431": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9432": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9433": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F4"
    },
    "9436": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9437": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9446": {
      "op": "SHL"
    },
    "9447": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9448": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9449": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9451": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9452": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "9455": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "9459": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9460": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9461": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8094
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 88,
      "value": "0xD"
    },
    "9463": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9464": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9471": {
      "op": "SHL"
    },
    "9472": {
      "op": "SUB"
    },
    "9473": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "9474": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "DUP8",
      "path": "16"
    },
    "9475": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "AND",
      "path": "16"
    },
    "9476": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "9482": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "MUL",
      "path": "16"
    },
    "9483": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9493": {
      "op": "SHL"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "op": "NOT"
    },
    "9496": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9497": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9498": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "AND",
      "path": "16"
    },
    "9499": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "OR",
      "path": "16"
    },
    "9500": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9501": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8081,
        8103
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9502": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8126
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 89,
      "value": "0xE"
    },
    "9504": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9505": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9506": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "9507": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9508": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "AND",
      "path": "16"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9515": {
      "op": "SHL"
    },
    "9516": {
      "op": "SUB"
    },
    "9517": {
      "op": "NOT"
    },
    "9518": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "9519": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9520": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "AND",
      "path": "16"
    },
    "9521": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "OR",
      "path": "16"
    },
    "9522": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9523": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8113,
        8135
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9524": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8158
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 90,
      "value": "0xF"
    },
    "9526": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9527": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9528": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9529": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9530": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "AND",
      "path": "16"
    },
    "9531": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9532": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9533": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "AND",
      "path": "16"
    },
    "9534": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9535": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9536": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9537": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "OR",
      "path": "16"
    },
    "9538": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9539": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9540": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8145,
        8167
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9541": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8190
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 91,
      "value": "0x10"
    },
    "9543": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9544": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9545": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9546": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9547": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "AND",
      "path": "16"
    },
    "9548": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9549": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9550": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "AND",
      "path": "16"
    },
    "9551": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9552": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9553": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9554": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "OR",
      "path": "16"
    },
    "9555": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9556": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8177,
        8199
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9557": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8222
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 92,
      "value": "0x11"
    },
    "9559": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9560": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9561": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9562": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9563": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9564": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "AND",
      "path": "16"
    },
    "9565": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9566": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "AND",
      "path": "16"
    },
    "9567": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "OR",
      "path": "16"
    },
    "9568": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9569": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8209,
        8231
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9570": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "o",
      "offset": [
        7946,
        8238
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9571": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6436,
        6764
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9572": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9574": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9581": {
      "op": "SHL"
    },
    "9582": {
      "op": "SUB"
    },
    "9583": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9586": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9587": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9588": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9589": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9590": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9591": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9592": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2593"
    },
    "9595": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9605": {
      "op": "SHL"
    },
    "9606": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9611": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "9614": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9615": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "9618": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9619": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9620": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 93,
      "value": "0xD"
    },
    "9622": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9623": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "9628": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9629": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "DIV",
      "path": "16"
    },
    "9630": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9632": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6512
      ],
      "op": "AND",
      "path": "16"
    },
    "9633": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6520
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9634": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6520
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9635": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6516,
        6520
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "9637": {
      "branch": 176,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6492,
        6520
      ],
      "op": "EQ",
      "path": "16"
    },
    "9638": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2617"
    },
    "9641": {
      "branch": 176,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9642": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9644": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9651": {
      "op": "SHL"
    },
    "9652": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9653": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9656": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9658": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9659": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "ADD",
      "path": "16"
    },
    "9660": {
      "op": "MSTORE"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9665": {
      "op": "DUP3"
    },
    "9666": {
      "op": "ADD"
    },
    "9667": {
      "op": "MSTORE"
    },
    "9668": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9703": {
      "op": "DUP3"
    },
    "9704": {
      "op": "ADD"
    },
    "9705": {
      "op": "MSTORE"
    },
    "9706": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9750": {
      "op": "JUMP"
    },
    "9751": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6484,
        6581
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9752": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6609
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 94,
      "value": "0x9"
    },
    "9754": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6609
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9755": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6610,
        6611
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9757": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6612
      ],
      "op": "BYTE",
      "path": "16"
    },
    "9758": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF8"
    },
    "9760": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6612
      ],
      "op": "SHL",
      "path": "16"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9767": {
      "op": "SHL"
    },
    "9768": {
      "op": "SUB"
    },
    "9769": {
      "op": "NOT"
    },
    "9770": {
      "branch": 177,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6599,
        6617
      ],
      "op": "AND",
      "path": "16"
    },
    "9771": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x269C"
    },
    "9774": {
      "branch": 177,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9775": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9777": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9784": {
      "op": "SHL"
    },
    "9785": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9786": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9789": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9791": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9792": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "ADD",
      "path": "16"
    },
    "9793": {
      "op": "MSTORE"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9798": {
      "op": "DUP3"
    },
    "9799": {
      "op": "ADD"
    },
    "9800": {
      "op": "MSTORE"
    },
    "9801": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9836": {
      "op": "DUP3"
    },
    "9837": {
      "op": "ADD"
    },
    "9838": {
      "op": "MSTORE"
    },
    "9839": {
      "op": "PUSH32",
      "value": "0x77686974656C697374206D696E74696E672063616E20626567696E0000000000"
    },
    "9872": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9874": {
      "op": "DUP3"
    },
    "9875": {
      "op": "ADD"
    },
    "9876": {
      "op": "MSTORE"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9879": {
      "op": "ADD"
    },
    "9880": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9883": {
      "op": "JUMP"
    },
    "9884": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6591,
        6681
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9885": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 95,
      "value": "0xD"
    },
    "9887": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9888": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6707,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9890": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9892": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9893": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9894": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6704
      ],
      "op": "AND",
      "path": "16"
    },
    "9895": {
      "branch": 178,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6699,
        6708
      ],
      "op": "LT",
      "path": "16"
    },
    "9896": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26F3"
    },
    "9899": {
      "branch": 178,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9900": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9902": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9909": {
      "op": "SHL"
    },
    "9910": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9911": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9914": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9916": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9917": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "ADD",
      "path": "16"
    },
    "9918": {
      "op": "MSTORE"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9923": {
      "op": "DUP3"
    },
    "9924": {
      "op": "ADD"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH32",
      "value": "0x4E6F20737461676573206166746572207075626C69632073616C650000000000"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9961": {
      "op": "DUP3"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "MSTORE"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9966": {
      "op": "ADD"
    },
    "9967": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC12"
    },
    "9970": {
      "op": "JUMP"
    },
    "9971": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6691,
        6740
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9972": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 96,
      "value": "0xD"
    },
    "9974": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9975": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9976": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9978": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "AND",
      "path": "16"
    },
    "9979": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9980": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9982": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22FC"
    },
    "9985": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9986": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6750,
        6757
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3932"
    },
    "9989": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6750,
        6757
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9991": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9993": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10000": {
      "op": "SHL"
    },
    "10001": {
      "op": "SUB"
    },
    "10002": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10005": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10006": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10007": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "10008": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "10009": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10010": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "10011": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2736"
    },
    "10014": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10015": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10017": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10024": {
      "op": "SHL"
    },
    "10025": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "10030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "10033": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10034": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3703"
    },
    "10037": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10038": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "op": "SUB"
    },
    "10047": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 97
    },
    "10048": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "10049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279B"
    },
    "10052": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10055": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10076": {
      "op": "DUP3"
    },
    "10077": {
      "op": "ADD"
    },
    "10078": {
      "op": "MSTORE"
    },
    "10079": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10114": {
      "op": "DUP3"
    },
    "10115": {
      "op": "ADD"
    },
    "10116": {
      "op": "MSTORE"
    },
    "10117": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10126": {
      "op": "SHL"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10129": {
      "op": "DUP3"
    },
    "10130": {
      "op": "ADD"
    },
    "10131": {
      "op": "MSTORE"
    },
    "10132": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10134": {
      "op": "ADD"
    },
    "10135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC12"
    },
    "10138": {
      "op": "JUMP"
    },
    "10139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 98,
      "value": "0x16BA"
    },
    "10143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7A"
    },
    "10147": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10148": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10149": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10150": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10151": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10153": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "10154": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10155": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "10156": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10157": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10158": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 99,
      "value": "0x0"
    },
    "10160": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10161": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10162": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10163": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10165": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10167": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10168": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10170": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10171": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10172": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10173": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10180": {
      "op": "SHL"
    },
    "10181": {
      "op": "SUB"
    },
    "10182": {
      "op": "NOT"
    },
    "10183": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10190": {
      "op": "SHL"
    },
    "10191": {
      "op": "SUB"
    },
    "10192": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10193": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "10194": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10195": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10196": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "3"
    },
    "10197": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10198": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10199": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10200": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10201": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10202": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 100,
      "value": "0x27E2"
    },
    "10205": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10206": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "10209": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10210": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10217": {
      "op": "SHL"
    },
    "10218": {
      "op": "SUB"
    },
    "10219": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "3"
    },
    "10220": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10253": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10255": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10256": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10258": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10259": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10260": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10261": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "3"
    },
    "10262": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10263": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "3"
    },
    "10264": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "10265": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "10266": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10268": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10270": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10275": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10277": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10278": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10280": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10281": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10282": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10289": {
      "op": "SHL"
    },
    "10290": {
      "op": "SUB"
    },
    "10291": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "10292": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 101,
      "value": "0x2894"
    },
    "10295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10298": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10305": {
      "op": "SHL"
    },
    "10306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10313": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "10314": {
      "op": "MSTORE"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10319": {
      "op": "DUP3"
    },
    "10320": {
      "op": "ADD"
    },
    "10321": {
      "op": "MSTORE"
    },
    "10322": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10357": {
      "op": "DUP3"
    },
    "10358": {
      "op": "ADD"
    },
    "10359": {
      "op": "MSTORE"
    },
    "10360": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10375": {
      "op": "SHL"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10378": {
      "op": "DUP3"
    },
    "10379": {
      "op": "ADD"
    },
    "10380": {
      "op": "MSTORE"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10383": {
      "op": "ADD"
    },
    "10384": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "10387": {
      "op": "JUMP"
    },
    "10388": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289F"
    },
    "10394": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10395": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "10398": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10399": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10400": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10401": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "3"
    },
    "10402": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 102
    },
    "10403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10409": {
      "op": "SHL"
    },
    "10410": {
      "op": "SUB"
    },
    "10411": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "10412": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10419": {
      "op": "SHL"
    },
    "10420": {
      "op": "SUB"
    },
    "10421": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "10422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "3"
    },
    "10423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10424": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28DA"
    },
    "10427": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10428": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "10429": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10436": {
      "op": "SHL"
    },
    "10437": {
      "op": "SUB"
    },
    "10438": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "10439": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28CF"
    },
    "10442": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10443": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9D"
    },
    "10446": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10447": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10454": {
      "op": "SHL"
    },
    "10455": {
      "op": "SUB"
    },
    "10456": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "10457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "3"
    },
    "10458": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x290A"
    },
    "10463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10464": {
      "op": "POP"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10471": {
      "op": "SHL"
    },
    "10472": {
      "op": "SUB"
    },
    "10473": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "10476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10478": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10479": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10486": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10490": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10494": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "10496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "10505": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "10506": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10507": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10508": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10509": {
      "op": "POP"
    },
    "10510": {
      "op": "POP"
    },
    "10511": {
      "op": "POP"
    },
    "10512": {
      "op": "POP"
    },
    "10513": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10514": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10515": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 103
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10522": {
      "op": "SHL"
    },
    "10523": {
      "op": "SUB"
    },
    "10524": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "10525": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2925"
    },
    "10528": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10529": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "10532": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10533": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10540": {
      "op": "SHL"
    },
    "10541": {
      "op": "SUB"
    },
    "10542": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "10543": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "3"
    },
    "10544": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x298D"
    },
    "10547": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10548": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10550": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10557": {
      "op": "SHL"
    },
    "10558": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10559": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10562": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10564": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10565": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "3"
    },
    "10566": {
      "op": "MSTORE"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10571": {
      "op": "DUP3"
    },
    "10572": {
      "op": "ADD"
    },
    "10573": {
      "op": "MSTORE"
    },
    "10574": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10609": {
      "op": "DUP3"
    },
    "10610": {
      "op": "ADD"
    },
    "10611": {
      "op": "MSTORE"
    },
    "10612": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10622": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10624": {
      "op": "SHL"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10627": {
      "op": "DUP3"
    },
    "10628": {
      "op": "ADD"
    },
    "10629": {
      "op": "MSTORE"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "10636": {
      "op": "JUMP"
    },
    "10637": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10644": {
      "op": "SHL"
    },
    "10645": {
      "op": "SUB"
    },
    "10646": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 104
    },
    "10647": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "3"
    },
    "10648": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29EF"
    },
    "10651": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10652": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10654": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10661": {
      "op": "SHL"
    },
    "10662": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10663": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10666": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10668": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10669": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "3"
    },
    "10670": {
      "op": "MSTORE"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10673": {
      "op": "DUP1"
    },
    "10674": {
      "op": "DUP3"
    },
    "10675": {
      "op": "ADD"
    },
    "10676": {
      "op": "MSTORE"
    },
    "10677": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10712": {
      "op": "DUP3"
    },
    "10713": {
      "op": "ADD"
    },
    "10714": {
      "op": "MSTORE"
    },
    "10715": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10722": {
      "op": "SHL"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10725": {
      "op": "DUP3"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "op": "MSTORE"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10730": {
      "op": "ADD"
    },
    "10731": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "10734": {
      "op": "JUMP"
    },
    "10735": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10736": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 105,
      "value": "0x29FA"
    },
    "10739": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10740": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10741": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10742": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302C"
    },
    "10745": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10746": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10747": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 106,
      "value": "0x2A05"
    },
    "10750": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10752": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10753": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27AD"
    },
    "10756": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10757": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10764": {
      "op": "SHL"
    },
    "10765": {
      "op": "SUB"
    },
    "10766": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 107
    },
    "10767": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "3"
    },
    "10768": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10770": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10771": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10772": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10773": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10775": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10777": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10778": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10780": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10781": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10782": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10783": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10784": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10786": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10787": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10788": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A2E"
    },
    "10791": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10792": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10793": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10794": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x374E"
    },
    "10797": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10798": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10799": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10800": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10801": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10802": {
      "op": "POP"
    },
    "10803": {
      "op": "POP"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10810": {
      "op": "SHL"
    },
    "10811": {
      "op": "SUB"
    },
    "10812": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 108
    },
    "10813": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "3"
    },
    "10814": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10816": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10817": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10818": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10819": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10821": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10823": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10824": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10826": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10827": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10828": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10829": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10830": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10832": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10833": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10834": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A5C"
    },
    "10837": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10838": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10839": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10840": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37FF"
    },
    "10843": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10844": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10845": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10846": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10847": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10848": {
      "op": "POP"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 109,
      "value": "0x0"
    },
    "10852": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10853": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10854": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10855": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10857": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10859": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10860": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10862": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10863": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10864": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10865": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10866": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10873": {
      "op": "SHL"
    },
    "10874": {
      "op": "SUB"
    },
    "10875": {
      "op": "NOT"
    },
    "10876": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "10877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10883": {
      "op": "SHL"
    },
    "10884": {
      "op": "SUB"
    },
    "10885": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10886": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10887": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "10888": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10889": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10890": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "3"
    },
    "10891": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10892": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10893": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10894": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 110
    },
    "10895": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10896": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10897": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10898": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10899": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10900": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "3"
    },
    "10901": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10902": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10935": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10936": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "3"
    },
    "10937": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10938": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10939": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10940": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10941": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10942": {
      "fn": "MerkleProof.verify",
      "offset": [
        968,
        972
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10944": {
      "fn": "MerkleProof.verify",
      "offset": [
        1020,
        1024
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 111
    },
    "10945": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ACA"
    },
    "10948": {
      "fn": "MerkleProof.verify",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10949": {
      "fn": "MerkleProof.verify",
      "offset": [
        1011,
        1015
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10950": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1003
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x304F"
    },
    "10953": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        991,
        1016
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10954": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10955": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "EQ",
      "path": "12"
    },
    "10956": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10957": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10958": {
      "op": "POP"
    },
    "10959": {
      "op": "POP"
    },
    "10960": {
      "op": "POP"
    },
    "10961": {
      "op": "POP"
    },
    "10962": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        847,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10963": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10970": {
      "op": "SHL"
    },
    "10971": {
      "op": "SUB"
    },
    "10972": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 112
    },
    "10973": {
      "branch": 188,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "3"
    },
    "10974": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B29"
    },
    "10977": {
      "branch": 188,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10978": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10980": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10987": {
      "op": "SHL"
    },
    "10988": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10989": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10992": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10994": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10995": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "3"
    },
    "10996": {
      "op": "DUP2"
    },
    "10997": {
      "op": "SWAP1"
    },
    "10998": {
      "op": "MSTORE"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11001": {
      "op": "DUP3"
    },
    "11002": {
      "op": "ADD"
    },
    "11003": {
      "op": "MSTORE"
    },
    "11004": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11039": {
      "op": "DUP3"
    },
    "11040": {
      "op": "ADD"
    },
    "11041": {
      "op": "MSTORE"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11044": {
      "op": "ADD"
    },
    "11045": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "11048": {
      "op": "JUMP"
    },
    "11049": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11050": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11052": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11053": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11054": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11055": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11057": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11059": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11060": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11062": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11063": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11064": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11071": {
      "op": "SHL"
    },
    "11072": {
      "op": "SUB"
    },
    "11073": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "11074": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11075": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 113,
      "value": "0x2B8E"
    },
    "11078": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11079": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11081": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11088": {
      "op": "SHL"
    },
    "11089": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11090": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11093": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11095": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11096": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "3"
    },
    "11097": {
      "op": "MSTORE"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11102": {
      "op": "DUP3"
    },
    "11103": {
      "op": "ADD"
    },
    "11104": {
      "op": "MSTORE"
    },
    "11105": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11140": {
      "op": "DUP3"
    },
    "11141": {
      "op": "ADD"
    },
    "11142": {
      "op": "MSTORE"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11145": {
      "op": "ADD"
    },
    "11146": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "11149": {
      "op": "JUMP"
    },
    "11150": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11151": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 114,
      "value": "0x2B9A"
    },
    "11154": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11156": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11157": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11158": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302C"
    },
    "11161": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11162": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11169": {
      "op": "SHL"
    },
    "11170": {
      "op": "SUB"
    },
    "11171": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 115
    },
    "11172": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "3"
    },
    "11173": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11175": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11176": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11177": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11178": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11180": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11182": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11183": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11185": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11186": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11187": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11188": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11189": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11191": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11192": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11193": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC3"
    },
    "11196": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11197": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11198": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11199": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37FF"
    },
    "11202": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11203": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11204": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11205": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11206": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "op": "POP"
    },
    "11209": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 116,
      "value": "0x0"
    },
    "11211": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11212": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11213": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11214": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11216": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11218": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11219": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11221": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11222": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11223": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11224": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11225": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11232": {
      "op": "SHL"
    },
    "11233": {
      "op": "SUB"
    },
    "11234": {
      "op": "NOT"
    },
    "11235": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11242": {
      "op": "SHL"
    },
    "11243": {
      "op": "SUB"
    },
    "11244": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11245": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11246": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11247": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11248": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "3"
    },
    "11249": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11250": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11251": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11252": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 117
    },
    "11253": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11254": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11255": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11256": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11257": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11290": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11291": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11292": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11293": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11294": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11295": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11296": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11297": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11298": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11300": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 118,
      "value": "0x2C2D"
    },
    "11303": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11304": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11305": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37B6"
    },
    "11308": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11309": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11310": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11311": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11312": {
      "op": "POP"
    },
    "11313": {
      "op": "POP"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11316": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11317": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11319": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 119,
      "value": "0x2C2D"
    },
    "11322": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11323": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11324": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3968"
    },
    "11327": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11328": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11329": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11331": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11332": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11334": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11335": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C89"
    },
    "11338": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11339": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11341": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11348": {
      "op": "SHL"
    },
    "11349": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11350": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11353": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11355": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11356": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "11357": {
      "op": "MSTORE"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11362": {
      "op": "DUP3"
    },
    "11363": {
      "op": "ADD"
    },
    "11364": {
      "op": "MSTORE"
    },
    "11365": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "11388": {
      "op": "SHL"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11391": {
      "op": "DUP3"
    },
    "11392": {
      "op": "ADD"
    },
    "11393": {
      "op": "MSTORE"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11396": {
      "op": "ADD"
    },
    "11397": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "11400": {
      "op": "JUMP"
    },
    "11401": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11402": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 120,
      "value": "0x6"
    },
    "11404": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11405": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11408": {
      "op": "NOT"
    },
    "11409": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "11410": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11411": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11412": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 121,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "11445": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "11446": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11447": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11449": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11456": {
      "op": "SHL"
    },
    "11457": {
      "op": "SUB"
    },
    "11458": {
      "op": "SWAP1"
    },
    "11459": {
      "op": "SWAP2"
    },
    "11460": {
      "op": "AND"
    },
    "11461": {
      "op": "DUP2"
    },
    "11462": {
      "op": "MSTORE"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11465": {
      "op": "ADD"
    },
    "11466": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11468": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11469": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11470": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11471": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "11472": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11473": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11474": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11475": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11476": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11478": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CDE"
    },
    "11481": {
      "fn": "ERC721._burn",
      "offset": [
        9742,
        9749
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11482": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9741
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x179A"
    },
    "11485": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11486": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11487": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11488": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "POP",
      "path": "3"
    },
    "11489": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 122,
      "value": "0x2CEC"
    },
    "11492": {
      "fn": "ERC721._burn",
      "offset": [
        9782,
        9787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11493": {
      "fn": "ERC721._burn",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11495": {
      "fn": "ERC721._burn",
      "offset": [
        9801,
        9808
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11496": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302C"
    },
    "11499": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11500": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11501": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 123,
      "value": "0x2CF7"
    },
    "11504": {
      "fn": "ERC721._burn",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11506": {
      "fn": "ERC721._burn",
      "offset": [
        9868,
        9875
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11507": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27AD"
    },
    "11510": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11511": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11518": {
      "op": "SHL"
    },
    "11519": {
      "op": "SUB"
    },
    "11520": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 124
    },
    "11521": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "AND",
      "path": "3"
    },
    "11522": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11524": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11525": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11526": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11527": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11529": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11531": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11532": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11534": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11535": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11536": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11537": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11538": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11540": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11541": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11542": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D20"
    },
    "11545": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11546": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11547": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11548": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x374E"
    },
    "11551": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11552": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11553": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11554": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11555": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11556": {
      "op": "POP"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 125,
      "value": "0x0"
    },
    "11560": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11561": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11562": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11563": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11565": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11567": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11568": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11570": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11571": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11572": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11573": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11574": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11581": {
      "op": "SHL"
    },
    "11582": {
      "op": "SUB"
    },
    "11583": {
      "op": "NOT"
    },
    "11584": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "3"
    },
    "11585": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11586": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11587": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 126
    },
    "11588": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11589": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11590": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11597": {
      "op": "SHL"
    },
    "11598": {
      "op": "SUB"
    },
    "11599": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11600": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "AND",
      "path": "3"
    },
    "11601": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11602": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11635": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11636": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11637": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11638": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11639": {
      "fn": "ERC721._burn",
      "offset": [
        9701,
        10000
      ],
      "op": "POP",
      "path": "3"
    },
    "11640": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "POP",
      "path": "3"
    },
    "11641": {
      "fn": "ERC721._burn",
      "jump": "o",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11643": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "11645": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11646": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11653": {
      "op": "SHL"
    },
    "11654": {
      "op": "SUB"
    },
    "11655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 127
    },
    "11656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "11664": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11669": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11671": {
      "op": "SHL"
    },
    "11672": {
      "op": "SUB"
    },
    "11673": {
      "op": "NOT"
    },
    "11674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11677": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "11679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0x40"
    },
    "11682": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11683": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11685": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11686": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "11687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11689": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11724": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11725": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11731": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11732": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11733": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11735": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11736": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11738": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11739": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11740": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF7"
    },
    "11743": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11744": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11746": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11753": {
      "op": "SHL"
    },
    "11754": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11755": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11756": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11758": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11759": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "11762": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11763": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37D5"
    },
    "11766": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11767": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11768": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 129,
      "value": "0x6"
    },
    "11770": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11771": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11772": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11774": {
      "op": "NOT"
    },
    "11775": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "11776": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11778": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "11779": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11780": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11781": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 130,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "11814": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CB6"
    },
    "11817": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "11818": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11819": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "9"
    },
    "11820": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11821": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 131
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11828": {
      "op": "SHL"
    },
    "11829": {
      "op": "SUB"
    },
    "11830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "11831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11838": {
      "op": "SHL"
    },
    "11839": {
      "op": "SUB"
    },
    "11840": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "11841": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "3"
    },
    "11842": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11843": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E8E"
    },
    "11846": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11847": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11849": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11856": {
      "op": "SHL"
    },
    "11857": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11858": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11861": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11863": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11864": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "3"
    },
    "11865": {
      "op": "MSTORE"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11870": {
      "op": "DUP3"
    },
    "11871": {
      "op": "ADD"
    },
    "11872": {
      "op": "MSTORE"
    },
    "11873": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11908": {
      "op": "DUP3"
    },
    "11909": {
      "op": "ADD"
    },
    "11910": {
      "op": "MSTORE"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11913": {
      "op": "ADD"
    },
    "11914": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "11917": {
      "op": "JUMP"
    },
    "11918": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11925": {
      "op": "SHL"
    },
    "11926": {
      "op": "SUB"
    },
    "11927": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 132
    },
    "11928": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11929": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "3"
    },
    "11930": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11932": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11933": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11934": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11935": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11937": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11939": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11940": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11941": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11942": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11944": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11945": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11946": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11947": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11948": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "3"
    },
    "11949": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "3"
    },
    "11950": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11951": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11952": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11953": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11954": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11955": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11956": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11957": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11958": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11959": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11960": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11961": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11964": {
      "op": "NOT"
    },
    "11965": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "3"
    },
    "11966": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11967": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11968": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11969": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11970": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11971": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "3"
    },
    "11972": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11973": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11974": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11975": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 133
    },
    "11976": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11977": {
      "op": "SWAP2"
    },
    "11978": {
      "op": "DUP3"
    },
    "11979": {
      "op": "MSTORE"
    },
    "11980": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "12013": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12014": {
      "op": "ADD"
    },
    "12015": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12017": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12018": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12019": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12020": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "3"
    },
    "12021": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12022": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "3"
    },
    "12023": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "12024": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "12025": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "12026": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12027": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12028": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 134,
      "value": "0x2F06"
    },
    "12031": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12032": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12033": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12034": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2912"
    },
    "12037": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12038": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12039": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 135,
      "value": "0x2F12"
    },
    "12042": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12043": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12044": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12045": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12046": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30FB"
    },
    "12049": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12050": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12051": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2149"
    },
    "12054": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12055": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12057": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12064": {
      "op": "SHL"
    },
    "12065": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12066": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12067": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12069": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "3"
    },
    "12070": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "12073": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12074": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x397C"
    },
    "12077": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12078": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12079": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "12081": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12082": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F52"
    },
    "12085": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12086": {
      "op": "POP"
    },
    "12087": {
      "op": "POP"
    },
    "12088": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 136,
      "value": "0x40"
    },
    "12090": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12091": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "12092": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12093": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "11"
    },
    "12094": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "11"
    },
    "12095": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12096": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "12097": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "12098": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "12100": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12101": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12104": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "12106": {
      "op": "SHL"
    },
    "12107": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "12109": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "11"
    },
    "12110": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "11"
    },
    "12111": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "12112": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12113": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12114": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12115": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12116": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "12118": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12119": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12120": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "12121": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F7C"
    },
    "12124": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12125": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 137
    },
    "12126": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F66"
    },
    "12129": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12130": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3817"
    },
    "12133": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12134": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12135": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "12136": {
      "op": "POP"
    },
    "12137": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 138,
      "value": "0x2F75"
    },
    "12140": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12141": {
      "op": "POP"
    },
    "12142": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "12144": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12145": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3968"
    },
    "12148": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12149": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12150": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "12151": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "11"
    },
    "12152": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F56"
    },
    "12155": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12156": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12157": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "12159": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12160": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12169": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12170": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "11"
    },
    "12171": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "12172": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F97"
    },
    "12175": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12176": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F97"
    },
    "12179": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x338F"
    },
    "12182": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12183": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12184": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "12186": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "12187": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12188": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12189": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "12190": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "12191": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12192": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "12194": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "12195": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "12197": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "11"
    },
    "12198": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "11"
    },
    "12199": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "12201": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "12202": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "12203": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "12204": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "12206": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "12207": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12208": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "12209": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FC1"
    },
    "12212": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12213": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "12215": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "12216": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "12217": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12218": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "12219": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "12220": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12221": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "12222": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "12223": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12224": {
      "op": "POP"
    },
    "12225": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12226": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "11"
    },
    "12227": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12228": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "11"
    },
    "12229": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12230": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "11"
    },
    "12231": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "12232": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x290A"
    },
    "12235": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12236": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 139,
      "value": "0x2FD6"
    },
    "12239": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "12241": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12242": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x374E"
    },
    "12245": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12246": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12247": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "12248": {
      "op": "POP"
    },
    "12249": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 140,
      "value": "0x2FE3"
    },
    "12252": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "12254": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "11"
    },
    "12255": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x39CE"
    },
    "12258": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12259": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12260": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FEE"
    },
    "12263": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12264": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x30"
    },
    "12266": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37FF"
    },
    "12269": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12270": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12271": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF8"
    },
    "12273": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "11"
    },
    "12274": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12275": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12276": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12277": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "12278": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12279": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "11"
    },
    "12280": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3003"
    },
    "12283": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12284": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3003"
    },
    "12287": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x391C"
    },
    "12290": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12291": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12292": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "12294": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "11"
    },
    "12295": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "11"
    },
    "12296": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12303": {
      "op": "SHL"
    },
    "12304": {
      "op": "SUB"
    },
    "12305": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "11"
    },
    "12306": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "11"
    },
    "12307": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12308": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12309": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "12311": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "11"
    },
    "12312": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12313": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "12314": {
      "op": "POP"
    },
    "12315": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 141,
      "value": "0x3025"
    },
    "12318": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "12320": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "11"
    },
    "12321": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3968"
    },
    "12324": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12325": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12326": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "12327": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "11"
    },
    "12328": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FC5"
    },
    "12331": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12332": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        10032,
        10207
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "12333": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "12335": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12336": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12338": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "12339": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12340": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD48"
    },
    "12343": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12344": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12346": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12353": {
      "op": "SHL"
    },
    "12354": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12355": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12356": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12358": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "12359": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC12"
    },
    "12362": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12363": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37D5"
    },
    "12366": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12367": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12368": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12370": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1508,
        1512
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12371": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12372": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12373": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1551
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12374": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1558
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12375": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12376": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1558
      ],
      "op": "LT",
      "path": "12"
    },
    "12377": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12378": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30F3"
    },
    "12381": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12382": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1599
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12384": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1607
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12385": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1608,
        1609
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12386": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12387": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12388": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12389": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "LT",
      "path": "12"
    },
    "12390": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3071"
    },
    "12393": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12394": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3071"
    },
    "12397": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x391C"
    },
    "12400": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12401": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12402": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12404": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MUL",
      "path": "12"
    },
    "12405": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12407": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "12"
    },
    "12408": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "12"
    },
    "12409": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12410": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12411": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "POP",
      "path": "12"
    },
    "12412": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1644,
        1656
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12413": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1640
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12414": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1656
      ],
      "op": "GT",
      "path": "12"
    },
    "12415": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30B3"
    },
    "12418": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12419": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 142,
      "value": "0x40"
    },
    "12421": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12422": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12423": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12425": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12426": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "ADD",
      "path": "12"
    },
    "12427": {
      "op": "DUP6"
    },
    "12428": {
      "op": "SWAP1"
    },
    "12429": {
      "op": "MSTORE"
    },
    "12430": {
      "op": "SWAP1"
    },
    "12431": {
      "op": "DUP2"
    },
    "12432": {
      "op": "ADD"
    },
    "12433": {
      "op": "DUP3"
    },
    "12434": {
      "op": "SWAP1"
    },
    "12435": {
      "op": "MSTORE"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12438": {
      "op": "ADD"
    },
    "12439": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12441": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12442": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12444": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12445": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12446": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "12"
    },
    "12447": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "12"
    },
    "12448": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12449": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12450": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12451": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12453": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12454": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12455": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12456": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12457": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12459": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "ADD",
      "path": "12"
    },
    "12460": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12461": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12462": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "POP",
      "path": "12"
    },
    "12463": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30E0"
    },
    "12466": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12467": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12468": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 143,
      "value": "0x40"
    },
    "12470": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12471": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12472": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12474": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12475": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "ADD",
      "path": "12"
    },
    "12476": {
      "op": "DUP4"
    },
    "12477": {
      "op": "SWAP1"
    },
    "12478": {
      "op": "MSTORE"
    },
    "12479": {
      "op": "SWAP1"
    },
    "12480": {
      "op": "DUP2"
    },
    "12481": {
      "op": "ADD"
    },
    "12482": {
      "op": "DUP5"
    },
    "12483": {
      "op": "SWAP1"
    },
    "12484": {
      "op": "MSTORE"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12487": {
      "op": "ADD"
    },
    "12488": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12490": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12491": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12493": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12494": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12495": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "12"
    },
    "12496": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "12"
    },
    "12497": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12498": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12499": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12500": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12502": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12503": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12504": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12505": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12506": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12508": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "ADD",
      "path": "12"
    },
    "12509": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12510": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12511": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "POP",
      "path": "12"
    },
    "12512": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12513": {
      "op": "POP"
    },
    "12514": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 144
    },
    "12515": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30EB"
    },
    "12518": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12519": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3817"
    },
    "12522": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12523": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12524": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12525": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "12"
    },
    "12526": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "12"
    },
    "12527": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3054"
    },
    "12530": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12531": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12532": {
      "op": "POP"
    },
    "12533": {
      "fn": "MerkleProof.processProof",
      "offset": [
        2052,
        2064
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 145
    },
    "12534": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12535": {
      "op": "POP"
    },
    "12536": {
      "op": "POP"
    },
    "12537": {
      "op": "POP"
    },
    "12538": {
      "fn": "MerkleProof.processProof",
      "jump": "o",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12548": {
      "op": "SHL"
    },
    "12549": {
      "op": "SUB"
    },
    "12550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "3"
    },
    "12552": {
      "op": "EXTCODESIZE"
    },
    "12553": {
      "op": "ISZERO"
    },
    "12554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31EE"
    },
    "12557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12561": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12568": {
      "op": "SHL"
    },
    "12569": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12577": {
      "op": "SHL"
    },
    "12578": {
      "op": "SUB"
    },
    "12579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "3"
    },
    "12580": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "3"
    },
    "12581": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12582": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "12587": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x313F"
    },
    "12591": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12592": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "12593": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "3"
    },
    "12595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12596": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "3"
    },
    "12597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "3"
    },
    "12599": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12600": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39E2"
    },
    "12606": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12607": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12612": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "12615": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "3"
    },
    "12616": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12619": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "3"
    },
    "12620": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "3"
    },
    "12621": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "3"
    },
    "12622": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "12623": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12624": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12625": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12628": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x317A"
    },
    "12631": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12632": {
      "op": "POP"
    },
    "12633": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12636": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "12639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12640": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12642": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12645": {
      "op": "NOT"
    },
    "12646": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "3"
    },
    "12647": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12648": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12649": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12650": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "12651": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12652": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3177"
    },
    "12655": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12656": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12657": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12658": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12659": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A1F"
    },
    "12662": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12663": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12664": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "12666": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12667": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31D4"
    },
    "12670": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12671": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12672": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12673": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12675": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A8"
    },
    "12678": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12679": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12683": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "12684": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "12686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "3"
    },
    "12687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "12689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12691": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "3"
    },
    "12692": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12693": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12694": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12696": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12698": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12699": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12700": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12703": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12705": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12706": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "12708": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31AD"
    },
    "12711": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12712": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12713": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "12715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "12717": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12718": {
      "op": "POP"
    },
    "12719": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12720": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12721": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31CC"
    },
    "12724": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12725": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 146,
      "value": "0x40"
    },
    "12727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12734": {
      "op": "SHL"
    },
    "12735": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12736": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12739": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "3"
    },
    "12740": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC12"
    },
    "12743": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x397C"
    },
    "12747": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12748": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12750": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12751": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12752": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "3"
    },
    "12755": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "3"
    },
    "12756": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12763": {
      "op": "SHL"
    },
    "12764": {
      "op": "SUB"
    },
    "12765": {
      "op": "NOT"
    },
    "12766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "3",
      "statement": 147
    },
    "12767": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12772": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12774": {
      "op": "SHL"
    },
    "12775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "3"
    },
    "12776": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12777": {
      "op": "POP"
    },
    "12778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x290A"
    },
    "12781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 148,
      "value": "0x1"
    },
    "12786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "12787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "12788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12791": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12792": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12793": {
      "op": "JUMPDEST"
    },
    "12794": {
      "op": "DUP3"
    },
    "12795": {
      "op": "DUP1"
    },
    "12796": {
      "op": "SLOAD"
    },
    "12797": {
      "op": "PUSH2",
      "value": "0x3205"
    },
    "12800": {
      "op": "SWAP1"
    },
    "12801": {
      "op": "PUSH2",
      "value": "0x36C8"
    },
    "12804": {
      "jump": "i",
      "op": "JUMP"
    },
    "12805": {
      "op": "JUMPDEST"
    },
    "12806": {
      "op": "SWAP1"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12809": {
      "op": "MSTORE"
    },
    "12810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12814": {
      "op": "KECCAK256"
    },
    "12815": {
      "op": "SWAP1"
    },
    "12816": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12818": {
      "op": "ADD"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12821": {
      "op": "SWAP1"
    },
    "12822": {
      "op": "DIV"
    },
    "12823": {
      "op": "DUP2"
    },
    "12824": {
      "op": "ADD"
    },
    "12825": {
      "op": "SWAP3"
    },
    "12826": {
      "op": "DUP3"
    },
    "12827": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "12830": {
      "op": "JUMPI"
    },
    "12831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12833": {
      "op": "DUP6"
    },
    "12834": {
      "op": "SSTORE"
    },
    "12835": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12838": {
      "op": "JUMP"
    },
    "12839": {
      "op": "JUMPDEST"
    },
    "12840": {
      "op": "DUP3"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12843": {
      "op": "LT"
    },
    "12844": {
      "op": "PUSH2",
      "value": "0x3240"
    },
    "12847": {
      "op": "JUMPI"
    },
    "12848": {
      "op": "DUP1"
    },
    "12849": {
      "op": "MLOAD"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12852": {
      "op": "NOT"
    },
    "12853": {
      "op": "AND"
    },
    "12854": {
      "op": "DUP4"
    },
    "12855": {
      "op": "DUP1"
    },
    "12856": {
      "op": "ADD"
    },
    "12857": {
      "op": "OR"
    },
    "12858": {
      "op": "DUP6"
    },
    "12859": {
      "op": "SSTORE"
    },
    "12860": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12863": {
      "op": "JUMP"
    },
    "12864": {
      "op": "JUMPDEST"
    },
    "12865": {
      "op": "DUP3"
    },
    "12866": {
      "op": "DUP1"
    },
    "12867": {
      "op": "ADD"
    },
    "12868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12870": {
      "op": "ADD"
    },
    "12871": {
      "op": "DUP6"
    },
    "12872": {
      "op": "SSTORE"
    },
    "12873": {
      "op": "DUP3"
    },
    "12874": {
      "op": "ISZERO"
    },
    "12875": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12878": {
      "op": "JUMPI"
    },
    "12879": {
      "op": "SWAP2"
    },
    "12880": {
      "op": "DUP3"
    },
    "12881": {
      "op": "ADD"
    },
    "12882": {
      "op": "JUMPDEST"
    },
    "12883": {
      "op": "DUP3"
    },
    "12884": {
      "op": "DUP2"
    },
    "12885": {
      "op": "GT"
    },
    "12886": {
      "op": "ISZERO"
    },
    "12887": {
      "op": "PUSH2",
      "value": "0x326D"
    },
    "12890": {
      "op": "JUMPI"
    },
    "12891": {
      "op": "DUP3"
    },
    "12892": {
      "op": "MLOAD"
    },
    "12893": {
      "op": "DUP3"
    },
    "12894": {
      "op": "SSTORE"
    },
    "12895": {
      "op": "SWAP2"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12898": {
      "op": "ADD"
    },
    "12899": {
      "op": "SWAP2"
    },
    "12900": {
      "op": "SWAP1"
    },
    "12901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12903": {
      "op": "ADD"
    },
    "12904": {
      "op": "SWAP1"
    },
    "12905": {
      "op": "PUSH2",
      "value": "0x3252"
    },
    "12908": {
      "op": "JUMP"
    },
    "12909": {
      "op": "JUMPDEST"
    },
    "12910": {
      "op": "POP"
    },
    "12911": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "12914": {
      "op": "SWAP3"
    },
    "12915": {
      "op": "SWAP2"
    },
    "12916": {
      "op": "POP"
    },
    "12917": {
      "op": "PUSH2",
      "value": "0x327D"
    },
    "12920": {
      "jump": "i",
      "op": "JUMP"
    },
    "12921": {
      "op": "JUMPDEST"
    },
    "12922": {
      "op": "POP"
    },
    "12923": {
      "op": "SWAP1"
    },
    "12924": {
      "jump": "o",
      "op": "JUMP"
    },
    "12925": {
      "op": "JUMPDEST"
    },
    "12926": {
      "op": "JUMPDEST"
    },
    "12927": {
      "op": "DUP1"
    },
    "12928": {
      "op": "DUP3"
    },
    "12929": {
      "op": "GT"
    },
    "12930": {
      "op": "ISZERO"
    },
    "12931": {
      "op": "PUSH2",
      "value": "0x3279"
    },
    "12934": {
      "op": "JUMPI"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12937": {
      "op": "DUP2"
    },
    "12938": {
      "op": "SSTORE"
    },
    "12939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12941": {
      "op": "ADD"
    },
    "12942": {
      "op": "PUSH2",
      "value": "0x327E"
    },
    "12945": {
      "op": "JUMP"
    },
    "12946": {
      "op": "JUMPDEST"
    },
    "12947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12953": {
      "op": "SHL"
    },
    "12954": {
      "op": "SUB"
    },
    "12955": {
      "op": "NOT"
    },
    "12956": {
      "op": "DUP2"
    },
    "12957": {
      "op": "AND"
    },
    "12958": {
      "op": "DUP2"
    },
    "12959": {
      "op": "EQ"
    },
    "12960": {
      "op": "PUSH2",
      "value": "0x16BA"
    },
    "12963": {
      "op": "JUMPI"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12966": {
      "op": "DUP1"
    },
    "12967": {
      "op": "REVERT"
    },
    "12968": {
      "op": "JUMPDEST"
    },
    "12969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12973": {
      "op": "DUP3"
    },
    "12974": {
      "op": "DUP5"
    },
    "12975": {
      "op": "SUB"
    },
    "12976": {
      "op": "SLT"
    },
    "12977": {
      "op": "ISZERO"
    },
    "12978": {
      "op": "PUSH2",
      "value": "0x32BA"
    },
    "12981": {
      "op": "JUMPI"
    },
    "12982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12984": {
      "op": "DUP1"
    },
    "12985": {
      "op": "REVERT"
    },
    "12986": {
      "op": "JUMPDEST"
    },
    "12987": {
      "op": "DUP2"
    },
    "12988": {
      "op": "CALLDATALOAD"
    },
    "12989": {
      "op": "PUSH2",
      "value": "0x2C2D"
    },
    "12992": {
      "op": "DUP2"
    },
    "12993": {
      "op": "PUSH2",
      "value": "0x3292"
    },
    "12996": {
      "jump": "i",
      "op": "JUMP"
    },
    "12997": {
      "op": "JUMPDEST"
    },
    "12998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13000": {
      "op": "JUMPDEST"
    },
    "13001": {
      "op": "DUP4"
    },
    "13002": {
      "op": "DUP2"
    },
    "13003": {
      "op": "LT"
    },
    "13004": {
      "op": "ISZERO"
    },
    "13005": {
      "op": "PUSH2",
      "value": "0x32E0"
    },
    "13008": {
      "op": "JUMPI"
    },
    "13009": {
      "op": "DUP2"
    },
    "13010": {
      "op": "DUP2"
    },
    "13011": {
      "op": "ADD"
    },
    "13012": {
      "op": "MLOAD"
    },
    "13013": {
      "op": "DUP4"
    },
    "13014": {
      "op": "DUP3"
    },
    "13015": {
      "op": "ADD"
    },
    "13016": {
      "op": "MSTORE"
    },
    "13017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13019": {
      "op": "ADD"
    },
    "13020": {
      "op": "PUSH2",
      "value": "0x32C8"
    },
    "13023": {
      "op": "JUMP"
    },
    "13024": {
      "op": "JUMPDEST"
    },
    "13025": {
      "op": "DUP4"
    },
    "13026": {
      "op": "DUP2"
    },
    "13027": {
      "op": "GT"
    },
    "13028": {
      "op": "ISZERO"
    },
    "13029": {
      "op": "PUSH2",
      "value": "0x2149"
    },
    "13032": {
      "op": "JUMPI"
    },
    "13033": {
      "op": "POP"
    },
    "13034": {
      "op": "POP"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13037": {
      "op": "SWAP2"
    },
    "13038": {
      "op": "ADD"
    },
    "13039": {
      "op": "MSTORE"
    },
    "13040": {
      "jump": "o",
      "op": "JUMP"
    },
    "13041": {
      "op": "JUMPDEST"
    },
    "13042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13044": {
      "op": "DUP2"
    },
    "13045": {
      "op": "MLOAD"
    },
    "13046": {
      "op": "DUP1"
    },
    "13047": {
      "op": "DUP5"
    },
    "13048": {
      "op": "MSTORE"
    },
    "13049": {
      "op": "PUSH2",
      "value": "0x3309"
    },
    "13052": {
      "op": "DUP2"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13055": {
      "op": "DUP7"
    },
    "13056": {
      "op": "ADD"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13059": {
      "op": "DUP7"
    },
    "13060": {
      "op": "ADD"
    },
    "13061": {
      "op": "PUSH2",
      "value": "0x32C5"
    },
    "13064": {
      "jump": "i",
      "op": "JUMP"
    },
    "13065": {
      "op": "JUMPDEST"
    },
    "13066": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13068": {
      "op": "ADD"
    },
    "13069": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13071": {
      "op": "NOT"
    },
    "13072": {
      "op": "AND"
    },
    "13073": {
      "op": "SWAP3"
    },
    "13074": {
      "op": "SWAP1"
    },
    "13075": {
      "op": "SWAP3"
    },
    "13076": {
      "op": "ADD"
    },
    "13077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13079": {
      "op": "ADD"
    },
    "13080": {
      "op": "SWAP3"
    },
    "13081": {
      "op": "SWAP2"
    },
    "13082": {
      "op": "POP"
    },
    "13083": {
      "op": "POP"
    },
    "13084": {
      "jump": "o",
      "op": "JUMP"
    },
    "13085": {
      "op": "JUMPDEST"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13088": {
      "op": "DUP2"
    },
    "13089": {
      "op": "MSTORE"
    },
    "13090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13092": {
      "op": "PUSH2",
      "value": "0x2C2D"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13097": {
      "op": "DUP4"
    },
    "13098": {
      "op": "ADD"
    },
    "13099": {
      "op": "DUP5"
    },
    "13100": {
      "op": "PUSH2",
      "value": "0x32F1"
    },
    "13103": {
      "jump": "i",
      "op": "JUMP"
    },
    "13104": {
      "op": "JUMPDEST"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13109": {
      "op": "DUP3"
    },
    "13110": {
      "op": "DUP5"
    },
    "13111": {
      "op": "SUB"
    },
    "13112": {
      "op": "SLT"
    },
    "13113": {
      "op": "ISZERO"
    },
    "13114": {
      "op": "PUSH2",
      "value": "0x3342"
    },
    "13117": {
      "op": "JUMPI"
    },
    "13118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13120": {
      "op": "DUP1"
    },
    "13121": {
      "op": "REVERT"
    },
    "13122": {
      "op": "JUMPDEST"
    },
    "13123": {
      "op": "POP"
    },
    "13124": {
      "op": "CALLDATALOAD"
    },
    "13125": {
      "op": "SWAP2"
    },
    "13126": {
      "op": "SWAP1"
    },
    "13127": {
      "op": "POP"
    },
    "13128": {
      "jump": "o",
      "op": "JUMP"
    },
    "13129": {
      "op": "JUMPDEST"
    },
    "13130": {
      "op": "DUP1"
    },
    "13131": {
      "op": "CALLDATALOAD"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13138": {
      "op": "SHL"
    },
    "13139": {
      "op": "SUB"
    },
    "13140": {
      "op": "DUP2"
    },
    "13141": {
      "op": "AND"
    },
    "13142": {
      "op": "DUP2"
    },
    "13143": {
      "op": "EQ"
    },
    "13144": {
      "op": "PUSH2",
      "value": "0x3360"
    },
    "13147": {
      "op": "JUMPI"
    },
    "13148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13150": {
      "op": "DUP1"
    },
    "13151": {
      "op": "REVERT"
    },
    "13152": {
      "op": "JUMPDEST"
    },
    "13153": {
      "op": "SWAP2"
    },
    "13154": {
      "op": "SWAP1"
    },
    "13155": {
      "op": "POP"
    },
    "13156": {
      "jump": "o",
      "op": "JUMP"
    },
    "13157": {
      "op": "JUMPDEST"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13160": {
      "op": "DUP1"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13163": {
      "op": "DUP4"
    },
    "13164": {
      "op": "DUP6"
    },
    "13165": {
      "op": "SUB"
    },
    "13166": {
      "op": "SLT"
    },
    "13167": {
      "op": "ISZERO"
    },
    "13168": {
      "op": "PUSH2",
      "value": "0x3378"
    },
    "13171": {
      "op": "JUMPI"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13174": {
      "op": "DUP1"
    },
    "13175": {
      "op": "REVERT"
    },
    "13176": {
      "op": "JUMPDEST"
    },
    "13177": {
      "op": "PUSH2",
      "value": "0x3381"
    },
    "13180": {
      "op": "DUP4"
    },
    "13181": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13184": {
      "jump": "i",
      "op": "JUMP"
    },
    "13185": {
      "op": "JUMPDEST"
    },
    "13186": {
      "op": "SWAP5"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13189": {
      "op": "SWAP4"
    },
    "13190": {
      "op": "SWAP1"
    },
    "13191": {
      "op": "SWAP4"
    },
    "13192": {
      "op": "ADD"
    },
    "13193": {
      "op": "CALLDATALOAD"
    },
    "13194": {
      "op": "SWAP4"
    },
    "13195": {
      "op": "POP"
    },
    "13196": {
      "op": "POP"
    },
    "13197": {
      "op": "POP"
    },
    "13198": {
      "jump": "o",
      "op": "JUMP"
    },
    "13199": {
      "op": "JUMPDEST"
    },
    "13200": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13207": {
      "op": "SHL"
    },
    "13208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13210": {
      "op": "MSTORE"
    },
    "13211": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13213": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13215": {
      "op": "MSTORE"
    },
    "13216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13220": {
      "op": "REVERT"
    },
    "13221": {
      "op": "JUMPDEST"
    },
    "13222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13224": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13233": {
      "op": "DUP1"
    },
    "13234": {
      "op": "DUP5"
    },
    "13235": {
      "op": "GT"
    },
    "13236": {
      "op": "ISZERO"
    },
    "13237": {
      "op": "PUSH2",
      "value": "0x33C0"
    },
    "13240": {
      "op": "JUMPI"
    },
    "13241": {
      "op": "PUSH2",
      "value": "0x33C0"
    },
    "13244": {
      "op": "PUSH2",
      "value": "0x338F"
    },
    "13247": {
      "jump": "i",
      "op": "JUMP"
    },
    "13248": {
      "op": "JUMPDEST"
    },
    "13249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13251": {
      "op": "MLOAD"
    },
    "13252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13254": {
      "op": "DUP6"
    },
    "13255": {
      "op": "ADD"
    },
    "13256": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13258": {
      "op": "NOT"
    },
    "13259": {
      "op": "SWAP1"
    },
    "13260": {
      "op": "DUP2"
    },
    "13261": {
      "op": "AND"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13264": {
      "op": "ADD"
    },
    "13265": {
      "op": "AND"
    },
    "13266": {
      "op": "DUP2"
    },
    "13267": {
      "op": "ADD"
    },
    "13268": {
      "op": "SWAP1"
    },
    "13269": {
      "op": "DUP3"
    },
    "13270": {
      "op": "DUP3"
    },
    "13271": {
      "op": "GT"
    },
    "13272": {
      "op": "DUP2"
    },
    "13273": {
      "op": "DUP4"
    },
    "13274": {
      "op": "LT"
    },
    "13275": {
      "op": "OR"
    },
    "13276": {
      "op": "ISZERO"
    },
    "13277": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13280": {
      "op": "JUMPI"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13284": {
      "op": "PUSH2",
      "value": "0x338F"
    },
    "13287": {
      "jump": "i",
      "op": "JUMP"
    },
    "13288": {
      "op": "JUMPDEST"
    },
    "13289": {
      "op": "DUP2"
    },
    "13290": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13292": {
      "op": "MSTORE"
    },
    "13293": {
      "op": "DUP1"
    },
    "13294": {
      "op": "SWAP4"
    },
    "13295": {
      "op": "POP"
    },
    "13296": {
      "op": "DUP6"
    },
    "13297": {
      "op": "DUP2"
    },
    "13298": {
      "op": "MSTORE"
    },
    "13299": {
      "op": "DUP7"
    },
    "13300": {
      "op": "DUP7"
    },
    "13301": {
      "op": "DUP7"
    },
    "13302": {
      "op": "ADD"
    },
    "13303": {
      "op": "GT"
    },
    "13304": {
      "op": "ISZERO"
    },
    "13305": {
      "op": "PUSH2",
      "value": "0x3401"
    },
    "13308": {
      "op": "JUMPI"
    },
    "13309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13311": {
      "op": "DUP1"
    },
    "13312": {
      "op": "REVERT"
    },
    "13313": {
      "op": "JUMPDEST"
    },
    "13314": {
      "op": "DUP6"
    },
    "13315": {
      "op": "DUP6"
    },
    "13316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13318": {
      "op": "DUP4"
    },
    "13319": {
      "op": "ADD"
    },
    "13320": {
      "op": "CALLDATACOPY"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13325": {
      "op": "DUP8"
    },
    "13326": {
      "op": "DUP4"
    },
    "13327": {
      "op": "ADD"
    },
    "13328": {
      "op": "ADD"
    },
    "13329": {
      "op": "MSTORE"
    },
    "13330": {
      "op": "POP"
    },
    "13331": {
      "op": "POP"
    },
    "13332": {
      "op": "POP"
    },
    "13333": {
      "op": "SWAP4"
    },
    "13334": {
      "op": "SWAP3"
    },
    "13335": {
      "op": "POP"
    },
    "13336": {
      "op": "POP"
    },
    "13337": {
      "op": "POP"
    },
    "13338": {
      "jump": "o",
      "op": "JUMP"
    },
    "13339": {
      "op": "JUMPDEST"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13344": {
      "op": "DUP3"
    },
    "13345": {
      "op": "DUP5"
    },
    "13346": {
      "op": "SUB"
    },
    "13347": {
      "op": "SLT"
    },
    "13348": {
      "op": "ISZERO"
    },
    "13349": {
      "op": "PUSH2",
      "value": "0x342D"
    },
    "13352": {
      "op": "JUMPI"
    },
    "13353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13355": {
      "op": "DUP1"
    },
    "13356": {
      "op": "REVERT"
    },
    "13357": {
      "op": "JUMPDEST"
    },
    "13358": {
      "op": "DUP2"
    },
    "13359": {
      "op": "CALLDATALOAD"
    },
    "13360": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13369": {
      "op": "DUP2"
    },
    "13370": {
      "op": "GT"
    },
    "13371": {
      "op": "ISZERO"
    },
    "13372": {
      "op": "PUSH2",
      "value": "0x3444"
    },
    "13375": {
      "op": "JUMPI"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13378": {
      "op": "DUP1"
    },
    "13379": {
      "op": "REVERT"
    },
    "13380": {
      "op": "JUMPDEST"
    },
    "13381": {
      "op": "DUP3"
    },
    "13382": {
      "op": "ADD"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13385": {
      "op": "DUP2"
    },
    "13386": {
      "op": "ADD"
    },
    "13387": {
      "op": "DUP5"
    },
    "13388": {
      "op": "SGT"
    },
    "13389": {
      "op": "PUSH2",
      "value": "0x3455"
    },
    "13392": {
      "op": "JUMPI"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13395": {
      "op": "DUP1"
    },
    "13396": {
      "op": "REVERT"
    },
    "13397": {
      "op": "JUMPDEST"
    },
    "13398": {
      "op": "PUSH2",
      "value": "0x290A"
    },
    "13401": {
      "op": "DUP5"
    },
    "13402": {
      "op": "DUP3"
    },
    "13403": {
      "op": "CALLDATALOAD"
    },
    "13404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13406": {
      "op": "DUP5"
    },
    "13407": {
      "op": "ADD"
    },
    "13408": {
      "op": "PUSH2",
      "value": "0x33A5"
    },
    "13411": {
      "jump": "i",
      "op": "JUMP"
    },
    "13412": {
      "op": "JUMPDEST"
    },
    "13413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13415": {
      "op": "DUP1"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13418": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13420": {
      "op": "DUP5"
    },
    "13421": {
      "op": "DUP7"
    },
    "13422": {
      "op": "SUB"
    },
    "13423": {
      "op": "SLT"
    },
    "13424": {
      "op": "ISZERO"
    },
    "13425": {
      "op": "PUSH2",
      "value": "0x3479"
    },
    "13428": {
      "op": "JUMPI"
    },
    "13429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13431": {
      "op": "DUP1"
    },
    "13432": {
      "op": "REVERT"
    },
    "13433": {
      "op": "JUMPDEST"
    },
    "13434": {
      "op": "PUSH2",
      "value": "0x3482"
    },
    "13437": {
      "op": "DUP5"
    },
    "13438": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13441": {
      "jump": "i",
      "op": "JUMP"
    },
    "13442": {
      "op": "JUMPDEST"
    },
    "13443": {
      "op": "SWAP3"
    },
    "13444": {
      "op": "POP"
    },
    "13445": {
      "op": "PUSH2",
      "value": "0x3490"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13450": {
      "op": "DUP6"
    },
    "13451": {
      "op": "ADD"
    },
    "13452": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13455": {
      "jump": "i",
      "op": "JUMP"
    },
    "13456": {
      "op": "JUMPDEST"
    },
    "13457": {
      "op": "SWAP2"
    },
    "13458": {
      "op": "POP"
    },
    "13459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13461": {
      "op": "DUP5"
    },
    "13462": {
      "op": "ADD"
    },
    "13463": {
      "op": "CALLDATALOAD"
    },
    "13464": {
      "op": "SWAP1"
    },
    "13465": {
      "op": "POP"
    },
    "13466": {
      "op": "SWAP3"
    },
    "13467": {
      "op": "POP"
    },
    "13468": {
      "op": "SWAP3"
    },
    "13469": {
      "op": "POP"
    },
    "13470": {
      "op": "SWAP3"
    },
    "13471": {
      "jump": "o",
      "op": "JUMP"
    },
    "13472": {
      "op": "JUMPDEST"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13475": {
      "op": "DUP1"
    },
    "13476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13478": {
      "op": "DUP4"
    },
    "13479": {
      "op": "DUP6"
    },
    "13480": {
      "op": "SUB"
    },
    "13481": {
      "op": "SLT"
    },
    "13482": {
      "op": "ISZERO"
    },
    "13483": {
      "op": "PUSH2",
      "value": "0x34B3"
    },
    "13486": {
      "op": "JUMPI"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13489": {
      "op": "DUP1"
    },
    "13490": {
      "op": "REVERT"
    },
    "13491": {
      "op": "JUMPDEST"
    },
    "13492": {
      "op": "DUP3"
    },
    "13493": {
      "op": "CALLDATALOAD"
    },
    "13494": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13503": {
      "op": "DUP1"
    },
    "13504": {
      "op": "DUP3"
    },
    "13505": {
      "op": "GT"
    },
    "13506": {
      "op": "ISZERO"
    },
    "13507": {
      "op": "PUSH2",
      "value": "0x34CB"
    },
    "13510": {
      "op": "JUMPI"
    },
    "13511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13513": {
      "op": "DUP1"
    },
    "13514": {
      "op": "REVERT"
    },
    "13515": {
      "op": "JUMPDEST"
    },
    "13516": {
      "op": "DUP2"
    },
    "13517": {
      "op": "DUP6"
    },
    "13518": {
      "op": "ADD"
    },
    "13519": {
      "op": "SWAP2"
    },
    "13520": {
      "op": "POP"
    },
    "13521": {
      "op": "DUP6"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13524": {
      "op": "DUP4"
    },
    "13525": {
      "op": "ADD"
    },
    "13526": {
      "op": "SLT"
    },
    "13527": {
      "op": "PUSH2",
      "value": "0x34DF"
    },
    "13530": {
      "op": "JUMPI"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13533": {
      "op": "DUP1"
    },
    "13534": {
      "op": "REVERT"
    },
    "13535": {
      "op": "JUMPDEST"
    },
    "13536": {
      "op": "DUP2"
    },
    "13537": {
      "op": "CALLDATALOAD"
    },
    "13538": {
      "op": "DUP2"
    },
    "13539": {
      "op": "DUP2"
    },
    "13540": {
      "op": "GT"
    },
    "13541": {
      "op": "ISZERO"
    },
    "13542": {
      "op": "PUSH2",
      "value": "0x34EE"
    },
    "13545": {
      "op": "JUMPI"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13548": {
      "op": "DUP1"
    },
    "13549": {
      "op": "REVERT"
    },
    "13550": {
      "op": "JUMPDEST"
    },
    "13551": {
      "op": "DUP7"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13554": {
      "op": "DUP3"
    },
    "13555": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13557": {
      "op": "SHL"
    },
    "13558": {
      "op": "DUP6"
    },
    "13559": {
      "op": "ADD"
    },
    "13560": {
      "op": "ADD"
    },
    "13561": {
      "op": "GT"
    },
    "13562": {
      "op": "ISZERO"
    },
    "13563": {
      "op": "PUSH2",
      "value": "0x3503"
    },
    "13566": {
      "op": "JUMPI"
    },
    "13567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13569": {
      "op": "DUP1"
    },
    "13570": {
      "op": "REVERT"
    },
    "13571": {
      "op": "JUMPDEST"
    },
    "13572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13574": {
      "op": "SWAP3"
    },
    "13575": {
      "op": "SWAP1"
    },
    "13576": {
      "op": "SWAP3"
    },
    "13577": {
      "op": "ADD"
    },
    "13578": {
      "op": "SWAP7"
    },
    "13579": {
      "op": "SWAP2"
    },
    "13580": {
      "op": "SWAP6"
    },
    "13581": {
      "op": "POP"
    },
    "13582": {
      "op": "SWAP1"
    },
    "13583": {
      "op": "SWAP4"
    },
    "13584": {
      "op": "POP"
    },
    "13585": {
      "op": "POP"
    },
    "13586": {
      "op": "POP"
    },
    "13587": {
      "op": "POP"
    },
    "13588": {
      "jump": "o",
      "op": "JUMP"
    },
    "13589": {
      "op": "JUMPDEST"
    },
    "13590": {
      "op": "DUP1"
    },
    "13591": {
      "op": "CALLDATALOAD"
    },
    "13592": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13594": {
      "op": "DUP2"
    },
    "13595": {
      "op": "AND"
    },
    "13596": {
      "op": "DUP2"
    },
    "13597": {
      "op": "EQ"
    },
    "13598": {
      "op": "PUSH2",
      "value": "0x3360"
    },
    "13601": {
      "op": "JUMPI"
    },
    "13602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13604": {
      "op": "DUP1"
    },
    "13605": {
      "op": "REVERT"
    },
    "13606": {
      "op": "JUMPDEST"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13611": {
      "op": "DUP3"
    },
    "13612": {
      "op": "DUP5"
    },
    "13613": {
      "op": "SUB"
    },
    "13614": {
      "op": "SLT"
    },
    "13615": {
      "op": "ISZERO"
    },
    "13616": {
      "op": "PUSH2",
      "value": "0x3538"
    },
    "13619": {
      "op": "JUMPI"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13622": {
      "op": "DUP1"
    },
    "13623": {
      "op": "REVERT"
    },
    "13624": {
      "op": "JUMPDEST"
    },
    "13625": {
      "op": "PUSH2",
      "value": "0x2C2D"
    },
    "13628": {
      "op": "DUP3"
    },
    "13629": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13632": {
      "jump": "i",
      "op": "JUMP"
    },
    "13633": {
      "op": "JUMPDEST"
    },
    "13634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13638": {
      "op": "DUP3"
    },
    "13639": {
      "op": "DUP5"
    },
    "13640": {
      "op": "SUB"
    },
    "13641": {
      "op": "SLT"
    },
    "13642": {
      "op": "ISZERO"
    },
    "13643": {
      "op": "PUSH2",
      "value": "0x3553"
    },
    "13646": {
      "op": "JUMPI"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13649": {
      "op": "DUP1"
    },
    "13650": {
      "op": "REVERT"
    },
    "13651": {
      "op": "JUMPDEST"
    },
    "13652": {
      "op": "PUSH2",
      "value": "0x2C2D"
    },
    "13655": {
      "op": "DUP3"
    },
    "13656": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13659": {
      "jump": "i",
      "op": "JUMP"
    },
    "13660": {
      "op": "JUMPDEST"
    },
    "13661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13663": {
      "op": "DUP1"
    },
    "13664": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13666": {
      "op": "DUP4"
    },
    "13667": {
      "op": "DUP6"
    },
    "13668": {
      "op": "SUB"
    },
    "13669": {
      "op": "SLT"
    },
    "13670": {
      "op": "ISZERO"
    },
    "13671": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13674": {
      "op": "JUMPI"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13677": {
      "op": "DUP1"
    },
    "13678": {
      "op": "REVERT"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "PUSH2",
      "value": "0x3578"
    },
    "13683": {
      "op": "DUP4"
    },
    "13684": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13687": {
      "jump": "i",
      "op": "JUMP"
    },
    "13688": {
      "op": "JUMPDEST"
    },
    "13689": {
      "op": "SWAP2"
    },
    "13690": {
      "op": "POP"
    },
    "13691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13693": {
      "op": "DUP4"
    },
    "13694": {
      "op": "ADD"
    },
    "13695": {
      "op": "CALLDATALOAD"
    },
    "13696": {
      "op": "DUP1"
    },
    "13697": {
      "op": "ISZERO"
    },
    "13698": {
      "op": "ISZERO"
    },
    "13699": {
      "op": "DUP2"
    },
    "13700": {
      "op": "EQ"
    },
    "13701": {
      "op": "PUSH2",
      "value": "0x358D"
    },
    "13704": {
      "op": "JUMPI"
    },
    "13705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13707": {
      "op": "DUP1"
    },
    "13708": {
      "op": "REVERT"
    },
    "13709": {
      "op": "JUMPDEST"
    },
    "13710": {
      "op": "DUP1"
    },
    "13711": {
      "op": "SWAP2"
    },
    "13712": {
      "op": "POP"
    },
    "13713": {
      "op": "POP"
    },
    "13714": {
      "op": "SWAP3"
    },
    "13715": {
      "op": "POP"
    },
    "13716": {
      "op": "SWAP3"
    },
    "13717": {
      "op": "SWAP1"
    },
    "13718": {
      "op": "POP"
    },
    "13719": {
      "jump": "o",
      "op": "JUMP"
    },
    "13720": {
      "op": "JUMPDEST"
    },
    "13721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13723": {
      "op": "DUP1"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13726": {
      "op": "DUP4"
    },
    "13727": {
      "op": "DUP6"
    },
    "13728": {
      "op": "SUB"
    },
    "13729": {
      "op": "SLT"
    },
    "13730": {
      "op": "ISZERO"
    },
    "13731": {
      "op": "PUSH2",
      "value": "0x35AB"
    },
    "13734": {
      "op": "JUMPI"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13737": {
      "op": "DUP1"
    },
    "13738": {
      "op": "REVERT"
    },
    "13739": {
      "op": "JUMPDEST"
    },
    "13740": {
      "op": "PUSH2",
      "value": "0x35B4"
    },
    "13743": {
      "op": "DUP4"
    },
    "13744": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13747": {
      "jump": "i",
      "op": "JUMP"
    },
    "13748": {
      "op": "JUMPDEST"
    },
    "13749": {
      "op": "SWAP2"
    },
    "13750": {
      "op": "POP"
    },
    "13751": {
      "op": "PUSH2",
      "value": "0x35C2"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13756": {
      "op": "DUP5"
    },
    "13757": {
      "op": "ADD"
    },
    "13758": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13761": {
      "jump": "i",
      "op": "JUMP"
    },
    "13762": {
      "op": "JUMPDEST"
    },
    "13763": {
      "op": "SWAP1"
    },
    "13764": {
      "op": "POP"
    },
    "13765": {
      "op": "SWAP3"
    },
    "13766": {
      "op": "POP"
    },
    "13767": {
      "op": "SWAP3"
    },
    "13768": {
      "op": "SWAP1"
    },
    "13769": {
      "op": "POP"
    },
    "13770": {
      "jump": "o",
      "op": "JUMP"
    },
    "13771": {
      "op": "JUMPDEST"
    },
    "13772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13774": {
      "op": "DUP1"
    },
    "13775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13777": {
      "op": "DUP1"
    },
    "13778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13780": {
      "op": "DUP6"
    },
    "13781": {
      "op": "DUP8"
    },
    "13782": {
      "op": "SUB"
    },
    "13783": {
      "op": "SLT"
    },
    "13784": {
      "op": "ISZERO"
    },
    "13785": {
      "op": "PUSH2",
      "value": "0x35E1"
    },
    "13788": {
      "op": "JUMPI"
    },
    "13789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13791": {
      "op": "DUP1"
    },
    "13792": {
      "op": "REVERT"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "PUSH2",
      "value": "0x35EA"
    },
    "13797": {
      "op": "DUP6"
    },
    "13798": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13801": {
      "jump": "i",
      "op": "JUMP"
    },
    "13802": {
      "op": "JUMPDEST"
    },
    "13803": {
      "op": "SWAP4"
    },
    "13804": {
      "op": "POP"
    },
    "13805": {
      "op": "PUSH2",
      "value": "0x35F8"
    },
    "13808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13810": {
      "op": "DUP7"
    },
    "13811": {
      "op": "ADD"
    },
    "13812": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13815": {
      "jump": "i",
      "op": "JUMP"
    },
    "13816": {
      "op": "JUMPDEST"
    },
    "13817": {
      "op": "SWAP3"
    },
    "13818": {
      "op": "POP"
    },
    "13819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13821": {
      "op": "DUP6"
    },
    "13822": {
      "op": "ADD"
    },
    "13823": {
      "op": "CALLDATALOAD"
    },
    "13824": {
      "op": "SWAP2"
    },
    "13825": {
      "op": "POP"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13828": {
      "op": "DUP6"
    },
    "13829": {
      "op": "ADD"
    },
    "13830": {
      "op": "CALLDATALOAD"
    },
    "13831": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13840": {
      "op": "DUP2"
    },
    "13841": {
      "op": "GT"
    },
    "13842": {
      "op": "ISZERO"
    },
    "13843": {
      "op": "PUSH2",
      "value": "0x361B"
    },
    "13846": {
      "op": "JUMPI"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13849": {
      "op": "DUP1"
    },
    "13850": {
      "op": "REVERT"
    },
    "13851": {
      "op": "JUMPDEST"
    },
    "13852": {
      "op": "DUP6"
    },
    "13853": {
      "op": "ADD"
    },
    "13854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13856": {
      "op": "DUP2"
    },
    "13857": {
      "op": "ADD"
    },
    "13858": {
      "op": "DUP8"
    },
    "13859": {
      "op": "SGT"
    },
    "13860": {
      "op": "PUSH2",
      "value": "0x362C"
    },
    "13863": {
      "op": "JUMPI"
    },
    "13864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13866": {
      "op": "DUP1"
    },
    "13867": {
      "op": "REVERT"
    },
    "13868": {
      "op": "JUMPDEST"
    },
    "13869": {
      "op": "PUSH2",
      "value": "0x363B"
    },
    "13872": {
      "op": "DUP8"
    },
    "13873": {
      "op": "DUP3"
    },
    "13874": {
      "op": "CALLDATALOAD"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13877": {
      "op": "DUP5"
    },
    "13878": {
      "op": "ADD"
    },
    "13879": {
      "op": "PUSH2",
      "value": "0x33A5"
    },
    "13882": {
      "jump": "i",
      "op": "JUMP"
    },
    "13883": {
      "op": "JUMPDEST"
    },
    "13884": {
      "op": "SWAP2"
    },
    "13885": {
      "op": "POP"
    },
    "13886": {
      "op": "POP"
    },
    "13887": {
      "op": "SWAP3"
    },
    "13888": {
      "op": "SWAP6"
    },
    "13889": {
      "op": "SWAP2"
    },
    "13890": {
      "op": "SWAP5"
    },
    "13891": {
      "op": "POP"
    },
    "13892": {
      "op": "SWAP3"
    },
    "13893": {
      "op": "POP"
    },
    "13894": {
      "jump": "o",
      "op": "JUMP"
    },
    "13895": {
      "op": "JUMPDEST"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13898": {
      "op": "DUP1"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13901": {
      "op": "DUP4"
    },
    "13902": {
      "op": "DUP6"
    },
    "13903": {
      "op": "SUB"
    },
    "13904": {
      "op": "SLT"
    },
    "13905": {
      "op": "ISZERO"
    },
    "13906": {
      "op": "PUSH2",
      "value": "0x365A"
    },
    "13909": {
      "op": "JUMPI"
    },
    "13910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13912": {
      "op": "DUP1"
    },
    "13913": {
      "op": "REVERT"
    },
    "13914": {
      "op": "JUMPDEST"
    },
    "13915": {
      "op": "PUSH2",
      "value": "0x35B4"
    },
    "13918": {
      "op": "DUP4"
    },
    "13919": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13922": {
      "jump": "i",
      "op": "JUMP"
    },
    "13923": {
      "op": "JUMPDEST"
    },
    "13924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13926": {
      "op": "DUP1"
    },
    "13927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13929": {
      "op": "DUP1"
    },
    "13930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13934": {
      "op": "DUP7"
    },
    "13935": {
      "op": "DUP9"
    },
    "13936": {
      "op": "SUB"
    },
    "13937": {
      "op": "SLT"
    },
    "13938": {
      "op": "ISZERO"
    },
    "13939": {
      "op": "PUSH2",
      "value": "0x367B"
    },
    "13942": {
      "op": "JUMPI"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13945": {
      "op": "DUP1"
    },
    "13946": {
      "op": "REVERT"
    },
    "13947": {
      "op": "JUMPDEST"
    },
    "13948": {
      "op": "PUSH2",
      "value": "0x3684"
    },
    "13951": {
      "op": "DUP7"
    },
    "13952": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13955": {
      "jump": "i",
      "op": "JUMP"
    },
    "13956": {
      "op": "JUMPDEST"
    },
    "13957": {
      "op": "SWAP5"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "op": "PUSH2",
      "value": "0x3692"
    },
    "13962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13964": {
      "op": "DUP8"
    },
    "13965": {
      "op": "ADD"
    },
    "13966": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13969": {
      "jump": "i",
      "op": "JUMP"
    },
    "13970": {
      "op": "JUMPDEST"
    },
    "13971": {
      "op": "SWAP4"
    },
    "13972": {
      "op": "POP"
    },
    "13973": {
      "op": "PUSH2",
      "value": "0x36A0"
    },
    "13976": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13978": {
      "op": "DUP8"
    },
    "13979": {
      "op": "ADD"
    },
    "13980": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13983": {
      "jump": "i",
      "op": "JUMP"
    },
    "13984": {
      "op": "JUMPDEST"
    },
    "13985": {
      "op": "SWAP3"
    },
    "13986": {
      "op": "POP"
    },
    "13987": {
      "op": "PUSH2",
      "value": "0x36AE"
    },
    "13990": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13992": {
      "op": "DUP8"
    },
    "13993": {
      "op": "ADD"
    },
    "13994": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "13997": {
      "jump": "i",
      "op": "JUMP"
    },
    "13998": {
      "op": "JUMPDEST"
    },
    "13999": {
      "op": "SWAP2"
    },
    "14000": {
      "op": "POP"
    },
    "14001": {
      "op": "PUSH2",
      "value": "0x36BC"
    },
    "14004": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14006": {
      "op": "DUP8"
    },
    "14007": {
      "op": "ADD"
    },
    "14008": {
      "op": "PUSH2",
      "value": "0x3349"
    },
    "14011": {
      "jump": "i",
      "op": "JUMP"
    },
    "14012": {
      "op": "JUMPDEST"
    },
    "14013": {
      "op": "SWAP1"
    },
    "14014": {
      "op": "POP"
    },
    "14015": {
      "op": "SWAP3"
    },
    "14016": {
      "op": "SWAP6"
    },
    "14017": {
      "op": "POP"
    },
    "14018": {
      "op": "SWAP3"
    },
    "14019": {
      "op": "SWAP6"
    },
    "14020": {
      "op": "SWAP1"
    },
    "14021": {
      "op": "SWAP4"
    },
    "14022": {
      "op": "POP"
    },
    "14023": {
      "jump": "o",
      "op": "JUMP"
    },
    "14024": {
      "op": "JUMPDEST"
    },
    "14025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14027": {
      "op": "DUP2"
    },
    "14028": {
      "op": "DUP2"
    },
    "14029": {
      "op": "SHR"
    },
    "14030": {
      "op": "SWAP1"
    },
    "14031": {
      "op": "DUP3"
    },
    "14032": {
      "op": "AND"
    },
    "14033": {
      "op": "DUP1"
    },
    "14034": {
      "op": "PUSH2",
      "value": "0x36DC"
    },
    "14037": {
      "op": "JUMPI"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14040": {
      "op": "DUP3"
    },
    "14041": {
      "op": "AND"
    },
    "14042": {
      "op": "SWAP2"
    },
    "14043": {
      "op": "POP"
    },
    "14044": {
      "op": "JUMPDEST"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14047": {
      "op": "DUP3"
    },
    "14048": {
      "op": "LT"
    },
    "14049": {
      "op": "DUP2"
    },
    "14050": {
      "op": "EQ"
    },
    "14051": {
      "op": "ISZERO"
    },
    "14052": {
      "op": "PUSH2",
      "value": "0x36FD"
    },
    "14055": {
      "op": "JUMPI"
    },
    "14056": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14063": {
      "op": "SHL"
    },
    "14064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14066": {
      "op": "MSTORE"
    },
    "14067": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14071": {
      "op": "MSTORE"
    },
    "14072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14076": {
      "op": "REVERT"
    },
    "14077": {
      "op": "JUMPDEST"
    },
    "14078": {
      "op": "POP"
    },
    "14079": {
      "op": "SWAP2"
    },
    "14080": {
      "op": "SWAP1"
    },
    "14081": {
      "op": "POP"
    },
    "14082": {
      "jump": "o",
      "op": "JUMP"
    },
    "14083": {
      "op": "JUMPDEST"
    },
    "14084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14086": {
      "op": "DUP1"
    },
    "14087": {
      "op": "DUP3"
    },
    "14088": {
      "op": "MSTORE"
    },
    "14089": {
      "op": "DUP2"
    },
    "14090": {
      "op": "DUP2"
    },
    "14091": {
      "op": "ADD"
    },
    "14092": {
      "op": "MSTORE"
    },
    "14093": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14128": {
      "op": "DUP3"
    },
    "14129": {
      "op": "ADD"
    },
    "14130": {
      "op": "MSTORE"
    },
    "14131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14133": {
      "op": "ADD"
    },
    "14134": {
      "op": "SWAP1"
    },
    "14135": {
      "jump": "o",
      "op": "JUMP"
    },
    "14136": {
      "op": "JUMPDEST"
    },
    "14137": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14144": {
      "op": "SHL"
    },
    "14145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14147": {
      "op": "MSTORE"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14150": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14152": {
      "op": "MSTORE"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14157": {
      "op": "REVERT"
    },
    "14158": {
      "op": "JUMPDEST"
    },
    "14159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14161": {
      "op": "DUP3"
    },
    "14162": {
      "op": "DUP3"
    },
    "14163": {
      "op": "LT"
    },
    "14164": {
      "op": "ISZERO"
    },
    "14165": {
      "op": "PUSH2",
      "value": "0x3760"
    },
    "14168": {
      "op": "JUMPI"
    },
    "14169": {
      "op": "PUSH2",
      "value": "0x3760"
    },
    "14172": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14175": {
      "jump": "i",
      "op": "JUMP"
    },
    "14176": {
      "op": "JUMPDEST"
    },
    "14177": {
      "op": "POP"
    },
    "14178": {
      "op": "SUB"
    },
    "14179": {
      "op": "SWAP1"
    },
    "14180": {
      "jump": "o",
      "op": "JUMP"
    },
    "14181": {
      "op": "JUMPDEST"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14184": {
      "op": "DUP1"
    },
    "14185": {
      "op": "DUP3"
    },
    "14186": {
      "op": "MSTORE"
    },
    "14187": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14189": {
      "op": "SWAP1"
    },
    "14190": {
      "op": "DUP3"
    },
    "14191": {
      "op": "ADD"
    },
    "14192": {
      "op": "MSTORE"
    },
    "14193": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14226": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14228": {
      "op": "DUP3"
    },
    "14229": {
      "op": "ADD"
    },
    "14230": {
      "op": "MSTORE"
    },
    "14231": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14249": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14251": {
      "op": "SHL"
    },
    "14252": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14254": {
      "op": "DUP3"
    },
    "14255": {
      "op": "ADD"
    },
    "14256": {
      "op": "MSTORE"
    },
    "14257": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14259": {
      "op": "ADD"
    },
    "14260": {
      "op": "SWAP1"
    },
    "14261": {
      "jump": "o",
      "op": "JUMP"
    },
    "14262": {
      "op": "JUMPDEST"
    },
    "14263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14265": {
      "op": "DUP2"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14268": {
      "op": "NOT"
    },
    "14269": {
      "op": "DIV"
    },
    "14270": {
      "op": "DUP4"
    },
    "14271": {
      "op": "GT"
    },
    "14272": {
      "op": "DUP3"
    },
    "14273": {
      "op": "ISZERO"
    },
    "14274": {
      "op": "ISZERO"
    },
    "14275": {
      "op": "AND"
    },
    "14276": {
      "op": "ISZERO"
    },
    "14277": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "14280": {
      "op": "JUMPI"
    },
    "14281": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "14284": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14287": {
      "jump": "i",
      "op": "JUMP"
    },
    "14288": {
      "op": "JUMPDEST"
    },
    "14289": {
      "op": "POP"
    },
    "14290": {
      "op": "MUL"
    },
    "14291": {
      "op": "SWAP1"
    },
    "14292": {
      "jump": "o",
      "op": "JUMP"
    },
    "14293": {
      "op": "JUMPDEST"
    },
    "14294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14296": {
      "op": "DUP1"
    },
    "14297": {
      "op": "DUP3"
    },
    "14298": {
      "op": "MSTORE"
    },
    "14299": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14301": {
      "op": "SWAP1"
    },
    "14302": {
      "op": "DUP3"
    },
    "14303": {
      "op": "ADD"
    },
    "14304": {
      "op": "MSTORE"
    },
    "14305": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14324": {
      "op": "SHL"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14327": {
      "op": "DUP3"
    },
    "14328": {
      "op": "ADD"
    },
    "14329": {
      "op": "MSTORE"
    },
    "14330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14332": {
      "op": "ADD"
    },
    "14333": {
      "op": "SWAP1"
    },
    "14334": {
      "jump": "o",
      "op": "JUMP"
    },
    "14335": {
      "op": "JUMPDEST"
    },
    "14336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14338": {
      "op": "DUP3"
    },
    "14339": {
      "op": "NOT"
    },
    "14340": {
      "op": "DUP3"
    },
    "14341": {
      "op": "GT"
    },
    "14342": {
      "op": "ISZERO"
    },
    "14343": {
      "op": "PUSH2",
      "value": "0x3812"
    },
    "14346": {
      "op": "JUMPI"
    },
    "14347": {
      "op": "PUSH2",
      "value": "0x3812"
    },
    "14350": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14353": {
      "jump": "i",
      "op": "JUMP"
    },
    "14354": {
      "op": "JUMPDEST"
    },
    "14355": {
      "op": "POP"
    },
    "14356": {
      "op": "ADD"
    },
    "14357": {
      "op": "SWAP1"
    },
    "14358": {
      "jump": "o",
      "op": "JUMP"
    },
    "14359": {
      "op": "JUMPDEST"
    },
    "14360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14364": {
      "op": "NOT"
    },
    "14365": {
      "op": "DUP3"
    },
    "14366": {
      "op": "EQ"
    },
    "14367": {
      "op": "ISZERO"
    },
    "14368": {
      "op": "PUSH2",
      "value": "0x382B"
    },
    "14371": {
      "op": "JUMPI"
    },
    "14372": {
      "op": "PUSH2",
      "value": "0x382B"
    },
    "14375": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14378": {
      "jump": "i",
      "op": "JUMP"
    },
    "14379": {
      "op": "JUMPDEST"
    },
    "14380": {
      "op": "POP"
    },
    "14381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14383": {
      "op": "ADD"
    },
    "14384": {
      "op": "SWAP1"
    },
    "14385": {
      "jump": "o",
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "DUP1"
    },
    "14388": {
      "op": "SLOAD"
    },
    "14389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14391": {
      "op": "SWAP1"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14394": {
      "op": "DUP2"
    },
    "14395": {
      "op": "DUP2"
    },
    "14396": {
      "op": "SHR"
    },
    "14397": {
      "op": "SWAP1"
    },
    "14398": {
      "op": "DUP1"
    },
    "14399": {
      "op": "DUP4"
    },
    "14400": {
      "op": "AND"
    },
    "14401": {
      "op": "DUP1"
    },
    "14402": {
      "op": "PUSH2",
      "value": "0x384C"
    },
    "14405": {
      "op": "JUMPI"
    },
    "14406": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14408": {
      "op": "DUP4"
    },
    "14409": {
      "op": "AND"
    },
    "14410": {
      "op": "SWAP3"
    },
    "14411": {
      "op": "POP"
    },
    "14412": {
      "op": "JUMPDEST"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14415": {
      "op": "DUP1"
    },
    "14416": {
      "op": "DUP5"
    },
    "14417": {
      "op": "LT"
    },
    "14418": {
      "op": "DUP3"
    },
    "14419": {
      "op": "EQ"
    },
    "14420": {
      "op": "ISZERO"
    },
    "14421": {
      "op": "PUSH2",
      "value": "0x386E"
    },
    "14424": {
      "op": "JUMPI"
    },
    "14425": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14432": {
      "op": "SHL"
    },
    "14433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14435": {
      "op": "MSTORE"
    },
    "14436": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14438": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14440": {
      "op": "MSTORE"
    },
    "14441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14445": {
      "op": "REVERT"
    },
    "14446": {
      "op": "JUMPDEST"
    },
    "14447": {
      "op": "DUP2"
    },
    "14448": {
      "op": "DUP1"
    },
    "14449": {
      "op": "ISZERO"
    },
    "14450": {
      "op": "PUSH2",
      "value": "0x3882"
    },
    "14453": {
      "op": "JUMPI"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14456": {
      "op": "DUP2"
    },
    "14457": {
      "op": "EQ"
    },
    "14458": {
      "op": "PUSH2",
      "value": "0x3893"
    },
    "14461": {
      "op": "JUMPI"
    },
    "14462": {
      "op": "PUSH2",
      "value": "0x38C0"
    },
    "14465": {
      "op": "JUMP"
    },
    "14466": {
      "op": "JUMPDEST"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14469": {
      "op": "NOT"
    },
    "14470": {
      "op": "DUP7"
    },
    "14471": {
      "op": "AND"
    },
    "14472": {
      "op": "DUP10"
    },
    "14473": {
      "op": "MSTORE"
    },
    "14474": {
      "op": "DUP5"
    },
    "14475": {
      "op": "DUP10"
    },
    "14476": {
      "op": "ADD"
    },
    "14477": {
      "op": "SWAP7"
    },
    "14478": {
      "op": "POP"
    },
    "14479": {
      "op": "PUSH2",
      "value": "0x38C0"
    },
    "14482": {
      "op": "JUMP"
    },
    "14483": {
      "op": "JUMPDEST"
    },
    "14484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14486": {
      "op": "DUP9"
    },
    "14487": {
      "op": "DUP2"
    },
    "14488": {
      "op": "MSTORE"
    },
    "14489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14491": {
      "op": "SWAP1"
    },
    "14492": {
      "op": "KECCAK256"
    },
    "14493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14495": {
      "op": "JUMPDEST"
    },
    "14496": {
      "op": "DUP7"
    },
    "14497": {
      "op": "DUP2"
    },
    "14498": {
      "op": "LT"
    },
    "14499": {
      "op": "ISZERO"
    },
    "14500": {
      "op": "PUSH2",
      "value": "0x38B8"
    },
    "14503": {
      "op": "JUMPI"
    },
    "14504": {
      "op": "DUP2"
    },
    "14505": {
      "op": "SLOAD"
    },
    "14506": {
      "op": "DUP12"
    },
    "14507": {
      "op": "DUP3"
    },
    "14508": {
      "op": "ADD"
    },
    "14509": {
      "op": "MSTORE"
    },
    "14510": {
      "op": "SWAP1"
    },
    "14511": {
      "op": "DUP6"
    },
    "14512": {
      "op": "ADD"
    },
    "14513": {
      "op": "SWAP1"
    },
    "14514": {
      "op": "DUP4"
    },
    "14515": {
      "op": "ADD"
    },
    "14516": {
      "op": "PUSH2",
      "value": "0x389F"
    },
    "14519": {
      "op": "JUMP"
    },
    "14520": {
      "op": "JUMPDEST"
    },
    "14521": {
      "op": "POP"
    },
    "14522": {
      "op": "POP"
    },
    "14523": {
      "op": "DUP5"
    },
    "14524": {
      "op": "DUP10"
    },
    "14525": {
      "op": "ADD"
    },
    "14526": {
      "op": "SWAP7"
    },
    "14527": {
      "op": "POP"
    },
    "14528": {
      "op": "JUMPDEST"
    },
    "14529": {
      "op": "POP"
    },
    "14530": {
      "op": "POP"
    },
    "14531": {
      "op": "POP"
    },
    "14532": {
      "op": "POP"
    },
    "14533": {
      "op": "POP"
    },
    "14534": {
      "op": "POP"
    },
    "14535": {
      "op": "SWAP3"
    },
    "14536": {
      "op": "SWAP2"
    },
    "14537": {
      "op": "POP"
    },
    "14538": {
      "op": "POP"
    },
    "14539": {
      "jump": "o",
      "op": "JUMP"
    },
    "14540": {
      "op": "JUMPDEST"
    },
    "14541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14543": {
      "op": "PUSH2",
      "value": "0x38D8"
    },
    "14546": {
      "op": "DUP3"
    },
    "14547": {
      "op": "DUP7"
    },
    "14548": {
      "op": "PUSH2",
      "value": "0x3832"
    },
    "14551": {
      "jump": "i",
      "op": "JUMP"
    },
    "14552": {
      "op": "JUMPDEST"
    },
    "14553": {
      "op": "DUP5"
    },
    "14554": {
      "op": "MLOAD"
    },
    "14555": {
      "op": "PUSH2",
      "value": "0x38E8"
    },
    "14558": {
      "op": "DUP2"
    },
    "14559": {
      "op": "DUP4"
    },
    "14560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14562": {
      "op": "DUP10"
    },
    "14563": {
      "op": "ADD"
    },
    "14564": {
      "op": "PUSH2",
      "value": "0x32C5"
    },
    "14567": {
      "jump": "i",
      "op": "JUMP"
    },
    "14568": {
      "op": "JUMPDEST"
    },
    "14569": {
      "op": "PUSH2",
      "value": "0x38F4"
    },
    "14572": {
      "op": "DUP2"
    },
    "14573": {
      "op": "DUP4"
    },
    "14574": {
      "op": "ADD"
    },
    "14575": {
      "op": "DUP7"
    },
    "14576": {
      "op": "PUSH2",
      "value": "0x3832"
    },
    "14579": {
      "jump": "i",
      "op": "JUMP"
    },
    "14580": {
      "op": "JUMPDEST"
    },
    "14581": {
      "op": "SWAP8"
    },
    "14582": {
      "op": "SWAP7"
    },
    "14583": {
      "op": "POP"
    },
    "14584": {
      "op": "POP"
    },
    "14585": {
      "op": "POP"
    },
    "14586": {
      "op": "POP"
    },
    "14587": {
      "op": "POP"
    },
    "14588": {
      "op": "POP"
    },
    "14589": {
      "op": "POP"
    },
    "14590": {
      "jump": "o",
      "op": "JUMP"
    },
    "14591": {
      "op": "JUMPDEST"
    },
    "14592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14596": {
      "op": "DUP3"
    },
    "14597": {
      "op": "AND"
    },
    "14598": {
      "op": "DUP1"
    },
    "14599": {
      "op": "PUSH2",
      "value": "0x3912"
    },
    "14602": {
      "op": "JUMPI"
    },
    "14603": {
      "op": "PUSH2",
      "value": "0x3912"
    },
    "14606": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14609": {
      "jump": "i",
      "op": "JUMP"
    },
    "14610": {
      "op": "JUMPDEST"
    },
    "14611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14613": {
      "op": "NOT"
    },
    "14614": {
      "op": "ADD"
    },
    "14615": {
      "op": "SWAP3"
    },
    "14616": {
      "op": "SWAP2"
    },
    "14617": {
      "op": "POP"
    },
    "14618": {
      "op": "POP"
    },
    "14619": {
      "jump": "o",
      "op": "JUMP"
    },
    "14620": {
      "op": "JUMPDEST"
    },
    "14621": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14628": {
      "op": "SHL"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14631": {
      "op": "MSTORE"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14634": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14636": {
      "op": "MSTORE"
    },
    "14637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14641": {
      "op": "REVERT"
    },
    "14642": {
      "op": "JUMPDEST"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14647": {
      "op": "DUP3"
    },
    "14648": {
      "op": "AND"
    },
    "14649": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14651": {
      "op": "DUP2"
    },
    "14652": {
      "op": "EQ"
    },
    "14653": {
      "op": "ISZERO"
    },
    "14654": {
      "op": "PUSH2",
      "value": "0x3949"
    },
    "14657": {
      "op": "JUMPI"
    },
    "14658": {
      "op": "PUSH2",
      "value": "0x3949"
    },
    "14661": {
      "op": "PUSH2",
      "value": "0x3738"
    },
    "14664": {
      "jump": "i",
      "op": "JUMP"
    },
    "14665": {
      "op": "JUMPDEST"
    },
    "14666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14668": {
      "op": "ADD"
    },
    "14669": {
      "op": "SWAP3"
    },
    "14670": {
      "op": "SWAP2"
    },
    "14671": {
      "op": "POP"
    },
    "14672": {
      "op": "POP"
    },
    "14673": {
      "jump": "o",
      "op": "JUMP"
    },
    "14674": {
      "op": "JUMPDEST"
    },
    "14675": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14682": {
      "op": "SHL"
    },
    "14683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14685": {
      "op": "MSTORE"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14690": {
      "op": "MSTORE"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14695": {
      "op": "REVERT"
    },
    "14696": {
      "op": "JUMPDEST"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14699": {
      "op": "DUP3"
    },
    "14700": {
      "op": "PUSH2",
      "value": "0x3977"
    },
    "14703": {
      "op": "JUMPI"
    },
    "14704": {
      "op": "PUSH2",
      "value": "0x3977"
    },
    "14707": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "14710": {
      "jump": "i",
      "op": "JUMP"
    },
    "14711": {
      "op": "JUMPDEST"
    },
    "14712": {
      "op": "POP"
    },
    "14713": {
      "op": "DIV"
    },
    "14714": {
      "op": "SWAP1"
    },
    "14715": {
      "jump": "o",
      "op": "JUMP"
    },
    "14716": {
      "op": "JUMPDEST"
    },
    "14717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14719": {
      "op": "DUP1"
    },
    "14720": {
      "op": "DUP3"
    },
    "14721": {
      "op": "MSTORE"
    },
    "14722": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14724": {
      "op": "SWAP1"
    },
    "14725": {
      "op": "DUP3"
    },
    "14726": {
      "op": "ADD"
    },
    "14727": {
      "op": "MSTORE"
    },
    "14728": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14761": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14763": {
      "op": "DUP3"
    },
    "14764": {
      "op": "ADD"
    },
    "14765": {
      "op": "MSTORE"
    },
    "14766": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14787": {
      "op": "SHL"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14790": {
      "op": "DUP3"
    },
    "14791": {
      "op": "ADD"
    },
    "14792": {
      "op": "MSTORE"
    },
    "14793": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14795": {
      "op": "ADD"
    },
    "14796": {
      "op": "SWAP1"
    },
    "14797": {
      "jump": "o",
      "op": "JUMP"
    },
    "14798": {
      "op": "JUMPDEST"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14801": {
      "op": "DUP3"
    },
    "14802": {
      "op": "PUSH2",
      "value": "0x39DD"
    },
    "14805": {
      "op": "JUMPI"
    },
    "14806": {
      "op": "PUSH2",
      "value": "0x39DD"
    },
    "14809": {
      "op": "PUSH2",
      "value": "0x3952"
    },
    "14812": {
      "jump": "i",
      "op": "JUMP"
    },
    "14813": {
      "op": "JUMPDEST"
    },
    "14814": {
      "op": "POP"
    },
    "14815": {
      "op": "MOD"
    },
    "14816": {
      "op": "SWAP1"
    },
    "14817": {
      "jump": "o",
      "op": "JUMP"
    },
    "14818": {
      "op": "JUMPDEST"
    },
    "14819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14825": {
      "op": "SHL"
    },
    "14826": {
      "op": "SUB"
    },
    "14827": {
      "op": "DUP6"
    },
    "14828": {
      "op": "DUP2"
    },
    "14829": {
      "op": "AND"
    },
    "14830": {
      "op": "DUP3"
    },
    "14831": {
      "op": "MSTORE"
    },
    "14832": {
      "op": "DUP5"
    },
    "14833": {
      "op": "AND"
    },
    "14834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14836": {
      "op": "DUP3"
    },
    "14837": {
      "op": "ADD"
    },
    "14838": {
      "op": "MSTORE"
    },
    "14839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14841": {
      "op": "DUP2"
    },
    "14842": {
      "op": "ADD"
    },
    "14843": {
      "op": "DUP4"
    },
    "14844": {
      "op": "SWAP1"
    },
    "14845": {
      "op": "MSTORE"
    },
    "14846": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14850": {
      "op": "DUP3"
    },
    "14851": {
      "op": "ADD"
    },
    "14852": {
      "op": "DUP2"
    },
    "14853": {
      "op": "SWAP1"
    },
    "14854": {
      "op": "MSTORE"
    },
    "14855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14857": {
      "op": "SWAP1"
    },
    "14858": {
      "op": "PUSH2",
      "value": "0x3A15"
    },
    "14861": {
      "op": "SWAP1"
    },
    "14862": {
      "op": "DUP4"
    },
    "14863": {
      "op": "ADD"
    },
    "14864": {
      "op": "DUP5"
    },
    "14865": {
      "op": "PUSH2",
      "value": "0x32F1"
    },
    "14868": {
      "jump": "i",
      "op": "JUMP"
    },
    "14869": {
      "op": "JUMPDEST"
    },
    "14870": {
      "op": "SWAP7"
    },
    "14871": {
      "op": "SWAP6"
    },
    "14872": {
      "op": "POP"
    },
    "14873": {
      "op": "POP"
    },
    "14874": {
      "op": "POP"
    },
    "14875": {
      "op": "POP"
    },
    "14876": {
      "op": "POP"
    },
    "14877": {
      "op": "POP"
    },
    "14878": {
      "jump": "o",
      "op": "JUMP"
    },
    "14879": {
      "op": "JUMPDEST"
    },
    "14880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14884": {
      "op": "DUP3"
    },
    "14885": {
      "op": "DUP5"
    },
    "14886": {
      "op": "SUB"
    },
    "14887": {
      "op": "SLT"
    },
    "14888": {
      "op": "ISZERO"
    },
    "14889": {
      "op": "PUSH2",
      "value": "0x3A31"
    },
    "14892": {
      "op": "JUMPI"
    },
    "14893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14895": {
      "op": "DUP1"
    },
    "14896": {
      "op": "REVERT"
    },
    "14897": {
      "op": "JUMPDEST"
    },
    "14898": {
      "op": "DUP2"
    },
    "14899": {
      "op": "MLOAD"
    },
    "14900": {
      "op": "PUSH2",
      "value": "0x2C2D"
    },
    "14903": {
      "op": "DUP2"
    },
    "14904": {
      "op": "PUSH2",
      "value": "0x3292"
    },
    "14907": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "24a1f1e1d57efe31c05d87512be14d87881e56a9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\ncontract CryptidToken is ERC721, Pausable, Ownable, ReentrancyGuard, ERC721Burnable{ \n    using Strings for uint256;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 private stage = 0;\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawDest1 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // trust\n    address public withdrawDest2 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 1\n    address public withdrawDest3 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // founder 2\n    address public withdrawDest4 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 3\n    address public withdrawDest5 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 4\n    \n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrops for Trivia/Contest Winners\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=1)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=2)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=3)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.1 ether;  \n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    modifier isValidMerkleProof(bytes32[] calldata _proof, bytes32 _root) {\n        require(MerkleProof.verify(_proof, _root, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        _;\n    }\n\n    modifier isCorrectPayment(uint256 _price, uint256 _numberOfTokens) {\n        require(_price * _numberOfTokens == msg.value, \"Incorrect ETH value sent.\");\n        _;\n    }\n\n    modifier callerIsUser() {\n        require(tx.origin == msg.sender, \"The caller is another contract.\");\n        _;\n    }\n\n    // Stage 1 - Airdrops \n    function airdropCryptid(\n        uint8 _mintAmount, \n        address _to\n    ) \n        public \n        onlyOwner \n    {\n        require(_mintAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(_to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Mint\n    function whitelistMint(\n        bytes32[] calldata _merkleProof\n    ) \n        public \n        payable \n        isValidMerkleProof(_merkleProof, merkleRoot) \n        isCorrectPayment(salePrice, 1) \n        callerIsUser\n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == 2, \"Whitelist minting not initiated.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        require(totalSupply() + 1 <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        claimed[msg.sender] = true;\n        _mint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 _mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == 3, \"Team sale not initiated.\");\n        require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n        teamMintCount += _mintAmount;\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint8 _mintAmount\n    ) \n        public \n        payable \n        isCorrectPayment(salePrice, _mintAmount) \n        callerIsUser\n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == 4, \"Public mint not initiaited.\");\n        require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        require(_mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function overrideClaim(address _wlAddress) public onlyOwner{\n        claimed[_wlAddress] = true;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() public onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function nextStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot[0] != 0, \"Merkle root must be set beefore whitelist minting can begin\");\n        require(stage < 4, \"No stages after public sale\");\n        stage++;\n    }\n\n    function prevStage() public onlyOwner {\n        require(stage > 0, \"No stages before 0.\");\n        stage--;\n    }\n\n    function setTeamMintSupply(uint256 _newTeamMintSupply) public onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) public onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) public onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() public onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawAddress(address _dest1, address _dest2, address _dest3, address _dest4, address _dest5) public onlyOwner {\n        withdrawDest1 = _dest1;\n        withdrawDest2 = _dest2;\n        withdrawDest3 = _dest3;\n        withdrawDest4 = _dest4;\n        withdrawDest5 = _dest5;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool ms, ) = payable(withdrawDest1).call{value: address(this).balance.mul(700).div(1000)}(\"\");\n        require(ms, \"withdrawl 1 failed\");\n        (bool ns, ) = payable(withdrawDest2).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(ns, \"withdrawl 2 failed\");\n        (bool cr, ) = payable(withdrawDest3).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(cr, \"withdrawl 3 failed\");\n        (bool sn, ) = payable(withdrawDest4).call{value: address(this).balance.mul(45).div(1000)}(\"\");\n        require(sn, \"withdrawl 4 failed\");\n        (bool gr, ) = payable(withdrawDest5).call{value: address(this).balance}(\"\");\n        require(gr, \"withdrawl 5 failed\");\n    }\n\n    // Public view functions\n    function lastMintAddress() public view returns (address){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() public view returns (uint256){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return(totalSupply());\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() public view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function getStage() public view returns (uint8) {\n        return stage;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n}",
  "sourceMap": "895:26:16:-:0;546:9664;895:26;;;-1:-1:-1;546:9664:16;895:26;;;;;;;;:::i;:::-;-1:-1:-1;927:37:16;;;;;;;;;;;;;-1:-1:-1;;;927:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;970:23:16;;;-1:-1:-1;;;;;;1122:73:16;;;;;1210;;;1241:42;-1:-1:-1;;;;;;1210:73:16;;;;;;;;1302;;;1153:42;1302:73;;;;;;1394;;;;;;;;;1486;;;;;;;;;;;2140:9;2113:36;;2158:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:3;;2408:5:16;;2415:7;;1441:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:9;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2434:15:16::1;:34:::0;;;2478:14:::1;:32:::0;;;2520:15:::1;:34:::0;;;2564:12:::1;:28:::0;;-1:-1:-1;;2564:28:16::1;;;::::0;::::1;;;::::0;;2602:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2630:27;:15;:25;;;;;:27;;:::i;:::-;2158:506:::0;;;;;;;546:9664;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:10:-;1032:19;;1050:1;1032:19;;;945:123::o;546:9664:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;546:9664:16;;;-1:-1:-1;546:9664:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:17;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;546:9664:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}