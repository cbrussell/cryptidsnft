{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "undoClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2874
      ],
      "Context": [
        2416
      ],
      "Counters": [
        2306
      ],
      "CryptidToken": [
        826
      ],
      "ERC165": [
        3101
      ],
      "ERC721": [
        1894
      ],
      "ERC721Enumerable": [
        2232
      ],
      "IERC165": [
        3144
      ],
      "IERC721": [
        2532
      ],
      "IERC721Enumerable": [
        3132
      ],
      "IERC721Metadata": [
        2577
      ],
      "IERC721Receiver": [
        2550
      ],
      "MerkleProof": [
        2394
      ],
      "Ownable": [
        931
      ],
      "Pausable": [
        1023
      ],
      "ReentrancyGuard": [
        1063
      ],
      "Strings": [
        3077
      ]
    },
    "id": 827,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 1895,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 2233,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 932,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 1064,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 2307,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 1024,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 2395,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1894,
              "src": "735:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "735:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2232,
              "src": "743:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "743:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1023,
              "src": "761:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 931,
              "src": "771:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "771:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1063,
              "src": "780:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "780:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:220:16",
          "text": "@title CryptidToken NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, sent, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 826,
        "linearizedBaseContracts": [
          826,
          1063,
          931,
          1023,
          2232,
          3132,
          1894,
          2577,
          2532,
          3101,
          3144,
          2416
        ],
        "name": "CryptidToken",
        "nameLocation": "719:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3077,
              "src": "808:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "802:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2306,
              "src": "839:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "833:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2238,
                "src": "852:16:16"
              },
              "referencedDeclaration": 2238,
              "src": "852:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2394,
              "src": "880:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "874:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "896:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "933:4:16",
                "nodeType": "EnumValue",
                "src": "933:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "947:7:16",
                "nodeType": "EnumValue",
                "src": "947:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "964:9:16",
                "nodeType": "EnumValue",
                "src": "964:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "983:8:16",
                "nodeType": "EnumValue",
                "src": "983:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "1001:10:16",
                "nodeType": "EnumValue",
                "src": "1001:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "917:5:16",
            "nodeType": "EnumDefinition",
            "src": "912:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1048:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1023:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2238_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2238,
                "src": "1023:16:16"
              },
              "referencedDeclaration": 2238,
              "src": "1023:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2238_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1089:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1074:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1119:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1105:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1105:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1153:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1139:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1139:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1163:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1185:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1171:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1201:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1227:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1214:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 50,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1214:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1262:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1250:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1250:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1279:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1302:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1290:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1290:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1325:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1352:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1337:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1371:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 62,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1617:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1602:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1602:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 66,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1693:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1661:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1661:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1680:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1767:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1752:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 70,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1828:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1813:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1813:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 72,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1892:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1877:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1877:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 75,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1937:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1922:36:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1922:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1949:9:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 78,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1980:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 826,
            "src": "1967:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1967:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1967:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2258:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2268:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2286:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2268:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:34:16"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2312:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2329:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2312:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:32:16"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "2354:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2372:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2354:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:34:16"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2398:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2413:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2398:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:28:16"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2436:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2446:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2436:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 119,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2464:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2264,
                      "src": "2464:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2238_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:27:16"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 95,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "2242:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 96,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "2249:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 97,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 94,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1894,
                  "src": "2235:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2235:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2027:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2013:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2056:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2042:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2087:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2073:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2113:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2105:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2147:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2139:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2180:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2172:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2212:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2206:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:229:16"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2258:0:16"
            },
            "scope": 826,
            "src": "1992:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "2572:201:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 133,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2590:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 134,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2599:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "2599:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "2590:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2616:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2582:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2582:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 143,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2679:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 147,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2712:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2712:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 145,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2695:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2695:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2695:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 144,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2685:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2685:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 141,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2666:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2330,
                          "src": "2666:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2666:59:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2727:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2658:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:97:16"
                },
                {
                  "id": 155,
                  "nodeType": "PlaceholderStatement",
                  "src": "2765:1:16"
                }
              ]
            },
            "id": 157,
            "name": "isValidMerkleProof",
            "nameLocation": "2513:18:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2551:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2532:24:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2532:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "2532:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "2566:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "2558:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2531:40:16"
            },
            "src": "2504:269:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "2844:101:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 164,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2862:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 165,
                            "name": "numberOfTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2870:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2862:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2888:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2888:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2862:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2899:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2854:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2854:73:16"
                },
                {
                  "id": 173,
                  "nodeType": "PlaceholderStatement",
                  "src": "2937:1:16"
                }
              ]
            },
            "id": 175,
            "name": "isCorrectPayment",
            "nameLocation": "2788:16:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2813:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "2805:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nameLocation": "2828:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "2820:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2804:39:16"
            },
            "src": "2779:166:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "3098:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 185,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3116:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 186,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3124:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "3124:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3116:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3108:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3108:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3108:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 193,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1983,
                              "src": "3177:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3177:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 195,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "3194:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3177:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 197,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "3208:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3177:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3225:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3169:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3169:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:101:16"
                },
                {
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "3322:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "3346:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 214,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "3350:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2250,
                                "src": "3350:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2238_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3350:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 212,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1558,
                              1587
                            ],
                            "referencedDeclaration": 1558,
                            "src": "3336:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3336:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "3336:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 219,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "3390:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2264,
                            "src": "3390:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2238_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3390:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "3390:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 206,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "3300:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 207,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3305:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3300:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 225,
                  "initializationExpression": {
                    "assignments": [
                      203
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3293:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "3285:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3285:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 205,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3297:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3285:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3317:3:16",
                      "subExpression": {
                        "id": 209,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3317:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 211,
                    "nodeType": "ExpressionStatement",
                    "src": "3317:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3280:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "3083:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3083:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2989:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3019:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3013:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3048:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3040:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3040:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3003:53:16"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3098:0:16"
            },
            "scope": 826,
            "src": "2980:454:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3718:230:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 246,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3745:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 249,
                          "indexExpression": {
                            "expression": {
                              "id": 247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3753:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3753:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3745:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3768:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3745:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3775:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3737:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3737:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3737:72:16"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 255,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3820:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3828:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3828:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3820:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3842:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3820:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3866:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3866:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 265,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3878:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2238_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2250,
                          "src": "3878:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2238_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3878:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 262,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1558,
                        1587
                      ],
                      "referencedDeclaration": 1558,
                      "src": "3856:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 270,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3914:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2238_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2264,
                      "src": "3914:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2238_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3914:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3914:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 233,
                    "name": "merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 230,
                    "src": "3603:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  },
                  {
                    "id": 234,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "3616:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "isValidMerkleProof",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 157,
                  "src": "3584:18:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3584:43:16"
              },
              {
                "arguments": [
                  {
                    "id": 237,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "3654:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3665:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 175,
                  "src": "3637:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3637:30:16"
              },
              {
                "id": 241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 240,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1062,
                  "src": "3677:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3677:12:16"
              },
              {
                "id": 243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 242,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 979,
                  "src": "3699:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3699:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3481:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3523:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3504:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 228,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3504:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 229,
                    "nodeType": "ArrayTypeName",
                    "src": "3504:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3494:46:16"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3718:0:16"
            },
            "scope": 826,
            "src": "3472:476:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "4073:394:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 284,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4091:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4100:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "4100:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4091:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4116:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4083:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4083:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "4083:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 292,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "4161:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 293,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4174:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4161:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 295,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "4191:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4161:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4207:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4153:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4153:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4153:100:16"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "4268:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 301,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4285:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4268:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:27:16"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "4347:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 315,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4371:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4371:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 317,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4383:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2250,
                                "src": "4383:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2238_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4383:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 314,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1558,
                              1587
                            ],
                            "referencedDeclaration": 1558,
                            "src": "4361:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4361:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "4361:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 322,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4423:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2264,
                            "src": "4423:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2238_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4423:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "4423:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 308,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4325:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 309,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4330:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4325:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 328,
                  "initializationExpression": {
                    "assignments": [
                      305
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4318:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "4310:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4310:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 307,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4322:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4310:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4342:3:16",
                      "subExpression": {
                        "id": 311,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "4342:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "4342:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4305:156:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 280,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "4058:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4058:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3990:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4014:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4008:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3998:32:16"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4073:0:16"
            },
            "scope": 826,
            "src": "3981:486:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "4688:446:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4706:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 345,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4715:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4715:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4706:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4733:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4698:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 352,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1983,
                              "src": "4780:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4780:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 354,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "4797:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4780:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 356,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4811:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4780:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4828:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4772:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4772:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4772:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 362,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "4887:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 363,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4901:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4887:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4879:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4879:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:81:16"
                },
                {
                  "body": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "5014:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 379,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5038:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5038:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 381,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "5050:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2250,
                                "src": "5050:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2238_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5050:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 378,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1558,
                              1587
                            ],
                            "referencedDeclaration": 1558,
                            "src": "5028:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5028:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "5028:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 386,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "5090:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2238_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2264,
                            "src": "5090:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2238_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2238_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5090:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "5090:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 372,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "4992:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 373,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "4997:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4992:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 392,
                  "initializationExpression": {
                    "assignments": [
                      369
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4985:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "4977:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4977:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 371,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4989:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4977:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5009:3:16",
                      "subExpression": {
                        "id": 375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "5009:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 377,
                    "nodeType": "ExpressionStatement",
                    "src": "5009:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4972:156:16"
                }
              ]
            },
            "functionSelector": "858e83b5",
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 335,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "4614:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 336,
                    "name": "mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "4625:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 175,
                  "src": "4597:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4597:39:16"
              },
              {
                "id": 339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 338,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1062,
                  "src": "4646:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4646:12:16"
              },
              {
                "id": 341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 979,
                  "src": "4668:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4668:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4511:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4537:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "4531:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:32:16"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4688:0:16"
            },
            "scope": 826,
            "src": "4502:632:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5198:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 399,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "5208:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5208:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5208:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 397,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5188:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5188:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "5171:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5176:2:16"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5198:0:16"
            },
            "scope": 826,
            "src": "5162:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "5267:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 408,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1022,
                      "src": "5277:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5277:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "5277:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5257:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5257:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "5238:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5245:2:16"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5267:0:16"
            },
            "scope": 826,
            "src": "5229:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "5400:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 419,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5410:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 421,
                      "indexExpression": {
                        "id": 420,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "5418:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5410:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5431:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5410:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:25:16"
                }
              ]
            },
            "functionSelector": "bb31b77b",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 416,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5391:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5391:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "5354:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5371:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5363:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5362:19:16"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5400:0:16"
            },
            "scope": 826,
            "src": "5345:97:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "5542:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 433,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5552:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "id": 434,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "5560:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5552:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5573:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5552:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5552:26:16"
                }
              ]
            },
            "functionSelector": "57ed9e4e",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 430,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5533:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5533:9:16"
              }
            ],
            "name": "undoClaim",
            "nameLocation": "5495:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5513:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "5505:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5504:19:16"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5542:0:16"
            },
            "scope": 826,
            "src": "5486:99:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "5654:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 447,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "5664:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 448,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "5677:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5664:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "5664:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 445,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 444,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5644:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5644:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5600:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5622:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "5614:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5613:21:16"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5654:0:16"
            },
            "scope": 826,
            "src": "5591:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "5767:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5785:15:16",
                        "subExpression": {
                          "id": 460,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5786:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5802:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5777:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5777:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5777:46:16"
                },
                {
                  "expression": {
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 465,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5833:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 466,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "5843:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5833:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "5833:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 470,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 457,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 456,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5757:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5757:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5710:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5735:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "5721:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5720:27:16"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5767:0:16"
            },
            "scope": 826,
            "src": "5701:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "5916:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 478,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5940:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5934:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 476,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5934:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5934:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5934:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5958:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5934:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5961:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5926:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5926:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "5926:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6006:15:16",
                        "subExpression": {
                          "id": 487,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6007:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6023:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5998:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5998:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "5998:54:16"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 492,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6062:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6079:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6062:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "6062:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 473,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 472,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "5906:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5906:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5881:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5894:2:16"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5916:0:16"
            },
            "scope": 826,
            "src": "5872:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "6170:52:16",
              "statements": [
                {
                  "expression": {
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 504,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "6180:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 505,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "6197:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6180:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:35:16"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 502,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 501,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6160:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6160:9:16"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "6105:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "6131:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "6123:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6123:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6122:28:16"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6170:0:16"
            },
            "scope": 826,
            "src": "6096:126:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "6306:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 516,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6316:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 517,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "6332:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6316:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 513,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6296:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6296:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "6237:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "6268:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "6254:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6253:33:16"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6306:0:16"
            },
            "scope": 826,
            "src": "6228:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 532,
              "nodeType": "Block",
              "src": "6432:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 528,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6442:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 529,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "6454:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6442:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "6442:25:16"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 533,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 525,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6422:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6422:9:16"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "6371:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "6398:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 533,
                  "src": "6390:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6390:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6389:23:16"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6432:0:16"
            },
            "scope": 826,
            "src": "6362:112:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "6548:48:16",
              "statements": [
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 540,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "6558:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 541,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "6573:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6558:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "6558:31:16"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 537,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6538:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6538:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "6489:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "6511:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "6505:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6505:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6504:24:16"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6548:0:16"
            },
            "scope": 826,
            "src": "6480:116:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "6679:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 555,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 547,
                                "src": "6703:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6697:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 553,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6697:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6697:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6697:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6729:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6697:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6732:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6689:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6689:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "6689:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6792:21:16",
                        "subExpression": {
                          "id": 564,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6793:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6815:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6784:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6784:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "6784:60:16"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6854:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 570,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "6871:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6854:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "6854:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 549,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6669:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6669:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "6611:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6643:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "6629:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6629:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6628:31:16"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6679:0:16"
            },
            "scope": 826,
            "src": "6602:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "6950:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 582,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6974:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6968:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 580,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6968:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6968:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6968:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6999:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6968:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7002:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6960:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6960:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "6960:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7050:21:16",
                        "subExpression": {
                          "id": 591,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7051:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7073:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7042:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7042:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "7042:68:16"
                },
                {
                  "expression": {
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7120:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7143:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7120:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "7120:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 601,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 576,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "6940:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6940:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6908:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6928:2:16"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6950:0:16"
            },
            "scope": 826,
            "src": "6899:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "7235:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7245:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "7264:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7245:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "7245:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 605,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "7225:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7225:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "7169:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "7197:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "7189:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7188:27:16"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7235:0:16"
            },
            "scope": 826,
            "src": "7160:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "7341:217:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 621,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7367:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$826",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$826",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7359:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 619,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7359:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7359:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7359:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7383:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7359:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7386:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7351:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7351:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "7351:60:16"
                },
                {
                  "assignments": [
                    630,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 630,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7427:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 650,
                      "src": "7422:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 629,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7422:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 644,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7501:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 633,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "7448:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7440:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7440:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7440:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "7440:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 638,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7486:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$826",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$826",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7478:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 636,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7478:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7478:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "7478:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "7440:60:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7440:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7421:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 646,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "7522:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776c206661696c65642e",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7531:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        },
                        "value": "Withdrawl failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        }
                      ],
                      "id": 645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7514:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7514:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "7514:37:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 616,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 615,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "7331:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7331:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "7303:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7311:2:16"
            },
            "returnParameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7341:0:16"
            },
            "scope": 826,
            "src": "7294:264:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 677,
              "nodeType": "Block",
              "src": "7615:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 660,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7633:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7657:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7633:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7663:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7625:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7625:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "7625:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 667,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7740:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7754:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7740:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7732:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7732:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "7732:78:16"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 673,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "7820:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 674,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "7828:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7820:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "7820:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 678,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 656,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 873,
                  "src": "7605:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7605:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "7573:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "7588:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "7582:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 652,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "7582:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "7582:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7581:14:16"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7615:0:16"
            },
            "scope": 826,
            "src": "7564:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 688,
              "nodeType": "Block",
              "src": "7936:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 684,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "7961:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7961:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 683,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1209,
                      "src": "7953:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7953:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 682,
                  "id": 687,
                  "nodeType": "Return",
                  "src": "7946:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7887:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7902:2:16"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 689,
                  "src": "7928:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7928:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7927:9:16"
            },
            "scope": 826,
            "src": "7878:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "8041:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 694,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "8058:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8058:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 696,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8057:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 693,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "8051:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7997:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8007:2:16"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "8033:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8033:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8032:9:16"
            },
            "scope": 826,
            "src": "7988:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1271
            ],
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8173:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 709,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "8199:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 708,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "8191:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8191:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8209:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8183:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8183:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 718,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "8301:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 719,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "8310:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2959,
                              "src": "8310:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8310:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 722,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8330:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 716,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8284:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8284:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8284:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8277:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 714,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8277:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8277:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 706,
                  "id": 725,
                  "nodeType": "Return",
                  "src": "8270:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8094:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8140:8:16"
            },
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8111:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8103:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8103:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8102:17:16"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "8158:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8158:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8157:15:16"
            },
            "scope": 826,
            "src": "8085:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "8415:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 732,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "8432:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 733,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1983,
                        "src": "8450:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8450:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8432:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 731,
                  "id": 736,
                  "nodeType": "Return",
                  "src": "8425:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "8367:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8380:2:16"
            },
            "returnParameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 738,
                  "src": "8406:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8406:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8405:9:16"
            },
            "scope": 826,
            "src": "8358:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "8559:274:16",
              "statements": [
                {
                  "assignments": [
                    747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "8577:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 785,
                      "src": "8569:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8569:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 751,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "8605:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 748,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "8595:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8569:42:16"
                },
                {
                  "assignments": [
                    756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 756,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8638:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 785,
                      "src": "8621:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 754,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8621:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 755,
                        "nodeType": "ArrayTypeName",
                        "src": "8621:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 762,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "8664:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8650:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 757,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8654:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 758,
                        "nodeType": "ArrayTypeName",
                        "src": "8654:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8650:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8621:59:16"
                },
                {
                  "body": {
                    "id": 781,
                    "nodeType": "Block",
                    "src": "8732:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 772,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "8746:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 774,
                            "indexExpression": {
                              "id": 773,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "8756:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8746:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 776,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 740,
                                "src": "8781:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 777,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "8788:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 775,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1972,
                              "src": "8761:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8761:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8746:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 780,
                        "nodeType": "ExpressionStatement",
                        "src": "8746:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 766,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "8706:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 767,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "8710:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8706:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "initializationExpression": {
                    "assignments": [
                      764
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8703:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "8695:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8695:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 765,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8695:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8727:3:16",
                      "subExpression": {
                        "id": 769,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "8727:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 771,
                    "nodeType": "ExpressionStatement",
                    "src": "8727:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8690:111:16"
                },
                {
                  "expression": {
                    "id": 783,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 756,
                    "src": "8817:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 745,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "8810:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "8489:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8511:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "8503:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8502:15:16"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "8541:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 742,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8541:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 743,
                    "nodeType": "ArrayTypeName",
                    "src": "8541:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8540:18:16"
            },
            "scope": 826,
            "src": "8480:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1893,
              2070
            ],
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "8974:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "9011:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 804,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "9017:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 805,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "9021:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 800,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8984:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$826_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2070,
                      "src": "8984:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8984:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "8984:45:16"
                }
              ]
            },
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 795,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 794,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 979,
                  "src": "8925:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8925:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8852:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 798,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 796,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1894,
                  "src": "8948:6:16"
                },
                {
                  "id": 797,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2232,
                  "src": "8956:16:16"
                }
              ],
              "src": "8939:34:16"
            },
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8881:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "8873:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8873:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8895:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "8887:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8887:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8907:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "8899:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8899:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8872:43:16"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8974:0:16"
            },
            "scope": 826,
            "src": "8843:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1157,
              1944
            ],
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "9219:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9260:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 819,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9236:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$826_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1944,
                      "src": "9236:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9236:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 818,
                  "id": 823,
                  "nodeType": "Return",
                  "src": "9229:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9119:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 815,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 813,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1894,
                  "src": "9178:6:16"
                },
                {
                  "id": 814,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2232,
                  "src": "9186:16:16"
                }
              ],
              "src": "9169:34:16"
            },
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9144:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "9137:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9137:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9136:20:16"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "9213:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 816,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9213:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9212:6:16"
            },
            "scope": 826,
            "src": "9110:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 827,
        "src": "710:8572:16",
        "usedErrors": []
      }
    ],
    "src": "32:9250:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001b8565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001b8565b5060118054610100600160b81b0319167612b58f5331a6dc897932aa7fb5101667acdf03e200000017905567016345785d8a00006017553480156200008e57600080fd5b5060405162003c5f38038062003c5f833981016040819052620000b1916200032b565b865187908790620000ca906000906020850190620001b8565b508051620000e0906001906020840190620001b8565b5050600a805460ff1916905550620000f83362000155565b6001600b556012849055601483905560168290556011805460ff191660ff831617905584516200013090600f906020880190620001b8565b5062000148600c620001af60201b620022ea1760201c565b5050505050505062000432565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001c690620003f5565b90600052602060002090601f016020900481019282620001ea576000855562000235565b82601f106200020557805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023557825182559160200191906001019062000218565b506200024392915062000247565b5090565b5b8082111562000243576000815560010162000248565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028657600080fd5b81516001600160401b0380821115620002a357620002a36200025e565b604051601f8301601f19908116603f01168101908282118183101715620002ce57620002ce6200025e565b81604052838152602092508683858801011115620002eb57600080fd5b600091505b838210156200030f5785820183015181830184015290820190620002f0565b83821115620003215760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200034757600080fd5b87516001600160401b03808211156200035f57600080fd5b6200036d8b838c0162000274565b985060208a01519150808211156200038457600080fd5b620003928b838c0162000274565b975060408a0151915080821115620003a957600080fd5b50620003b88a828b0162000274565b955050606088015193506080880151925060a0880151915060c088015160ff81168114620003e557600080fd5b8091505092959891949750929550565b600181811c908216806200040a57607f821691505b602082108114156200042c57634e487b7160e01b600052602260045260246000fd5b50919050565b61381d80620004426000396000f3fe60806040526004361061038c5760003560e01c80637b671780116101dc578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b14610a10578063f4efa3e614610a30578063f51f96dd14610a50578063ffa9cd3b14610a6657600080fd5b8063de5f986614610971578063de7fcb1d14610986578063e7bc8208146109b2578063e985e9c5146109c757600080fd5b8063c884ef83116100dc578063c884ef83146108ec578063ce3cd9971461091c578063d6d67a091461093c578063da3ef23f1461095157600080fd5b8063c6682862146108a2578063c6ab67a3146108b7578063c87b56dd146108cc57600080fd5b80639a2a9c3d1161017a578063bb31b77b11610149578063bb31b77b14610826578063c040e6b814610846578063c29de6301461086d578063c32145811461088c57600080fd5b80639a2a9c3d146107a6578063a22cb465146107c6578063b3caad01146107e6578063b88d4fde1461080657600080fd5b80638456cb59116101b65780638456cb5914610746578063858e83b51461075b5780638da5cb5b1461076e57806395d89b411461079157600080fd5b80637b671780146106f15780637cb647591461071157806381c162f21461073157600080fd5b80633f4ba83a116102c1578063622e4e781161025f57806370a082311161022e57806370a0823114610686578063715018a6146106a657806378231978146106bb578063791a2519146106d157600080fd5b8063622e4e781461061c5780636352211e1461063c5780636c0360eb1461065c5780636cbb89851461067157600080fd5b80634f6ccce71161029b5780634f6ccce7146105a457806355f804b3146105c457806357ed9e4e146105e45780635c975abb1461060457600080fd5b80633f4ba83a1461054257806342842e0e14610557578063438b63001461057757600080fd5b806320841a6a1161032e5780632f745c59116103085780632f745c59146104f157806333e6141314610511578063372f657c146105275780633ccfd60b1461053a57600080fd5b806320841a6a1461049b57806323b872dd146104bb5780632eb4a7ab146104db57600080fd5b8063088139a61161036a578063088139a614610420578063095ea7b314610444578063109695231461046657806318160ddd1461048657600080fd5b806301ffc9a71461039157806306fdde03146103c6578063081812fc146103e8575b600080fd5b34801561039d57600080fd5b506103b16103ac366004613035565b610a8d565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610a9e565b6040516103bd91906130b1565b3480156103f457600080fd5b506104086104033660046130c4565b610b30565b6040516001600160a01b0390911681526020016103bd565b34801561042c57600080fd5b5061043660155481565b6040519081526020016103bd565b34801561045057600080fd5b5061046461045f3660046130f9565b610bca565b005b34801561047257600080fd5b506104646104813660046131af565b610ce0565b34801561049257600080fd5b50600854610436565b3480156104a757600080fd5b506104646104b63660046130c4565b610de1565b3480156104c757600080fd5b506104646104d63660046131f8565b610e16565b3480156104e757600080fd5b50610436600d5481565b3480156104fd57600080fd5b5061043661050c3660046130f9565b610e47565b34801561051d57600080fd5b5061043660125481565b610464610535366004613234565b610edd565b610464611189565b34801561054e57600080fd5b506104646112a3565b34801561056357600080fd5b506104646105723660046131f8565b6112dd565b34801561058357600080fd5b506105976105923660046132a9565b6112f8565b6040516103bd91906132c4565b3480156105b057600080fd5b506104366105bf3660046130c4565b61139a565b3480156105d057600080fd5b506104646105df3660046131af565b61142d565b3480156105f057600080fd5b506104646105ff3660046132a9565b6114bd565b34801561061057600080fd5b50600a5460ff166103b1565b34801561062857600080fd5b50610464610637366004613319565b61150e565b34801561064857600080fd5b506104086106573660046130c4565b611554565b34801561066857600080fd5b506103db6115cb565b34801561067d57600080fd5b50610408611659565b34801561069257600080fd5b506104366106a13660046132a9565b61166c565b3480156106b257600080fd5b506104646116f3565b3480156106c757600080fd5b5061043660165481565b3480156106dd57600080fd5b506104646106ec3660046130c4565b61172d565b3480156106fd57600080fd5b5061046461070c366004613319565b611762565b34801561071d57600080fd5b5061046461072c3660046130c4565b6118c2565b34801561073d57600080fd5b506104646118f7565b34801561075257600080fd5b506104646119fc565b610464610769366004613319565b611a34565b34801561077a57600080fd5b50600a5461010090046001600160a01b0316610408565b34801561079d57600080fd5b506103db611c98565b3480156107b257600080fd5b506011546103b19062010000900460ff1681565b3480156107d257600080fd5b506104646107e1366004613334565b611ca7565b3480156107f257600080fd5b50610464610801366004613370565b611cb2565b34801561081257600080fd5b506104646108213660046133a3565b611df4565b34801561083257600080fd5b506104646108413660046132a9565b611e2c565b34801561085257600080fd5b506018546108609060ff1681565b6040516103bd9190613435565b34801561087957600080fd5b506011546103b190610100900460ff1681565b34801561089857600080fd5b5061043660145481565b3480156108ae57600080fd5b506103db611e80565b3480156108c357600080fd5b506103db611e8d565b3480156108d857600080fd5b506103db6108e73660046130c4565b611e9a565b3480156108f857600080fd5b506103b16109073660046132a9565b60136020526000908152604090205460ff1681565b34801561092857600080fd5b5061046461093736600461345d565b611f4f565b34801561094857600080fd5b50610436612093565b34801561095d57600080fd5b5061046461096c3660046131af565b61209e565b34801561097d57600080fd5b506104366120e1565b34801561099257600080fd5b506011546109a09060ff1681565b60405160ff90911681526020016103bd565b3480156109be57600080fd5b506104646120f9565b3480156109d357600080fd5b506103b16109e236600461347e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a1c57600080fd5b50610464610a2b3660046132a9565b6121f0565b348015610a3c57600080fd5b50610464610a4b3660046132a9565b61228e565b348015610a5c57600080fd5b5061043660175481565b348015610a7257600080fd5b5060115461040890630100000090046001600160a01b031681565b6000610a98826122f3565b92915050565b606060008054610aad9061349a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad99061349a565b8015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610bae5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bd582611554565b9050806001600160a01b0316836001600160a01b03161415610c435760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ba5565b336001600160a01b0382161480610c5f5750610c5f81336109e2565b610cd15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ba5565b610cdb8383612318565b505050565b600a546001600160a01b03610100909104163314610d105760405162461bcd60e51b8152600401610ba5906134d5565b6000815111610d715760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610ba5565b60115462010000900460ff1615610dca5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610ba5565b8051610ddd90600e906020840190612f86565b5050565b600a546001600160a01b03610100909104163314610e115760405162461bcd60e51b8152600401610ba5906134d5565b601455565b610e203382612386565b610e3c5760405162461bcd60e51b8152600401610ba59061350a565b610cdb83838361247d565b6000610e528361166c565b8210610eb45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ba5565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600d5482908290600260185460ff166004811115610efd57610efd61341f565b14610f4a5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610ba5565b6040516bffffffffffffffffffffffff193360601b166020820152610fc1908290603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506126289050565b61100d5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610ba5565b60175460013461101d8284613571565b146110665760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610ba5565b6002600b5414156110b95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba5565b6002600b55600a5460ff16156110e15760405162461bcd60e51b8152600401610ba590613590565b3360009081526013602052604090205460ff16156111415760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610ba5565b336000818152601360205260409020805460ff1916600117905561116d90611168600c5490565b61263e565b61117b600c80546001019055565b50506001600b555050505050565b600a546001600160a01b036101009091041633146111b95760405162461bcd60e51b8152600401610ba5906134d5565b600047116112025760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610ba5565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611256576040519150601f19603f3d011682016040523d82523d6000602084013e61125b565b606091505b50509050806112a05760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610ba5565b50565b600a546001600160a01b036101009091041633146112d35760405162461bcd60e51b8152600401610ba5906134d5565b6112db612658565b565b610cdb83838360405180602001604052806000815250611df4565b606060006113058361166c565b905060008167ffffffffffffffff81111561132257611322613123565b60405190808252806020026020018201604052801561134b578160200160208202803683370190505b50905060005b82811015611392576113638582610e47565b828281518110611375576113756135ba565b60209081029190910101528061138a816135d0565b915050611351565b509392505050565b60006113a560085490565b82106114085760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ba5565b6008828154811061141b5761141b6135ba565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461145d5760405162461bcd60e51b8152600401610ba5906134d5565b601154610100900460ff16156114aa5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610ba5565b8051610ddd90600f906020840190612f86565b600a546001600160a01b036101009091041633146114ed5760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b03166000908152601360205260409020805460ff19169055565b600a546001600160a01b0361010090910416331461153e5760405162461bcd60e51b8152600401610ba5906134d5565b6011805460ff191660ff92909216919091179055565b6000818152600260205260408120546001600160a01b031680610a985760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ba5565b600f80546115d89061349a565b80601f01602080910402602001604051908101604052809291908181526020018280546116049061349a565b80156116515780601f1061162657610100808354040283529160200191611651565b820191906000526020600020905b81548152906001019060200180831161163457829003601f168201915b505050505081565b600061166761065760085490565b905090565b60006001600160a01b0382166116d75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ba5565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146117235760405162461bcd60e51b8152600401610ba5906134d5565b6112db60006126eb565b600a546001600160a01b0361010090910416331461175d5760405162461bcd60e51b8152600401610ba5906134d5565b601755565b600a546001600160a01b036101009091041633146117925760405162461bcd60e51b8152600401610ba5906134d5565b600360185460ff1660048111156117ab576117ab61341f565b146117f85760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610ba5565b60145460155461180b9060ff84166135eb565b111561186d5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610ba5565b8060ff166015600082825461188291906135eb565b90915550600190505b8160ff168111610ddd576118a233611168600c5490565b6118b0600c80546001019055565b806118ba816135d0565b91505061188b565b600a546001600160a01b036101009091041633146118f25760405162461bcd60e51b8152600401610ba5906134d5565b600d55565b600a546001600160a01b036101009091041633146119275760405162461bcd60e51b8152600401610ba5906134d5565b6000600e80546119369061349a565b9050116119855760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610ba5565b60115462010000900460ff16156119e95760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610ba5565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611a2c5760405162461bcd60e51b8152600401610ba5906134d5565b6112db612745565b60175460ff821634611a468284613571565b14611a8f5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610ba5565b6002600b541415611ae25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba5565b6002600b55600a5460ff1615611b0a5760405162461bcd60e51b8152600401610ba590613590565b600460185460ff166004811115611b2357611b2361341f565b14611b705760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610ba5565b6016548360ff16611b8060085490565b611b8a91906135eb565b1115611be75760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610ba5565b60115460ff9081169084161115611c535760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610ba5565b60015b8360ff168111611c8d57611c6d33611168600c5490565b611c7b600c80546001019055565b80611c85816135d0565b915050611c56565b50506001600b555050565b606060018054610aad9061349a565b610ddd33838361279d565b600a546001600160a01b03610100909104163314611ce25760405162461bcd60e51b8152600401610ba5906134d5565b600060185460ff166004811115611cfb57611cfb61341f565b11611d3f5760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610ba5565b6016548260ff16611d4f60085490565b611d5991906135eb565b1115611dba5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610ba5565b60015b8260ff168111610cdb57611dd482611168600c5490565b611de2600c80546001019055565b80611dec816135d0565b915050611dbd565b611dfe3383612386565b611e1a5760405162461bcd60e51b8152600401610ba59061350a565b611e268484848461286c565b50505050565b600a546001600160a01b03610100909104163314611e5c5760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b601080546115d89061349a565b600e80546115d89061349a565b6000818152600260205260409020546060906001600160a01b0316611f1a5760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610ba5565b600f611f258361289f565b6010604051602001611f399392919061369d565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f7f5760405162461bcd60e51b8152600401610ba5906134d5565b60115462010000900460ff1615156001146120025760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610ba5565b600d5461206c5760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610ba5565b6018805482919060ff1916600183600481111561208b5761208b61341f565b021790555050565b600061166760085490565b600a546001600160a01b036101009091041633146120ce5760405162461bcd60e51b8152600401610ba5906134d5565b8051610ddd906010906020840190612f86565b60006120ec60085490565b60165461166791906136d0565b600a546001600160a01b036101009091041633146121295760405162461bcd60e51b8152600401610ba5906134d5565b6000600f80546121389061349a565b9050116121875760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610ba5565b601154610100900460ff16156121df5760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610ba5565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146122205760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b0381166122855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ba5565b6112a0816126eb565b600a546001600160a01b036101009091041633146122be5760405162461bcd60e51b8152600401610ba5906134d5565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a985750610a988261299d565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061234d82611554565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123ff5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ba5565b600061240a83611554565b9050806001600160a01b0316846001600160a01b031614806124455750836001600160a01b031661243a84610b30565b6001600160a01b0316145b8061247557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661249082611554565b6001600160a01b0316146124f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ba5565b6001600160a01b03821661255a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ba5565b6125658383836129ed565b612570600082612318565b6001600160a01b03831660009081526003602052604081208054600192906125999084906136d0565b90915550506001600160a01b03821660009081526003602052604081208054600192906125c79084906135eb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000826126358584612a1b565b14949350505050565b610ddd828260405180602001604052806000815250612abf565b600a5460ff166126a15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ba5565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127685760405162461bcd60e51b8152600401610ba590613590565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126ce3390565b816001600160a01b0316836001600160a01b031614156127ff5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ba5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61287784848461247d565b61288384848484612af2565b611e265760405162461bcd60e51b8152600401610ba5906136e7565b6060816128c35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128ed57806128d7816135d0565b91506128e69050600a8361374f565b91506128c7565b60008167ffffffffffffffff81111561290857612908613123565b6040519080825280601f01601f191660200182016040528015612932576020820181803683370190505b5090505b8415612475576129476001836136d0565b9150612954600a86613763565b61295f9060306135eb565b60f81b818381518110612974576129746135ba565b60200101906001600160f81b031916908160001a905350612996600a8661374f565b9450612936565b60006001600160e01b031982166380ac58cd60e01b14806129ce57506001600160e01b03198216635b5e139f60e01b145b80610a9857506301ffc9a760e01b6001600160e01b0319831614610a98565b600a5460ff1615612a105760405162461bcd60e51b8152600401610ba590613590565b610cdb838383612bf0565b600081815b8451811015611392576000858281518110612a3d57612a3d6135ba565b60200260200101519050808311612a7f576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612aac565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080612ab7816135d0565b915050612a20565b612ac98383612ca8565b612ad66000848484612af2565b610cdb5760405162461bcd60e51b8152600401610ba5906136e7565b60006001600160a01b0384163b15612be557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612b36903390899088908890600401613777565b6020604051808303816000875af1925050508015612b71575060408051601f3d908101601f19168201909252612b6e918101906137b4565b60015b612bcb573d808015612b9f576040519150601f19603f3d011682016040523d82523d6000602084013e612ba4565b606091505b508051612bc35760405162461bcd60e51b8152600401610ba5906136e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612475565b506001949350505050565b6001600160a01b038316612c4b57612c4681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c6e565b816001600160a01b0316836001600160a01b031614612c6e57612c6e8382612df6565b6001600160a01b038216612c8557610cdb81612e93565b826001600160a01b0316826001600160a01b031614610cdb57610cdb8282612f42565b6001600160a01b038216612cfe5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ba5565b6000818152600260205260409020546001600160a01b031615612d635760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ba5565b612d6f600083836129ed565b6001600160a01b0382166000908152600360205260408120805460019290612d989084906135eb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612e038461166c565b612e0d91906136d0565b600083815260076020526040902054909150808214612e60576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612ea5906001906136d0565b60008381526009602052604081205460088054939450909284908110612ecd57612ecd6135ba565b906000526020600020015490508060088381548110612eee57612eee6135ba565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612f2657612f266137d1565b6001900381819060005260206000200160009055905550505050565b6000612f4d8361166c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f929061349a565b90600052602060002090601f016020900481019282612fb45760008555612ffa565b82601f10612fcd57805160ff1916838001178555612ffa565b82800160010185558215612ffa579182015b82811115612ffa578251825591602001919060010190612fdf565b5061300692915061300a565b5090565b5b80821115613006576000815560010161300b565b6001600160e01b0319811681146112a057600080fd5b60006020828403121561304757600080fd5b81356130528161301f565b9392505050565b60005b8381101561307457818101518382015260200161305c565b83811115611e265750506000910152565b6000815180845261309d816020860160208601613059565b601f01601f19169290920160200192915050565b6020815260006130526020830184613085565b6000602082840312156130d657600080fd5b5035919050565b80356001600160a01b03811681146130f457600080fd5b919050565b6000806040838503121561310c57600080fd5b613115836130dd565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561315457613154613123565b604051601f8501601f19908116603f0116810190828211818310171561317c5761317c613123565b8160405280935085815286868601111561319557600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156131c157600080fd5b813567ffffffffffffffff8111156131d857600080fd5b8201601f810184136131e957600080fd5b61247584823560208401613139565b60008060006060848603121561320d57600080fd5b613216846130dd565b9250613224602085016130dd565b9150604084013590509250925092565b6000806020838503121561324757600080fd5b823567ffffffffffffffff8082111561325f57600080fd5b818501915085601f83011261327357600080fd5b81358181111561328257600080fd5b8660208260051b850101111561329757600080fd5b60209290920196919550909350505050565b6000602082840312156132bb57600080fd5b613052826130dd565b6020808252825182820181905260009190848201906040850190845b818110156132fc578351835292840192918401916001016132e0565b50909695505050505050565b803560ff811681146130f457600080fd5b60006020828403121561332b57600080fd5b61305282613308565b6000806040838503121561334757600080fd5b613350836130dd565b91506020830135801515811461336557600080fd5b809150509250929050565b6000806040838503121561338357600080fd5b61338c83613308565b915061339a602084016130dd565b90509250929050565b600080600080608085870312156133b957600080fd5b6133c2856130dd565b93506133d0602086016130dd565b925060408501359150606085013567ffffffffffffffff8111156133f357600080fd5b8501601f8101871361340457600080fd5b61341387823560208401613139565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016005831061345757634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561346f57600080fd5b81356005811061305257600080fd5b6000806040838503121561349157600080fd5b61338c836130dd565b600181811c908216806134ae57607f821691505b602082108114156134cf57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561358b5761358b61355b565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156135e4576135e461355b565b5060010190565b600082198211156135fe576135fe61355b565b500190565b8054600090600181811c908083168061361d57607f831692505b602080841082141561363f57634e487b7160e01b600052602260045260246000fd5b818015613653576001811461366457613691565b60ff19861689528489019650613691565b60008881526020902060005b868110156136895781548b820152908501908301613670565b505084890196505b50505050505092915050565b60006136a98286613603565b84516136b9818360208901613059565b6136c581830186613603565b979650505050505050565b6000828210156136e2576136e261355b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261375e5761375e613739565b500490565b60008261377257613772613739565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137aa90830184613085565b9695505050505050565b6000602082840312156137c657600080fd5b81516130528161301f565b634e487b7160e01b600052603160045260246000fdfea264697066735822122054889b84a95abb224115561856c440ec20847aa42ea7bd7040c721d45f14a46264736f6c634300080a0033",
  "bytecodeSha1": "6a36d61bab02fc9e98ca8e72b84f114d46fb0c8f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "193": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "195": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "192": [
            1628,
            1656,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "167": [
            3116,
            3134,
            true
          ],
          "168": [
            3177,
            3223,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "170": [
            5934,
            5959,
            true
          ],
          "171": [
            6006,
            6021,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "162": [
            6968,
            7000,
            true
          ],
          "163": [
            7050,
            7071,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "164": [
            4706,
            4731,
            true
          ],
          "165": [
            4780,
            4826,
            true
          ],
          "166": [
            4887,
            4913,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "159": [
            5785,
            5800,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "152": [
            6697,
            6730,
            true
          ],
          "153": [
            6792,
            6813,
            true
          ]
        },
        "CryptidToken.setStage": {
          "169": [
            7633,
            7661,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "160": [
            4091,
            4114,
            true
          ],
          "161": [
            4161,
            4205,
            true
          ]
        },
        "CryptidToken.whitelistMint": {
          "154": [
            2590,
            2614,
            true
          ],
          "155": [
            2666,
            2725,
            true
          ],
          "156": [
            3745,
            3773,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "157": [
            7359,
            7384,
            true
          ],
          "158": [
            7522,
            7529,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.publicMint": {
          "194": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "184": [
            9141,
            9157,
            true
          ]
        },
        "ERC721._safeMint": {
          "183": [
            8603,
            8657,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "182": [
            6730,
            6778,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "181": [
            11441,
            11458,
            true
          ]
        },
        "ERC721._transfer": {
          "179": [
            10450,
            10481,
            true
          ],
          "180": [
            10545,
            10561,
            true
          ]
        },
        "ERC721.approve": {
          "172": [
            3659,
            3670,
            true
          ],
          "173": [
            3740,
            3761,
            true
          ],
          "174": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "177": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "176": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "178": [
            5520,
            5561,
            true
          ]
        },
        "ERC721.transferFrom": {
          "175": [
            4899,
            4940,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "187": [
            2823,
            2841,
            false
          ],
          "188": [
            2918,
            2928,
            false
          ],
          "189": [
            3015,
            3031,
            false
          ],
          "190": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "191": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "186": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "185": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "104": [
            2378,
            2395
          ],
          "105": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "44": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "84": [
            1998,
            2071
          ],
          "85": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "106": [
            1922,
            1936
          ],
          "107": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "102": [
            2168,
            2183
          ],
          "103": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "24": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "26": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "113": [
            627,
            637
          ],
          "114": [
            743,
            751
          ],
          "115": [
            765,
            775
          ],
          "116": [
            877,
            888
          ],
          "117": [
            902,
            958
          ],
          "118": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "122": [
            1754,
            1824
          ],
          "123": [
            1941,
            2011
          ],
          "124": [
            1560,
            1563
          ]
        },
        "MerkleProof.verify": {
          "100": [
            984,
            1024
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "120": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "121": [
            8984,
            9029
          ]
        },
        "CryptidToken.airdropCryptid": {
          "65": [
            3108,
            3159
          ],
          "66": [
            3169,
            3270
          ],
          "67": [
            3336,
            3376
          ],
          "68": [
            3390,
            3417
          ],
          "69": [
            3317,
            3320
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "81": [
            5926,
            5988
          ],
          "82": [
            5998,
            6052
          ],
          "83": [
            6062,
            6083
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "53": [
            6960,
            7032
          ],
          "54": [
            7042,
            7110
          ],
          "55": [
            7120,
            7147
          ]
        },
        "CryptidToken.getTokensLeft": {
          "80": [
            8425,
            8463
          ]
        },
        "CryptidToken.lastMintAddress": {
          "41": [
            7946,
            7975
          ]
        },
        "CryptidToken.lastMintID": {
          "78": [
            8051,
            8072
          ]
        },
        "CryptidToken.pause": {
          "56": [
            5208,
            5216
          ]
        },
        "CryptidToken.publicMint": {
          "57": [
            4698,
            4762
          ],
          "58": [
            4772,
            4869
          ],
          "59": [
            4879,
            4960
          ],
          "60": [
            5028,
            5076
          ],
          "61": [
            5090,
            5117
          ],
          "62": [
            5009,
            5012
          ]
        },
        "CryptidToken.setBaseExtension": {
          "79": [
            6316,
            6349
          ]
        },
        "CryptidToken.setBaseURI": {
          "36": [
            5777,
            5823
          ],
          "37": [
            5833,
            5854
          ]
        },
        "CryptidToken.setClaim": {
          "72": [
            5410,
            5435
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "39": [
            6558,
            6589
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "52": [
            5664,
            5688
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "13": [
            6689,
            6774
          ],
          "14": [
            6784,
            6844
          ],
          "15": [
            6854,
            6886
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "45": [
            6442,
            6467
          ]
        },
        "CryptidToken.setStage": {
          "75": [
            7625,
            7722
          ],
          "76": [
            7732,
            7810
          ],
          "77": [
            7820,
            7834
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "16": [
            6180,
            6215
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "86": [
            7245,
            7281
          ]
        },
        "CryptidToken.supportsInterface": {
          "4": [
            9229,
            9272
          ]
        },
        "CryptidToken.teamMint": {
          "46": [
            4083,
            4143
          ],
          "47": [
            4153,
            4253
          ],
          "48": [
            4268,
            4295
          ],
          "49": [
            4361,
            4409
          ],
          "50": [
            4423,
            4450
          ],
          "51": [
            4342,
            4345
          ]
        },
        "CryptidToken.tokenURI": {
          "73": [
            8183,
            8260
          ],
          "74": [
            8270,
            8345
          ]
        },
        "CryptidToken.undoClaim": {
          "38": [
            5552,
            5578
          ]
        },
        "CryptidToken.unpause": {
          "29": [
            5277,
            5287
          ]
        },
        "CryptidToken.walletOfOwner": {
          "31": [
            8746,
            8790
          ],
          "32": [
            8727,
            8730
          ],
          "33": [
            8810,
            8826
          ]
        },
        "CryptidToken.whitelistMint": {
          "21": [
            3737,
            3809
          ],
          "22": [
            3820,
            3846
          ],
          "23": [
            3856,
            3904
          ],
          "25": [
            3914,
            3941
          ]
        },
        "CryptidToken.withdraw": {
          "27": [
            7351,
            7411
          ],
          "28": [
            7514,
            7551
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "88": [
            11068,
            11097
          ],
          "89": [
            11107,
            11158
          ]
        },
        "ERC721._checkOnERC721Received": {
          "127": [
            12646,
            12706
          ],
          "128": [
            12480,
            12538
          ],
          "129": [
            12910,
            12921
          ]
        },
        "ERC721._exists": {
          "6": [
            7224,
            7261
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "90": [
            7535,
            7608
          ],
          "91": [
            7667,
            7763
          ]
        },
        "ERC721._mint": {
          "136": [
            9133,
            9194
          ],
          "137": [
            9204,
            9262
          ],
          "138": [
            9273,
            9318
          ],
          "139": [
            9329,
            9347
          ],
          "140": [
            9357,
            9378
          ],
          "141": [
            9389,
            9427
          ]
        },
        "ERC721._safeMint": {
          "101": [
            8175,
            8201
          ],
          "125": [
            8554,
            8572
          ],
          "126": [
            8582,
            8733
          ]
        },
        "ERC721._safeTransfer": {
          "111": [
            6684,
            6712
          ],
          "112": [
            6722,
            6833
          ]
        },
        "ERC721._setApprovalForAll": {
          "108": [
            11433,
            11488
          ],
          "109": [
            11498,
            11544
          ],
          "110": [
            11554,
            11600
          ]
        },
        "ERC721._transfer": {
          "92": [
            10442,
            10527
          ],
          "93": [
            10537,
            10602
          ],
          "94": [
            10613,
            10652
          ],
          "95": [
            10714,
            10743
          ],
          "96": [
            10754,
            10774
          ],
          "97": [
            10784,
            10802
          ],
          "98": [
            10812,
            10833
          ],
          "99": [
            10844,
            10876
          ]
        },
        "ERC721.approve": {
          "9": [
            3651,
            3708
          ],
          "11": [
            3719,
            3884
          ],
          "12": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "42": [
            2005,
            2079
          ],
          "43": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4079,
            4152
          ],
          "8": [
            4162,
            4193
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4599,
            4641
          ]
        },
        "ERC721.name": {
          "5": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "40": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "30": [
            5239,
            5278
          ],
          "70": [
            5512,
            5615
          ],
          "71": [
            5625,
            5664
          ]
        },
        "ERC721.setApprovalForAll": {
          "64": [
            4361,
            4413
          ]
        },
        "ERC721.supportsInterface": {
          "119": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "63": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            4891,
            4994
          ],
          "18": [
            5005,
            5033
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "131": [
            3978,
            4022
          ],
          "132": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "150": [
            3621,
            3655
          ],
          "151": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "130": [
            2857,
            2897
          ],
          "133": [
            2944,
            2991
          ],
          "134": [
            3047,
            3092
          ],
          "135": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "146": [
            6669,
            6705
          ],
          "147": [
            6773,
            6814
          ],
          "148": [
            6935,
            6966
          ],
          "149": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "142": [
            5269,
            5313
          ],
          "143": [
            5385,
            5428
          ],
          "144": [
            5559,
            5592
          ],
          "145": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "87": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "34": [
            1892,
            1987
          ],
          "35": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "19": [
            1407,
            1494
          ],
          "20": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "60806040526004361061038c5760003560e01c80637b671780116101dc578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b14610a10578063f4efa3e614610a30578063f51f96dd14610a50578063ffa9cd3b14610a6657600080fd5b8063de5f986614610971578063de7fcb1d14610986578063e7bc8208146109b2578063e985e9c5146109c757600080fd5b8063c884ef83116100dc578063c884ef83146108ec578063ce3cd9971461091c578063d6d67a091461093c578063da3ef23f1461095157600080fd5b8063c6682862146108a2578063c6ab67a3146108b7578063c87b56dd146108cc57600080fd5b80639a2a9c3d1161017a578063bb31b77b11610149578063bb31b77b14610826578063c040e6b814610846578063c29de6301461086d578063c32145811461088c57600080fd5b80639a2a9c3d146107a6578063a22cb465146107c6578063b3caad01146107e6578063b88d4fde1461080657600080fd5b80638456cb59116101b65780638456cb5914610746578063858e83b51461075b5780638da5cb5b1461076e57806395d89b411461079157600080fd5b80637b671780146106f15780637cb647591461071157806381c162f21461073157600080fd5b80633f4ba83a116102c1578063622e4e781161025f57806370a082311161022e57806370a0823114610686578063715018a6146106a657806378231978146106bb578063791a2519146106d157600080fd5b8063622e4e781461061c5780636352211e1461063c5780636c0360eb1461065c5780636cbb89851461067157600080fd5b80634f6ccce71161029b5780634f6ccce7146105a457806355f804b3146105c457806357ed9e4e146105e45780635c975abb1461060457600080fd5b80633f4ba83a1461054257806342842e0e14610557578063438b63001461057757600080fd5b806320841a6a1161032e5780632f745c59116103085780632f745c59146104f157806333e6141314610511578063372f657c146105275780633ccfd60b1461053a57600080fd5b806320841a6a1461049b57806323b872dd146104bb5780632eb4a7ab146104db57600080fd5b8063088139a61161036a578063088139a614610420578063095ea7b314610444578063109695231461046657806318160ddd1461048657600080fd5b806301ffc9a71461039157806306fdde03146103c6578063081812fc146103e8575b600080fd5b34801561039d57600080fd5b506103b16103ac366004613035565b610a8d565b60405190151581526020015b60405180910390f35b3480156103d257600080fd5b506103db610a9e565b6040516103bd91906130b1565b3480156103f457600080fd5b506104086104033660046130c4565b610b30565b6040516001600160a01b0390911681526020016103bd565b34801561042c57600080fd5b5061043660155481565b6040519081526020016103bd565b34801561045057600080fd5b5061046461045f3660046130f9565b610bca565b005b34801561047257600080fd5b506104646104813660046131af565b610ce0565b34801561049257600080fd5b50600854610436565b3480156104a757600080fd5b506104646104b63660046130c4565b610de1565b3480156104c757600080fd5b506104646104d63660046131f8565b610e16565b3480156104e757600080fd5b50610436600d5481565b3480156104fd57600080fd5b5061043661050c3660046130f9565b610e47565b34801561051d57600080fd5b5061043660125481565b610464610535366004613234565b610edd565b610464611189565b34801561054e57600080fd5b506104646112a3565b34801561056357600080fd5b506104646105723660046131f8565b6112dd565b34801561058357600080fd5b506105976105923660046132a9565b6112f8565b6040516103bd91906132c4565b3480156105b057600080fd5b506104366105bf3660046130c4565b61139a565b3480156105d057600080fd5b506104646105df3660046131af565b61142d565b3480156105f057600080fd5b506104646105ff3660046132a9565b6114bd565b34801561061057600080fd5b50600a5460ff166103b1565b34801561062857600080fd5b50610464610637366004613319565b61150e565b34801561064857600080fd5b506104086106573660046130c4565b611554565b34801561066857600080fd5b506103db6115cb565b34801561067d57600080fd5b50610408611659565b34801561069257600080fd5b506104366106a13660046132a9565b61166c565b3480156106b257600080fd5b506104646116f3565b3480156106c757600080fd5b5061043660165481565b3480156106dd57600080fd5b506104646106ec3660046130c4565b61172d565b3480156106fd57600080fd5b5061046461070c366004613319565b611762565b34801561071d57600080fd5b5061046461072c3660046130c4565b6118c2565b34801561073d57600080fd5b506104646118f7565b34801561075257600080fd5b506104646119fc565b610464610769366004613319565b611a34565b34801561077a57600080fd5b50600a5461010090046001600160a01b0316610408565b34801561079d57600080fd5b506103db611c98565b3480156107b257600080fd5b506011546103b19062010000900460ff1681565b3480156107d257600080fd5b506104646107e1366004613334565b611ca7565b3480156107f257600080fd5b50610464610801366004613370565b611cb2565b34801561081257600080fd5b506104646108213660046133a3565b611df4565b34801561083257600080fd5b506104646108413660046132a9565b611e2c565b34801561085257600080fd5b506018546108609060ff1681565b6040516103bd9190613435565b34801561087957600080fd5b506011546103b190610100900460ff1681565b34801561089857600080fd5b5061043660145481565b3480156108ae57600080fd5b506103db611e80565b3480156108c357600080fd5b506103db611e8d565b3480156108d857600080fd5b506103db6108e73660046130c4565b611e9a565b3480156108f857600080fd5b506103b16109073660046132a9565b60136020526000908152604090205460ff1681565b34801561092857600080fd5b5061046461093736600461345d565b611f4f565b34801561094857600080fd5b50610436612093565b34801561095d57600080fd5b5061046461096c3660046131af565b61209e565b34801561097d57600080fd5b506104366120e1565b34801561099257600080fd5b506011546109a09060ff1681565b60405160ff90911681526020016103bd565b3480156109be57600080fd5b506104646120f9565b3480156109d357600080fd5b506103b16109e236600461347e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a1c57600080fd5b50610464610a2b3660046132a9565b6121f0565b348015610a3c57600080fd5b50610464610a4b3660046132a9565b61228e565b348015610a5c57600080fd5b5061043660175481565b348015610a7257600080fd5b5060115461040890630100000090046001600160a01b031681565b6000610a98826122f3565b92915050565b606060008054610aad9061349a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad99061349a565b8015610b265780601f10610afb57610100808354040283529160200191610b26565b820191906000526020600020905b815481529060010190602001808311610b0957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610bae5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bd582611554565b9050806001600160a01b0316836001600160a01b03161415610c435760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ba5565b336001600160a01b0382161480610c5f5750610c5f81336109e2565b610cd15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ba5565b610cdb8383612318565b505050565b600a546001600160a01b03610100909104163314610d105760405162461bcd60e51b8152600401610ba5906134d5565b6000815111610d715760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610ba5565b60115462010000900460ff1615610dca5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610ba5565b8051610ddd90600e906020840190612f86565b5050565b600a546001600160a01b03610100909104163314610e115760405162461bcd60e51b8152600401610ba5906134d5565b601455565b610e203382612386565b610e3c5760405162461bcd60e51b8152600401610ba59061350a565b610cdb83838361247d565b6000610e528361166c565b8210610eb45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ba5565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600d5482908290600260185460ff166004811115610efd57610efd61341f565b14610f4a5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610ba5565b6040516bffffffffffffffffffffffff193360601b166020820152610fc1908290603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506126289050565b61100d5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610ba5565b60175460013461101d8284613571565b146110665760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610ba5565b6002600b5414156110b95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba5565b6002600b55600a5460ff16156110e15760405162461bcd60e51b8152600401610ba590613590565b3360009081526013602052604090205460ff16156111415760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610ba5565b336000818152601360205260409020805460ff1916600117905561116d90611168600c5490565b61263e565b61117b600c80546001019055565b50506001600b555050505050565b600a546001600160a01b036101009091041633146111b95760405162461bcd60e51b8152600401610ba5906134d5565b600047116112025760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610ba5565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611256576040519150601f19603f3d011682016040523d82523d6000602084013e61125b565b606091505b50509050806112a05760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610ba5565b50565b600a546001600160a01b036101009091041633146112d35760405162461bcd60e51b8152600401610ba5906134d5565b6112db612658565b565b610cdb83838360405180602001604052806000815250611df4565b606060006113058361166c565b905060008167ffffffffffffffff81111561132257611322613123565b60405190808252806020026020018201604052801561134b578160200160208202803683370190505b50905060005b82811015611392576113638582610e47565b828281518110611375576113756135ba565b60209081029190910101528061138a816135d0565b915050611351565b509392505050565b60006113a560085490565b82106114085760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ba5565b6008828154811061141b5761141b6135ba565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461145d5760405162461bcd60e51b8152600401610ba5906134d5565b601154610100900460ff16156114aa5760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610ba5565b8051610ddd90600f906020840190612f86565b600a546001600160a01b036101009091041633146114ed5760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b03166000908152601360205260409020805460ff19169055565b600a546001600160a01b0361010090910416331461153e5760405162461bcd60e51b8152600401610ba5906134d5565b6011805460ff191660ff92909216919091179055565b6000818152600260205260408120546001600160a01b031680610a985760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ba5565b600f80546115d89061349a565b80601f01602080910402602001604051908101604052809291908181526020018280546116049061349a565b80156116515780601f1061162657610100808354040283529160200191611651565b820191906000526020600020905b81548152906001019060200180831161163457829003601f168201915b505050505081565b600061166761065760085490565b905090565b60006001600160a01b0382166116d75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ba5565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146117235760405162461bcd60e51b8152600401610ba5906134d5565b6112db60006126eb565b600a546001600160a01b0361010090910416331461175d5760405162461bcd60e51b8152600401610ba5906134d5565b601755565b600a546001600160a01b036101009091041633146117925760405162461bcd60e51b8152600401610ba5906134d5565b600360185460ff1660048111156117ab576117ab61341f565b146117f85760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610ba5565b60145460155461180b9060ff84166135eb565b111561186d5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610ba5565b8060ff166015600082825461188291906135eb565b90915550600190505b8160ff168111610ddd576118a233611168600c5490565b6118b0600c80546001019055565b806118ba816135d0565b91505061188b565b600a546001600160a01b036101009091041633146118f25760405162461bcd60e51b8152600401610ba5906134d5565b600d55565b600a546001600160a01b036101009091041633146119275760405162461bcd60e51b8152600401610ba5906134d5565b6000600e80546119369061349a565b9050116119855760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610ba5565b60115462010000900460ff16156119e95760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610ba5565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611a2c5760405162461bcd60e51b8152600401610ba5906134d5565b6112db612745565b60175460ff821634611a468284613571565b14611a8f5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610ba5565b6002600b541415611ae25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ba5565b6002600b55600a5460ff1615611b0a5760405162461bcd60e51b8152600401610ba590613590565b600460185460ff166004811115611b2357611b2361341f565b14611b705760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610ba5565b6016548360ff16611b8060085490565b611b8a91906135eb565b1115611be75760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610ba5565b60115460ff9081169084161115611c535760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610ba5565b60015b8360ff168111611c8d57611c6d33611168600c5490565b611c7b600c80546001019055565b80611c85816135d0565b915050611c56565b50506001600b555050565b606060018054610aad9061349a565b610ddd33838361279d565b600a546001600160a01b03610100909104163314611ce25760405162461bcd60e51b8152600401610ba5906134d5565b600060185460ff166004811115611cfb57611cfb61341f565b11611d3f5760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610ba5565b6016548260ff16611d4f60085490565b611d5991906135eb565b1115611dba5760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610ba5565b60015b8260ff168111610cdb57611dd482611168600c5490565b611de2600c80546001019055565b80611dec816135d0565b915050611dbd565b611dfe3383612386565b611e1a5760405162461bcd60e51b8152600401610ba59061350a565b611e268484848461286c565b50505050565b600a546001600160a01b03610100909104163314611e5c5760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b601080546115d89061349a565b600e80546115d89061349a565b6000818152600260205260409020546060906001600160a01b0316611f1a5760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610ba5565b600f611f258361289f565b6010604051602001611f399392919061369d565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f7f5760405162461bcd60e51b8152600401610ba5906134d5565b60115462010000900460ff1615156001146120025760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610ba5565b600d5461206c5760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610ba5565b6018805482919060ff1916600183600481111561208b5761208b61341f565b021790555050565b600061166760085490565b600a546001600160a01b036101009091041633146120ce5760405162461bcd60e51b8152600401610ba5906134d5565b8051610ddd906010906020840190612f86565b60006120ec60085490565b60165461166791906136d0565b600a546001600160a01b036101009091041633146121295760405162461bcd60e51b8152600401610ba5906134d5565b6000600f80546121389061349a565b9050116121875760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610ba5565b601154610100900460ff16156121df5760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610ba5565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146122205760405162461bcd60e51b8152600401610ba5906134d5565b6001600160a01b0381166122855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ba5565b6112a0816126eb565b600a546001600160a01b036101009091041633146122be5760405162461bcd60e51b8152600401610ba5906134d5565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a985750610a988261299d565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061234d82611554565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123ff5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ba5565b600061240a83611554565b9050806001600160a01b0316846001600160a01b031614806124455750836001600160a01b031661243a84610b30565b6001600160a01b0316145b8061247557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661249082611554565b6001600160a01b0316146124f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ba5565b6001600160a01b03821661255a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ba5565b6125658383836129ed565b612570600082612318565b6001600160a01b03831660009081526003602052604081208054600192906125999084906136d0565b90915550506001600160a01b03821660009081526003602052604081208054600192906125c79084906135eb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000826126358584612a1b565b14949350505050565b610ddd828260405180602001604052806000815250612abf565b600a5460ff166126a15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ba5565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127685760405162461bcd60e51b8152600401610ba590613590565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126ce3390565b816001600160a01b0316836001600160a01b031614156127ff5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ba5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61287784848461247d565b61288384848484612af2565b611e265760405162461bcd60e51b8152600401610ba5906136e7565b6060816128c35750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128ed57806128d7816135d0565b91506128e69050600a8361374f565b91506128c7565b60008167ffffffffffffffff81111561290857612908613123565b6040519080825280601f01601f191660200182016040528015612932576020820181803683370190505b5090505b8415612475576129476001836136d0565b9150612954600a86613763565b61295f9060306135eb565b60f81b818381518110612974576129746135ba565b60200101906001600160f81b031916908160001a905350612996600a8661374f565b9450612936565b60006001600160e01b031982166380ac58cd60e01b14806129ce57506001600160e01b03198216635b5e139f60e01b145b80610a9857506301ffc9a760e01b6001600160e01b0319831614610a98565b600a5460ff1615612a105760405162461bcd60e51b8152600401610ba590613590565b610cdb838383612bf0565b600081815b8451811015611392576000858281518110612a3d57612a3d6135ba565b60200260200101519050808311612a7f576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612aac565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080612ab7816135d0565b915050612a20565b612ac98383612ca8565b612ad66000848484612af2565b610cdb5760405162461bcd60e51b8152600401610ba5906136e7565b60006001600160a01b0384163b15612be557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612b36903390899088908890600401613777565b6020604051808303816000875af1925050508015612b71575060408051601f3d908101601f19168201909252612b6e918101906137b4565b60015b612bcb573d808015612b9f576040519150601f19603f3d011682016040523d82523d6000602084013e612ba4565b606091505b508051612bc35760405162461bcd60e51b8152600401610ba5906136e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612475565b506001949350505050565b6001600160a01b038316612c4b57612c4681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612c6e565b816001600160a01b0316836001600160a01b031614612c6e57612c6e8382612df6565b6001600160a01b038216612c8557610cdb81612e93565b826001600160a01b0316826001600160a01b031614610cdb57610cdb8282612f42565b6001600160a01b038216612cfe5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ba5565b6000818152600260205260409020546001600160a01b031615612d635760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ba5565b612d6f600083836129ed565b6001600160a01b0382166000908152600360205260408120805460019290612d989084906135eb565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612e038461166c565b612e0d91906136d0565b600083815260076020526040902054909150808214612e60576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612ea5906001906136d0565b60008381526009602052604081205460088054939450909284908110612ecd57612ecd6135ba565b906000526020600020015490508060088381548110612eee57612eee6135ba565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612f2657612f266137d1565b6001900381819060005260206000200160009055905550505050565b6000612f4d8361166c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f929061349a565b90600052602060002090601f016020900481019282612fb45760008555612ffa565b82601f10612fcd57805160ff1916838001178555612ffa565b82800160010185558215612ffa579182015b82811115612ffa578251825591602001919060010190612fdf565b5061300692915061300a565b5090565b5b80821115613006576000815560010161300b565b6001600160e01b0319811681146112a057600080fd5b60006020828403121561304757600080fd5b81356130528161301f565b9392505050565b60005b8381101561307457818101518382015260200161305c565b83811115611e265750506000910152565b6000815180845261309d816020860160208601613059565b601f01601f19169290920160200192915050565b6020815260006130526020830184613085565b6000602082840312156130d657600080fd5b5035919050565b80356001600160a01b03811681146130f457600080fd5b919050565b6000806040838503121561310c57600080fd5b613115836130dd565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561315457613154613123565b604051601f8501601f19908116603f0116810190828211818310171561317c5761317c613123565b8160405280935085815286868601111561319557600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156131c157600080fd5b813567ffffffffffffffff8111156131d857600080fd5b8201601f810184136131e957600080fd5b61247584823560208401613139565b60008060006060848603121561320d57600080fd5b613216846130dd565b9250613224602085016130dd565b9150604084013590509250925092565b6000806020838503121561324757600080fd5b823567ffffffffffffffff8082111561325f57600080fd5b818501915085601f83011261327357600080fd5b81358181111561328257600080fd5b8660208260051b850101111561329757600080fd5b60209290920196919550909350505050565b6000602082840312156132bb57600080fd5b613052826130dd565b6020808252825182820181905260009190848201906040850190845b818110156132fc578351835292840192918401916001016132e0565b50909695505050505050565b803560ff811681146130f457600080fd5b60006020828403121561332b57600080fd5b61305282613308565b6000806040838503121561334757600080fd5b613350836130dd565b91506020830135801515811461336557600080fd5b809150509250929050565b6000806040838503121561338357600080fd5b61338c83613308565b915061339a602084016130dd565b90509250929050565b600080600080608085870312156133b957600080fd5b6133c2856130dd565b93506133d0602086016130dd565b925060408501359150606085013567ffffffffffffffff8111156133f357600080fd5b8501601f8101871361340457600080fd5b61341387823560208401613139565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b602081016005831061345757634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561346f57600080fd5b81356005811061305257600080fd5b6000806040838503121561349157600080fd5b61338c836130dd565b600181811c908216806134ae57607f821691505b602082108114156134cf57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561358b5761358b61355b565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156135e4576135e461355b565b5060010190565b600082198211156135fe576135fe61355b565b500190565b8054600090600181811c908083168061361d57607f831692505b602080841082141561363f57634e487b7160e01b600052602260045260246000fd5b818015613653576001811461366457613691565b60ff19861689528489019650613691565b60008881526020902060005b868110156136895781548b820152908501908301613670565b505084890196505b50505050505092915050565b60006136a98286613603565b84516136b9818360208901613059565b6136c581830186613603565b979650505050505050565b6000828210156136e2576136e261355b565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261375e5761375e613739565b500490565b60008261377257613772613739565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137aa90830184613085565b9695505050505050565b6000602082840312156137c657600080fd5b81516130528161301f565b634e487b7160e01b600052603160045260246000fdfea264697066735822122054889b84a95abb224115561856c440ec20847aa42ea7bd7040c721d45f14a46264736f6c634300080a0033",
  "deployedSourceMap": "710:8572:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9110:169;;;;;;;;;;-1:-1:-1;9110:169:16;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;9110:169:16;;;;;;;;2473:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:216::-;;;;;;;;;;-1:-1:-1;3984:216:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3984:216:3;1528:203:17;1813:28:16;;;;;;;;;;;;;;;;;;;1882:25:17;;;1870:2;1855:18;1813:28:16;1736:177:17;3522:401:3;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;6602:291:16;;;;;;;;;;-1:-1:-1;6602:291:16;;;;;:::i;:::-;;:::i;1615:111:6:-;;;;;;;;;;-1:-1:-1;1702:10:6;:17;1615:111;;6096:126:16;;;;;;;;;;-1:-1:-1;6096:126:16;;;;;:::i;:::-;;:::i;4710:330:3:-;;;;;;;;;;-1:-1:-1;4710:330:3;;;;;:::i;:::-;;:::i;1074:25:16:-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1602:30:16:-;;;;;;;;;;;;;;;;3472:476;;;;;;:::i;:::-;;:::i;7294:264::-;;;:::i;5229:65::-;;;;;;;;;;;;;:::i;5106:179:3:-;;;;;;;;;;-1:-1:-1;5106:179:3;;;;;:::i;:::-;;:::i;8480:353:16:-;;;;;;;;;;-1:-1:-1;8480:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5701:160:16:-;;;;;;;;;;-1:-1:-1;5701:160:16;;;;;:::i;:::-;;:::i;5486:99::-;;;;;;;;;;-1:-1:-1;5486:99:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;6480:116:16;;;;;;;;;;-1:-1:-1;6480:116:16;;;;;:::i;:::-;;:::i;2176:235:3:-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;1139:26:16:-;;;;;;;;;;;;;:::i;7878:104::-;;;;;;;;;;;;;:::i;1914:205:3:-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1877:30:16:-;;;;;;;;;;;;;;;;6362:112;;;;;;;;;;-1:-1:-1;6362:112:16;;;;;:::i;:::-;;:::i;3981:486::-;;;;;;;;;;-1:-1:-1;3981:486:16;;;;;:::i;:::-;;:::i;5591:104::-;;;;;;;;;;-1:-1:-1;5591:104:16;;;;;:::i;:::-;;:::i;6899:255::-;;;;;;;;;;;;;:::i;5162:61::-;;;;;;;;;;;;;:::i;4502:632::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:3;;;;;;;;;;;;;:::i;1290:40:16:-;;;;;;;;;;-1:-1:-1;1290:40:16;;;;;;;;;;;4267:153:3;;;;;;;;;;-1:-1:-1;4267:153:3;;;;;:::i;:::-;;:::i;2980:454:16:-;;;;;;;;;;-1:-1:-1;2980:454:16;;;;;:::i;:::-;;:::i;5351:320:3:-;;;;;;;;;;-1:-1:-1;5351:320:3;;;;;:::i;:::-;;:::i;5345:97:16:-;;;;;;;;;;-1:-1:-1;5345:97:16;;;;;:::i;:::-;;:::i;1967:18::-;;;;;;;;;;-1:-1:-1;1967:18:16;;;;;;;;;;;;;;;:::i;1250:34::-;;;;;;;;;;-1:-1:-1;1250:34:16;;;;;;;;;;;1752:29;;;;;;;;;;;;;;;;1171:37;;;;;;;;;;;;;:::i;1105:28::-;;;;;;;;;;;;;:::i;8085:267::-;;;;;;;;;;-1:-1:-1;8085:267:16;;;;;:::i;:::-;;:::i;1661:39::-;;;;;;;;;;-1:-1:-1;1661:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;7564:277;;;;;;;;;;-1:-1:-1;7564:277:16;;;;;:::i;:::-;;:::i;7988:91::-;;;;;;;;;;;;;:::i;6228:128::-;;;;;;;;;;-1:-1:-1;6228:128:16;;;;;:::i;:::-;;:::i;8358:112::-;;;;;;;;;;;;;:::i;1214:25::-;;;;;;;;;;-1:-1:-1;1214:25:16;;;;;;;;;;;8275:4:17;8263:17;;;8245:36;;8233:2;8218:18;1214:25:16;8103:184:17;5872:218:16;;;;;;;;;;;;;:::i;4486:162:3:-;;;;;;;;;;-1:-1:-1;4486:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4606:25:3;;;4583:4;4606:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4486:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;7160:128:16:-;;;;;;;;;;-1:-1:-1;7160:128:16;;;;;:::i;:::-;;:::i;1922:36::-;;;;;;;;;;;;;;;;1337:76;;;;;;;;;;-1:-1:-1;1337:76:16;;;;;;;-1:-1:-1;;;;;1337:76:16;;;9110:169;9213:4;9236:36;9260:11;9236:23;:36::i;:::-;9229:43;9110:169;-1:-1:-1;;9110:169:16:o;2473:98:3:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:216::-;4060:7;7231:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7231:16:3;4079:73;;;;-1:-1:-1;;;4079:73:3;;9144:2:17;4079:73:3;;;9126:21:17;9183:2;9163:18;;;9156:30;9222:34;9202:18;;;9195:62;-1:-1:-1;;;9273:18:17;;;9266:42;9325:19;;4079:73:3;;;;;;;;;-1:-1:-1;4169:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4169:24:3;;3984:216::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;9557:2:17;3651:57:3;;;9539:21:17;9596:2;9576:18;;;9569:30;9635:34;9615:18;;;9608:62;-1:-1:-1;;;9686:18:17;;;9679:31;9727:19;;3651:57:3;9355:397:17;3651:57:3;719:10:10;-1:-1:-1;;;;;3740:21:3;;;;:62;;-1:-1:-1;3765:37:3;3782:5;719:10:10;4486:162:3;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;9959:2:17;3719:165:3;;;9941:21:17;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:26;10088:18;;;10081:54;10152:19;;3719:165:3;9757:420:17;3719:165:3;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;6602:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6729:1:16::1;6703:15;6697:29;:33;6689:85;;;::::0;-1:-1:-1;;;6689:85:16;;10745:2:17;6689:85:16::1;::::0;::::1;10727:21:17::0;10784:2;10764:18;;;10757:30;10823:34;10803:18;;;10796:62;-1:-1:-1;;;10874:18:17;;;10867:37;10921:19;;6689:85:16::1;10543:403:17::0;6689:85:16::1;6793:20;::::0;;;::::1;;;6792:21;6784:60;;;::::0;-1:-1:-1;;;6784:60:16;;11153:2:17;6784:60:16::1;::::0;::::1;11135:21:17::0;11192:2;11172:18;;;11165:30;11231:28;11211:18;;;11204:56;11277:18;;6784:60:16::1;10951:350:17::0;6784:60:16::1;6854:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6602:291:::0;:::o;6096:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6180:14:16::1;:35:::0;6096:126::o;4710:330:3:-;4899:41;719:10:10;4932:7:3;4899:18;:41::i;:::-;4891:103;;;;-1:-1:-1;;;4891:103:3;;;;;;;:::i;:::-;5005:28;5015:4;5021:2;5025:7;5005:9;:28::i;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;11926:2:17;1407:87:6;;;11908:21:17;11965:2;11945:18;;;11938:30;12004:34;11984:18;;;11977:62;-1:-1:-1;;;12055:18:17;;;12048:41;12106:19;;1407:87:6;11724:407:17;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3472:476:16:-;3616:10;;3603:11;;;;2599:15;2590:5;;;;:24;;;;;;;;:::i;:::-;;2582:66;;;;-1:-1:-1;;;2582:66:16;;12338:2:17;2582:66:16;;;12320:21:17;12377:2;12357:18;;;12350:30;12416:31;12396:18;;;12389:59;12465:18;;2582:66:16;12136:353:17;2582:66:16;2695:28;;-1:-1:-1;;2712:10:16;12643:2:17;12639:15;12635:53;2695:28:16;;;12623:66:17;2666:59:16;;2679:4;;12705:12:17;;2695:28:16;;;;;;;;;;;;2685:39;;;;;;2666:5;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2666:12:16;;:59;;-1:-1:-1;;2666:12:16;:59;-1:-1:-1;2666:59:16:i;:::-;2658:97;;;;-1:-1:-1;;;2658:97:16;;12930:2:17;2658:97:16;;;12912:21:17;12969:2;12949:18;;;12942:30;13008:27;12988:18;;;12981:55;13053:18;;2658:97:16;12728:349:17;2658:97:16;3654:9:::1;::::0;3665:1:::1;2888:9;2862:22;3665:1:::0;3654:9;2862:22:::1;:::i;:::-;:35;2854:73;;;::::0;-1:-1:-1;;;2854:73:16;;13589:2:17;2854:73:16::1;::::0;::::1;13571:21:17::0;13628:2;13608:18;;;13601:30;-1:-1:-1;;;13647:18:17;;;13640:55;13712:18;;2854:73:16::1;13387:349:17::0;2854:73:16::1;1744:1:2::2;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;13943:2:17;2317:63:2::2;::::0;::::2;13925:21:17::0;13982:2;13962:18;;;13955:30;14021:33;14001:18;;;13994:61;14072:18;;2317:63:2::2;13741:355:17::0;2317:63:2::2;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::3;1403:38;;;;-1:-1:-1::0;;;1403:38:1::3;;;;;;;:::i;:::-;3753:10:16::4;3745:19;::::0;;;:7:::4;:19;::::0;;;;;::::4;;:28;3737:72;;;::::0;-1:-1:-1;;;3737:72:16;;14648:2:17;3737:72:16::4;::::0;::::4;14630:21:17::0;14687:2;14667:18;;;14660:30;14726:33;14706:18;;;14699:61;14777:18;;3737:72:16::4;14446:355:17::0;3737:72:16::4;3828:10;3820:19;::::0;;;:7:::4;:19;::::0;;;;:26;;-1:-1:-1;;3820:26:16::4;3842:4;3820:26;::::0;;3856:48:::4;::::0;3878:25:::4;:15;918:14:11::0;;827:112;3878:25:16::4;3856:9;:48::i;:::-;3914:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;3914:27:16::4;-1:-1:-1::0;;1701:1:2::2;2628:7;:22:::0;-1:-1:-1;;;;;3472:476:16:o;7294:264::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7383:1:16::1;7359:21;:25;7351:60;;;::::0;-1:-1:-1;;;7351:60:16;;15008:2:17;7351:60:16::1;::::0;::::1;14990:21:17::0;15047:2;15027:18;;;15020:30;-1:-1:-1;;;15066:18:17;;;15059:52;15128:18;;7351:60:16::1;14806:346:17::0;7351:60:16::1;7448:16;::::0;7440:64:::1;::::0;7422:12:::1;::::0;7448:16;;::::1;-1:-1:-1::0;;;;;7448:16:16::1;::::0;7478:21:::1;::::0;7422:12;7440:64;7422:12;7440:64;7478:21;7448:16;7440:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7421:83;;;7522:7;7514:37;;;::::0;-1:-1:-1;;;7514:37:16;;15569:2:17;7514:37:16::1;::::0;::::1;15551:21:17::0;15608:2;15588:18;;;15581:30;-1:-1:-1;;;15627:18:17;;;15620:47;15684:18;;7514:37:16::1;15367:341:17::0;7514:37:16::1;7341:217;7294:264::o:0;5229:65::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5277:10:16::1;:8;:10::i;:::-;5229:65::o:0;5106:179:3:-;5239:39;5256:4;5262:2;5266:7;5239:39;;;;;;;;;;;;:16;:39::i;8480:353:16:-;8541:16;8569:23;8595:16;8605:5;8595:9;:16::i;:::-;8569:42;;8621:26;8664:15;8650:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8650:30:16;;8621:59;;8695:9;8690:111;8710:15;8706:1;:19;8690:111;;;8761:29;8781:5;8788:1;8761:19;:29::i;:::-;8746:9;8756:1;8746:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8727:3;;;;:::i;:::-;;;;8690:111;;;-1:-1:-1;8817:9:16;8480:353;-1:-1:-1;;;8480:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;16187:2:17;1892:95:6;;;16169:21:17;16226:2;16206:18;;;16199:30;16265:34;16245:18;;;16238:62;-1:-1:-1;;;16316:18:17;;;16309:42;16368:19;;1892:95:6;15985:408:17;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5701:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5786:14:16::1;::::0;::::1;::::0;::::1;;;5785:15;5777:46;;;::::0;-1:-1:-1;;;5777:46:16;;16600:2:17;5777:46:16::1;::::0;::::1;16582:21:17::0;16639:2;16619:18;;;16612:30;-1:-1:-1;;;16658:18:17;;;16651:48;16716:18;;5777:46:16::1;16398:342:17::0;5777:46:16::1;5833:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;5486:99::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5552:18:16::1;5573:5;5552:18:::0;;;:7:::1;:18;::::0;;;;:26;;-1:-1:-1;;5552:26:16::1;::::0;;5486:99::o;6480:116::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6558:12:16::1;:31:::0;;-1:-1:-1;;6558:31:16::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6480:116::o;2176:235:3:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;16947:2:17;2309:73:3;;;16929:21:17;16986:2;16966:18;;;16959:30;17025:34;17005:18;;;16998:62;-1:-1:-1;;;17076:18:17;;;17069:39;17125:19;;2309:73:3;16745:405:17;1139:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7878:104::-;7928:7;7953:22;7961:13;1702:10:6;:17;;1615:111;7953:22:16;7946:29;;7878:104;:::o;1914:205:3:-;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;17357:2:17;2005:74:3;;;17339:21:17;17396:2;17376:18;;;17369:30;17435:34;17415:18;;;17408:62;-1:-1:-1;;;17486:18:17;;;17479:40;17536:19;;2005:74:3;17155:406:17;2005:74:3;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;6362:112:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6442:9:16::1;:25:::0;6362:112::o;3981:486::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4100:14:16::1;4091:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;4083:60;;;::::0;-1:-1:-1;;;4083:60:16;;17768:2:17;4083:60:16::1;::::0;::::1;17750:21:17::0;17807:2;17787:18;;;17780:30;17846:26;17826:18;;;17819:54;17890:18;;4083:60:16::1;17566:348:17::0;4083:60:16::1;4191:14;::::0;4174:13:::1;::::0;4161:26:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:44;;4153:100;;;::::0;-1:-1:-1;;;4153:100:16;;18254:2:17;4153:100:16::1;::::0;::::1;18236:21:17::0;18293:2;18273:18;;;18266:30;18332:34;18312:18;;;18305:62;-1:-1:-1;;;18383:18:17;;;18376:41;18434:19;;4153:100:16::1;18052:407:17::0;4153:100:16::1;4285:10;4268:27;;:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4322:1:16::1;::::0;-1:-1:-1;4305:156:16::1;4330:10;4325:15;;:1;:15;4305:156;;4361:48;4371:10;4383:25;:15;918:14:11::0;;827:112;4361:48:16::1;4423:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4423:27:16::1;4342:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4305:156;;5591:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5664:10:16::1;:24:::0;5591:104::o;6899:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6999:1:16::1;6974:14;6968:28;;;;;:::i;:::-;;;:32;6960:72;;;::::0;-1:-1:-1;;;6960:72:16;;18666:2:17;6960:72:16::1;::::0;::::1;18648:21:17::0;18705:2;18685:18;;;18678:30;18744:29;18724:18;;;18717:57;18791:18;;6960:72:16::1;18464:351:17::0;6960:72:16::1;7051:20;::::0;;;::::1;;;7050:21;7042:68;;;::::0;-1:-1:-1;;;7042:68:16;;19022:2:17;7042:68:16::1;::::0;::::1;19004:21:17::0;19061:2;19041:18;;;19034:30;19100:34;19080:18;;;19073:62;-1:-1:-1;;;19151:18:17;;;19144:32;19193:19;;7042:68:16::1;18820:398:17::0;7042:68:16::1;7120:20;:27:::0;;-1:-1:-1;;7120:27:16::1;::::0;::::1;::::0;;6899:255::o;5162:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5208:8:16::1;:6;:8::i;4502:632::-:0;4614:9;;2779:166;;;2888:9;2862:22;2779:166;4614:9;2862:22;:::i;:::-;:35;2854:73;;;;-1:-1:-1;;;2854:73:16;;13589:2:17;2854:73:16;;;13571:21:17;13628:2;13608:18;;;13601:30;-1:-1:-1;;;13647:18:17;;;13640:55;13712:18;;2854:73:16;13387:349:17;2854:73:16;1744:1:2::1;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;13943:2:17;2317:63:2::1;::::0;::::1;13925:21:17::0;13982:2;13962:18;;;13955:30;14021:33;14001:18;;;13994:61;14072:18;;2317:63:2::1;13741:355:17::0;2317:63:2::1;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::2;1403:38;;;;-1:-1:-1::0;;;1403:38:1::2;;;;;;;:::i;:::-;4715:16:16::3;4706:5;::::0;::::3;;:25;::::0;::::3;;;;;;:::i;:::-;;4698:64;;;::::0;-1:-1:-1;;;4698:64:16;;19425:2:17;4698:64:16::3;::::0;::::3;19407:21:17::0;19464:2;19444:18;;;19437:30;19503:28;19483:18;;;19476:56;19549:18;;4698:64:16::3;19223:350:17::0;4698:64:16::3;4811:15;;4797:10;4780:27;;:13;1702:10:6::0;:17;;1615:111;4780:13:16::3;:27;;;;:::i;:::-;:46;;4772:97;;;::::0;-1:-1:-1;;;4772:97:16;;19780:2:17;4772:97:16::3;::::0;::::3;19762:21:17::0;19819:2;19799:18;;;19792:30;19858:34;19838:18;;;19831:62;-1:-1:-1;;;19909:18:17;;;19902:36;19955:19;;4772:97:16::3;19578:402:17::0;4772:97:16::3;4901:12;::::0;::::3;::::0;;::::3;4887:26:::0;;::::3;;;4879:81;;;::::0;-1:-1:-1;;;4879:81:16;;20187:2:17;4879:81:16::3;::::0;::::3;20169:21:17::0;20226:2;20206:18;;;20199:30;20265:34;20245:18;;;20238:62;-1:-1:-1;;;20316:18:17;;;20309:40;20366:19;;4879:81:16::3;19985:406:17::0;4879:81:16::3;4989:1;4972:156;4997:10;4992:15;;:1;:15;4972:156;;5028:48;5038:10;5050:25;:15;918:14:11::0;;827:112;5028:48:16::3;5090:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;5090:27:16::3;5009:3:::0;::::3;::::0;::::3;:::i;:::-;;;;4972:156;;;-1:-1:-1::0;;1701:1:2::1;2628:7;:22:::0;-1:-1:-1;;4502:632:16:o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4267:153::-;4361:52;719:10:10;4394:8:3;4404;4361:18;:52::i;2980:454:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3124:10:16::1;3116:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;3108:51;;;::::0;-1:-1:-1;;;3108:51:16;;20598:2:17;3108:51:16::1;::::0;::::1;20580:21:17::0;20637:2;20617:18;;;20610:30;-1:-1:-1;;;20656:18:17;;;20649:50;20716:18;;3108:51:16::1;20396:344:17::0;3108:51:16::1;3208:15;;3194:10;3177:27;;:13;1702:10:6::0;:17;;1615:111;3177:13:16::1;:27;;;;:::i;:::-;:46;;3169:101;;;::::0;-1:-1:-1;;;3169:101:16;;20947:2:17;3169:101:16::1;::::0;::::1;20929:21:17::0;20986:2;20966:18;;;20959:30;21025:34;21005:18;;;20998:62;-1:-1:-1;;;21076:18:17;;;21069:40;21126:19;;3169:101:16::1;20745:406:17::0;3169:101:16::1;3297:1;3280:148;3305:10;3300:15;;:1;:15;3280:148;;3336:40;3346:2;3350:25;:15;918:14:11::0;;827:112;3336:40:16::1;3390:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;3390:27:16::1;3317:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3280:148;;5351:320:3::0;5520:41;719:10:10;5553:7:3;5520:18;:41::i;:::-;5512:103;;;;-1:-1:-1;;;5512:103:3;;;;;;;:::i;:::-;5625:39;5639:4;5645:2;5649:7;5658:5;5625:13;:39::i;:::-;5351:320;;;;:::o;5345:97:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5410:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5410:25:16::1;5431:4;5410:25;::::0;;5345:97::o;1171:37::-;;;;;;;:::i;1105:28::-;;;;;;;:::i;8085:267::-;7208:4:3;7231:16;;;:7;:16;;;;;;8158:13:16;;-1:-1:-1;;;;;7231:16:3;8183:77:16;;;;-1:-1:-1;;;8183:77:16;;21358:2:17;8183:77:16;;;21340:21:17;21397:2;21377:18;;;21370:30;21436:34;21416:18;;;21409:62;-1:-1:-1;;;21487:18:17;;;21480:46;21543:19;;8183:77:16;21156:412:17;8183:77:16;8301:7;8310:18;:7;:16;:18::i;:::-;8330:13;8284:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8270:75;;8085:267;;;:::o;7564:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7633:20:16::1;::::0;;;::::1;;;:28;;7657:4;7633:28;7625:97;;;::::0;-1:-1:-1;;;7625:97:16;;23340:2:17;7625:97:16::1;::::0;::::1;23322:21:17::0;23379:2;23359:18;;;23352:30;23418:34;23398:18;;;23391:62;23489:26;23469:18;;;23462:54;23533:19;;7625:97:16::1;23138:420:17::0;7625:97:16::1;7740:10;::::0;7732:78:::1;;;::::0;-1:-1:-1;;;7732:78:16;;23765:2:17;7732:78:16::1;::::0;::::1;23747:21:17::0;23804:2;23784:18;;;23777:30;23843:34;23823:18;;;23816:62;-1:-1:-1;;;23894:18:17;;;23887:48;23952:19;;7732:78:16::1;23563:414:17::0;7732:78:16::1;7820:5;:14:::0;;7828:6;;7820:5;-1:-1:-1;;7820:14:16::1;::::0;7828:6;7820:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7564:277:::0;:::o;7988:91::-;8033:7;8058:13;1702:10:6;:17;;1615:111;6228:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6316:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;8358:112::-:0;8406:7;8450:13;1702:10:6;:17;;1615:111;8450:13:16;8432:15;;:31;;;;:::i;5872:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5958:1:16::1;5940:7;5934:21;;;;;:::i;:::-;;;:25;5926:62;;;::::0;-1:-1:-1;;;5926:62:16;;24314:2:17;5926:62:16::1;::::0;::::1;24296:21:17::0;24353:2;24333:18;;;24326:30;24392:26;24372:18;;;24365:54;24436:18;;5926:62:16::1;24112:348:17::0;5926:62:16::1;6007:14;::::0;::::1;::::0;::::1;;;6006:15;5998:54;;;::::0;-1:-1:-1;;;5998:54:16;;24667:2:17;5998:54:16::1;::::0;::::1;24649:21:17::0;24706:2;24686:18;;;24679:30;24745:28;24725:18;;;24718:56;24791:18;;5998:54:16::1;24465:350:17::0;5998:54:16::1;6062:14;:21:::0;;-1:-1:-1;;6062:21:16::1;;;::::0;;5872:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25022:2:17;1998:73:0::1;::::0;::::1;25004:21:17::0;25061:2;25041:18;;;25034:30;25100:34;25080:18;;;25073:62;-1:-1:-1;;;25151:18:17;;;25144:36;25197:19;;1998:73:0::1;24820:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;7160:128:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7245:16:16::1;:36:::0;;-1:-1:-1;;;;;7245:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;7245:36:16;;::::1;::::0;;;::::1;::::0;;7160:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;10994:171:3:-;11068:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11068:29:3;-1:-1:-1;;;;;11068:29:3;;;;;;;;:24;;11121:23;11068:24;11121:14;:23::i;:::-;-1:-1:-1;;;;;11112:46:3;;;;;;;;;;;10994:171;;:::o;7426:344::-;7519:4;7231:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7231:16:3;7535:73;;;;-1:-1:-1;;;7535:73:3;;25429:2:17;7535:73:3;;;25411:21:17;25468:2;25448:18;;;25441:30;25507:34;25487:18;;;25480:62;-1:-1:-1;;;25558:18:17;;;25551:42;25610:19;;7535:73:3;25227:408:17;7535:73:3;7618:13;7634:23;7649:7;7634:14;:23::i;:::-;7618:39;;7686:5;-1:-1:-1;;;;;7675:16:3;:7;-1:-1:-1;;;;;7675:16:3;;:51;;;;7719:7;-1:-1:-1;;;;;7695:31:3;:20;7707:7;7695:11;:20::i;:::-;-1:-1:-1;;;;;7695:31:3;;7675:51;:87;;;-1:-1:-1;;;;;;4606:25:3;;;4583:4;4606:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7730:32;7667:96;7426:344;-1:-1:-1;;;;7426:344:3:o;10323:560::-;10477:4;-1:-1:-1;;;;;10450:31:3;:23;10465:7;10450:14;:23::i;:::-;-1:-1:-1;;;;;10450:31:3;;10442:85;;;;-1:-1:-1;;;10442:85:3;;25842:2:17;10442:85:3;;;25824:21:17;25881:2;25861:18;;;25854:30;25920:34;25900:18;;;25893:62;-1:-1:-1;;;25971:18:17;;;25964:39;26020:19;;10442:85:3;25640:405:17;10442:85:3;-1:-1:-1;;;;;10545:16:3;;10537:65;;;;-1:-1:-1;;;10537:65:3;;26252:2:17;10537:65:3;;;26234:21:17;26291:2;26271:18;;;26264:30;26330:34;26310:18;;;26303:62;-1:-1:-1;;;26381:18:17;;;26374:34;26425:19;;10537:65:3;26050:400:17;10537:65:3;10613:39;10634:4;10640:2;10644:7;10613:20;:39::i;:::-;10714:29;10731:1;10735:7;10714:8;:29::i;:::-;-1:-1:-1;;;;;10754:15:3;;;;;;:9;:15;;;;;:20;;10773:1;;10754:15;:20;;10773:1;;10754:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10784:13:3;;;;;;:9;:13;;;;;:18;;10801:1;;10784:13;:18;;10801:1;;10784:18;:::i;:::-;;;;-1:-1:-1;;10812:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10812:21:3;-1:-1:-1;;;;;10812:21:3;;;;;;;;;10849:27;;10812:16;;10849:27;;;;;;;10323:560;;;:::o;847:184:13:-;968:4;1020;991:25;1004:5;1011:4;991:12;:25::i;:::-;:33;;847:184;-1:-1:-1;;;;847:184:13:o;8100:108:3:-;8175:26;8185:2;8189:7;8175:26;;;;;;;;;;;;:9;:26::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;26657:2:17;1669:41:1;;;26639:21:17;26696:2;26676:18;;;26669:30;-1:-1:-1;;;26715:18:17;;;26708:50;26775:18;;1669:41:1;26455:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11300:307:3;11450:8;-1:-1:-1;;;;;11441:17:3;:5;-1:-1:-1;;;;;11441:17:3;;;11433:55;;;;-1:-1:-1;;;11433:55:3;;27006:2:17;11433:55:3;;;26988:21:17;27045:2;27025:18;;;27018:30;27084:27;27064:18;;;27057:55;27129:18;;11433:55:3;26804:349:17;11433:55:3;-1:-1:-1;;;;;11498:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11498:46:3;;;;;;;;;;11559:41;;540::17;;;11559::3;;513:18:17;11559:41:3;;;;;;;11300:307;;;:::o;6533:::-;6684:28;6694:4;6700:2;6704:7;6684:9;:28::i;:::-;6730:48;6753:4;6759:2;6763:7;6772:5;6730:22;:48::i;:::-;6722:111;;;;-1:-1:-1;;;6722:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1555:300:3;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1812:36:3;829:155:14;8843:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8984:45:16::1;9011:4;9017:2;9021:7;8984:26;:45::i;1383:688:13:-:0;1466:7;1508:4;1466:7;1522:514;1546:5;:12;1542:1;:16;1522:514;;;1579:20;1602:5;1608:1;1602:8;;;;;;;;:::i;:::-;;;;;;;1579:31;;1644:12;1628;:28;1624:402;;1779:44;;;;;;28108:19:17;;;28143:12;;;28136:28;;;28180:12;;1779:44:13;;;;;;;;;;;;1769:55;;;;;;1754:70;;1624:402;;;1966:44;;;;;;28108:19:17;;;28143:12;;;28136:28;;;28180:12;;1966:44:13;;;;;;;;;;;;1956:55;;;;;;1941:70;;1624:402;-1:-1:-1;1560:3:13;;;;:::i;:::-;;;;1522:514;;8429:311:3;8554:18;8560:2;8564:7;8554:5;:18::i;:::-;8603:54;8634:1;8638:2;8642:7;8651:5;8603:22;:54::i;:::-;8582:151;;;;-1:-1:-1;;;8582:151:3;;;;;;;:::i;12160:778::-;12310:4;-1:-1:-1;;;;;12330:13:3;;1087:20:9;1133:8;12326:606:3;;12365:72;;-1:-1:-1;;;12365:72:3;;-1:-1:-1;;;;;12365:36:3;;;;;:72;;719:10:10;;12416:4:3;;12422:7;;12431:5;;12365:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12365:72:3;;;;;;;;-1:-1:-1;;12365:72:3;;;;;;;;;;;;:::i;:::-;;;12361:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12604:13:3;;12600:266;;12646:60;;-1:-1:-1;;;12646:60:3;;;;;;;:::i;12600:266::-;12818:6;12812:13;12803:6;12799:2;12795:15;12788:38;12361:519;-1:-1:-1;;;;;;12487:51:3;-1:-1:-1;;;12487:51:3;;-1:-1:-1;12480:58:3;;12326:606;-1:-1:-1;12917:4:3;12160:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9062:372:3:-;-1:-1:-1;;;;;9141:16:3;;9133:61;;;;-1:-1:-1;;;9133:61:3;;29153:2:17;9133:61:3;;;29135:21:17;;;29172:18;;;29165:30;29231:34;29211:18;;;29204:62;29283:18;;9133:61:3;28951:356:17;9133:61:3;7208:4;7231:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7231:16:3;:30;9204:58;;;;-1:-1:-1;;;9204:58:3;;29514:2:17;9204:58:3;;;29496:21:17;29553:2;29533:18;;;29526:30;29592;29572:18;;;29565:58;29640:18;;9204:58:3;29312:352:17;9204:58:3;9273:45;9302:1;9306:2;9310:7;9273:20;:45::i;:::-;-1:-1:-1;;;;;9329:13:3;;;;;;:9;:13;;;;;:18;;9346:1;;9329:13;:18;;9346:1;;9329:18;:::i;:::-;;;;-1:-1:-1;;9357:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9357:21:3;-1:-1:-1;;;;;9357:21:3;;;;;;;;9394:33;;9357:16;;;9394:33;;9357:16;;9394:33;9062:372;;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:17:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:17;;-1:-1:-1;;;;4095:615:17:o;4715:186::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4866:29;4885:9;4866:29;:::i;4906:632::-;5077:2;5129:21;;;5199:13;;5102:18;;;5221:22;;;5048:4;;5077:2;5300:15;;;;5274:2;5259:18;;;5048:4;5343:169;5357:6;5354:1;5351:13;5343:169;;;5418:13;;5406:26;;5487:15;;;;5452:12;;;;5379:1;5372:9;5343:169;;;-1:-1:-1;5529:3:17;;4906:632;-1:-1:-1;;;;;;4906:632:17:o;5543:156::-;5609:20;;5669:4;5658:16;;5648:27;;5638:55;;5689:1;5686;5679:12;5704:182;5761:6;5814:2;5802:9;5793:7;5789:23;5785:32;5782:52;;;5830:1;5827;5820:12;5782:52;5853:27;5870:9;5853:27;:::i;6076:347::-;6141:6;6149;6202:2;6190:9;6181:7;6177:23;6173:32;6170:52;;;6218:1;6215;6208:12;6170:52;6241:29;6260:9;6241:29;:::i;:::-;6231:39;;6320:2;6309:9;6305:18;6292:32;6367:5;6360:13;6353:21;6346:5;6343:32;6333:60;;6389:1;6386;6379:12;6333:60;6412:5;6402:15;;;6076:347;;;;;:::o;6428:256::-;6494:6;6502;6555:2;6543:9;6534:7;6530:23;6526:32;6523:52;;;6571:1;6568;6561:12;6523:52;6594:27;6611:9;6594:27;:::i;:::-;6584:37;;6640:38;6674:2;6663:9;6659:18;6640:38;:::i;:::-;6630:48;;6428:256;;;;;:::o;6689:667::-;6784:6;6792;6800;6808;6861:3;6849:9;6840:7;6836:23;6832:33;6829:53;;;6878:1;6875;6868:12;6829:53;6901:29;6920:9;6901:29;:::i;:::-;6891:39;;6949:38;6983:2;6972:9;6968:18;6949:38;:::i;:::-;6939:48;;7034:2;7023:9;7019:18;7006:32;6996:42;;7089:2;7078:9;7074:18;7061:32;7116:18;7108:6;7105:30;7102:50;;;7148:1;7145;7138:12;7102:50;7171:22;;7224:4;7216:13;;7212:27;-1:-1:-1;7202:55:17;;7253:1;7250;7243:12;7202:55;7276:74;7342:7;7337:2;7324:16;7319:2;7315;7311:11;7276:74;:::i;:::-;7266:84;;;6689:667;;;;;;;:::o;7361:127::-;7422:10;7417:3;7413:20;7410:1;7403:31;7453:4;7450:1;7443:15;7477:4;7474:1;7467:15;7493:336;7633:2;7618:18;;7666:1;7655:13;;7645:144;;7711:10;7706:3;7702:20;7699:1;7692:31;7746:4;7743:1;7736:15;7774:4;7771:1;7764:15;7645:144;7798:25;;;7493:336;:::o;7834:264::-;7901:6;7954:2;7942:9;7933:7;7929:23;7925:32;7922:52;;;7970:1;7967;7960:12;7922:52;8009:9;7996:23;8048:1;8041:5;8038:12;8028:40;;8064:1;8061;8054:12;8292:260;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;8460:29;8479:9;8460:29;:::i;8557:380::-;8636:1;8632:12;;;;8679;;;8700:61;;8754:4;8746:6;8742:17;8732:27;;8700:61;8807:2;8799:6;8796:14;8776:18;8773:38;8770:161;;;8853:10;8848:3;8844:20;8841:1;8834:31;8888:4;8885:1;8878:15;8916:4;8913:1;8906:15;8770:161;;8557:380;;;:::o;10182:356::-;10384:2;10366:21;;;10403:18;;;10396:30;10462:34;10457:2;10442:18;;10435:62;10529:2;10514:18;;10182:356::o;11306:413::-;11508:2;11490:21;;;11547:2;11527:18;;;11520:30;11586:34;11581:2;11566:18;;11559:62;-1:-1:-1;;;11652:2:17;11637:18;;11630:47;11709:3;11694:19;;11306:413::o;13082:127::-;13143:10;13138:3;13134:20;13131:1;13124:31;13174:4;13171:1;13164:15;13198:4;13195:1;13188:15;13214:168;13254:7;13320:1;13316;13312:6;13308:14;13305:1;13302:21;13297:1;13290:9;13283:17;13279:45;13276:71;;;13327:18;;:::i;:::-;-1:-1:-1;13367:9:17;;13214:168::o;14101:340::-;14303:2;14285:21;;;14342:2;14322:18;;;14315:30;-1:-1:-1;;;14376:2:17;14361:18;;14354:46;14432:2;14417:18;;14101:340::o;15713:127::-;15774:10;15769:3;15765:20;15762:1;15755:31;15805:4;15802:1;15795:15;15829:4;15826:1;15819:15;15845:135;15884:3;-1:-1:-1;;15905:17:17;;15902:43;;;15925:18;;:::i;:::-;-1:-1:-1;15972:1:17;15961:13;;15845:135::o;17919:128::-;17959:3;17990:1;17986:6;17983:1;17980:13;17977:39;;;17996:18;;:::i;:::-;-1:-1:-1;18032:9:17;;17919:128::o;21699:973::-;21784:12;;21749:3;;21839:1;21859:18;;;;21912;;;;21939:61;;21993:4;21985:6;21981:17;21971:27;;21939:61;22019:2;22067;22059:6;22056:14;22036:18;22033:38;22030:161;;;22113:10;22108:3;22104:20;22101:1;22094:31;22148:4;22145:1;22138:15;22176:4;22173:1;22166:15;22030:161;22207:18;22234:104;;;;22352:1;22347:319;;;;22200:466;;22234:104;-1:-1:-1;;22267:24:17;;22255:37;;22312:16;;;;-1:-1:-1;22234:104:17;;22347:319;21646:1;21639:14;;;21683:4;21670:18;;22441:1;22455:165;22469:6;22466:1;22463:13;22455:165;;;22547:14;;22534:11;;;22527:35;22590:16;;;;22484:10;;22455:165;;;22459:3;;22649:6;22644:3;22640:16;22633:23;;22200:466;;;;;;;21699:973;;;;:::o;22677:456::-;22898:3;22926:38;22960:3;22952:6;22926:38;:::i;:::-;22993:6;22987:13;23009:52;23054:6;23050:2;23043:4;23035:6;23031:17;23009:52;:::i;:::-;23077:50;23119:6;23115:2;23111:15;23103:6;23077:50;:::i;:::-;23070:57;22677:456;-1:-1:-1;;;;;;;22677:456:17:o;23982:125::-;24022:4;24050:1;24047;24044:8;24041:34;;;24055:18;;:::i;:::-;-1:-1:-1;24092:9:17;;23982:125::o;27158:414::-;27360:2;27342:21;;;27399:2;27379:18;;;27372:30;27438:34;27433:2;27418:18;;27411:62;-1:-1:-1;;;27504:2:17;27489:18;;27482:48;27562:3;27547:19;;27158:414::o;27577:127::-;27638:10;27633:3;27629:20;27626:1;27619:31;27669:4;27666:1;27659:15;27693:4;27690:1;27683:15;27709:120;27749:1;27775;27765:35;;27780:18;;:::i;:::-;-1:-1:-1;27814:9:17;;27709:120::o;27834:112::-;27866:1;27892;27882:35;;27897:18;;:::i;:::-;-1:-1:-1;27931:9:17;;27834:112::o;28203:489::-;-1:-1:-1;;;;;28472:15:17;;;28454:34;;28524:15;;28519:2;28504:18;;28497:43;28571:2;28556:18;;28549:34;;;28619:3;28614:2;28599:18;;28592:31;;;28397:4;;28640:46;;28666:19;;28658:6;28640:46;:::i;:::-;28632:54;28203:489;-1:-1:-1;;;;;;28203:489:17:o;28697:249::-;28766:6;28819:2;28807:9;28798:7;28794:23;28790:32;28787:52;;;28835:1;28832;28825:12;28787:52;28867:9;28861:16;28886:30;28910:5;28886:30;:::i;29669:127::-;29730:10;29725:3;29721:20;29718:1;29711:31;29761:4;29758:1;29751:15;29785:4;29782:1;29775:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, sent, and interact with CRYPTIDS",
    "title": "CryptidToken NFT Contract",
    "version": 1
  },
  "offset": [
    710,
    9282
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B671780 GT PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE5F9866 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA10 JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0xA30 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA50 JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0xA66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x986 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x9B2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8EC JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x93C JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x8B7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D GT PUSH2 0x17A JUMPI DUP1 PUSH4 0xBB31B77B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xBB31B77B EQ PUSH2 0x826 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0x858E83B5 EQ PUSH2 0x75B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x622E4E78 GT PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x22E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x65C JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x29B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x57ED9E4E EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A GT PUSH2 0x32E JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x308 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x36A JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x3035 JUMP JUMPDEST PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x30B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x30F9 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x31AF JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F8 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x30F9 JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x3234 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x464 PUSH2 0x1189 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x31F8 JUMP JUMPDEST PUSH2 0x12DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x597 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x32C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x5BF CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x139A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x31AF JUMP JUMPDEST PUSH2 0x142D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x5FF CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x14BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x3319 JUMP JUMPDEST PUSH2 0x150E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x1554 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x15CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH2 0x1659 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x166C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x16F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x6EC CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x172D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x3319 JUMP JUMPDEST PUSH2 0x1762 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x72C CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x18F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x464 PUSH2 0x769 CALLDATASIZE PUSH1 0x4 PUSH2 0x3319 JUMP JUMPDEST PUSH2 0x1A34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1C98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3B1 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3334 JUMP JUMPDEST PUSH2 0x1CA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x801 CALLDATASIZE PUSH1 0x4 PUSH2 0x3370 JUMP JUMPDEST PUSH2 0x1CB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x33A3 JUMP JUMPDEST PUSH2 0x1DF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x1E2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x860 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x3435 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1E80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x1E8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH2 0x8E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x30C4 JUMP JUMPDEST PUSH2 0x1E9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x907 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x937 CALLDATASIZE PUSH1 0x4 PUSH2 0x345D JUMP JUMPDEST PUSH2 0x1F4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x2093 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x31AF JUMP JUMPDEST PUSH2 0x209E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x20E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x9A0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x20F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x347E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA2B CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x21F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0xA4B CALLDATASIZE PUSH1 0x4 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x228E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x408 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA98 DUP3 PUSH2 0x22F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x349A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD9 SWAP1 PUSH2 0x349A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP3 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC5F JUMPI POP PUSH2 0xC5F DUP2 CALLER PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xCDB DUP4 DUP4 PUSH2 0x2318 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDDD SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F86 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0xE20 CALLER DUP3 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x350A JUMP JUMPDEST PUSH2 0xCDB DUP4 DUP4 DUP4 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE52 DUP4 PUSH2 0x166C JUMP JUMPDEST DUP3 LT PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x2 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFD PUSH2 0x341F JUMP JUMPDEST EQ PUSH2 0xF4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFC1 SWAP1 DUP3 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x2628 SWAP1 POP JUMP JUMPDEST PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 CALLVALUE PUSH2 0x101D DUP3 DUP5 PUSH2 0x3571 JUMP JUMPDEST EQ PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x3590 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1141 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x116D SWAP1 PUSH2 0x1168 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x263E JUMP JUMPDEST PUSH2 0x117B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x125B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2BB4BA34323930BBB6103330B4B632B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x12D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH2 0x12DB PUSH2 0x2658 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCDB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DF4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1305 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1322 JUMPI PUSH2 0x1322 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x134B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1363 DUP6 DUP3 PUSH2 0xE47 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1375 JUMPI PUSH2 0x1375 PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x138A DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1351 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A5 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x141B JUMPI PUSH2 0x141B PUSH2 0x35BA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDDD SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x15D8 SWAP1 PUSH2 0x349A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1604 SWAP1 PUSH2 0x349A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1651 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1626 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1651 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1634 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1667 PUSH2 0x657 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x0 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AB PUSH2 0x341F JUMP JUMPDEST EQ PUSH2 0x17F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x180B SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x35EB JUMP JUMPDEST GT ISZERO PUSH2 0x186D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1882 SWAP2 SWAP1 PUSH2 0x35EB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xDDD JUMPI PUSH2 0x18A2 CALLER PUSH2 0x1168 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18B0 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x18BA DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x188B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x18F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x1936 SWAP1 PUSH2 0x349A JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH2 0x12DB PUSH2 0x2745 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF DUP3 AND CALLVALUE PUSH2 0x1A46 DUP3 DUP5 PUSH2 0x3571 JUMP JUMPDEST EQ PUSH2 0x1A8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x3590 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B23 PUSH2 0x341F JUMP JUMPDEST EQ PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 PUSH1 0xFF AND PUSH2 0x1B80 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8A SWAP2 SWAP1 PUSH2 0x35EB JUMP JUMPDEST GT ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP5 AND GT ISZERO PUSH2 0x1C53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 GT PUSH2 0x1C8D JUMPI PUSH2 0x1C6D CALLER PUSH2 0x1168 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C7B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1C85 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C56 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xAAD SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH2 0xDDD CALLER DUP4 DUP4 PUSH2 0x279D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1CE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFB PUSH2 0x341F JUMP JUMPDEST GT PUSH2 0x1D3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1D4F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D59 SWAP2 SWAP1 PUSH2 0x35EB JUMP JUMPDEST GT ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCDB JUMPI PUSH2 0x1DD4 DUP3 PUSH2 0x1168 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DE2 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1DEC DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1DFE CALLER DUP4 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x1E1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x350A JUMP JUMPDEST PUSH2 0x1E26 DUP5 DUP5 DUP5 DUP5 PUSH2 0x286C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x15D8 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x15D8 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0xF PUSH2 0x1F25 DUP4 PUSH2 0x289F JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F39 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x369D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1F7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x206C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208B PUSH2 0x341F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1667 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDDD SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EC PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x1667 SWAP2 SWAP1 PUSH2 0x36D0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2129 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x2138 SWAP1 PUSH2 0x349A JUMP JUMPDEST SWAP1 POP GT PUSH2 0x2187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x21DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x12A0 DUP2 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x34D5 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA98 JUMPI POP PUSH2 0xA98 DUP3 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x234D DUP3 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240A DUP4 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2445 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x243A DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2475 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2490 DUP3 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x24F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x255A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x2565 DUP4 DUP4 DUP4 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x2570 PUSH1 0x0 DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2599 SWAP1 DUP5 SWAP1 PUSH2 0x36D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x25C7 SWAP1 DUP5 SWAP1 PUSH2 0x35EB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2635 DUP6 DUP5 PUSH2 0x2A1B JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDDD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x26A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x3590 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x26CE CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x27FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2877 DUP5 DUP5 DUP5 PUSH2 0x247D JUMP JUMPDEST PUSH2 0x2883 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x1E26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x28C3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x28ED JUMPI DUP1 PUSH2 0x28D7 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E6 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x374F JUMP JUMPDEST SWAP2 POP PUSH2 0x28C7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2908 JUMPI PUSH2 0x2908 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2932 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2475 JUMPI PUSH2 0x2947 PUSH1 0x1 DUP4 PUSH2 0x36D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2954 PUSH1 0xA DUP7 PUSH2 0x3763 JUMP JUMPDEST PUSH2 0x295F SWAP1 PUSH1 0x30 PUSH2 0x35EB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2974 JUMPI PUSH2 0x2974 PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2996 PUSH1 0xA DUP7 PUSH2 0x374F JUMP JUMPDEST SWAP5 POP PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x29CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA98 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA98 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2A10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x3590 JUMP JUMPDEST PUSH2 0xCDB DUP4 DUP4 DUP4 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A3D JUMPI PUSH2 0x2A3D PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2A7F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2AB7 DUP2 PUSH2 0x35D0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x2AC9 DUP4 DUP4 PUSH2 0x2CA8 JUMP JUMPDEST PUSH2 0x2AD6 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2BE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2B36 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3777 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2B71 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2B6E SWAP2 DUP2 ADD SWAP1 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2BCB JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2BC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2475 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2C4B JUMPI PUSH2 0x2C46 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2C6E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C6E JUMPI PUSH2 0x2C6E DUP4 DUP3 PUSH2 0x2DF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C85 JUMPI PUSH2 0xCDB DUP2 PUSH2 0x2E93 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCDB JUMPI PUSH2 0xCDB DUP3 DUP3 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2D63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0x2D6F PUSH1 0x0 DUP4 DUP4 PUSH2 0x29ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2D98 SWAP1 DUP5 SWAP1 PUSH2 0x35EB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2E03 DUP5 PUSH2 0x166C JUMP JUMPDEST PUSH2 0x2E0D SWAP2 SWAP1 PUSH2 0x36D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2E60 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2EA5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x36D0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2ECD JUMPI PUSH2 0x2ECD PUSH2 0x35BA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2EEE JUMPI PUSH2 0x2EEE PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2F26 JUMPI PUSH2 0x2F26 PUSH2 0x37D1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4D DUP4 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2F92 SWAP1 PUSH2 0x349A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2FB4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2FFA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2FCD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2FFA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2FFA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2FFA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2FDF JUMP JUMPDEST POP PUSH2 0x3006 SWAP3 SWAP2 POP PUSH2 0x300A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3006 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x300B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3052 DUP2 PUSH2 0x301F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3074 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x305C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E26 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x309D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3059 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3052 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3085 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x30F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x310C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3115 DUP4 PUSH2 0x30DD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3154 PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x317C JUMPI PUSH2 0x317C PUSH2 0x3123 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x31E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2475 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3139 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x320D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3216 DUP5 PUSH2 0x30DD JUMP JUMPDEST SWAP3 POP PUSH2 0x3224 PUSH1 0x20 DUP6 ADD PUSH2 0x30DD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x325F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3052 DUP3 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x32FC JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x32E0 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x30F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x332B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3052 DUP3 PUSH2 0x3308 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3350 DUP4 PUSH2 0x30DD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x338C DUP4 PUSH2 0x3308 JUMP JUMPDEST SWAP2 POP PUSH2 0x339A PUSH1 0x20 DUP5 ADD PUSH2 0x30DD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33C2 DUP6 PUSH2 0x30DD JUMP JUMPDEST SWAP4 POP PUSH2 0x33D0 PUSH1 0x20 DUP7 ADD PUSH2 0x30DD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3413 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3139 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x3457 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x346F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x3052 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x338C DUP4 PUSH2 0x30DD JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x34AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x34CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x358B JUMPI PUSH2 0x358B PUSH2 0x355B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x35E4 JUMPI PUSH2 0x35E4 PUSH2 0x355B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x35FE JUMPI PUSH2 0x35FE PUSH2 0x355B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x361D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x363F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x3653 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3664 JUMPI PUSH2 0x3691 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3689 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3670 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A9 DUP3 DUP7 PUSH2 0x3603 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x36B9 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x3059 JUMP JUMPDEST PUSH2 0x36C5 DUP2 DUP4 ADD DUP7 PUSH2 0x3603 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36E2 JUMPI PUSH2 0x36E2 PUSH2 0x355B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x375E JUMPI PUSH2 0x375E PUSH2 0x3739 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3772 JUMPI PUSH2 0x3772 PUSH2 0x3739 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x37AA SWAP1 DUP4 ADD DUP5 PUSH2 0x3085 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3052 DUP2 PUSH2 0x301F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP9 SWAP12 DUP5 0xA9 GAS 0xBB 0x22 COINBASE ISZERO JUMP XOR JUMP 0xC4 BLOCKHASH 0xEC KECCAK256 DUP5 PUSH27 0xA42EA7BD7040C721D45F14A46264736F6C634300080A0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38C"
    },
    "12": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "25": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "29": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "47": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA10"
    },
    "73": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "80": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA30"
    },
    "84": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA50"
    },
    "95": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA66"
    },
    "106": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "118": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x971"
    },
    "122": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "129": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x986"
    },
    "133": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "140": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B2"
    },
    "144": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9C7"
    },
    "155": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "167": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "178": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8EC"
    },
    "182": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "189": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91C"
    },
    "193": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "200": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93C"
    },
    "204": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "211": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x951"
    },
    "215": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A2"
    },
    "231": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B7"
    },
    "242": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CC"
    },
    "253": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "265": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "276": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "287": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x826"
    },
    "291": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "298": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x846"
    },
    "302": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "309": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86D"
    },
    "313": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "320": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88C"
    },
    "324": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "336": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A6"
    },
    "340": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "347": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C6"
    },
    "351": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "358": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7E6"
    },
    "362": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "369": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x806"
    },
    "373": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "374": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "376": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "378": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "385": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "396": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x746"
    },
    "400": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x858E83B5"
    },
    "407": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75B"
    },
    "411": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "418": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x76E"
    },
    "422": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "424": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "429": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "430": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x791"
    },
    "433": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "436": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "437": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "445": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F1"
    },
    "449": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "456": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x711"
    },
    "460": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "467": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x731"
    },
    "471": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "472": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "474": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "476": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "483": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C1"
    },
    "487": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x622E4E78"
    },
    "494": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25F"
    },
    "498": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "505": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22E"
    },
    "509": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "516": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x686"
    },
    "520": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "527": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A6"
    },
    "531": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "538": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6BB"
    },
    "542": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "544": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x791A2519"
    },
    "549": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "550": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D1"
    },
    "553": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "554": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "557": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "558": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x622E4E78"
    },
    "565": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x61C"
    },
    "569": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "576": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63C"
    },
    "580": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "587": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x65C"
    },
    "591": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "598": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "599": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x671"
    },
    "602": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "603": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "605": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "606": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "607": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "614": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "618": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "625": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A4"
    },
    "629": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "636": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C4"
    },
    "640": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x57ED9E4E"
    },
    "647": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E4"
    },
    "651": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "658": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "659": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x604"
    },
    "662": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "663": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "665": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "667": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "674": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x542"
    },
    "678": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "685": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x557"
    },
    "689": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "696": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "697": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x577"
    },
    "700": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "701": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "703": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "704": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "705": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "712": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32E"
    },
    "716": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "723": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x308"
    },
    "727": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "734": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F1"
    },
    "738": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "745": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x511"
    },
    "749": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "756": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x527"
    },
    "760": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "767": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "768": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53A"
    },
    "771": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "772": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "774": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "775": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "776": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "783": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49B"
    },
    "787": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "794": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4BB"
    },
    "798": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "805": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "806": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DB"
    },
    "809": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "810": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "812": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "813": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "814": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "821": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "GT",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36A"
    },
    "825": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "832": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x420"
    },
    "836": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "843": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x444"
    },
    "847": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "854": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x466"
    },
    "858": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "865": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "866": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x486"
    },
    "869": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "870": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "872": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "873": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "874": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "881": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x391"
    },
    "885": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "892": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "893": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C6"
    },
    "896": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "903": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "EQ",
      "path": "16"
    },
    "904": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "907": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "908": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "909": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "911": {
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "DUP1",
      "path": "16"
    },
    "912": {
      "first_revert": true,
      "fn": null,
      "offset": [
        710,
        9282
      ],
      "op": "REVERT",
      "path": "16"
    },
    "913": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "914": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "915": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "916": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "917": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39D"
    },
    "920": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "921": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "923": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "924": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "REVERT",
      "path": "16"
    },
    "925": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "930": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AC"
    },
    "933": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "934": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "936": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3035"
    },
    "939": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMP",
      "path": "16"
    },
    "940": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "941": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA8D"
    },
    "944": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMP",
      "path": "16"
    },
    "945": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "946": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "948": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "949": {
      "op": "SWAP1"
    },
    "950": {
      "op": "ISZERO"
    },
    "951": {
      "op": "ISZERO"
    },
    "952": {
      "op": "DUP2"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "958": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "960": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "961": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "DUP1",
      "path": "16"
    },
    "962": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "963": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "SUB",
      "path": "16"
    },
    "964": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "965": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "RETURN",
      "path": "16"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "970": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D2"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "976": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "3"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DB"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9E"
    },
    "986": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "987": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "995": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "996": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30B1"
    },
    "999": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1002": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1003": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1004": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1008": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x403"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C4"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1027": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB30"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "AND"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BD"
    },
    "1055": {
      "op": "JUMP"
    },
    "1056": {
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1060": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42C"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "POP",
      "path": "16"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1073": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1076": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1077": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1082": {
      "op": "SWAP1"
    },
    "1083": {
      "op": "DUP2"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "1091": {
      "op": "JUMP"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1094": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1095": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30F9"
    },
    "1118": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1119": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1120": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBCA"
    },
    "1123": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1124": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1125": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "3"
    },
    "1126": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1128": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1129": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1130": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x472"
    },
    "1133": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1134": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1136": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1137": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1143": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x481"
    },
    "1146": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1147": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1149": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31AF"
    },
    "1152": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1153": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1154": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCE0"
    },
    "1157": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1158": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1159": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1160": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1161": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1162": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x492"
    },
    "1165": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1166": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1168": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1169": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1170": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1174": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1175": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1178": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1179": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1181": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1182": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1183": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A7"
    },
    "1186": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1187": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1189": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1190": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1191": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1196": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1200": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1202": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C4"
    },
    "1205": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1206": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1207": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE1"
    },
    "1210": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C7"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1219": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D6"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31F8"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE16"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1243": {
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1247": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E7"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "POP",
      "path": "16"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1262": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1263": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1265": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1266": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1267": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1268": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1269": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1273": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1275": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1276": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1277": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1282": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50C"
    },
    "1285": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1286": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1288": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30F9"
    },
    "1291": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1292": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1293": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE47"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1297": {
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1298": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1299": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1300": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1301": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x51D"
    },
    "1304": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1305": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1308": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1309": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1310": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "POP",
      "path": "16"
    },
    "1311": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1314": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1316": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1317": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1318": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1319": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1320": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1323": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x535"
    },
    "1326": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1327": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1329": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3234"
    },
    "1332": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1333": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1334": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEDD"
    },
    "1337": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1338": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7294,
        7558
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1339": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7294,
        7558
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1342": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7294,
        7558
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1189"
    },
    "1345": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        7294,
        7558
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1346": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1347": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1348": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1349": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1350": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54E"
    },
    "1353": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1354": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1356": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1357": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1358": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1359": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "POP",
      "path": "16"
    },
    "1360": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1363": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12A3"
    },
    "1366": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1369": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x563"
    },
    "1374": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "1384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x572"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31F8"
    },
    "1393": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12DD"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1399": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1400": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1401": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1402": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1403": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x583"
    },
    "1406": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1407": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1409": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1410": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1411": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x597"
    },
    "1416": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x592"
    },
    "1419": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1420": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1422": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A9"
    },
    "1425": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1426": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1427": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12F8"
    },
    "1430": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1431": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1432": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1434": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1435": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "1438": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1439": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1440": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32C4"
    },
    "1443": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1444": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1446": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1447": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1448": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B0"
    },
    "1451": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1452": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1454": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1455": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1456": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x436"
    },
    "1461": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BF"
    },
    "1464": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1465": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1467": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30C4"
    },
    "1470": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1471": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1472": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x139A"
    },
    "1475": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1476": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1477": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1478": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1479": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1480": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D0"
    },
    "1483": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1484": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1486": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1487": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1488": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1493": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DF"
    },
    "1496": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1497": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1499": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31AF"
    },
    "1502": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1503": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1504": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x142D"
    },
    "1507": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1508": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1509": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1510": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1511": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1512": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F0"
    },
    "1515": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1516": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1518": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1519": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1520": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1525": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5FF"
    },
    "1528": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1529": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1531": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A9"
    },
    "1534": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1535": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1536": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14BD"
    },
    "1539": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1540": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1541": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1542": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1543": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1544": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x610"
    },
    "1547": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1548": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1550": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1551": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1552": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1553": {
      "op": "POP"
    },
    "1554": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1556": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1557": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1559": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1560": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "1563": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1564": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1565": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1566": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1567": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1568": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x628"
    },
    "1571": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1572": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1574": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1575": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1576": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1581": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x637"
    },
    "1584": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1585": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1587": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3319"
    },
    "1590": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1591": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1592": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x150E"
    },
    "1595": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x648"
    },
    "1603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x657"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C4"
    },
    "1622": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1624": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1554"
    },
    "1627": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1628": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1630": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1631": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x668"
    },
    "1635": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1636": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1640": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1641": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "1642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "1645": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15CB"
    },
    "1648": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1649": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1650": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1651": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1652": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1653": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x67D"
    },
    "1656": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1657": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1659": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1660": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1661": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1662": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "POP",
      "path": "16"
    },
    "1663": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x408"
    },
    "1666": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1659"
    },
    "1669": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1670": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1671": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1672": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1673": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1674": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x692"
    },
    "1677": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1678": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1680": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1681": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1682": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1683": {
      "op": "POP"
    },
    "1684": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x436"
    },
    "1687": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A1"
    },
    "1690": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1691": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1693": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32A9"
    },
    "1696": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1697": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1698": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x166C"
    },
    "1701": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F3"
    },
    "1722": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1723": {
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1727": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C7"
    },
    "1730": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1731": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1733": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1734": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "POP",
      "path": "16"
    },
    "1737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "1740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1742": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1745": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1746": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1747": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1748": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1749": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6DD"
    },
    "1752": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1753": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1755": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1756": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1757": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1762": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6EC"
    },
    "1765": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1766": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1768": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C4"
    },
    "1771": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1772": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1773": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x172D"
    },
    "1776": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1777": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1778": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1779": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1780": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1781": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FD"
    },
    "1784": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1785": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1787": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1788": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1789": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1790": {
      "op": "POP"
    },
    "1791": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1794": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x70C"
    },
    "1797": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1800": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3319"
    },
    "1803": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1804": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1805": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1762"
    },
    "1808": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1809": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1810": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1811": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1812": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1813": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71D"
    },
    "1816": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1817": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1819": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1820": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1821": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1826": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72C"
    },
    "1829": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1830": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1832": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C4"
    },
    "1835": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1836": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1837": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18C2"
    },
    "1840": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1841": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1842": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1843": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1844": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1845": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x73D"
    },
    "1848": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1849": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1851": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1852": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1853": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1854": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "POP",
      "path": "16"
    },
    "1855": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1858": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18F7"
    },
    "1861": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1862": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1863": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1864": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1865": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1866": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x752"
    },
    "1869": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1870": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1872": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1873": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1874": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1875": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "POP",
      "path": "16"
    },
    "1876": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1879": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19FC"
    },
    "1882": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5162,
        5223
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1883": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1884": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "1887": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x769"
    },
    "1890": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1891": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1893": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3319"
    },
    "1896": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1897": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1898": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A34"
    },
    "1901": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1902": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1903": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1904": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1905": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1906": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77A"
    },
    "1909": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1910": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1912": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1913": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1914": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1918": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1919": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1922": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1923": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1933": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1936": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1937": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1938": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1939": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1940": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1941": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79D"
    },
    "1944": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1945": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1947": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1948": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1949": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1950": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "3"
    },
    "1951": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DB"
    },
    "1954": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C98"
    },
    "1957": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1958": {
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1959": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1960": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1961": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1962": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7B2"
    },
    "1965": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1966": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1968": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1969": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1970": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1974": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1975": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "1978": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1979": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "1983": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1984": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DIV",
      "path": "16"
    },
    "1985": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1987": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "AND",
      "path": "16"
    },
    "1988": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1989": {
      "fn": "ERC721.symbol",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1990": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1991": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1992": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1993": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1994": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D2"
    },
    "1997": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1998": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2001": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2002": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "2007": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E1"
    },
    "2010": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2011": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2013": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3334"
    },
    "2016": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2017": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2018": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA7"
    },
    "2021": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2022": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2023": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2024": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2025": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2026": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F2"
    },
    "2029": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2030": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2032": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2033": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2034": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2039": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x801"
    },
    "2042": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2043": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2045": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3370"
    },
    "2048": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2049": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2050": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB2"
    },
    "2053": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x812"
    },
    "2061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x464"
    },
    "2071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x821"
    },
    "2074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33A3"
    },
    "2080": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2082": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF4"
    },
    "2085": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2086": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2087": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2088": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2089": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2090": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x832"
    },
    "2093": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2094": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2096": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2097": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2098": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2099": {
      "op": "POP"
    },
    "2100": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2103": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x841"
    },
    "2106": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2107": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2109": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A9"
    },
    "2112": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2113": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2114": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E2C"
    },
    "2117": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2118": {
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2119": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2120": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2121": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2122": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x852"
    },
    "2125": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2128": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2129": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2130": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2134": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2135": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x860"
    },
    "2138": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2139": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2141": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "AND",
      "path": "16"
    },
    "2142": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2143": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2145": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2147": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2148": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "2151": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2152": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2153": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1967,
        1985
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3435"
    },
    "2156": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1967,
        1985
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2157": {
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2160": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2161": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x879"
    },
    "2164": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2165": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2167": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2168": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2169": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2173": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2174": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "2177": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2178": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2181": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2182": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DIV",
      "path": "16"
    },
    "2183": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2185": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "AND",
      "path": "16"
    },
    "2186": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2187": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2188": {
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2189": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2190": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x898"
    },
    "2195": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2198": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2199": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2200": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "POP",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2205": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2207": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2208": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2209": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2210": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2211": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2214": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AE"
    },
    "2217": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2218": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2220": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2221": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2222": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2223": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "POP",
      "path": "16"
    },
    "2224": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2227": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E80"
    },
    "2230": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2231": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2232": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2233": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2234": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2235": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C3"
    },
    "2238": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2239": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2241": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2242": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2243": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2244": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "POP",
      "path": "16"
    },
    "2245": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2248": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E8D"
    },
    "2251": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2252": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2253": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2254": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2255": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2256": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D8"
    },
    "2259": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2260": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2262": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2263": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DB"
    },
    "2269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E7"
    },
    "2272": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2275": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C4"
    },
    "2278": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2280": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E9A"
    },
    "2283": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2284": {
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2285": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2287": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F8"
    },
    "2291": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2292": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2294": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2295": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2296": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B1"
    },
    "2301": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x907"
    },
    "2304": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2305": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2307": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A9"
    },
    "2310": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2311": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2312": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2314": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2316": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2317": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2319": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2320": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2322": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2324": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2326": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2327": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2329": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "AND",
      "path": "16"
    },
    "2330": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2331": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2332": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2333": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2336": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x928"
    },
    "2339": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2340": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2342": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2343": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2344": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2349": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x937"
    },
    "2352": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2353": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2355": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x345D"
    },
    "2358": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2359": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2360": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F4F"
    },
    "2363": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2364": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2365": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2367": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2368": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x948"
    },
    "2371": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2372": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2374": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2375": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2376": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2377": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "POP",
      "path": "16"
    },
    "2378": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2381": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2093"
    },
    "2384": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7988,
        8079
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2385": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2386": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2388": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2389": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95D"
    },
    "2392": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2393": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2395": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2396": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2397": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2402": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x96C"
    },
    "2405": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2406": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2408": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31AF"
    },
    "2411": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2412": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2413": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x209E"
    },
    "2416": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2417": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2420": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97D"
    },
    "2424": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2425": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2427": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2428": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2429": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2430": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "POP",
      "path": "16"
    },
    "2431": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2434": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20E1"
    },
    "2437": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8358,
        8470
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2438": {
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2439": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2440": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2441": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2442": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x992"
    },
    "2445": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2446": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2448": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2449": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2450": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2454": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2455": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9A0"
    },
    "2458": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2459": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2461": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "AND",
      "path": "16"
    },
    "2462": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2463": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2464": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2465": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2467": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2470": {
      "op": "SWAP1"
    },
    "2471": {
      "op": "SWAP2"
    },
    "2472": {
      "op": "AND"
    },
    "2473": {
      "op": "DUP2"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BD"
    },
    "2481": {
      "op": "JUMP"
    },
    "2482": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2483": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2484": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2485": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2486": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9BE"
    },
    "2489": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2490": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2492": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2493": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2494": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2495": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "POP",
      "path": "16"
    },
    "2496": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2499": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F9"
    },
    "2502": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2505": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D3"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "2520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E2"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x347E"
    },
    "2529": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "SUB"
    },
    "2539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "2540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "AND",
      "path": "3"
    },
    "2542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4583,
        4587
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2553": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2554": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2556": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2557": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2558": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2559": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2560": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2561": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "AND",
      "path": "3"
    },
    "2563": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2564": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2565": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2566": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2567": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2569": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2570": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2571": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2573": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "AND",
      "path": "3"
    },
    "2574": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2575": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1C"
    },
    "2583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "2593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2B"
    },
    "2596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A9"
    },
    "2602": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F0"
    },
    "2607": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2609": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2610": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2611": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2612": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA3C"
    },
    "2615": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2616": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2618": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2619": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2620": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2621": {
      "op": "POP"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x464"
    },
    "2625": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA4B"
    },
    "2628": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2629": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2631": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A9"
    },
    "2634": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2635": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2636": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228E"
    },
    "2639": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2640": {
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2641": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2642": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2643": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2644": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA5C"
    },
    "2647": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2648": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2650": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2651": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2652": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2653": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "POP",
      "path": "16"
    },
    "2654": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x436"
    },
    "2657": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2659": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2660": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2661": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1958
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2662": {
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2663": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2664": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2665": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2666": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA72"
    },
    "2669": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2670": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2672": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2673": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2674": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2678": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2679": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x408"
    },
    "2682": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2683": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "2688": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2689": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DIV",
      "path": "16"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2696": {
      "op": "SHL"
    },
    "2697": {
      "op": "SUB"
    },
    "2698": {
      "offset": [
        1337,
        1413
      ],
      "op": "AND",
      "path": "16"
    },
    "2699": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2700": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2701": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2702": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9213,
        9217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2704": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9236,
        9272
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0xA98"
    },
    "2707": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9260,
        9271
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2708": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9236,
        9259
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22F3"
    },
    "2711": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        9236,
        9272
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2712": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9236,
        9272
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2713": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9229,
        9272
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2714": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        9110,
        9279
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        9110,
        9279
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAD"
    },
    "2728": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x349A"
    },
    "2732": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2735": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2738": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2740": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2743": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2746": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2747": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2750": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2751": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2757": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2761": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2765": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2766": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD9"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x349A"
    },
    "2776": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2777": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2779": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2780": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB26"
    },
    "2783": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2785": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2787": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "3"
    },
    "2788": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2791": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2792": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2799": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2800": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2803": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2806": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2807": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB26"
    },
    "2810": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2813": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2814": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2818": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2821": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2823": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2824": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2825": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2828": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2829": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2830": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2831": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2833": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2837": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2838": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2839": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2840": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "3"
    },
    "2841": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB09"
    },
    "2844": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2845": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2846": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2847": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "3"
    },
    "2848": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2850": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "3"
    },
    "2851": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2852": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2853": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2854": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2855": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2856": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2857": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2858": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2859": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2860": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2862": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2863": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2864": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2865": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2867": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2868": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2869": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2870": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7238
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2872": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2874": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2875": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2877": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2878": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2879": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "SUB"
    },
    "2888": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "AND",
      "path": "3"
    },
    "2889": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0xBAE"
    },
    "2892": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2893": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2895": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2907": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2909": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "3"
    },
    "2911": {
      "op": "MSTORE"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2982": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2984": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2985": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2986": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2989": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2990": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2991": {
      "op": "POP"
    },
    "2992": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2994": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2995": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2996": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2997": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2999": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3001": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3002": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3004": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3005": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3006": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3013": {
      "op": "SHL"
    },
    "3014": {
      "op": "SUB"
    },
    "3015": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "AND",
      "path": "3"
    },
    "3016": {
      "fn": "ERC721.getApproved",
      "offset": [
        4169,
        4193
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3017": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4200
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3018": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3019": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3021": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD5"
    },
    "3024": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3025": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1554"
    },
    "3028": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3030": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3031": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "3"
    },
    "3032": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3042": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3052": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "3"
    },
    "3053": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3054": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC43"
    },
    "3057": {
      "branch": 172,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3058": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3060": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3069": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3072": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3074": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3075": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "3"
    },
    "3076": {
      "op": "MSTORE"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "ADD"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3119": {
      "op": "DUP3"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "op": "MSTORE"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3129": {
      "op": "DUP3"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "op": "MSTORE"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "3138": {
      "op": "JUMP"
    },
    "3139": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3140": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3147": {
      "op": "SHL"
    },
    "3148": {
      "op": "SUB"
    },
    "3149": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "3150": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "3"
    },
    "3151": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "3"
    },
    "3152": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3153": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5F"
    },
    "3156": {
      "branch": 173,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3157": {
      "op": "POP"
    },
    "3158": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5F"
    },
    "3161": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3162": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4486,
        4648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E2"
    },
    "3166": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4486,
        4648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3167": {
      "branch": 174,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3168": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCD1"
    },
    "3171": {
      "branch": 174,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3172": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3174": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3183": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3188": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3189": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "3"
    },
    "3190": {
      "op": "MSTORE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "ADD"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "MSTORE"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "3280": {
      "op": "JUMP"
    },
    "3281": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3282": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0xCDB"
    },
    "3285": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3286": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3287": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "3290": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3291": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3292": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3293": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3294": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3295": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3296": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3297": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3299": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3311": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3312": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3313": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3314": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3315": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3316": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3317": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD10"
    },
    "3320": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3321": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3332": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3333": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3335": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3336": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "3339": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "3343": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3345": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6729,
        6730
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3347": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6703,
        6718
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3348": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6697,
        6726
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3349": {
      "branch": 152,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6697,
        6730
      ],
      "op": "GT",
      "path": "16"
    },
    "3350": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD71"
    },
    "3353": {
      "branch": 152,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3354": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3356": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3365": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3368": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3370": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3371": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "ADD",
      "path": "16"
    },
    "3372": {
      "op": "MSTORE"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3377": {
      "op": "DUP3"
    },
    "3378": {
      "op": "ADD"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3415": {
      "op": "DUP3"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "MSTORE"
    },
    "3418": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "MSTORE"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3436": {
      "op": "ADD"
    },
    "3437": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "3440": {
      "op": "JUMP"
    },
    "3441": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6689,
        6774
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3442": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x11"
    },
    "3444": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3445": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "3449": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3450": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "DIV",
      "path": "16"
    },
    "3451": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3453": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6793,
        6813
      ],
      "op": "AND",
      "path": "16"
    },
    "3454": {
      "branch": 153,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6792,
        6813
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3455": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDCA"
    },
    "3458": {
      "branch": 153,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3459": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3461": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3468": {
      "op": "SHL"
    },
    "3469": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3470": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3473": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3475": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3476": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "ADD",
      "path": "16"
    },
    "3477": {
      "op": "MSTORE"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3482": {
      "op": "DUP3"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "MSTORE"
    },
    "3485": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3520": {
      "op": "DUP3"
    },
    "3521": {
      "op": "ADD"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "3529": {
      "op": "JUMP"
    },
    "3530": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6784,
        6844
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3531": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "3532": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3533": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDD"
    },
    "3536": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3537": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6868
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3539": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6868
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3540": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3542": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3543": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "ADD",
      "path": "16"
    },
    "3544": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3545": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F86"
    },
    "3548": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6854,
        6886
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3549": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3550": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6854,
        6886
      ],
      "op": "POP",
      "path": "16"
    },
    "3551": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6602,
        6893
      ],
      "op": "POP",
      "path": "16"
    },
    "3552": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        6602,
        6893
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3553": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3554": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3556": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3563": {
      "op": "SHL"
    },
    "3564": {
      "op": "SUB"
    },
    "3565": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3568": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3569": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3572": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3573": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3574": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE11"
    },
    "3577": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3578": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3592": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "3596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "3600": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3602": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6180,
        6194
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x14"
    },
    "3604": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6180,
        6215
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3605": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        6096,
        6222
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4710,
        5040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4899,
        4940
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0xE20"
    },
    "3610": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3611": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4932,
        4939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3612": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4899,
        4917
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2386"
    },
    "3615": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4899,
        4940
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3616": {
      "branch": 175,
      "fn": "ERC721.transferFrom",
      "offset": [
        4899,
        4940
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3C"
    },
    "3620": {
      "branch": 175,
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3623": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3632": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "ADD",
      "path": "3"
    },
    "3636": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "3639": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3640": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x350A"
    },
    "3643": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4891,
        4994
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3644": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4891,
        4994
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3645": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5005,
        5033
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xCDB"
    },
    "3648": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5015,
        5019
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3649": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5023
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3650": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5025,
        5032
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3651": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5005,
        5014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247D"
    },
    "3654": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5005,
        5033
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3655": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3656": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3658": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0xE52"
    },
    "3661": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3662": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x166C"
    },
    "3665": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3666": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3667": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3668": {
      "branch": 185,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "3669": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB4"
    },
    "3672": {
      "branch": 185,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3673": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3675": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3682": {
      "op": "SHL"
    },
    "3683": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3684": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3689": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3690": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3696": {
      "op": "DUP3"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3754": {
      "op": "DUP3"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "MSTORE"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3759": {
      "op": "ADD"
    },
    "3760": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA5"
    },
    "3763": {
      "op": "JUMP"
    },
    "3764": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 20
    },
    "3775": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3776": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3777": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "3778": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3780": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3781": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3782": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3783": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3785": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3787": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3789": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3790": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3792": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3793": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3794": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3795": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3796": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3797": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3798": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3799": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3800": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3801": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3802": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3803": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3804": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3805": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3806": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3616,
        3626
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "3808": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3616,
        3626
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3809": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3603,
        3614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3810": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3603,
        3614
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3811": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3603,
        3614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3812": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3603,
        3614
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3813": {
      "offset": [
        2599,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "3815": {
      "offset": [
        2590,
        2595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "3817": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2595
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3818": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3820": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2595
      ],
      "op": "AND",
      "path": "16"
    },
    "3821": {
      "offset": [
        2590,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3823": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3824": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "GT",
      "path": "16"
    },
    "3825": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3826": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEFD"
    },
    "3829": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3830": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEFD"
    },
    "3833": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341F"
    },
    "3836": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2590,
        2614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3837": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3838": {
      "branch": 154,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2590,
        2614
      ],
      "op": "EQ",
      "path": "16"
    },
    "3839": {
      "offset": [
        2582,
        2648
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF4A"
    },
    "3842": {
      "branch": 154,
      "offset": [
        2582,
        2648
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3843": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2582,
        2648
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3845": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2582,
        2648
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "offset": [
        2582,
        2648
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3854": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2582,
        2648
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3857": {
      "offset": [
        2582,
        2648
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3859": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2582,
        2648
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3860": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2582,
        2648
      ],
      "op": "ADD",
      "path": "16"
    },
    "3861": {
      "op": "MSTORE"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3866": {
      "op": "DUP3"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "op": "MSTORE"
    },
    "3869": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "offset": [
        2582,
        2648
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "3913": {
      "op": "JUMP"
    },
    "3914": {
      "offset": [
        2582,
        2648
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3915": {
      "offset": [
        2695,
        2723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3917": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3918": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3931": {
      "op": "NOT"
    },
    "3932": {
      "offset": [
        2712,
        2722
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "AND"
    },
    "3937": {
      "offset": [
        2695,
        2723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3939": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3940": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "ADD",
      "path": "16"
    },
    "3941": {
      "op": "MSTORE"
    },
    "3942": {
      "offset": [
        2666,
        2725
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFC1"
    },
    "3945": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2725
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3946": {
      "offset": [
        2679,
        2683
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3947": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2679,
        2683
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "offset": [
        2695,
        2723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3953": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3954": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3956": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3957": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3958": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "SUB",
      "path": "16"
    },
    "3959": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "SUB",
      "path": "16"
    },
    "3960": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3961": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3962": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3963": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3965": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2695,
        2723
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3966": {
      "offset": [
        2685,
        2724
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3967": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2685,
        2724
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3968": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2685,
        2724
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3969": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2685,
        2724
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3971": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2685,
        2724
      ],
      "op": "ADD",
      "path": "16"
    },
    "3972": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2685,
        2724
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3973": {
      "offset": [
        2666,
        2671
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3974": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2671
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3975": {
      "offset": [
        2666,
        2678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3976": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3977": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3979": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MUL",
      "path": "16"
    },
    "3980": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3982": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "ADD",
      "path": "16"
    },
    "3983": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3985": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3986": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3987": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3988": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "ADD",
      "path": "16"
    },
    "3989": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3991": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3992": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3993": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3994": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3995": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3996": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3997": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3998": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3999": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4000": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4002": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "ADD",
      "path": "16"
    },
    "4003": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4004": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4005": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4007": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MUL",
      "path": "16"
    },
    "4008": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4009": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4010": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4011": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4012": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4014": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4015": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "ADD",
      "path": "16"
    },
    "4016": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4017": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4018": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4019": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4022": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2678
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4023": {
      "offset": [
        2666,
        2725
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4024": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2725
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "offset": [
        2666,
        2678
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2628"
    },
    "4030": {
      "offset": [
        2666,
        2725
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "jump": "i",
      "offset": [
        2666,
        2725
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4033": {
      "branch": 155,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2666,
        2725
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4034": {
      "offset": [
        2658,
        2755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100D"
    },
    "4037": {
      "branch": 155,
      "offset": [
        2658,
        2755
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4038": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2658,
        2755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4040": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2658,
        2755
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4047": {
      "op": "SHL"
    },
    "4048": {
      "offset": [
        2658,
        2755
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4049": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2658,
        2755
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "offset": [
        2658,
        2755
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4054": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2658,
        2755
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4055": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2658,
        2755
      ],
      "op": "ADD",
      "path": "16"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4061": {
      "op": "DUP3"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "MSTORE"
    },
    "4064": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4099": {
      "op": "DUP3"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "offset": [
        2658,
        2755
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "4108": {
      "op": "JUMP"
    },
    "4109": {
      "offset": [
        2658,
        2755
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4110": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3654,
        3663
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "4112": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3654,
        3663
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4113": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3665,
        3666
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4115": {
      "offset": [
        2888,
        2897
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "4116": {
      "offset": [
        2862,
        2884
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x101D"
    },
    "4119": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3665,
        3666
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4120": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3654,
        3663
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4121": {
      "offset": [
        2862,
        2884
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3571"
    },
    "4124": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2862,
        2884
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4125": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2862,
        2884
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4126": {
      "offset": [
        2862,
        2897
      ],
      "op": "EQ",
      "path": "16"
    },
    "4127": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1066"
    },
    "4130": {
      "offset": [
        2854,
        2927
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4131": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4133": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2854,
        2927
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "offset": [
        2854,
        2927
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4142": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2854,
        2927
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4147": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2854,
        2927
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4148": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2854,
        2927
      ],
      "op": "ADD",
      "path": "16"
    },
    "4149": {
      "op": "MSTORE"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4185": {
      "op": "SHL"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4188": {
      "op": "DUP3"
    },
    "4189": {
      "op": "ADD"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "4197": {
      "op": "JUMP"
    },
    "4198": {
      "offset": [
        2854,
        2927
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4199": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4201": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4203": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4204": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4205": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4206": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B9"
    },
    "4209": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4210": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4212": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4219": {
      "op": "SHL"
    },
    "4220": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4221": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4224": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4226": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4227": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4228": {
      "op": "MSTORE"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "MSTORE"
    },
    "4236": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4271": {
      "op": "DUP3"
    },
    "4272": {
      "op": "ADD"
    },
    "4273": {
      "op": "MSTORE"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4276": {
      "op": "ADD"
    },
    "4277": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA5"
    },
    "4280": {
      "op": "JUMP"
    },
    "4281": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4282": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4284": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4286": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4287": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4289": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4290": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4292": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4293": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4294": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10E1"
    },
    "4297": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4298": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4300": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4307": {
      "op": "SHL"
    },
    "4308": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4309": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4310": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4312": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4313": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA5"
    },
    "4316": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4317": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3590"
    },
    "4320": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4321": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4322": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3753,
        3763
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 21
    },
    "4323": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4325": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4326": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4327": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4328": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3752
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4330": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4332": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4333": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4335": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4336": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4337": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4338": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4340": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3764
      ],
      "op": "AND",
      "path": "16"
    },
    "4341": {
      "branch": 156,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3745,
        3773
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4342": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1141"
    },
    "4345": {
      "branch": 156,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4346": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4355": {
      "op": "SHL"
    },
    "4356": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4357": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4360": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4362": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4363": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "ADD",
      "path": "16"
    },
    "4364": {
      "op": "MSTORE"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4369": {
      "op": "DUP3"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "MSTORE"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "4416": {
      "op": "JUMP"
    },
    "4417": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3737,
        3809
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4418": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3828,
        3838
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 22
    },
    "4419": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4421": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4422": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4423": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4424": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4426": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4428": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4429": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4431": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4432": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3839
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4433": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4434": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4437": {
      "op": "NOT"
    },
    "4438": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "AND",
      "path": "16"
    },
    "4439": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3842,
        3846
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4441": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "OR",
      "path": "16"
    },
    "4442": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4443": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3820,
        3846
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4444": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3856,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 23,
      "value": "0x116D"
    },
    "4447": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3856,
        3904
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4448": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3878,
        3903
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1168"
    },
    "4451": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3878,
        3893
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4453": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 24
    },
    "4454": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4455": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4456": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3878,
        3903
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4457": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3856,
        3865
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x263E"
    },
    "4460": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3856,
        3904
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4461": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3856,
        3904
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4462": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3914,
        3941
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 25,
      "value": "0x117B"
    },
    "4465": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3914,
        3929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4467": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 26
    },
    "4468": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4469": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4471": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4472": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4473": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4474": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4475": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3914,
        3941
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4476": {
      "op": "POP"
    },
    "4477": {
      "op": "POP"
    },
    "4478": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4480": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4482": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "POP"
    },
    "4486": {
      "op": "POP"
    },
    "4487": {
      "op": "POP"
    },
    "4488": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "o",
      "offset": [
        3472,
        3948
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4489": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7294,
        7558
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4490": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4492": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "op": "SUB"
    },
    "4501": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4504": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4505": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4506": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4507": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4508": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4509": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4510": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B9"
    },
    "4513": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4514": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "4532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "4536": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4538": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7383,
        7384
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 27,
      "value": "0x0"
    },
    "4540": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7359,
        7380
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4541": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7359,
        7384
      ],
      "op": "GT",
      "path": "16"
    },
    "4542": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1202"
    },
    "4545": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4546": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4548": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4555": {
      "op": "SHL"
    },
    "4556": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4557": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4560": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4562": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4563": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "ADD",
      "path": "16"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4569": {
      "op": "DUP3"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "ADD"
    },
    "4602": {
      "op": "MSTORE"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4605": {
      "op": "ADD"
    },
    "4606": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "4609": {
      "op": "JUMP"
    },
    "4610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7351,
        7411
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4611": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "4613": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4614": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4616": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4617": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7422,
        7434
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4619": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7422,
        7434
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4620": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "4625": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4626": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "DIV",
      "path": "16"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4633": {
      "op": "SHL"
    },
    "4634": {
      "op": "SUB"
    },
    "4635": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "AND",
      "path": "16"
    },
    "4636": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4637": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7478,
        7499
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4638": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7478,
        7499
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4639": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7422,
        7434
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4640": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4641": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7422,
        7434
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4642": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4643": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7478,
        7499
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4644": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7448,
        7464
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4645": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "GAS",
      "path": "16"
    },
    "4646": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "CALL",
      "path": "16"
    },
    "4647": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4648": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4649": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4650": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4651": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4652": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4653": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4655": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4656": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "EQ",
      "path": "16"
    },
    "4657": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1256"
    },
    "4660": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4661": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4663": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4664": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4665": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4666": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4668": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "NOT",
      "path": "16"
    },
    "4669": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4671": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4672": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "ADD",
      "path": "16"
    },
    "4673": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "AND",
      "path": "16"
    },
    "4674": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4675": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "ADD",
      "path": "16"
    },
    "4676": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4678": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4679": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4680": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4681": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4682": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4683": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4685": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4687": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4688": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "ADD",
      "path": "16"
    },
    "4689": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4690": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x125B"
    },
    "4693": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4694": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4695": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4697": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4698": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4699": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4700": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7440,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4701": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7421,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4702": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7421,
        7504
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4703": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7421,
        7504
      ],
      "op": "POP",
      "path": "16"
    },
    "4704": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7522,
        7529
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 28
    },
    "4705": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12A0"
    },
    "4708": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4709": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4711": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4720": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4723": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4725": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4726": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "ADD",
      "path": "16"
    },
    "4727": {
      "op": "MSTORE"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "MSTORE"
    },
    "4735": {
      "op": "PUSH17",
      "value": "0x2BB4BA34323930BBB6103330B4B632B217"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4758": {
      "op": "DUP3"
    },
    "4759": {
      "op": "ADD"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "4767": {
      "op": "JUMP"
    },
    "4768": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7514,
        7551
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4769": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        7341,
        7558
      ],
      "op": "POP",
      "path": "16"
    },
    "4770": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        7294,
        7558
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4771": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4772": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4774": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "op": "SUB"
    },
    "4783": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4786": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4787": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4788": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4789": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4790": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4791": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4792": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D3"
    },
    "4795": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4805": {
      "op": "SHL"
    },
    "4806": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4811": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "4814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "4818": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4820": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5277,
        5287
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 29,
      "value": "0x12DB"
    },
    "4823": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5277,
        5285
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2658"
    },
    "4826": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5277,
        5287
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4827": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5277,
        5287
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4828": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        5229,
        5294
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4829": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5106,
        5285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0xCDB"
    },
    "4833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5260
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5262,
        5264
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5266,
        5273
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4836": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4842": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "ADD",
      "path": "3"
    },
    "4843": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4845": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4846": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4847": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4849": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4851": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5278
      ],
      "op": "POP",
      "path": "3"
    },
    "4852": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5239,
        5255
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF4"
    },
    "4855": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5239,
        5278
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4856": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4857": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8541,
        8557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4859": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8569,
        8592
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4861": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8595,
        8611
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1305"
    },
    "4864": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8605,
        8610
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4865": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8595,
        8604
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x166C"
    },
    "4868": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8595,
        8611
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4869": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8595,
        8611
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4870": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8569,
        8611
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4871": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8569,
        8611
      ],
      "op": "POP",
      "path": "16"
    },
    "4872": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8621,
        8647
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4874": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8664,
        8679
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4875": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4884": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4885": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "GT",
      "path": "16"
    },
    "4886": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4887": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1322"
    },
    "4890": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4891": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1322"
    },
    "4894": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3123"
    },
    "4897": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8650,
        8680
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4898": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4899": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4901": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4902": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4903": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4904": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4905": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4906": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4907": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4909": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "MUL",
      "path": "16"
    },
    "4910": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4912": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ADD",
      "path": "16"
    },
    "4913": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4914": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ADD",
      "path": "16"
    },
    "4915": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4917": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4918": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4919": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4920": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x134B"
    },
    "4923": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4924": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4925": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4927": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ADD",
      "path": "16"
    },
    "4928": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4930": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4931": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "MUL",
      "path": "16"
    },
    "4932": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4933": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "4934": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4935": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4936": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "ADD",
      "path": "16"
    },
    "4937": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4940": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8650,
        8680
      ],
      "op": "POP",
      "path": "16"
    },
    "4941": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8621,
        8680
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4942": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8621,
        8680
      ],
      "op": "POP",
      "path": "16"
    },
    "4943": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8695,
        8704
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4945": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4946": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8710,
        8725
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4947": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8706,
        8707
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4948": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8706,
        8725
      ],
      "op": "LT",
      "path": "16"
    },
    "4949": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4950": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1392"
    },
    "4953": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4954": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8761,
        8790
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 31,
      "value": "0x1363"
    },
    "4957": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8781,
        8786
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4958": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8788,
        8789
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4959": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8761,
        8780
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE47"
    },
    "4962": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8761,
        8790
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4963": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8761,
        8790
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4964": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8755
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4965": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8756,
        8757
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4966": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4967": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4968": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4969": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "LT",
      "path": "16"
    },
    "4970": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1375"
    },
    "4973": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4974": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1375"
    },
    "4977": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35BA"
    },
    "4980": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8746,
        8758
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4981": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4982": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4984": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4985": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4986": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "MUL",
      "path": "16"
    },
    "4987": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4988": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4989": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4990": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "ADD",
      "path": "16"
    },
    "4991": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8758
      ],
      "op": "ADD",
      "path": "16"
    },
    "4992": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8746,
        8790
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4993": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 32
    },
    "4994": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x138A"
    },
    "4997": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4998": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "5001": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8727,
        8730
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5002": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5003": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5004": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "POP",
      "path": "16"
    },
    "5005": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8727,
        8730
      ],
      "op": "POP",
      "path": "16"
    },
    "5006": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1351"
    },
    "5009": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5010": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8690,
        8801
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8817,
        8826
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 33
    },
    "5013": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8480,
        8833
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        8480,
        8833
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5018": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5019": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5021": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 34,
      "value": "0x13A5"
    },
    "5024": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5026": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5027": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5028": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5029": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5030": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5031": {
      "branch": 186,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5032": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1408"
    },
    "5035": {
      "branch": 186,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5036": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5038": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5045": {
      "op": "SHL"
    },
    "5046": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5047": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5050": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5052": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5053": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5054": {
      "op": "MSTORE"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5059": {
      "op": "DUP3"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "MSTORE"
    },
    "5062": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "MSTORE"
    },
    "5100": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5115": {
      "op": "SHL"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5118": {
      "op": "DUP3"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "op": "MSTORE"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5123": {
      "op": "ADD"
    },
    "5124": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA5"
    },
    "5127": {
      "op": "JUMP"
    },
    "5128": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5129": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x8"
    },
    "5131": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5132": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5133": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5134": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5135": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5136": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x141B"
    },
    "5139": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5140": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x141B"
    },
    "5143": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35BA"
    },
    "5146": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5147": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5148": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5149": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5151": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5152": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5154": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5156": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5157": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5158": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5159": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5160": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5161": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5162": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5163": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5164": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5165": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5701,
        5861
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5166": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5168": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5175": {
      "op": "SHL"
    },
    "5176": {
      "op": "SUB"
    },
    "5177": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5180": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5181": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5182": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5183": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5184": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5185": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5186": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145D"
    },
    "5189": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5199": {
      "op": "SHL"
    },
    "5200": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5202": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5204": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5205": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "5208": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "5212": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5213": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5214": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 36,
      "value": "0x11"
    },
    "5216": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5217": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5220": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5221": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "DIV",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5224": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5786,
        5800
      ],
      "op": "AND",
      "path": "16"
    },
    "5225": {
      "branch": 159,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5785,
        5800
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5226": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14AA"
    },
    "5229": {
      "branch": 159,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5230": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5232": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5239": {
      "op": "SHL"
    },
    "5240": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5241": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5244": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5246": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5247": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "ADD",
      "path": "16"
    },
    "5248": {
      "op": "MSTORE"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "ADD"
    },
    "5255": {
      "op": "MSTORE"
    },
    "5256": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5280": {
      "op": "DUP3"
    },
    "5281": {
      "op": "ADD"
    },
    "5282": {
      "op": "MSTORE"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "5289": {
      "op": "JUMP"
    },
    "5290": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5777,
        5823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5291": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 37
    },
    "5292": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5293": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDD"
    },
    "5296": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5297": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5840
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5299": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5300": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5302": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5303": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "ADD",
      "path": "16"
    },
    "5304": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5305": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5833,
        5854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F86"
    },
    "5308": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5833,
        5854
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5309": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5312": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5319": {
      "op": "SHL"
    },
    "5320": {
      "op": "SUB"
    },
    "5321": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5324": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5325": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5326": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5327": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5328": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5329": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5330": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14ED"
    },
    "5333": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5334": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5336": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5345": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5346": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5348": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5349": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "5352": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "5356": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5357": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "SUB"
    },
    "5366": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "AND",
      "path": "16",
      "statement": 38
    },
    "5367": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5573,
        5578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5369": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5370": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5371": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5372": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "5374": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5376": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5377": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5379": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5380": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5570
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5381": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5578
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5382": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5578
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5385": {
      "op": "NOT"
    },
    "5386": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5578
      ],
      "op": "AND",
      "path": "16"
    },
    "5387": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5578
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5388": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5552,
        5578
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5389": {
      "fn": "CryptidToken.undoClaim",
      "jump": "o",
      "offset": [
        5486,
        5585
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5390": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5391": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5393": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5400": {
      "op": "SHL"
    },
    "5401": {
      "op": "SUB"
    },
    "5402": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5405": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5406": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5407": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5409": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5410": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5411": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153E"
    },
    "5414": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5424": {
      "op": "SHL"
    },
    "5425": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "5433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "5437": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5439": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6570
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0x11"
    },
    "5441": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5442": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5445": {
      "op": "NOT"
    },
    "5446": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "AND",
      "path": "16"
    },
    "5447": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5449": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5450": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5451": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5452": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "AND",
      "path": "16"
    },
    "5453": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5454": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5455": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5456": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "OR",
      "path": "16"
    },
    "5457": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5458": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        6558,
        6589
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5459": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        6480,
        6596
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5460": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5461": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5463": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5464": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5465": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5466": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5468": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5470": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5471": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5473": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5474": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5475": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5482": {
      "op": "SHL"
    },
    "5483": {
      "op": "SUB"
    },
    "5484": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "3"
    },
    "5485": {
      "branch": 176,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 40
    },
    "5486": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA98"
    },
    "5489": {
      "branch": 176,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5490": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5492": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5499": {
      "op": "SHL"
    },
    "5500": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5501": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5504": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5506": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5507": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "3"
    },
    "5508": {
      "op": "MSTORE"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5513": {
      "op": "DUP3"
    },
    "5514": {
      "op": "ADD"
    },
    "5515": {
      "op": "MSTORE"
    },
    "5516": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5551": {
      "op": "DUP3"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "MSTORE"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "5578": {
      "op": "JUMP"
    },
    "5579": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D8"
    },
    "5587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5588": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "5591": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5605": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5611": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5612": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5622": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5624": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5627": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5628": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1604"
    },
    "5631": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5632": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "5635": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5636": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5637": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5638": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1651"
    },
    "5642": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5643": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5644": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5646": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "LT",
      "path": "16"
    },
    "5647": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1626"
    },
    "5650": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5651": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5654": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5655": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5656": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5657": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "5658": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "5659": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5660": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5661": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5662": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5664": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5665": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5666": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1651"
    },
    "5669": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5670": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5671": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5672": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5673": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5674": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5675": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5677": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5678": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5680": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5682": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5683": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5684": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5685": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5686": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5687": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5688": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5689": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5690": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "5692": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5693": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5694": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5696": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5697": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5698": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5699": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "GT",
      "path": "16"
    },
    "5700": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1634"
    },
    "5703": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5704": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5705": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5706": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SUB",
      "path": "16"
    },
    "5707": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5709": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "AND",
      "path": "16"
    },
    "5710": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5711": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "5712": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5713": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5714": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5715": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5716": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5717": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5718": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "5719": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5720": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5721": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5722": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7928,
        7935
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5724": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7953,
        7975
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 41,
      "value": "0x1667"
    },
    "5727": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7961,
        7974
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x657"
    },
    "5730": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5732": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5733": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5734": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5735": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7953,
        7975
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5736": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7946,
        7975
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5737": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7946,
        7975
      ],
      "op": "POP",
      "path": "16"
    },
    "5738": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7878,
        7982
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5739": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "o",
      "offset": [
        7878,
        7982
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5740": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5741": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5749": {
      "op": "SHL"
    },
    "5750": {
      "op": "SUB"
    },
    "5751": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 42
    },
    "5752": {
      "branch": 177,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "3"
    },
    "5753": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D7"
    },
    "5756": {
      "branch": 177,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5757": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5759": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5766": {
      "op": "SHL"
    },
    "5767": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5768": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5771": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5773": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5774": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "3"
    },
    "5775": {
      "op": "MSTORE"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5818": {
      "op": "DUP3"
    },
    "5819": {
      "op": "ADD"
    },
    "5820": {
      "op": "MSTORE"
    },
    "5821": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5834": {
      "op": "SHL"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5837": {
      "op": "DUP3"
    },
    "5838": {
      "op": "ADD"
    },
    "5839": {
      "op": "MSTORE"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5842": {
      "op": "ADD"
    },
    "5843": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "5846": {
      "op": "JUMP"
    },
    "5847": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5848": {
      "op": "POP"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5855": {
      "op": "SHL"
    },
    "5856": {
      "op": "SUB"
    },
    "5857": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "3",
      "statement": 43
    },
    "5858": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5860": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5861": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5862": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5863": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "5865": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5867": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5868": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5870": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5871": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5872": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5873": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5874": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5875": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5876": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5878": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5885": {
      "op": "SHL"
    },
    "5886": {
      "op": "SUB"
    },
    "5887": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5890": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5891": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5892": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5893": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5894": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5895": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5896": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1723"
    },
    "5899": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5900": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5902": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5909": {
      "op": "SHL"
    },
    "5910": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5914": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5915": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "5918": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5919": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "5922": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5923": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x12DB"
    },
    "5927": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26EB"
    },
    "5932": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5933": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5934": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5936": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "op": "SUB"
    },
    "5945": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5948": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5949": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5950": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5951": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5952": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5953": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5954": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175D"
    },
    "5957": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5958": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5967": {
      "op": "SHL"
    },
    "5968": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5969": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5970": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5972": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "5976": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5977": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "5980": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5981": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5982": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6442,
        6451
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 45,
      "value": "0x17"
    },
    "5984": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        6442,
        6467
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5985": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        6362,
        6474
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5986": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5987": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5989": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5996": {
      "op": "SHL"
    },
    "5997": {
      "op": "SUB"
    },
    "5998": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6001": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6002": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6003": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6004": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6005": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6006": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6007": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1792"
    },
    "6010": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6011": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6013": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6020": {
      "op": "SHL"
    },
    "6021": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6022": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6023": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6025": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "6029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "6033": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6034": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6035": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4100,
        4114
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 46,
      "value": "0x3"
    },
    "6037": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4096
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6039": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4096
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6040": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4096
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6042": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4096
      ],
      "op": "AND",
      "path": "16"
    },
    "6043": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6045": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6046": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "GT",
      "path": "16"
    },
    "6047": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6048": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17AB"
    },
    "6051": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6052": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17AB"
    },
    "6055": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341F"
    },
    "6058": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4091,
        4114
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6059": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6060": {
      "branch": 160,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4091,
        4114
      ],
      "op": "EQ",
      "path": "16"
    },
    "6061": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17F8"
    },
    "6064": {
      "branch": 160,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6065": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6067": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6074": {
      "op": "SHL"
    },
    "6075": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6076": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6079": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6081": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6082": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "ADD",
      "path": "16"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6088": {
      "op": "DUP3"
    },
    "6089": {
      "op": "ADD"
    },
    "6090": {
      "op": "MSTORE"
    },
    "6091": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6126": {
      "op": "DUP3"
    },
    "6127": {
      "op": "ADD"
    },
    "6128": {
      "op": "MSTORE"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6131": {
      "op": "ADD"
    },
    "6132": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "6135": {
      "op": "JUMP"
    },
    "6136": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4083,
        4143
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6137": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4191,
        4205
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 47,
      "value": "0x14"
    },
    "6139": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4191,
        4205
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6140": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4174,
        4187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6142": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4174,
        4187
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6143": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x180B"
    },
    "6146": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6147": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6149": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6150": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "AND",
      "path": "16"
    },
    "6151": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35EB"
    },
    "6154": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4161,
        4187
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6155": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4187
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6156": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4205
      ],
      "op": "GT",
      "path": "16"
    },
    "6157": {
      "branch": 161,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4161,
        4205
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6158": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x186D"
    },
    "6161": {
      "branch": 161,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6162": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6164": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6171": {
      "op": "SHL"
    },
    "6172": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6173": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6176": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6178": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6179": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "ADD",
      "path": "16"
    },
    "6180": {
      "op": "MSTORE"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6185": {
      "op": "DUP3"
    },
    "6186": {
      "op": "ADD"
    },
    "6187": {
      "op": "MSTORE"
    },
    "6188": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6223": {
      "op": "DUP3"
    },
    "6224": {
      "op": "ADD"
    },
    "6225": {
      "op": "MSTORE"
    },
    "6226": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6243": {
      "op": "DUP3"
    },
    "6244": {
      "op": "ADD"
    },
    "6245": {
      "op": "MSTORE"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6248": {
      "op": "ADD"
    },
    "6249": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "6252": {
      "op": "JUMP"
    },
    "6253": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4153,
        4253
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6254": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4285,
        4295
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 48
    },
    "6255": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6257": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "AND",
      "path": "16"
    },
    "6258": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6260": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4281
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6262": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6263": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6264": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6265": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1882"
    },
    "6268": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6269": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6270": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35EB"
    },
    "6273": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4268,
        4295
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6274": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6275": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6276": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6277": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4268,
        4295
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6278": {
      "op": "POP"
    },
    "6279": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4322,
        4323
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6281": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4322,
        4323
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6282": {
      "op": "POP"
    },
    "6283": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4305,
        4461
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6284": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4330,
        4340
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6285": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4325,
        4340
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6287": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4325,
        4340
      ],
      "op": "AND",
      "path": "16"
    },
    "6288": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4325,
        4326
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6289": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4325,
        4340
      ],
      "op": "GT",
      "path": "16"
    },
    "6290": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4305,
        4461
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDD"
    },
    "6293": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4305,
        4461
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6294": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4361,
        4409
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 49,
      "value": "0x18A2"
    },
    "6297": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4371,
        4381
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6298": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4383,
        4408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1168"
    },
    "6301": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4383,
        4398
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6303": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6304": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6305": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6306": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4361,
        4409
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6307": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4423,
        4450
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 50,
      "value": "0x18B0"
    },
    "6310": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4423,
        4438
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6312": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6313": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6314": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6316": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6317": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6318": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6319": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6320": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4423,
        4450
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6321": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 51
    },
    "6322": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18BA"
    },
    "6325": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6326": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "6329": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4342,
        4345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6330": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6331": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6332": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "6333": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4342,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "6334": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4305,
        4461
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188B"
    },
    "6337": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4305,
        4461
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6338": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6339": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6341": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6348": {
      "op": "SHL"
    },
    "6349": {
      "op": "SUB"
    },
    "6350": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6353": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6354": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6355": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6357": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6358": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6359": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F2"
    },
    "6362": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6363": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6372": {
      "op": "SHL"
    },
    "6373": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "6381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "6385": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6387": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5664,
        5674
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 52,
      "value": "0xD"
    },
    "6389": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5664,
        5688
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6390": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5591,
        5695
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6391": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6392": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6394": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6401": {
      "op": "SHL"
    },
    "6402": {
      "op": "SUB"
    },
    "6403": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6406": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6407": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6409": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6410": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6411": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6412": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1927"
    },
    "6415": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6425": {
      "op": "SHL"
    },
    "6426": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6428": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6431": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "6434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6435": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "6438": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6440": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6999,
        7000
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 53,
      "value": "0x0"
    },
    "6442": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6974,
        6988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6444": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6445": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6446": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1936"
    },
    "6449": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6450": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "6453": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6968,
        6996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6454": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6455": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6456": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        6996
      ],
      "op": "POP",
      "path": "16"
    },
    "6457": {
      "branch": 162,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6968,
        7000
      ],
      "op": "GT",
      "path": "16"
    },
    "6458": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1985"
    },
    "6461": {
      "branch": 162,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6462": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6464": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6471": {
      "op": "SHL"
    },
    "6472": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6473": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6476": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6478": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6479": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "ADD",
      "path": "16"
    },
    "6480": {
      "op": "MSTORE"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6485": {
      "op": "DUP3"
    },
    "6486": {
      "op": "ADD"
    },
    "6487": {
      "op": "MSTORE"
    },
    "6488": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6523": {
      "op": "DUP3"
    },
    "6524": {
      "op": "ADD"
    },
    "6525": {
      "op": "MSTORE"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6528": {
      "op": "ADD"
    },
    "6529": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "6532": {
      "op": "JUMP"
    },
    "6533": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6960,
        7032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6534": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x11"
    },
    "6536": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6537": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6541": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6542": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "DIV",
      "path": "16"
    },
    "6543": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6545": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7051,
        7071
      ],
      "op": "AND",
      "path": "16"
    },
    "6546": {
      "branch": 163,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7050,
        7071
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6547": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19E9"
    },
    "6550": {
      "branch": 163,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6551": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6553": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6562": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6565": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6567": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6568": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "ADD",
      "path": "16"
    },
    "6569": {
      "op": "MSTORE"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6574": {
      "op": "DUP3"
    },
    "6575": {
      "op": "ADD"
    },
    "6576": {
      "op": "MSTORE"
    },
    "6577": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6612": {
      "op": "DUP3"
    },
    "6613": {
      "op": "ADD"
    },
    "6614": {
      "op": "MSTORE"
    },
    "6615": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "6620": {
      "op": "SHL"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6623": {
      "op": "DUP3"
    },
    "6624": {
      "op": "ADD"
    },
    "6625": {
      "op": "MSTORE"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6628": {
      "op": "ADD"
    },
    "6629": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "6632": {
      "op": "JUMP"
    },
    "6633": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7042,
        7110
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6634": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7140
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x11"
    },
    "6636": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6637": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6638": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "6642": {
      "op": "NOT"
    },
    "6643": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "AND",
      "path": "16"
    },
    "6644": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6648": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "OR",
      "path": "16"
    },
    "6649": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6650": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7120,
        7147
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6651": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6899,
        7154
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6652": {
      "fn": "CryptidToken.pause",
      "offset": [
        5162,
        5223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6653": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6655": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6662": {
      "op": "SHL"
    },
    "6663": {
      "op": "SUB"
    },
    "6664": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6667": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6668": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6671": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6672": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6673": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2C"
    },
    "6676": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6679": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6686": {
      "op": "SHL"
    },
    "6687": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "6695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "6699": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6701": {
      "fn": "CryptidToken.pause",
      "offset": [
        5208,
        5216
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 56,
      "value": "0x12DB"
    },
    "6704": {
      "fn": "CryptidToken.pause",
      "offset": [
        5208,
        5214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2745"
    },
    "6707": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5208,
        5216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6708": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6709": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4614,
        4623
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "6711": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4614,
        4623
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6712": {
      "offset": [
        2779,
        2945
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6714": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2779,
        2945
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6715": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2779,
        2945
      ],
      "op": "AND",
      "path": "16"
    },
    "6716": {
      "offset": [
        2888,
        2897
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6717": {
      "offset": [
        2862,
        2884
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A46"
    },
    "6720": {
      "offset": [
        2779,
        2945
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6721": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4614,
        4623
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6722": {
      "offset": [
        2862,
        2884
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3571"
    },
    "6725": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        2862,
        2884
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6726": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2862,
        2884
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6727": {
      "offset": [
        2862,
        2897
      ],
      "op": "EQ",
      "path": "16"
    },
    "6728": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A8F"
    },
    "6731": {
      "offset": [
        2854,
        2927
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6732": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6734": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2854,
        2927
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6741": {
      "op": "SHL"
    },
    "6742": {
      "offset": [
        2854,
        2927
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6743": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2854,
        2927
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6746": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6748": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2854,
        2927
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6749": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2854,
        2927
      ],
      "op": "ADD",
      "path": "16"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6755": {
      "op": "DUP3"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "op": "MSTORE"
    },
    "6758": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6786": {
      "op": "SHL"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6789": {
      "op": "DUP3"
    },
    "6790": {
      "op": "ADD"
    },
    "6791": {
      "op": "MSTORE"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "offset": [
        2854,
        2927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "6798": {
      "op": "JUMP"
    },
    "6799": {
      "offset": [
        2854,
        2927
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6800": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6802": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6804": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6805": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "6806": {
      "branch": 194,
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6807": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE2"
    },
    "6810": {
      "branch": 194,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6811": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6813": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6820": {
      "op": "SHL"
    },
    "6821": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6822": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6825": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6827": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6828": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "6829": {
      "op": "MSTORE"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6834": {
      "op": "DUP3"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "MSTORE"
    },
    "6837": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6872": {
      "op": "DUP3"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "MSTORE"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6877": {
      "op": "ADD"
    },
    "6878": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA5"
    },
    "6881": {
      "op": "JUMP"
    },
    "6882": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6883": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6885": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6887": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6888": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "6890": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6891": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6893": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "6894": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6895": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B0A"
    },
    "6898": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6899": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6901": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6908": {
      "op": "SHL"
    },
    "6909": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6910": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6911": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6913": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "6914": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA5"
    },
    "6917": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6918": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3590"
    },
    "6921": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6922": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6923": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4715,
        4731
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0x4"
    },
    "6925": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4711
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6927": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4711
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6928": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4711
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6930": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4711
      ],
      "op": "AND",
      "path": "16"
    },
    "6931": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6933": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6934": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "GT",
      "path": "16"
    },
    "6935": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6936": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B23"
    },
    "6939": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6940": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B23"
    },
    "6943": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341F"
    },
    "6946": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4706,
        4731
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6947": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6948": {
      "branch": 164,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4706,
        4731
      ],
      "op": "EQ",
      "path": "16"
    },
    "6949": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B70"
    },
    "6952": {
      "branch": 164,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6953": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6955": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6962": {
      "op": "SHL"
    },
    "6963": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6964": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6967": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6969": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6970": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "ADD",
      "path": "16"
    },
    "6971": {
      "op": "MSTORE"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6976": {
      "op": "DUP3"
    },
    "6977": {
      "op": "ADD"
    },
    "6978": {
      "op": "MSTORE"
    },
    "6979": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7014": {
      "op": "DUP3"
    },
    "7015": {
      "op": "ADD"
    },
    "7016": {
      "op": "MSTORE"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7019": {
      "op": "ADD"
    },
    "7020": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7023": {
      "op": "JUMP"
    },
    "7024": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4698,
        4762
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7025": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4811,
        4826
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0x16"
    },
    "7027": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4811,
        4826
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7028": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4797,
        4807
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7029": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7031": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "AND",
      "path": "16"
    },
    "7032": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4793
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B80"
    },
    "7035": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7037": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7038": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7039": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7040": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4793
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7041": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B8A"
    },
    "7044": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7045": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7046": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35EB"
    },
    "7049": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4780,
        4807
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7050": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4807
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7051": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4826
      ],
      "op": "GT",
      "path": "16"
    },
    "7052": {
      "branch": 165,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4780,
        4826
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7053": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BE7"
    },
    "7056": {
      "branch": 165,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7057": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7059": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7066": {
      "op": "SHL"
    },
    "7067": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7068": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7071": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7073": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7074": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "ADD",
      "path": "16"
    },
    "7075": {
      "op": "MSTORE"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "ADD"
    },
    "7082": {
      "op": "MSTORE"
    },
    "7083": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7118": {
      "op": "DUP3"
    },
    "7119": {
      "op": "ADD"
    },
    "7120": {
      "op": "MSTORE"
    },
    "7121": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "7130": {
      "op": "SHL"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7133": {
      "op": "DUP3"
    },
    "7134": {
      "op": "ADD"
    },
    "7135": {
      "op": "MSTORE"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7138": {
      "op": "ADD"
    },
    "7139": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7142": {
      "op": "JUMP"
    },
    "7143": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4772,
        4869
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7144": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 59,
      "value": "0x11"
    },
    "7146": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7147": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7149": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7150": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7151": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4901,
        4913
      ],
      "op": "AND",
      "path": "16"
    },
    "7152": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4887,
        4913
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7153": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4887,
        4913
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7154": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4887,
        4913
      ],
      "op": "AND",
      "path": "16"
    },
    "7155": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4887,
        4913
      ],
      "op": "GT",
      "path": "16"
    },
    "7156": {
      "branch": 166,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4887,
        4913
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7157": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C53"
    },
    "7160": {
      "branch": 166,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7161": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7163": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7164": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7170": {
      "op": "SHL"
    },
    "7171": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7172": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7175": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7177": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7178": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "ADD",
      "path": "16"
    },
    "7179": {
      "op": "MSTORE"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7184": {
      "op": "DUP3"
    },
    "7185": {
      "op": "ADD"
    },
    "7186": {
      "op": "MSTORE"
    },
    "7187": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7222": {
      "op": "DUP3"
    },
    "7223": {
      "op": "ADD"
    },
    "7224": {
      "op": "MSTORE"
    },
    "7225": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7238": {
      "op": "SHL"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7241": {
      "op": "DUP3"
    },
    "7242": {
      "op": "ADD"
    },
    "7243": {
      "op": "MSTORE"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7246": {
      "op": "ADD"
    },
    "7247": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7250": {
      "op": "JUMP"
    },
    "7251": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4879,
        4960
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7252": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4989,
        4990
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7254": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7255": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4997,
        5007
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7256": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4992,
        5007
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7258": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4992,
        5007
      ],
      "op": "AND",
      "path": "16"
    },
    "7259": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4992,
        4993
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7260": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4992,
        5007
      ],
      "op": "GT",
      "path": "16"
    },
    "7261": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C8D"
    },
    "7264": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7265": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5028,
        5076
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 60,
      "value": "0x1C6D"
    },
    "7268": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5038,
        5048
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7269": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1168"
    },
    "7272": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5050,
        5065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7274": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7275": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7276": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7277": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5028,
        5076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7278": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5090,
        5117
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 61,
      "value": "0x1C7B"
    },
    "7281": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5090,
        5105
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7283": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7284": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7285": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7287": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7288": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7289": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7290": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7291": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5090,
        5117
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7292": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 62
    },
    "7293": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C85"
    },
    "7296": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7297": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "7300": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5009,
        5012
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7301": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7302": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7303": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "POP",
      "path": "16"
    },
    "7304": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5009,
        5012
      ],
      "op": "POP",
      "path": "16"
    },
    "7305": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C56"
    },
    "7308": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7309": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4972,
        5128
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7310": {
      "op": "POP"
    },
    "7311": {
      "op": "POP"
    },
    "7312": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7314": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7316": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7317": {
      "op": "POP"
    },
    "7318": {
      "op": "POP"
    },
    "7319": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4502,
        5134
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7320": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7321": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7323": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x1"
    },
    "7325": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7326": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7327": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAD"
    },
    "7330": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7331": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x349A"
    },
    "7334": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7335": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4267,
        4420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4361,
        4413
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 64,
      "value": "0xDDD"
    },
    "7339": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4394,
        4402
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4404,
        4412
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7342": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4361,
        4379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x279D"
    },
    "7345": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4361,
        4413
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7346": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2980,
        3434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7347": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7349": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "op": "SUB"
    },
    "7358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7361": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7362": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7363": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7364": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7365": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7366": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7367": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE2"
    },
    "7370": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7373": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7380": {
      "op": "SHL"
    },
    "7381": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7383": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7385": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "7389": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "7393": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7395": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3124,
        3134
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 65,
      "value": "0x0"
    },
    "7397": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "7399": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3121
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7400": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7402": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3121
      ],
      "op": "AND",
      "path": "16"
    },
    "7403": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7405": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7406": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "GT",
      "path": "16"
    },
    "7407": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7408": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CFB"
    },
    "7411": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7412": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CFB"
    },
    "7415": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341F"
    },
    "7418": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3116,
        3134
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7419": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7420": {
      "branch": 167,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3116,
        3134
      ],
      "op": "GT",
      "path": "16"
    },
    "7421": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D3F"
    },
    "7424": {
      "branch": 167,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7425": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7427": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7436": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7439": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7441": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7442": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "ADD",
      "path": "16"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7448": {
      "op": "DUP3"
    },
    "7449": {
      "op": "ADD"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7477": {
      "op": "DUP3"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "op": "MSTORE"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7482": {
      "op": "ADD"
    },
    "7483": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7486": {
      "op": "JUMP"
    },
    "7487": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3108,
        3159
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7488": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3208,
        3223
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 66,
      "value": "0x16"
    },
    "7490": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3208,
        3223
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7491": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3194,
        3204
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7492": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7494": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "AND",
      "path": "16"
    },
    "7495": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3190
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D4F"
    },
    "7498": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7500": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7501": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7502": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7503": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3190
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7504": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D59"
    },
    "7507": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7508": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7509": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35EB"
    },
    "7512": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3177,
        3204
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7513": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3204
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7514": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3223
      ],
      "op": "GT",
      "path": "16"
    },
    "7515": {
      "branch": 168,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3177,
        3223
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7516": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DBA"
    },
    "7519": {
      "branch": 168,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7520": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7522": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7529": {
      "op": "SHL"
    },
    "7530": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7531": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7534": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7536": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7537": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "ADD",
      "path": "16"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7543": {
      "op": "DUP3"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7581": {
      "op": "DUP3"
    },
    "7582": {
      "op": "ADD"
    },
    "7583": {
      "op": "MSTORE"
    },
    "7584": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7597": {
      "op": "SHL"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7600": {
      "op": "DUP3"
    },
    "7601": {
      "op": "ADD"
    },
    "7602": {
      "op": "MSTORE"
    },
    "7603": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7605": {
      "op": "ADD"
    },
    "7606": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7609": {
      "op": "JUMP"
    },
    "7610": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3169,
        3270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7611": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3298
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7613": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3280,
        3428
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7614": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3315
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7615": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3300,
        3315
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7617": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3300,
        3315
      ],
      "op": "AND",
      "path": "16"
    },
    "7618": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3300,
        3301
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7619": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3300,
        3315
      ],
      "op": "GT",
      "path": "16"
    },
    "7620": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3280,
        3428
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCDB"
    },
    "7623": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3280,
        3428
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7624": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3336,
        3376
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 67,
      "value": "0x1DD4"
    },
    "7627": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3346,
        3348
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7628": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3350,
        3375
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1168"
    },
    "7631": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3350,
        3365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7633": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7634": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7635": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7636": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3336,
        3376
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7637": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3390,
        3417
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 68,
      "value": "0x1DE2"
    },
    "7640": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3390,
        3405
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7642": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7643": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7644": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7646": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7647": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7648": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7649": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7650": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3390,
        3417
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7651": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 69
    },
    "7652": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DEC"
    },
    "7655": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7656": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35D0"
    },
    "7659": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3317,
        3320
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7660": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7661": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7662": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "POP",
      "path": "16"
    },
    "7663": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3317,
        3320
      ],
      "op": "POP",
      "path": "16"
    },
    "7664": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3280,
        3428
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DBD"
    },
    "7667": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3280,
        3428
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7668": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7669": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5561
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 70,
      "value": "0x1DFE"
    },
    "7672": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7673": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2386"
    },
    "7677": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5520,
        5561
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7678": {
      "branch": 178,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5561
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7679": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E1A"
    },
    "7682": {
      "branch": 178,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7692": {
      "op": "SHL"
    },
    "7693": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "ADD",
      "path": "3"
    },
    "7698": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "7701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x350A"
    },
    "7705": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5512,
        5615
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7706": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5512,
        5615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7707": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5625,
        5664
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x1E26"
    },
    "7710": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5639,
        5643
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7711": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5645,
        5647
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7712": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5649,
        5656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5658,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7714": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5625,
        5638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286C"
    },
    "7717": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5625,
        5664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5625,
        5664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "POP",
      "path": "3"
    },
    "7720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "POP",
      "path": "3"
    },
    "7721": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "POP",
      "path": "3"
    },
    "7722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5351,
        5671
      ],
      "op": "POP",
      "path": "3"
    },
    "7723": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5351,
        5671
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7724": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7725": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7727": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7734": {
      "op": "SHL"
    },
    "7735": {
      "op": "SUB"
    },
    "7736": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7740": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7741": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7742": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7743": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7744": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7745": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E5C"
    },
    "7748": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7749": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7751": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7758": {
      "op": "SHL"
    },
    "7759": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7761": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7763": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "7767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7768": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "7771": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7772": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7779": {
      "op": "SHL"
    },
    "7780": {
      "op": "SUB"
    },
    "7781": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "AND",
      "path": "16",
      "statement": 72
    },
    "7782": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7784": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7785": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7786": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7787": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5417
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "7789": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7791": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7792": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7794": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7795": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5428
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7796": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7797": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7800": {
      "op": "NOT"
    },
    "7801": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "AND",
      "path": "16"
    },
    "7802": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5431,
        5435
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7804": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "OR",
      "path": "16"
    },
    "7805": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7806": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5410,
        5435
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7807": {
      "fn": "CryptidToken.setClaim",
      "jump": "o",
      "offset": [
        5345,
        5442
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7808": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7809": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7811": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7812": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7813": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D8"
    },
    "7816": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7817": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "7820": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7821": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7822": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7824": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7825": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7826": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15D8"
    },
    "7829": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7830": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "7833": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7834": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7835": {
      "fn": "ERC721._exists",
      "offset": [
        7208,
        7212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7837": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7838": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7839": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7840": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7238
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7842": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7844": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7845": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7847": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7848": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7849": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7850": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8158,
        8171
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7852": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8158,
        8171
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7859": {
      "op": "SHL"
    },
    "7860": {
      "op": "SUB"
    },
    "7861": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "AND",
      "path": "3"
    },
    "7862": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 73,
      "value": "0x1F1A"
    },
    "7865": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7866": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7868": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7875": {
      "op": "SHL"
    },
    "7876": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7877": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7880": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7882": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7883": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "ADD",
      "path": "16"
    },
    "7884": {
      "op": "MSTORE"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7889": {
      "op": "DUP3"
    },
    "7890": {
      "op": "ADD"
    },
    "7891": {
      "op": "MSTORE"
    },
    "7892": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7927": {
      "op": "DUP3"
    },
    "7928": {
      "op": "ADD"
    },
    "7929": {
      "op": "MSTORE"
    },
    "7930": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7949": {
      "op": "SHL"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7952": {
      "op": "DUP3"
    },
    "7953": {
      "op": "ADD"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "7961": {
      "op": "JUMP"
    },
    "7962": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8183,
        8260
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7963": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8301,
        8308
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 74,
      "value": "0xF"
    },
    "7965": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8310,
        8328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F25"
    },
    "7968": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8310,
        8317
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7969": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8310,
        8326
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x289F"
    },
    "7972": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8310,
        8328
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7973": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8310,
        8328
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7974": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8330,
        8343
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7976": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7978": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7979": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7981": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "ADD",
      "path": "16"
    },
    "7982": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F39"
    },
    "7985": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7986": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7987": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7988": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7989": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x369D"
    },
    "7992": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        8284,
        8344
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7993": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7994": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7996": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7997": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7999": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8000": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8001": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SUB",
      "path": "16"
    },
    "8002": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SUB",
      "path": "16"
    },
    "8003": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8004": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8005": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8006": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8008": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8284,
        8344
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8009": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8270,
        8345
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8010": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8270,
        8345
      ],
      "op": "POP",
      "path": "16"
    },
    "8011": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8012": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8013": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        8085,
        8352
      ],
      "op": "POP",
      "path": "16"
    },
    "8014": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        8085,
        8352
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8015": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8016": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8018": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8025": {
      "op": "SHL"
    },
    "8026": {
      "op": "SUB"
    },
    "8027": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8031": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8032": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8033": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8034": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8035": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8036": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7F"
    },
    "8039": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8049": {
      "op": "SHL"
    },
    "8050": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8054": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8058": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "8062": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8064": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 75,
      "value": "0x11"
    },
    "8066": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8067": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "8071": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8072": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "DIV",
      "path": "16"
    },
    "8073": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8075": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7653
      ],
      "op": "AND",
      "path": "16"
    },
    "8076": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7661
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8077": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7661
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8078": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7657,
        7661
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8080": {
      "branch": 169,
      "fn": "CryptidToken.setStage",
      "offset": [
        7633,
        7661
      ],
      "op": "EQ",
      "path": "16"
    },
    "8081": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2002"
    },
    "8084": {
      "branch": 169,
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8085": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8087": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8094": {
      "op": "SHL"
    },
    "8095": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8096": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8099": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8101": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8102": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "ADD",
      "path": "16"
    },
    "8103": {
      "op": "MSTORE"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8108": {
      "op": "DUP3"
    },
    "8109": {
      "op": "ADD"
    },
    "8110": {
      "op": "MSTORE"
    },
    "8111": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "8144": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8146": {
      "op": "DUP3"
    },
    "8147": {
      "op": "ADD"
    },
    "8148": {
      "op": "MSTORE"
    },
    "8149": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8184": {
      "op": "DUP3"
    },
    "8185": {
      "op": "ADD"
    },
    "8186": {
      "op": "MSTORE"
    },
    "8187": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8189": {
      "op": "ADD"
    },
    "8190": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "8193": {
      "op": "JUMP"
    },
    "8194": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7625,
        7722
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8195": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7740,
        7750
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 76,
      "value": "0xD"
    },
    "8197": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7740,
        7750
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8198": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x206C"
    },
    "8201": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8202": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8204": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8211": {
      "op": "SHL"
    },
    "8212": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8213": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8216": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8218": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8219": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "ADD",
      "path": "16"
    },
    "8220": {
      "op": "MSTORE"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8225": {
      "op": "DUP3"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "MSTORE"
    },
    "8228": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8263": {
      "op": "DUP3"
    },
    "8264": {
      "op": "ADD"
    },
    "8265": {
      "op": "MSTORE"
    },
    "8266": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8287": {
      "op": "SHL"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8290": {
      "op": "DUP3"
    },
    "8291": {
      "op": "ADD"
    },
    "8292": {
      "op": "MSTORE"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8295": {
      "op": "ADD"
    },
    "8296": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "8299": {
      "op": "JUMP"
    },
    "8300": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7732,
        7810
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8301": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 77,
      "value": "0x18"
    },
    "8303": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8304": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8305": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7828,
        7834
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8306": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7828,
        7834
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8307": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7825
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8310": {
      "op": "NOT"
    },
    "8311": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "AND",
      "path": "16"
    },
    "8312": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8314": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7828,
        7834
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8315": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8317": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8318": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "GT",
      "path": "16"
    },
    "8319": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8320": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x208B"
    },
    "8323": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8324": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x208B"
    },
    "8327": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341F"
    },
    "8330": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7820,
        7834
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8331": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8332": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "MUL",
      "path": "16"
    },
    "8333": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "OR",
      "path": "16"
    },
    "8334": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8335": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8336": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7820,
        7834
      ],
      "op": "POP",
      "path": "16"
    },
    "8337": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7564,
        7841
      ],
      "op": "POP",
      "path": "16"
    },
    "8338": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        7564,
        7841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8339": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7988,
        8079
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8340": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8033,
        8040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8342": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        8058,
        8071
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 78,
      "value": "0x1667"
    },
    "8345": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8347": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8348": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8349": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8350": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6228,
        6356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8351": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8353": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8360": {
      "op": "SHL"
    },
    "8361": {
      "op": "SUB"
    },
    "8362": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8365": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8366": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8367": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8368": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8369": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8370": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8371": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20CE"
    },
    "8374": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8375": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8377": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8387": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8389": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8393": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8394": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "8397": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8398": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8399": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 79
    },
    "8400": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8401": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDD"
    },
    "8404": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8405": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6329
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8407": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6329
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8408": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8410": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8411": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "ADD",
      "path": "16"
    },
    "8412": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8413": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6316,
        6349
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F86"
    },
    "8416": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6316,
        6349
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8417": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8358,
        8470
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8406,
        8413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8420": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8450,
        8463
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 80,
      "value": "0x20EC"
    },
    "8423": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8425": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8426": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8427": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8428": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8450,
        8463
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8429": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8447
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "8431": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8447
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8432": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1667"
    },
    "8435": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8463
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8436": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8463
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8437": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        8432,
        8463
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36D0"
    },
    "8440": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        8432,
        8463
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8442": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8451": {
      "op": "SHL"
    },
    "8452": {
      "op": "SUB"
    },
    "8453": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8456": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8458": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8459": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8460": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8461": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8462": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2129"
    },
    "8465": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8475": {
      "op": "SHL"
    },
    "8476": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8481": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8484": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8485": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "8488": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8489": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8490": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5958,
        5959
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 81,
      "value": "0x0"
    },
    "8492": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5940,
        5947
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8494": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8495": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8496": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2138"
    },
    "8499": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8500": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x349A"
    },
    "8503": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5934,
        5955
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8504": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8505": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8506": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5955
      ],
      "op": "POP",
      "path": "16"
    },
    "8507": {
      "branch": 170,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5934,
        5959
      ],
      "op": "GT",
      "path": "16"
    },
    "8508": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2187"
    },
    "8511": {
      "branch": 170,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8512": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8514": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8521": {
      "op": "SHL"
    },
    "8522": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8523": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8526": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8528": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8529": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "ADD",
      "path": "16"
    },
    "8530": {
      "op": "MSTORE"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8535": {
      "op": "DUP3"
    },
    "8536": {
      "op": "ADD"
    },
    "8537": {
      "op": "MSTORE"
    },
    "8538": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8573": {
      "op": "DUP3"
    },
    "8574": {
      "op": "ADD"
    },
    "8575": {
      "op": "MSTORE"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8578": {
      "op": "ADD"
    },
    "8579": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "8582": {
      "op": "JUMP"
    },
    "8583": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5926,
        5988
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8584": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 82,
      "value": "0x11"
    },
    "8586": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8587": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8590": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8591": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "DIV",
      "path": "16"
    },
    "8592": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8594": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6007,
        6021
      ],
      "op": "AND",
      "path": "16"
    },
    "8595": {
      "branch": 171,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6006,
        6021
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8596": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21DF"
    },
    "8599": {
      "branch": 171,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8600": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8602": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8611": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8614": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8616": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8617": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "ADD",
      "path": "16"
    },
    "8618": {
      "op": "MSTORE"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8623": {
      "op": "DUP3"
    },
    "8624": {
      "op": "ADD"
    },
    "8625": {
      "op": "MSTORE"
    },
    "8626": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8661": {
      "op": "DUP3"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8666": {
      "op": "ADD"
    },
    "8667": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBA5"
    },
    "8670": {
      "op": "JUMP"
    },
    "8671": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5998,
        6052
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8672": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6076
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 83,
      "value": "0x11"
    },
    "8674": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8675": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8676": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8679": {
      "op": "NOT"
    },
    "8680": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "AND",
      "path": "16"
    },
    "8681": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8684": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "OR",
      "path": "16"
    },
    "8685": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8686": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6062,
        6083
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8687": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5872,
        6090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8689": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8691": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8698": {
      "op": "SHL"
    },
    "8699": {
      "op": "SUB"
    },
    "8700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8704": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8707": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8708": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8709": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2220"
    },
    "8712": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8722": {
      "op": "SHL"
    },
    "8723": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "8735": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8743": {
      "op": "SHL"
    },
    "8744": {
      "op": "SUB"
    },
    "8745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 84
    },
    "8746": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2285"
    },
    "8750": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8760": {
      "op": "SHL"
    },
    "8761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8769": {
      "op": "MSTORE"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8774": {
      "op": "DUP3"
    },
    "8775": {
      "op": "ADD"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8812": {
      "op": "DUP3"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "MSTORE"
    },
    "8815": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8824": {
      "op": "SHL"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8827": {
      "op": "DUP3"
    },
    "8828": {
      "op": "ADD"
    },
    "8829": {
      "op": "MSTORE"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8832": {
      "op": "ADD"
    },
    "8833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8836": {
      "op": "JUMP"
    },
    "8837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 85,
      "value": "0x12A0"
    },
    "8841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26EB"
    },
    "8845": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8846": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8847": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8849": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "SUB"
    },
    "8858": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8863": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8865": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8866": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8867": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22BE"
    },
    "8870": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8880": {
      "op": "SHL"
    },
    "8881": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8883": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "8889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34D5"
    },
    "8893": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8895": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7261
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0x11"
    },
    "8897": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8898": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8905": {
      "op": "SHL"
    },
    "8906": {
      "op": "SUB"
    },
    "8907": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8908": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8909": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "AND",
      "path": "16"
    },
    "8910": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "8915": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "MUL",
      "path": "16"
    },
    "8916": {
      "op": "PUSH4",
      "value": "0x1000000"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8925": {
      "op": "SHL"
    },
    "8926": {
      "op": "SUB"
    },
    "8927": {
      "op": "NOT"
    },
    "8928": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8929": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8930": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "AND",
      "path": "16"
    },
    "8931": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8932": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8933": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8934": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "OR",
      "path": "16"
    },
    "8935": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8936": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        7245,
        7281
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8937": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        7160,
        7288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8938": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8939": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8940": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8941": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8943": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8944": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8945": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8946": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8947": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8948": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8956": {
      "op": "SHL"
    },
    "8957": {
      "op": "SUB"
    },
    "8958": {
      "op": "NOT"
    },
    "8959": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 87
    },
    "8960": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8961": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8968": {
      "op": "SHL"
    },
    "8969": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8970": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8971": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA98"
    },
    "8974": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8975": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8976": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA98"
    },
    "8979": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8980": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x299D"
    },
    "8983": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8984": {
      "fn": "ERC721._approve",
      "offset": [
        10994,
        11165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8985": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 88,
      "value": "0x0"
    },
    "8987": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8988": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8989": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8990": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8992": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8994": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8995": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8997": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8998": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8999": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9000": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9007": {
      "op": "SHL"
    },
    "9008": {
      "op": "SUB"
    },
    "9009": {
      "op": "NOT"
    },
    "9010": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "AND",
      "path": "3"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9017": {
      "op": "SHL"
    },
    "9018": {
      "op": "SUB"
    },
    "9019": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9020": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "AND",
      "path": "3"
    },
    "9021": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9022": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9023": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "OR",
      "path": "3"
    },
    "9024": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9025": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9026": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9027": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9028": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9029": {
      "fn": "ERC721._approve",
      "offset": [
        11121,
        11144
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 89,
      "value": "0x234D"
    },
    "9032": {
      "fn": "ERC721._approve",
      "offset": [
        11068,
        11092
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9033": {
      "fn": "ERC721._approve",
      "offset": [
        11121,
        11135
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1554"
    },
    "9036": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11121,
        11144
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9037": {
      "fn": "ERC721._approve",
      "offset": [
        11121,
        11144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9044": {
      "op": "SHL"
    },
    "9045": {
      "op": "SUB"
    },
    "9046": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "AND",
      "path": "3"
    },
    "9047": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9080": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9082": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9083": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9085": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9086": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9087": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9088": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "SUB",
      "path": "3"
    },
    "9089": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9090": {
      "fn": "ERC721._approve",
      "offset": [
        11112,
        11158
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9091": {
      "fn": "ERC721._approve",
      "offset": [
        10994,
        11165
      ],
      "op": "POP",
      "path": "3"
    },
    "9092": {
      "fn": "ERC721._approve",
      "offset": [
        10994,
        11165
      ],
      "op": "POP",
      "path": "3"
    },
    "9093": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10994,
        11165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7770
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9095": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7519,
        7523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9097": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9098": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9099": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9100": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7238
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9102": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9104": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9105": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9107": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9108": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9109": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9116": {
      "op": "SHL"
    },
    "9117": {
      "op": "SUB"
    },
    "9118": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "AND",
      "path": "3"
    },
    "9119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 90,
      "value": "0x23FF"
    },
    "9122": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9132": {
      "op": "SHL"
    },
    "9133": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9137": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9139": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9140": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "ADD",
      "path": "3"
    },
    "9141": {
      "op": "MSTORE"
    },
    "9142": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9146": {
      "op": "DUP3"
    },
    "9147": {
      "op": "ADD"
    },
    "9148": {
      "op": "MSTORE"
    },
    "9149": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "ADD"
    },
    "9186": {
      "op": "MSTORE"
    },
    "9187": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9202": {
      "op": "SHL"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9205": {
      "op": "DUP3"
    },
    "9206": {
      "op": "ADD"
    },
    "9207": {
      "op": "MSTORE"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9210": {
      "op": "ADD"
    },
    "9211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "9214": {
      "op": "JUMP"
    },
    "9215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7618,
        7631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9218": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7657
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240A"
    },
    "9221": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7656
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9222": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1554"
    },
    "9225": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7634,
        7657
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9226": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7657
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9227": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7618,
        7657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9228": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7618,
        7657
      ],
      "op": "POP",
      "path": "3"
    },
    "9229": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7686,
        7691
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 91
    },
    "9230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9236": {
      "op": "SHL"
    },
    "9237": {
      "op": "SUB"
    },
    "9238": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7691
      ],
      "op": "AND",
      "path": "3"
    },
    "9239": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7682
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9246": {
      "op": "SHL"
    },
    "9247": {
      "op": "SUB"
    },
    "9248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7691
      ],
      "op": "AND",
      "path": "3"
    },
    "9249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7691
      ],
      "op": "EQ",
      "path": "3"
    },
    "9250": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7726
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2445"
    },
    "9254": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7726
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9255": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7726
      ],
      "op": "POP",
      "path": "3"
    },
    "9256": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7719,
        7726
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9263": {
      "op": "SHL"
    },
    "9264": {
      "op": "SUB"
    },
    "9265": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7726
      ],
      "op": "AND",
      "path": "3"
    },
    "9266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x243A"
    },
    "9269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7707,
        7714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9270": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB30"
    },
    "9273": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7695,
        7715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9281": {
      "op": "SHL"
    },
    "9282": {
      "op": "SUB"
    },
    "9283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7726
      ],
      "op": "AND",
      "path": "3"
    },
    "9284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7695,
        7726
      ],
      "op": "EQ",
      "path": "3"
    },
    "9285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7726
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9286": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7762
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2475"
    },
    "9290": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7675,
        7762
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9291": {
      "op": "POP"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9298": {
      "op": "SHL"
    },
    "9299": {
      "op": "SUB"
    },
    "9300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "AND",
      "path": "3"
    },
    "9303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4583,
        4587
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9312": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9313": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9314": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9317": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9318": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9319": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4631
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9320": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9321": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9322": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "AND",
      "path": "3"
    },
    "9323": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9324": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9327": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9328": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9330": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9332": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4606,
        4641
      ],
      "op": "AND",
      "path": "3"
    },
    "9333": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9334": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7667,
        7763
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9335": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7770
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "op": "POP"
    },
    "9339": {
      "op": "POP"
    },
    "9340": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7426,
        7770
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9341": {
      "fn": "ERC721._transfer",
      "offset": [
        10323,
        10883
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9342": {
      "fn": "ERC721._transfer",
      "offset": [
        10477,
        10481
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 92
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "op": "SUB"
    },
    "9351": {
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10481
      ],
      "op": "AND",
      "path": "3"
    },
    "9352": {
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10473
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2490"
    },
    "9355": {
      "fn": "ERC721._transfer",
      "offset": [
        10465,
        10472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9356": {
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1554"
    },
    "9359": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10450,
        10473
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9360": {
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10473
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9367": {
      "op": "SHL"
    },
    "9368": {
      "op": "SUB"
    },
    "9369": {
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10481
      ],
      "op": "AND",
      "path": "3"
    },
    "9370": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        10450,
        10481
      ],
      "op": "EQ",
      "path": "3"
    },
    "9371": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24F8"
    },
    "9374": {
      "branch": 179,
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9375": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9377": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9384": {
      "op": "SHL"
    },
    "9385": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9386": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9389": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9391": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9392": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "ADD",
      "path": "3"
    },
    "9393": {
      "op": "MSTORE"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9398": {
      "op": "DUP3"
    },
    "9399": {
      "op": "ADD"
    },
    "9400": {
      "op": "MSTORE"
    },
    "9401": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9436": {
      "op": "DUP3"
    },
    "9437": {
      "op": "ADD"
    },
    "9438": {
      "op": "MSTORE"
    },
    "9439": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "9451": {
      "op": "SHL"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9454": {
      "op": "DUP3"
    },
    "9455": {
      "op": "ADD"
    },
    "9456": {
      "op": "MSTORE"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9459": {
      "op": "ADD"
    },
    "9460": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "9463": {
      "op": "JUMP"
    },
    "9464": {
      "fn": "ERC721._transfer",
      "offset": [
        10442,
        10527
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9471": {
      "op": "SHL"
    },
    "9472": {
      "op": "SUB"
    },
    "9473": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10561
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 93
    },
    "9474": {
      "branch": 180,
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10561
      ],
      "op": "AND",
      "path": "3"
    },
    "9475": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255A"
    },
    "9478": {
      "branch": 180,
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9479": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9481": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9488": {
      "op": "SHL"
    },
    "9489": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9490": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9493": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9495": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9496": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "ADD",
      "path": "3"
    },
    "9497": {
      "op": "MSTORE"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9500": {
      "op": "DUP1"
    },
    "9501": {
      "op": "DUP3"
    },
    "9502": {
      "op": "ADD"
    },
    "9503": {
      "op": "MSTORE"
    },
    "9504": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9539": {
      "op": "DUP3"
    },
    "9540": {
      "op": "ADD"
    },
    "9541": {
      "op": "MSTORE"
    },
    "9542": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9549": {
      "op": "SHL"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9552": {
      "op": "DUP3"
    },
    "9553": {
      "op": "ADD"
    },
    "9554": {
      "op": "MSTORE"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9557": {
      "op": "ADD"
    },
    "9558": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "9561": {
      "op": "JUMP"
    },
    "9562": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9563": {
      "fn": "ERC721._transfer",
      "offset": [
        10613,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 94,
      "value": "0x2565"
    },
    "9566": {
      "fn": "ERC721._transfer",
      "offset": [
        10634,
        10638
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9567": {
      "fn": "ERC721._transfer",
      "offset": [
        10640,
        10642
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9568": {
      "fn": "ERC721._transfer",
      "offset": [
        10644,
        10651
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9569": {
      "fn": "ERC721._transfer",
      "offset": [
        10613,
        10633
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29ED"
    },
    "9572": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10613,
        10652
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9573": {
      "fn": "ERC721._transfer",
      "offset": [
        10613,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9574": {
      "fn": "ERC721._transfer",
      "offset": [
        10714,
        10743
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 95,
      "value": "0x2570"
    },
    "9577": {
      "fn": "ERC721._transfer",
      "offset": [
        10731,
        10732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9579": {
      "fn": "ERC721._transfer",
      "offset": [
        10735,
        10742
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9580": {
      "fn": "ERC721._transfer",
      "offset": [
        10714,
        10722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "9583": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10714,
        10743
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9584": {
      "fn": "ERC721._transfer",
      "offset": [
        10714,
        10743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9591": {
      "op": "SHL"
    },
    "9592": {
      "op": "SUB"
    },
    "9593": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 96
    },
    "9594": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "AND",
      "path": "3"
    },
    "9595": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9597": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9598": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9599": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9600": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10763
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9602": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9604": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9605": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9607": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9608": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9609": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9610": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9611": {
      "fn": "ERC721._transfer",
      "offset": [
        10773,
        10774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9613": {
      "fn": "ERC721._transfer",
      "offset": [
        10773,
        10774
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9614": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9615": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2599"
    },
    "9618": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9619": {
      "fn": "ERC721._transfer",
      "offset": [
        10773,
        10774
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9620": {
      "fn": "ERC721._transfer",
      "offset": [
        10773,
        10774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9621": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36D0"
    },
    "9624": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10754,
        10774
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9625": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9626": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9627": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9628": {
      "fn": "ERC721._transfer",
      "offset": [
        10754,
        10774
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9629": {
      "op": "POP"
    },
    "9630": {
      "op": "POP"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9637": {
      "op": "SHL"
    },
    "9638": {
      "op": "SUB"
    },
    "9639": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 97
    },
    "9640": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "AND",
      "path": "3"
    },
    "9641": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9643": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9644": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9645": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9646": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9648": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9650": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9651": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9653": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9654": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9655": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9656": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9657": {
      "fn": "ERC721._transfer",
      "offset": [
        10801,
        10802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9659": {
      "fn": "ERC721._transfer",
      "offset": [
        10801,
        10802
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9660": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9661": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C7"
    },
    "9664": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9665": {
      "fn": "ERC721._transfer",
      "offset": [
        10801,
        10802
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9666": {
      "fn": "ERC721._transfer",
      "offset": [
        10801,
        10802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9667": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35EB"
    },
    "9670": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10784,
        10802
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9671": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9672": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9673": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9674": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10802
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9675": {
      "op": "POP"
    },
    "9676": {
      "op": "POP"
    },
    "9677": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 98,
      "value": "0x0"
    },
    "9679": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9680": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9681": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9682": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10819
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9684": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9686": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9687": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9689": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9690": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9691": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9692": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9693": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9700": {
      "op": "SHL"
    },
    "9701": {
      "op": "SUB"
    },
    "9702": {
      "op": "NOT"
    },
    "9703": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "AND",
      "path": "3"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9710": {
      "op": "SHL"
    },
    "9711": {
      "op": "SUB"
    },
    "9712": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9713": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9714": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "AND",
      "path": "3"
    },
    "9715": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9716": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9717": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "OR",
      "path": "3"
    },
    "9718": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9719": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9720": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10833
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9721": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 99
    },
    "9722": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9723": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9724": {
      "fn": "ERC721._transfer",
      "offset": [
        10812,
        10828
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9725": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9726": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9727": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "AND",
      "path": "3"
    },
    "9728": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9729": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9762": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9763": {
      "fn": "ERC721._transfer",
      "offset": [
        10849,
        10876
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9764": {
      "fn": "ERC721._transfer",
      "offset": [
        10323,
        10883
      ],
      "op": "POP",
      "path": "3"
    },
    "9765": {
      "fn": "ERC721._transfer",
      "offset": [
        10323,
        10883
      ],
      "op": "POP",
      "path": "3"
    },
    "9766": {
      "fn": "ERC721._transfer",
      "offset": [
        10323,
        10883
      ],
      "op": "POP",
      "path": "3"
    },
    "9767": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10323,
        10883
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9768": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9769": {
      "fn": "MerkleProof.verify",
      "offset": [
        968,
        972
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9771": {
      "fn": "MerkleProof.verify",
      "offset": [
        1020,
        1024
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 100
    },
    "9772": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2635"
    },
    "9775": {
      "fn": "MerkleProof.verify",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9776": {
      "fn": "MerkleProof.verify",
      "offset": [
        1011,
        1015
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9777": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1003
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1B"
    },
    "9780": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        991,
        1016
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9781": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9782": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "EQ",
      "path": "13"
    },
    "9783": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9784": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9785": {
      "op": "POP"
    },
    "9786": {
      "op": "POP"
    },
    "9787": {
      "op": "POP"
    },
    "9788": {
      "op": "POP"
    },
    "9789": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        847,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9790": {
      "fn": "ERC721._safeMint",
      "offset": [
        8100,
        8208
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9791": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 101,
      "value": "0xDDD"
    },
    "9794": {
      "fn": "ERC721._safeMint",
      "offset": [
        8185,
        8187
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9795": {
      "fn": "ERC721._safeMint",
      "offset": [
        8189,
        8196
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9796": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9798": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9799": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9800": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9802": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "ADD",
      "path": "3"
    },
    "9803": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9805": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9806": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9807": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9809": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9810": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9811": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8201
      ],
      "op": "POP",
      "path": "3"
    },
    "9812": {
      "fn": "ERC721._safeMint",
      "offset": [
        8175,
        8184
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2ABF"
    },
    "9815": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8175,
        8201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9816": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9817": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9819": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9820": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9822": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9823": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26A1"
    },
    "9826": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9827": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9829": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9836": {
      "op": "SHL"
    },
    "9837": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9838": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9841": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9843": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9844": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9845": {
      "op": "MSTORE"
    },
    "9846": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9850": {
      "op": "DUP3"
    },
    "9851": {
      "op": "ADD"
    },
    "9852": {
      "op": "MSTORE"
    },
    "9853": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9876": {
      "op": "SHL"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9879": {
      "op": "DUP3"
    },
    "9880": {
      "op": "ADD"
    },
    "9881": {
      "op": "MSTORE"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9884": {
      "op": "ADD"
    },
    "9885": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA5"
    },
    "9888": {
      "op": "JUMP"
    },
    "9889": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9890": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 102,
      "value": "0xA"
    },
    "9892": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9893": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9896": {
      "op": "NOT"
    },
    "9897": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9898": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9899": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9900": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 103,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9933": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9934": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9935": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9937": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9944": {
      "op": "SHL"
    },
    "9945": {
      "op": "SUB"
    },
    "9946": {
      "op": "SWAP1"
    },
    "9947": {
      "op": "SWAP2"
    },
    "9948": {
      "op": "AND"
    },
    "9949": {
      "op": "DUP2"
    },
    "9950": {
      "op": "MSTORE"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9953": {
      "op": "ADD"
    },
    "9954": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9956": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9957": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9958": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9959": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9960": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9961": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9962": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9963": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9964": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9966": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9967": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9974": {
      "op": "SHL"
    },
    "9975": {
      "op": "SUB"
    },
    "9976": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 104
    },
    "9977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9978": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9979": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9982": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9983": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9984": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9985": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9992": {
      "op": "SHL"
    },
    "9993": {
      "op": "SUB"
    },
    "9994": {
      "op": "NOT"
    },
    "9995": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9996": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9997": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9998": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9999": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10000": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10001": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x40"
    },
    "10003": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10004": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10005": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10006": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10007": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "10008": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "10009": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10010": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10011": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10012": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10045": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10046": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10048": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10049": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10050": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10051": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "10052": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10053": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10054": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10056": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10057": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10059": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10060": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10061": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2768"
    },
    "10064": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10065": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10067": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10074": {
      "op": "SHL"
    },
    "10075": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10076": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10077": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10079": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10080": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA5"
    },
    "10083": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10084": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3590"
    },
    "10087": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10088": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10089": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 106,
      "value": "0xA"
    },
    "10091": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10092": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10095": {
      "op": "NOT"
    },
    "10096": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "10097": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10099": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "10100": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10101": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10102": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 107,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "10135": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26CE"
    },
    "10138": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10139": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10140": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10141": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11300,
        11607
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10142": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11450,
        11458
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 108
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10149": {
      "op": "SHL"
    },
    "10150": {
      "op": "SUB"
    },
    "10151": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11441,
        11458
      ],
      "op": "AND",
      "path": "3"
    },
    "10152": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11441,
        11446
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10159": {
      "op": "SHL"
    },
    "10160": {
      "op": "SUB"
    },
    "10161": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11441,
        11458
      ],
      "op": "AND",
      "path": "3"
    },
    "10162": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11441,
        11458
      ],
      "op": "EQ",
      "path": "3"
    },
    "10163": {
      "branch": 181,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11441,
        11458
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10164": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27FF"
    },
    "10167": {
      "branch": 181,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10170": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10177": {
      "op": "SHL"
    },
    "10178": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10179": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10182": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10184": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10185": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "ADD",
      "path": "3"
    },
    "10186": {
      "op": "MSTORE"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10191": {
      "op": "DUP3"
    },
    "10192": {
      "op": "ADD"
    },
    "10193": {
      "op": "MSTORE"
    },
    "10194": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10229": {
      "op": "DUP3"
    },
    "10230": {
      "op": "ADD"
    },
    "10231": {
      "op": "MSTORE"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10234": {
      "op": "ADD"
    },
    "10235": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "10238": {
      "op": "JUMP"
    },
    "10239": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11433,
        11488
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10246": {
      "op": "SHL"
    },
    "10247": {
      "op": "SUB"
    },
    "10248": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 109
    },
    "10249": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10250": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "AND",
      "path": "3"
    },
    "10251": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10253": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10254": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10255": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10256": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10258": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10260": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10261": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10262": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10263": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10265": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10266": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10267": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11523
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10268": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10269": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10270": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "AND",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10274": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10275": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10276": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10277": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10278": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10279": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10280": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11533
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10281": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10282": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10285": {
      "op": "NOT"
    },
    "10286": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "AND",
      "path": "3"
    },
    "10287": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10288": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10289": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10290": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10291": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10292": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "OR",
      "path": "3"
    },
    "10293": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10294": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10295": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11498,
        11544
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10296": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 110
    },
    "10297": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10298": {
      "op": "SWAP2"
    },
    "10299": {
      "op": "DUP3"
    },
    "10300": {
      "op": "MSTORE"
    },
    "10301": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10334": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10335": {
      "op": "ADD"
    },
    "10336": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10338": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10339": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10340": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10341": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "SUB",
      "path": "3"
    },
    "10342": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10343": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11559,
        11600
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10344": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11300,
        11607
      ],
      "op": "POP",
      "path": "3"
    },
    "10345": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11300,
        11607
      ],
      "op": "POP",
      "path": "3"
    },
    "10346": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11300,
        11607
      ],
      "op": "POP",
      "path": "3"
    },
    "10347": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11300,
        11607
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10348": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6533,
        6840
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10349": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6684,
        6712
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 111,
      "value": "0x2877"
    },
    "10352": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6694,
        6698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10353": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6702
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10354": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6704,
        6711
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10355": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6684,
        6693
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247D"
    },
    "10358": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6684,
        6712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10359": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6684,
        6712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10360": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6730,
        6778
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 112,
      "value": "0x2883"
    },
    "10363": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6753,
        6757
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10364": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6759,
        6761
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10365": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6770
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10366": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6772,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10367": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6730,
        6752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF2"
    },
    "10370": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6730,
        6778
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10371": {
      "branch": 182,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6730,
        6778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10372": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E26"
    },
    "10375": {
      "branch": 182,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10376": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10378": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10385": {
      "op": "SHL"
    },
    "10386": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10387": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10388": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10390": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "ADD",
      "path": "3"
    },
    "10391": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "10394": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10395": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6722,
        6833
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36E7"
    },
    "10398": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6722,
        6833
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10399": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10400": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10402": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10403": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C3"
    },
    "10406": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10407": {
      "op": "POP"
    },
    "10408": {
      "op": "POP"
    },
    "10409": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 113,
      "value": "0x40"
    },
    "10411": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10412": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10413": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10414": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10415": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10416": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10417": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10418": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10419": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10421": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10422": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10427": {
      "op": "SHL"
    },
    "10428": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10430": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10431": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10432": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10433": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10434": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10435": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10436": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10437": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10439": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10440": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10441": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10442": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28ED"
    },
    "10445": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10446": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 114
    },
    "10447": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28D7"
    },
    "10450": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10451": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D0"
    },
    "10454": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10455": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10456": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10457": {
      "op": "POP"
    },
    "10458": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 115,
      "value": "0x28E6"
    },
    "10461": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10462": {
      "op": "POP"
    },
    "10463": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10465": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10466": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x374F"
    },
    "10469": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10470": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10471": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10472": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10473": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C7"
    },
    "10476": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10477": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10478": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10480": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10481": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10490": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10491": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10492": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10493": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2908"
    },
    "10496": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10497": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2908"
    },
    "10500": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3123"
    },
    "10503": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10504": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10505": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10507": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10508": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10509": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10510": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10511": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10512": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10513": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10515": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10516": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10518": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10519": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10520": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10522": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10523": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10524": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10525": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10527": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10528": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10529": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10530": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2932"
    },
    "10533": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10534": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10536": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10537": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10538": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10539": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10540": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10541": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10542": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10543": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10544": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10545": {
      "op": "POP"
    },
    "10546": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10547": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10548": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10549": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10550": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10551": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10552": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10553": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2475"
    },
    "10556": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10557": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 116,
      "value": "0x2947"
    },
    "10560": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10562": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10563": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36D0"
    },
    "10566": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10567": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10568": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10569": {
      "op": "POP"
    },
    "10570": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 117,
      "value": "0x2954"
    },
    "10573": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10575": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10576": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3763"
    },
    "10579": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10580": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10581": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x295F"
    },
    "10584": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10585": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10587": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35EB"
    },
    "10590": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10591": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10592": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10594": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10595": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10596": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10597": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10598": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10599": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10600": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10601": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2974"
    },
    "10604": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10605": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2974"
    },
    "10608": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35BA"
    },
    "10611": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10612": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10613": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10615": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10616": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10617": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10622": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10624": {
      "op": "SHL"
    },
    "10625": {
      "op": "SUB"
    },
    "10626": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10627": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10628": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10629": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10630": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10632": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10633": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10634": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10635": {
      "op": "POP"
    },
    "10636": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 118,
      "value": "0x2996"
    },
    "10639": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10641": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10642": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x374F"
    },
    "10645": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10646": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10647": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10648": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10649": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2936"
    },
    "10652": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10653": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10654": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10662": {
      "op": "SHL"
    },
    "10663": {
      "op": "SUB"
    },
    "10664": {
      "op": "NOT"
    },
    "10665": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 119
    },
    "10666": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "3"
    },
    "10667": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10674": {
      "op": "SHL"
    },
    "10675": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "3"
    },
    "10676": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10677": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29CE"
    },
    "10680": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10681": {
      "op": "POP"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10688": {
      "op": "SHL"
    },
    "10689": {
      "op": "SUB"
    },
    "10690": {
      "op": "NOT"
    },
    "10691": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10692": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "3"
    },
    "10693": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10700": {
      "op": "SHL"
    },
    "10701": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "3"
    },
    "10702": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10703": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10704": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA98"
    },
    "10707": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10708": {
      "op": "POP"
    },
    "10709": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10716": {
      "op": "SHL"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10723": {
      "op": "SHL"
    },
    "10724": {
      "op": "SUB"
    },
    "10725": {
      "op": "NOT"
    },
    "10726": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 120
    },
    "10727": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10728": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10729": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA98"
    },
    "10732": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10733": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8843,
        9036
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10734": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10736": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10737": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10739": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10740": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10741": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A10"
    },
    "10744": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10745": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10747": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10754": {
      "op": "SHL"
    },
    "10755": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10756": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10757": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10759": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10760": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA5"
    },
    "10763": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10764": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3590"
    },
    "10767": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10768": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10769": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8984,
        9029
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 121,
      "value": "0xCDB"
    },
    "10772": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9011,
        9015
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10773": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9017,
        9019
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10774": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9021,
        9028
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10775": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8984,
        9010
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BF0"
    },
    "10778": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8984,
        9029
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10779": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10780": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10782": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1508,
        1512
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10783": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10784": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10785": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1551
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10786": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1558
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10787": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1543
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10788": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1558
      ],
      "op": "LT",
      "path": "13"
    },
    "10789": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10790": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1392"
    },
    "10793": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10794": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10796": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1607
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10797": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1608,
        1609
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10798": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10799": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10800": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10801": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "LT",
      "path": "13"
    },
    "10802": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A3D"
    },
    "10805": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10806": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A3D"
    },
    "10809": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35BA"
    },
    "10812": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10813": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10814": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10816": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MUL",
      "path": "13"
    },
    "10817": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10819": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "13"
    },
    "10820": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "13"
    },
    "10821": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10822": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10823": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "POP",
      "path": "13"
    },
    "10824": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1644,
        1656
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10825": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1640
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10826": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1656
      ],
      "op": "GT",
      "path": "13"
    },
    "10827": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A7F"
    },
    "10830": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10831": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 122,
      "value": "0x40"
    },
    "10833": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10834": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10835": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10837": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10838": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "ADD",
      "path": "13"
    },
    "10839": {
      "op": "DUP6"
    },
    "10840": {
      "op": "SWAP1"
    },
    "10841": {
      "op": "MSTORE"
    },
    "10842": {
      "op": "SWAP1"
    },
    "10843": {
      "op": "DUP2"
    },
    "10844": {
      "op": "ADD"
    },
    "10845": {
      "op": "DUP3"
    },
    "10846": {
      "op": "SWAP1"
    },
    "10847": {
      "op": "MSTORE"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10850": {
      "op": "ADD"
    },
    "10851": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10853": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10854": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10856": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10857": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10858": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "13"
    },
    "10859": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "13"
    },
    "10860": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10861": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10862": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10863": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10865": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10866": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10867": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10868": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10869": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10871": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "ADD",
      "path": "13"
    },
    "10872": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10873": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10874": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "POP",
      "path": "13"
    },
    "10875": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AAC"
    },
    "10878": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10879": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10880": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 123,
      "value": "0x40"
    },
    "10882": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10883": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10884": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10886": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10887": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "ADD",
      "path": "13"
    },
    "10888": {
      "op": "DUP4"
    },
    "10889": {
      "op": "SWAP1"
    },
    "10890": {
      "op": "MSTORE"
    },
    "10891": {
      "op": "SWAP1"
    },
    "10892": {
      "op": "DUP2"
    },
    "10893": {
      "op": "ADD"
    },
    "10894": {
      "op": "DUP5"
    },
    "10895": {
      "op": "SWAP1"
    },
    "10896": {
      "op": "MSTORE"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10899": {
      "op": "ADD"
    },
    "10900": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10902": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10903": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10905": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10906": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10907": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "13"
    },
    "10908": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "13"
    },
    "10909": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10910": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10911": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10912": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10914": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10915": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10916": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10917": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10918": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10920": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "ADD",
      "path": "13"
    },
    "10921": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10922": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "10923": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "POP",
      "path": "13"
    },
    "10924": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10925": {
      "op": "POP"
    },
    "10926": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 124
    },
    "10927": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AB7"
    },
    "10930": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10931": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35D0"
    },
    "10934": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10935": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10936": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10937": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "13"
    },
    "10938": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "13"
    },
    "10939": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A20"
    },
    "10942": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10943": {
      "fn": "ERC721._safeMint",
      "offset": [
        8429,
        8740
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10944": {
      "fn": "ERC721._safeMint",
      "offset": [
        8554,
        8572
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 125,
      "value": "0x2AC9"
    },
    "10947": {
      "fn": "ERC721._safeMint",
      "offset": [
        8560,
        8562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10948": {
      "fn": "ERC721._safeMint",
      "offset": [
        8564,
        8571
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10949": {
      "fn": "ERC721._safeMint",
      "offset": [
        8554,
        8559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CA8"
    },
    "10952": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8554,
        8572
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10953": {
      "fn": "ERC721._safeMint",
      "offset": [
        8554,
        8572
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10954": {
      "fn": "ERC721._safeMint",
      "offset": [
        8603,
        8657
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 126,
      "value": "0x2AD6"
    },
    "10957": {
      "fn": "ERC721._safeMint",
      "offset": [
        8634,
        8635
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10959": {
      "fn": "ERC721._safeMint",
      "offset": [
        8638,
        8640
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10960": {
      "fn": "ERC721._safeMint",
      "offset": [
        8642,
        8649
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10961": {
      "fn": "ERC721._safeMint",
      "offset": [
        8651,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10962": {
      "fn": "ERC721._safeMint",
      "offset": [
        8603,
        8625
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF2"
    },
    "10965": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8603,
        8657
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10966": {
      "branch": 183,
      "fn": "ERC721._safeMint",
      "offset": [
        8603,
        8657
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10967": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCDB"
    },
    "10970": {
      "branch": 183,
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10971": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10973": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10980": {
      "op": "SHL"
    },
    "10981": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10982": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10983": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10985": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "ADD",
      "path": "3"
    },
    "10986": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "10989": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10990": {
      "fn": "ERC721._safeMint",
      "offset": [
        8582,
        8733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36E7"
    },
    "10993": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8582,
        8733
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12310,
        12314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11003": {
      "op": "SHL"
    },
    "11004": {
      "op": "SUB"
    },
    "11005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12330,
        12343
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12330,
        12343
      ],
      "op": "AND",
      "path": "3"
    },
    "11007": {
      "op": "EXTCODESIZE"
    },
    "11008": {
      "op": "ISZERO"
    },
    "11009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12326,
        12932
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE5"
    },
    "11012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12326,
        12932
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11016": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11021": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11023": {
      "op": "SHL"
    },
    "11024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11032": {
      "op": "SHL"
    },
    "11033": {
      "op": "SUB"
    },
    "11034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12401
      ],
      "op": "DUP6",
      "path": "3"
    },
    "11035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12401
      ],
      "op": "AND",
      "path": "3"
    },
    "11036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12401
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "11042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B36"
    },
    "11046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11047": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "11048": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12416,
        12420
      ],
      "op": "DUP10",
      "path": "3"
    },
    "11050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12416,
        12420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12422,
        12429
      ],
      "op": "DUP9",
      "path": "3"
    },
    "11052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12422,
        12429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12431,
        12436
      ],
      "op": "DUP9",
      "path": "3"
    },
    "11054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12431,
        12436
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "ADD",
      "path": "3"
    },
    "11058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3777"
    },
    "11061": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SUB",
      "path": "3"
    },
    "11071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP8",
      "path": "3"
    },
    "11075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "GAS",
      "path": "3"
    },
    "11076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "CALL",
      "path": "3"
    },
    "11077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "POP",
      "path": "3"
    },
    "11079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "POP",
      "path": "3"
    },
    "11080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "POP",
      "path": "3"
    },
    "11081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B71"
    },
    "11086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11087": {
      "op": "POP"
    },
    "11088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "ADD",
      "path": "3"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11100": {
      "op": "NOT"
    },
    "11101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "AND",
      "path": "3"
    },
    "11102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "ADD",
      "path": "3"
    },
    "11104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B6E"
    },
    "11110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "ADD",
      "path": "3"
    },
    "11113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37B4"
    },
    "11117": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12365,
        12437
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BCB"
    },
    "11125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B9F"
    },
    "11133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "POP",
      "path": "3"
    },
    "11139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "NOT",
      "path": "3"
    },
    "11142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "11144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "AND",
      "path": "3"
    },
    "11147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "11163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA4"
    },
    "11166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "11170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "POP",
      "path": "3"
    },
    "11172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11173": {
      "op": "POP"
    },
    "11174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12604,
        12617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12604,
        12617
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12600,
        12866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC3"
    },
    "11179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12600,
        12866
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 127,
      "value": "0x40"
    },
    "11182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11189": {
      "op": "SHL"
    },
    "11190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "ADD",
      "path": "3"
    },
    "11195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "11198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12706
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36E7"
    },
    "11202": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12646,
        12706
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12600,
        12866
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12818,
        12824
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12812,
        12825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12803,
        12809
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12799,
        12801
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12795,
        12810
      ],
      "op": "ADD",
      "path": "3"
    },
    "11210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12788,
        12826
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12361,
        12880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11218": {
      "op": "SHL"
    },
    "11219": {
      "op": "SUB"
    },
    "11220": {
      "op": "NOT"
    },
    "11221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12487,
        12538
      ],
      "op": "AND",
      "path": "3",
      "statement": 128
    },
    "11222": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11229": {
      "op": "SHL"
    },
    "11230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12487,
        12538
      ],
      "op": "EQ",
      "path": "3"
    },
    "11231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12487,
        12538
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11232": {
      "op": "POP"
    },
    "11233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12480,
        12538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2475"
    },
    "11236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12480,
        12538
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12326,
        12932
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11238": {
      "op": "POP"
    },
    "11239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12917,
        12921
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 129,
      "value": "0x1"
    },
    "11241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "11243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "POP",
      "path": "3"
    },
    "11244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "POP",
      "path": "3"
    },
    "11245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "POP",
      "path": "3"
    },
    "11246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12938
      ],
      "op": "POP",
      "path": "3"
    },
    "11247": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12160,
        12938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11248": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11255": {
      "op": "SHL"
    },
    "11256": {
      "op": "SUB"
    },
    "11257": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11258": {
      "branch": 187,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "11259": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C4B"
    },
    "11262": {
      "branch": 187,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11263": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 130,
      "value": "0x2C46"
    },
    "11266": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11267": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 131,
      "value": "0x8"
    },
    "11269": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11270": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11271": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11273": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11274": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11275": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11276": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11278": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11280": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11281": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11283": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11284": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11285": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11286": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11287": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11288": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 132,
      "value": "0x1"
    },
    "11290": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11291": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11292": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11293": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11294": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11295": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11296": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11297": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11298": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11331": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11332": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11333": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11334": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11335": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6E"
    },
    "11338": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11339": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11340": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11347": {
      "op": "SHL"
    },
    "11348": {
      "op": "SUB"
    },
    "11349": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11350": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11357": {
      "op": "SHL"
    },
    "11358": {
      "op": "SUB"
    },
    "11359": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11360": {
      "branch": 188,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11361": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6E"
    },
    "11364": {
      "branch": 188,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11365": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 133,
      "value": "0x2C6E"
    },
    "11368": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11369": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11370": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DF6"
    },
    "11373": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11374": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11381": {
      "op": "SHL"
    },
    "11382": {
      "op": "SUB"
    },
    "11383": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11384": {
      "branch": 189,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11385": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C85"
    },
    "11388": {
      "branch": 189,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11389": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 134,
      "value": "0xCDB"
    },
    "11392": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11393": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E93"
    },
    "11396": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11397": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11398": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11405": {
      "op": "SHL"
    },
    "11406": {
      "op": "SUB"
    },
    "11407": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11408": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11415": {
      "op": "SHL"
    },
    "11416": {
      "op": "SUB"
    },
    "11417": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11418": {
      "branch": 190,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11419": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCDB"
    },
    "11422": {
      "branch": 190,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11423": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 135,
      "value": "0xCDB"
    },
    "11426": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11427": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11428": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F42"
    },
    "11431": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11432": {
      "fn": "ERC721._mint",
      "offset": [
        9062,
        9434
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11439": {
      "op": "SHL"
    },
    "11440": {
      "op": "SUB"
    },
    "11441": {
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9157
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 136
    },
    "11442": {
      "branch": 184,
      "fn": "ERC721._mint",
      "offset": [
        9141,
        9157
      ],
      "op": "AND",
      "path": "3"
    },
    "11443": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CFE"
    },
    "11446": {
      "branch": 184,
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11447": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11449": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11456": {
      "op": "SHL"
    },
    "11457": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11458": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11461": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11463": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11464": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "ADD",
      "path": "3"
    },
    "11465": {
      "op": "DUP2"
    },
    "11466": {
      "op": "SWAP1"
    },
    "11467": {
      "op": "MSTORE"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11470": {
      "op": "DUP3"
    },
    "11471": {
      "op": "ADD"
    },
    "11472": {
      "op": "MSTORE"
    },
    "11473": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11508": {
      "op": "DUP3"
    },
    "11509": {
      "op": "ADD"
    },
    "11510": {
      "op": "MSTORE"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11513": {
      "op": "ADD"
    },
    "11514": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "11517": {
      "op": "JUMP"
    },
    "11518": {
      "fn": "ERC721._mint",
      "offset": [
        9133,
        9194
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11519": {
      "fn": "ERC721._exists",
      "offset": [
        7208,
        7212
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11521": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11522": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11523": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11524": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7238
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11526": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11528": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11529": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11531": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11532": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11533": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11540": {
      "op": "SHL"
    },
    "11541": {
      "op": "SUB"
    },
    "11542": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7247
      ],
      "op": "AND",
      "path": "3"
    },
    "11543": {
      "fn": "ERC721._exists",
      "offset": [
        7231,
        7261
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11544": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 137,
      "value": "0x2D63"
    },
    "11547": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11548": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11550": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11557": {
      "op": "SHL"
    },
    "11558": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11559": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11562": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11564": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11565": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "ADD",
      "path": "3"
    },
    "11566": {
      "op": "MSTORE"
    },
    "11567": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11571": {
      "op": "DUP3"
    },
    "11572": {
      "op": "ADD"
    },
    "11573": {
      "op": "MSTORE"
    },
    "11574": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11609": {
      "op": "DUP3"
    },
    "11610": {
      "op": "ADD"
    },
    "11611": {
      "op": "MSTORE"
    },
    "11612": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11614": {
      "op": "ADD"
    },
    "11615": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA5"
    },
    "11618": {
      "op": "JUMP"
    },
    "11619": {
      "fn": "ERC721._mint",
      "offset": [
        9204,
        9262
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11620": {
      "fn": "ERC721._mint",
      "offset": [
        9273,
        9318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 138,
      "value": "0x2D6F"
    },
    "11623": {
      "fn": "ERC721._mint",
      "offset": [
        9302,
        9303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11625": {
      "fn": "ERC721._mint",
      "offset": [
        9306,
        9308
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11626": {
      "fn": "ERC721._mint",
      "offset": [
        9310,
        9317
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11627": {
      "fn": "ERC721._mint",
      "offset": [
        9273,
        9293
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29ED"
    },
    "11630": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9273,
        9318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11631": {
      "fn": "ERC721._mint",
      "offset": [
        9273,
        9318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11638": {
      "op": "SHL"
    },
    "11639": {
      "op": "SUB"
    },
    "11640": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 139
    },
    "11641": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "AND",
      "path": "3"
    },
    "11642": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11644": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11645": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11646": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11647": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11649": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11651": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11652": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11654": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11655": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11656": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11657": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11658": {
      "fn": "ERC721._mint",
      "offset": [
        9346,
        9347
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11660": {
      "fn": "ERC721._mint",
      "offset": [
        9346,
        9347
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11661": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11662": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D98"
    },
    "11665": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11666": {
      "fn": "ERC721._mint",
      "offset": [
        9346,
        9347
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11667": {
      "fn": "ERC721._mint",
      "offset": [
        9346,
        9347
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11668": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35EB"
    },
    "11671": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9329,
        9347
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11672": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11673": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11674": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11675": {
      "fn": "ERC721._mint",
      "offset": [
        9329,
        9347
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11676": {
      "op": "POP"
    },
    "11677": {
      "op": "POP"
    },
    "11678": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 140,
      "value": "0x0"
    },
    "11680": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11681": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11682": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11683": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9364
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11685": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11687": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11688": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11690": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11691": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11692": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11693": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11694": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11701": {
      "op": "SHL"
    },
    "11702": {
      "op": "SUB"
    },
    "11703": {
      "op": "NOT"
    },
    "11704": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "AND",
      "path": "3"
    },
    "11705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11711": {
      "op": "SHL"
    },
    "11712": {
      "op": "SUB"
    },
    "11713": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11714": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "AND",
      "path": "3"
    },
    "11715": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11716": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11717": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "OR",
      "path": "3"
    },
    "11718": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11719": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11720": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9378
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11721": {
      "fn": "ERC721._mint",
      "offset": [
        9394,
        9427
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 141
    },
    "11722": {
      "fn": "ERC721._mint",
      "offset": [
        9394,
        9427
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11723": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11724": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11725": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11726": {
      "fn": "ERC721._mint",
      "offset": [
        9394,
        9427
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11759": {
      "fn": "ERC721._mint",
      "offset": [
        9394,
        9427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11760": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11761": {
      "fn": "ERC721._mint",
      "offset": [
        9357,
        9373
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11762": {
      "fn": "ERC721._mint",
      "offset": [
        9394,
        9427
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11763": {
      "fn": "ERC721._mint",
      "offset": [
        9062,
        9434
      ],
      "op": "POP",
      "path": "3"
    },
    "11764": {
      "fn": "ERC721._mint",
      "offset": [
        9062,
        9434
      ],
      "op": "POP",
      "path": "3"
    },
    "11765": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9062,
        9434
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E03"
    },
    "11774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x166C"
    },
    "11778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E0D"
    },
    "11783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36D0"
    },
    "11788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11797": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11802": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11803": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11804": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11805": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11806": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11807": {
      "op": "POP"
    },
    "11808": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11809": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11810": {
      "branch": 191,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11811": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E60"
    },
    "11814": {
      "branch": 191,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11821": {
      "op": "SHL"
    },
    "11822": {
      "op": "SUB"
    },
    "11823": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11824": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11825": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11827": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11828": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11829": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11830": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11832": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11834": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11835": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11836": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11837": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11839": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11840": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11841": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11842": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11843": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11844": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11845": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11846": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11847": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11848": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11849": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11850": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11851": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 142
    },
    "11852": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11853": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11854": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11855": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11856": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11857": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11858": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11859": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11860": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 143
    },
    "11861": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11862": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11864": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11865": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11866": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11867": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11868": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11869": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11870": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11871": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11872": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11873": {
      "op": "POP"
    },
    "11874": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 144,
      "value": "0x0"
    },
    "11876": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11877": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11878": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11879": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11881": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11883": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11884": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11885": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11886": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11888": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11889": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11890": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11891": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11892": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11893": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11900": {
      "op": "SHL"
    },
    "11901": {
      "op": "SUB"
    },
    "11902": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 145
    },
    "11903": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11904": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11905": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11906": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11907": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11909": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11910": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11911": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11912": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11913": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11914": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11915": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11916": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11917": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11918": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11919": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11920": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11921": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11922": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11930": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EA5"
    },
    "11933": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36D0"
    },
    "11940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11942": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11945": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11955": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11957": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11963": {
      "op": "POP"
    },
    "11964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ECD"
    },
    "11973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11974": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ECD"
    },
    "11977": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35BA"
    },
    "11980": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11981": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11982": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11983": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11985": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11986": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11988": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11990": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11991": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11992": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11993": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11994": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11995": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 146
    },
    "11996": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11998": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11999": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12000": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "12001": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12002": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "12003": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EEE"
    },
    "12006": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12007": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EEE"
    },
    "12010": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35BA"
    },
    "12013": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12014": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12015": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12017": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12018": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12019": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12020": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12022": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12023": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12024": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12025": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12026": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12027": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "12028": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "12029": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12030": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "12031": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12032": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 147
    },
    "12033": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12034": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12035": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "12037": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12038": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12039": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12040": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12042": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12043": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12044": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12045": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12046": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12047": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12048": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 148
    },
    "12049": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12050": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12051": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12052": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12053": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12054": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 149,
      "value": "0x8"
    },
    "12056": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12057": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "12058": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12059": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F26"
    },
    "12062": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12063": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F26"
    },
    "12066": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37D1"
    },
    "12069": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12070": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12071": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "12073": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12074": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "12075": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12076": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12077": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12078": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12080": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12081": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12083": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12085": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12086": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "12087": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12089": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12090": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12091": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12092": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12093": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12094": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12095": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12096": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "12097": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12098": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12099": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12101": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F4D"
    },
    "12104": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12105": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x166C"
    },
    "12108": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12109": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12116": {
      "op": "SHL"
    },
    "12117": {
      "op": "SUB"
    },
    "12118": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 150
    },
    "12119": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "12120": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "12121": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "12123": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12124": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12125": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12126": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "12128": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12130": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12131": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12132": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12133": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12135": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12136": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12137": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12138": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "12139": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12140": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12141": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12142": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12143": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12144": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12145": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12146": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "12147": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12148": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12149": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 151
    },
    "12150": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12151": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12152": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "12154": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12155": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12156": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12157": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12158": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12159": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12160": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12161": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12162": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12163": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12164": {
      "op": "POP"
    },
    "12165": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12166": {
      "op": "JUMPDEST"
    },
    "12167": {
      "op": "DUP3"
    },
    "12168": {
      "op": "DUP1"
    },
    "12169": {
      "op": "SLOAD"
    },
    "12170": {
      "op": "PUSH2",
      "value": "0x2F92"
    },
    "12173": {
      "op": "SWAP1"
    },
    "12174": {
      "op": "PUSH2",
      "value": "0x349A"
    },
    "12177": {
      "jump": "i",
      "op": "JUMP"
    },
    "12178": {
      "op": "JUMPDEST"
    },
    "12179": {
      "op": "SWAP1"
    },
    "12180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12182": {
      "op": "MSTORE"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12187": {
      "op": "KECCAK256"
    },
    "12188": {
      "op": "SWAP1"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12191": {
      "op": "ADD"
    },
    "12192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12194": {
      "op": "SWAP1"
    },
    "12195": {
      "op": "DIV"
    },
    "12196": {
      "op": "DUP2"
    },
    "12197": {
      "op": "ADD"
    },
    "12198": {
      "op": "SWAP3"
    },
    "12199": {
      "op": "DUP3"
    },
    "12200": {
      "op": "PUSH2",
      "value": "0x2FB4"
    },
    "12203": {
      "op": "JUMPI"
    },
    "12204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12206": {
      "op": "DUP6"
    },
    "12207": {
      "op": "SSTORE"
    },
    "12208": {
      "op": "PUSH2",
      "value": "0x2FFA"
    },
    "12211": {
      "op": "JUMP"
    },
    "12212": {
      "op": "JUMPDEST"
    },
    "12213": {
      "op": "DUP3"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12216": {
      "op": "LT"
    },
    "12217": {
      "op": "PUSH2",
      "value": "0x2FCD"
    },
    "12220": {
      "op": "JUMPI"
    },
    "12221": {
      "op": "DUP1"
    },
    "12222": {
      "op": "MLOAD"
    },
    "12223": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12225": {
      "op": "NOT"
    },
    "12226": {
      "op": "AND"
    },
    "12227": {
      "op": "DUP4"
    },
    "12228": {
      "op": "DUP1"
    },
    "12229": {
      "op": "ADD"
    },
    "12230": {
      "op": "OR"
    },
    "12231": {
      "op": "DUP6"
    },
    "12232": {
      "op": "SSTORE"
    },
    "12233": {
      "op": "PUSH2",
      "value": "0x2FFA"
    },
    "12236": {
      "op": "JUMP"
    },
    "12237": {
      "op": "JUMPDEST"
    },
    "12238": {
      "op": "DUP3"
    },
    "12239": {
      "op": "DUP1"
    },
    "12240": {
      "op": "ADD"
    },
    "12241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12243": {
      "op": "ADD"
    },
    "12244": {
      "op": "DUP6"
    },
    "12245": {
      "op": "SSTORE"
    },
    "12246": {
      "op": "DUP3"
    },
    "12247": {
      "op": "ISZERO"
    },
    "12248": {
      "op": "PUSH2",
      "value": "0x2FFA"
    },
    "12251": {
      "op": "JUMPI"
    },
    "12252": {
      "op": "SWAP2"
    },
    "12253": {
      "op": "DUP3"
    },
    "12254": {
      "op": "ADD"
    },
    "12255": {
      "op": "JUMPDEST"
    },
    "12256": {
      "op": "DUP3"
    },
    "12257": {
      "op": "DUP2"
    },
    "12258": {
      "op": "GT"
    },
    "12259": {
      "op": "ISZERO"
    },
    "12260": {
      "op": "PUSH2",
      "value": "0x2FFA"
    },
    "12263": {
      "op": "JUMPI"
    },
    "12264": {
      "op": "DUP3"
    },
    "12265": {
      "op": "MLOAD"
    },
    "12266": {
      "op": "DUP3"
    },
    "12267": {
      "op": "SSTORE"
    },
    "12268": {
      "op": "SWAP2"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12271": {
      "op": "ADD"
    },
    "12272": {
      "op": "SWAP2"
    },
    "12273": {
      "op": "SWAP1"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12276": {
      "op": "ADD"
    },
    "12277": {
      "op": "SWAP1"
    },
    "12278": {
      "op": "PUSH2",
      "value": "0x2FDF"
    },
    "12281": {
      "op": "JUMP"
    },
    "12282": {
      "op": "JUMPDEST"
    },
    "12283": {
      "op": "POP"
    },
    "12284": {
      "op": "PUSH2",
      "value": "0x3006"
    },
    "12287": {
      "op": "SWAP3"
    },
    "12288": {
      "op": "SWAP2"
    },
    "12289": {
      "op": "POP"
    },
    "12290": {
      "op": "PUSH2",
      "value": "0x300A"
    },
    "12293": {
      "jump": "i",
      "op": "JUMP"
    },
    "12294": {
      "op": "JUMPDEST"
    },
    "12295": {
      "op": "POP"
    },
    "12296": {
      "op": "SWAP1"
    },
    "12297": {
      "jump": "o",
      "op": "JUMP"
    },
    "12298": {
      "op": "JUMPDEST"
    },
    "12299": {
      "op": "JUMPDEST"
    },
    "12300": {
      "op": "DUP1"
    },
    "12301": {
      "op": "DUP3"
    },
    "12302": {
      "op": "GT"
    },
    "12303": {
      "op": "ISZERO"
    },
    "12304": {
      "op": "PUSH2",
      "value": "0x3006"
    },
    "12307": {
      "op": "JUMPI"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12310": {
      "op": "DUP2"
    },
    "12311": {
      "op": "SSTORE"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12314": {
      "op": "ADD"
    },
    "12315": {
      "op": "PUSH2",
      "value": "0x300B"
    },
    "12318": {
      "op": "JUMP"
    },
    "12319": {
      "op": "JUMPDEST"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12324": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12326": {
      "op": "SHL"
    },
    "12327": {
      "op": "SUB"
    },
    "12328": {
      "op": "NOT"
    },
    "12329": {
      "op": "DUP2"
    },
    "12330": {
      "op": "AND"
    },
    "12331": {
      "op": "DUP2"
    },
    "12332": {
      "op": "EQ"
    },
    "12333": {
      "op": "PUSH2",
      "value": "0x12A0"
    },
    "12336": {
      "op": "JUMPI"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12339": {
      "op": "DUP1"
    },
    "12340": {
      "op": "REVERT"
    },
    "12341": {
      "op": "JUMPDEST"
    },
    "12342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12346": {
      "op": "DUP3"
    },
    "12347": {
      "op": "DUP5"
    },
    "12348": {
      "op": "SUB"
    },
    "12349": {
      "op": "SLT"
    },
    "12350": {
      "op": "ISZERO"
    },
    "12351": {
      "op": "PUSH2",
      "value": "0x3047"
    },
    "12354": {
      "op": "JUMPI"
    },
    "12355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12357": {
      "op": "DUP1"
    },
    "12358": {
      "op": "REVERT"
    },
    "12359": {
      "op": "JUMPDEST"
    },
    "12360": {
      "op": "DUP2"
    },
    "12361": {
      "op": "CALLDATALOAD"
    },
    "12362": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "12365": {
      "op": "DUP2"
    },
    "12366": {
      "op": "PUSH2",
      "value": "0x301F"
    },
    "12369": {
      "jump": "i",
      "op": "JUMP"
    },
    "12370": {
      "op": "JUMPDEST"
    },
    "12371": {
      "op": "SWAP4"
    },
    "12372": {
      "op": "SWAP3"
    },
    "12373": {
      "op": "POP"
    },
    "12374": {
      "op": "POP"
    },
    "12375": {
      "op": "POP"
    },
    "12376": {
      "jump": "o",
      "op": "JUMP"
    },
    "12377": {
      "op": "JUMPDEST"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12380": {
      "op": "JUMPDEST"
    },
    "12381": {
      "op": "DUP4"
    },
    "12382": {
      "op": "DUP2"
    },
    "12383": {
      "op": "LT"
    },
    "12384": {
      "op": "ISZERO"
    },
    "12385": {
      "op": "PUSH2",
      "value": "0x3074"
    },
    "12388": {
      "op": "JUMPI"
    },
    "12389": {
      "op": "DUP2"
    },
    "12390": {
      "op": "DUP2"
    },
    "12391": {
      "op": "ADD"
    },
    "12392": {
      "op": "MLOAD"
    },
    "12393": {
      "op": "DUP4"
    },
    "12394": {
      "op": "DUP3"
    },
    "12395": {
      "op": "ADD"
    },
    "12396": {
      "op": "MSTORE"
    },
    "12397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12399": {
      "op": "ADD"
    },
    "12400": {
      "op": "PUSH2",
      "value": "0x305C"
    },
    "12403": {
      "op": "JUMP"
    },
    "12404": {
      "op": "JUMPDEST"
    },
    "12405": {
      "op": "DUP4"
    },
    "12406": {
      "op": "DUP2"
    },
    "12407": {
      "op": "GT"
    },
    "12408": {
      "op": "ISZERO"
    },
    "12409": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "12412": {
      "op": "JUMPI"
    },
    "12413": {
      "op": "POP"
    },
    "12414": {
      "op": "POP"
    },
    "12415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12417": {
      "op": "SWAP2"
    },
    "12418": {
      "op": "ADD"
    },
    "12419": {
      "op": "MSTORE"
    },
    "12420": {
      "jump": "o",
      "op": "JUMP"
    },
    "12421": {
      "op": "JUMPDEST"
    },
    "12422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12424": {
      "op": "DUP2"
    },
    "12425": {
      "op": "MLOAD"
    },
    "12426": {
      "op": "DUP1"
    },
    "12427": {
      "op": "DUP5"
    },
    "12428": {
      "op": "MSTORE"
    },
    "12429": {
      "op": "PUSH2",
      "value": "0x309D"
    },
    "12432": {
      "op": "DUP2"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12435": {
      "op": "DUP7"
    },
    "12436": {
      "op": "ADD"
    },
    "12437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12439": {
      "op": "DUP7"
    },
    "12440": {
      "op": "ADD"
    },
    "12441": {
      "op": "PUSH2",
      "value": "0x3059"
    },
    "12444": {
      "jump": "i",
      "op": "JUMP"
    },
    "12445": {
      "op": "JUMPDEST"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12448": {
      "op": "ADD"
    },
    "12449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12451": {
      "op": "NOT"
    },
    "12452": {
      "op": "AND"
    },
    "12453": {
      "op": "SWAP3"
    },
    "12454": {
      "op": "SWAP1"
    },
    "12455": {
      "op": "SWAP3"
    },
    "12456": {
      "op": "ADD"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12459": {
      "op": "ADD"
    },
    "12460": {
      "op": "SWAP3"
    },
    "12461": {
      "op": "SWAP2"
    },
    "12462": {
      "op": "POP"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "jump": "o",
      "op": "JUMP"
    },
    "12465": {
      "op": "JUMPDEST"
    },
    "12466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12468": {
      "op": "DUP2"
    },
    "12469": {
      "op": "MSTORE"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12472": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12477": {
      "op": "DUP4"
    },
    "12478": {
      "op": "ADD"
    },
    "12479": {
      "op": "DUP5"
    },
    "12480": {
      "op": "PUSH2",
      "value": "0x3085"
    },
    "12483": {
      "jump": "i",
      "op": "JUMP"
    },
    "12484": {
      "op": "JUMPDEST"
    },
    "12485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12489": {
      "op": "DUP3"
    },
    "12490": {
      "op": "DUP5"
    },
    "12491": {
      "op": "SUB"
    },
    "12492": {
      "op": "SLT"
    },
    "12493": {
      "op": "ISZERO"
    },
    "12494": {
      "op": "PUSH2",
      "value": "0x30D6"
    },
    "12497": {
      "op": "JUMPI"
    },
    "12498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12500": {
      "op": "DUP1"
    },
    "12501": {
      "op": "REVERT"
    },
    "12502": {
      "op": "JUMPDEST"
    },
    "12503": {
      "op": "POP"
    },
    "12504": {
      "op": "CALLDATALOAD"
    },
    "12505": {
      "op": "SWAP2"
    },
    "12506": {
      "op": "SWAP1"
    },
    "12507": {
      "op": "POP"
    },
    "12508": {
      "jump": "o",
      "op": "JUMP"
    },
    "12509": {
      "op": "JUMPDEST"
    },
    "12510": {
      "op": "DUP1"
    },
    "12511": {
      "op": "CALLDATALOAD"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12518": {
      "op": "SHL"
    },
    "12519": {
      "op": "SUB"
    },
    "12520": {
      "op": "DUP2"
    },
    "12521": {
      "op": "AND"
    },
    "12522": {
      "op": "DUP2"
    },
    "12523": {
      "op": "EQ"
    },
    "12524": {
      "op": "PUSH2",
      "value": "0x30F4"
    },
    "12527": {
      "op": "JUMPI"
    },
    "12528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12530": {
      "op": "DUP1"
    },
    "12531": {
      "op": "REVERT"
    },
    "12532": {
      "op": "JUMPDEST"
    },
    "12533": {
      "op": "SWAP2"
    },
    "12534": {
      "op": "SWAP1"
    },
    "12535": {
      "op": "POP"
    },
    "12536": {
      "jump": "o",
      "op": "JUMP"
    },
    "12537": {
      "op": "JUMPDEST"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12540": {
      "op": "DUP1"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12543": {
      "op": "DUP4"
    },
    "12544": {
      "op": "DUP6"
    },
    "12545": {
      "op": "SUB"
    },
    "12546": {
      "op": "SLT"
    },
    "12547": {
      "op": "ISZERO"
    },
    "12548": {
      "op": "PUSH2",
      "value": "0x310C"
    },
    "12551": {
      "op": "JUMPI"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12554": {
      "op": "DUP1"
    },
    "12555": {
      "op": "REVERT"
    },
    "12556": {
      "op": "JUMPDEST"
    },
    "12557": {
      "op": "PUSH2",
      "value": "0x3115"
    },
    "12560": {
      "op": "DUP4"
    },
    "12561": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12564": {
      "jump": "i",
      "op": "JUMP"
    },
    "12565": {
      "op": "JUMPDEST"
    },
    "12566": {
      "op": "SWAP5"
    },
    "12567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12569": {
      "op": "SWAP4"
    },
    "12570": {
      "op": "SWAP1"
    },
    "12571": {
      "op": "SWAP4"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "op": "CALLDATALOAD"
    },
    "12574": {
      "op": "SWAP4"
    },
    "12575": {
      "op": "POP"
    },
    "12576": {
      "op": "POP"
    },
    "12577": {
      "op": "POP"
    },
    "12578": {
      "jump": "o",
      "op": "JUMP"
    },
    "12579": {
      "op": "JUMPDEST"
    },
    "12580": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12587": {
      "op": "SHL"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12590": {
      "op": "MSTORE"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12595": {
      "op": "MSTORE"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12600": {
      "op": "REVERT"
    },
    "12601": {
      "op": "JUMPDEST"
    },
    "12602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12604": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12613": {
      "op": "DUP1"
    },
    "12614": {
      "op": "DUP5"
    },
    "12615": {
      "op": "GT"
    },
    "12616": {
      "op": "ISZERO"
    },
    "12617": {
      "op": "PUSH2",
      "value": "0x3154"
    },
    "12620": {
      "op": "JUMPI"
    },
    "12621": {
      "op": "PUSH2",
      "value": "0x3154"
    },
    "12624": {
      "op": "PUSH2",
      "value": "0x3123"
    },
    "12627": {
      "jump": "i",
      "op": "JUMP"
    },
    "12628": {
      "op": "JUMPDEST"
    },
    "12629": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12631": {
      "op": "MLOAD"
    },
    "12632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12634": {
      "op": "DUP6"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12638": {
      "op": "NOT"
    },
    "12639": {
      "op": "SWAP1"
    },
    "12640": {
      "op": "DUP2"
    },
    "12641": {
      "op": "AND"
    },
    "12642": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12644": {
      "op": "ADD"
    },
    "12645": {
      "op": "AND"
    },
    "12646": {
      "op": "DUP2"
    },
    "12647": {
      "op": "ADD"
    },
    "12648": {
      "op": "SWAP1"
    },
    "12649": {
      "op": "DUP3"
    },
    "12650": {
      "op": "DUP3"
    },
    "12651": {
      "op": "GT"
    },
    "12652": {
      "op": "DUP2"
    },
    "12653": {
      "op": "DUP4"
    },
    "12654": {
      "op": "LT"
    },
    "12655": {
      "op": "OR"
    },
    "12656": {
      "op": "ISZERO"
    },
    "12657": {
      "op": "PUSH2",
      "value": "0x317C"
    },
    "12660": {
      "op": "JUMPI"
    },
    "12661": {
      "op": "PUSH2",
      "value": "0x317C"
    },
    "12664": {
      "op": "PUSH2",
      "value": "0x3123"
    },
    "12667": {
      "jump": "i",
      "op": "JUMP"
    },
    "12668": {
      "op": "JUMPDEST"
    },
    "12669": {
      "op": "DUP2"
    },
    "12670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12672": {
      "op": "MSTORE"
    },
    "12673": {
      "op": "DUP1"
    },
    "12674": {
      "op": "SWAP4"
    },
    "12675": {
      "op": "POP"
    },
    "12676": {
      "op": "DUP6"
    },
    "12677": {
      "op": "DUP2"
    },
    "12678": {
      "op": "MSTORE"
    },
    "12679": {
      "op": "DUP7"
    },
    "12680": {
      "op": "DUP7"
    },
    "12681": {
      "op": "DUP7"
    },
    "12682": {
      "op": "ADD"
    },
    "12683": {
      "op": "GT"
    },
    "12684": {
      "op": "ISZERO"
    },
    "12685": {
      "op": "PUSH2",
      "value": "0x3195"
    },
    "12688": {
      "op": "JUMPI"
    },
    "12689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12691": {
      "op": "DUP1"
    },
    "12692": {
      "op": "REVERT"
    },
    "12693": {
      "op": "JUMPDEST"
    },
    "12694": {
      "op": "DUP6"
    },
    "12695": {
      "op": "DUP6"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12698": {
      "op": "DUP4"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "CALLDATACOPY"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12705": {
      "op": "DUP8"
    },
    "12706": {
      "op": "DUP4"
    },
    "12707": {
      "op": "ADD"
    },
    "12708": {
      "op": "ADD"
    },
    "12709": {
      "op": "MSTORE"
    },
    "12710": {
      "op": "POP"
    },
    "12711": {
      "op": "POP"
    },
    "12712": {
      "op": "POP"
    },
    "12713": {
      "op": "SWAP4"
    },
    "12714": {
      "op": "SWAP3"
    },
    "12715": {
      "op": "POP"
    },
    "12716": {
      "op": "POP"
    },
    "12717": {
      "op": "POP"
    },
    "12718": {
      "jump": "o",
      "op": "JUMP"
    },
    "12719": {
      "op": "JUMPDEST"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12724": {
      "op": "DUP3"
    },
    "12725": {
      "op": "DUP5"
    },
    "12726": {
      "op": "SUB"
    },
    "12727": {
      "op": "SLT"
    },
    "12728": {
      "op": "ISZERO"
    },
    "12729": {
      "op": "PUSH2",
      "value": "0x31C1"
    },
    "12732": {
      "op": "JUMPI"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12735": {
      "op": "DUP1"
    },
    "12736": {
      "op": "REVERT"
    },
    "12737": {
      "op": "JUMPDEST"
    },
    "12738": {
      "op": "DUP2"
    },
    "12739": {
      "op": "CALLDATALOAD"
    },
    "12740": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12749": {
      "op": "DUP2"
    },
    "12750": {
      "op": "GT"
    },
    "12751": {
      "op": "ISZERO"
    },
    "12752": {
      "op": "PUSH2",
      "value": "0x31D8"
    },
    "12755": {
      "op": "JUMPI"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12758": {
      "op": "DUP1"
    },
    "12759": {
      "op": "REVERT"
    },
    "12760": {
      "op": "JUMPDEST"
    },
    "12761": {
      "op": "DUP3"
    },
    "12762": {
      "op": "ADD"
    },
    "12763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12765": {
      "op": "DUP2"
    },
    "12766": {
      "op": "ADD"
    },
    "12767": {
      "op": "DUP5"
    },
    "12768": {
      "op": "SGT"
    },
    "12769": {
      "op": "PUSH2",
      "value": "0x31E9"
    },
    "12772": {
      "op": "JUMPI"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12775": {
      "op": "DUP1"
    },
    "12776": {
      "op": "REVERT"
    },
    "12777": {
      "op": "JUMPDEST"
    },
    "12778": {
      "op": "PUSH2",
      "value": "0x2475"
    },
    "12781": {
      "op": "DUP5"
    },
    "12782": {
      "op": "DUP3"
    },
    "12783": {
      "op": "CALLDATALOAD"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12786": {
      "op": "DUP5"
    },
    "12787": {
      "op": "ADD"
    },
    "12788": {
      "op": "PUSH2",
      "value": "0x3139"
    },
    "12791": {
      "jump": "i",
      "op": "JUMP"
    },
    "12792": {
      "op": "JUMPDEST"
    },
    "12793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12795": {
      "op": "DUP1"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12798": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12800": {
      "op": "DUP5"
    },
    "12801": {
      "op": "DUP7"
    },
    "12802": {
      "op": "SUB"
    },
    "12803": {
      "op": "SLT"
    },
    "12804": {
      "op": "ISZERO"
    },
    "12805": {
      "op": "PUSH2",
      "value": "0x320D"
    },
    "12808": {
      "op": "JUMPI"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12811": {
      "op": "DUP1"
    },
    "12812": {
      "op": "REVERT"
    },
    "12813": {
      "op": "JUMPDEST"
    },
    "12814": {
      "op": "PUSH2",
      "value": "0x3216"
    },
    "12817": {
      "op": "DUP5"
    },
    "12818": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12821": {
      "jump": "i",
      "op": "JUMP"
    },
    "12822": {
      "op": "JUMPDEST"
    },
    "12823": {
      "op": "SWAP3"
    },
    "12824": {
      "op": "POP"
    },
    "12825": {
      "op": "PUSH2",
      "value": "0x3224"
    },
    "12828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12830": {
      "op": "DUP6"
    },
    "12831": {
      "op": "ADD"
    },
    "12832": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12835": {
      "jump": "i",
      "op": "JUMP"
    },
    "12836": {
      "op": "JUMPDEST"
    },
    "12837": {
      "op": "SWAP2"
    },
    "12838": {
      "op": "POP"
    },
    "12839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12841": {
      "op": "DUP5"
    },
    "12842": {
      "op": "ADD"
    },
    "12843": {
      "op": "CALLDATALOAD"
    },
    "12844": {
      "op": "SWAP1"
    },
    "12845": {
      "op": "POP"
    },
    "12846": {
      "op": "SWAP3"
    },
    "12847": {
      "op": "POP"
    },
    "12848": {
      "op": "SWAP3"
    },
    "12849": {
      "op": "POP"
    },
    "12850": {
      "op": "SWAP3"
    },
    "12851": {
      "jump": "o",
      "op": "JUMP"
    },
    "12852": {
      "op": "JUMPDEST"
    },
    "12853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12855": {
      "op": "DUP1"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12858": {
      "op": "DUP4"
    },
    "12859": {
      "op": "DUP6"
    },
    "12860": {
      "op": "SUB"
    },
    "12861": {
      "op": "SLT"
    },
    "12862": {
      "op": "ISZERO"
    },
    "12863": {
      "op": "PUSH2",
      "value": "0x3247"
    },
    "12866": {
      "op": "JUMPI"
    },
    "12867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12869": {
      "op": "DUP1"
    },
    "12870": {
      "op": "REVERT"
    },
    "12871": {
      "op": "JUMPDEST"
    },
    "12872": {
      "op": "DUP3"
    },
    "12873": {
      "op": "CALLDATALOAD"
    },
    "12874": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12883": {
      "op": "DUP1"
    },
    "12884": {
      "op": "DUP3"
    },
    "12885": {
      "op": "GT"
    },
    "12886": {
      "op": "ISZERO"
    },
    "12887": {
      "op": "PUSH2",
      "value": "0x325F"
    },
    "12890": {
      "op": "JUMPI"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12893": {
      "op": "DUP1"
    },
    "12894": {
      "op": "REVERT"
    },
    "12895": {
      "op": "JUMPDEST"
    },
    "12896": {
      "op": "DUP2"
    },
    "12897": {
      "op": "DUP6"
    },
    "12898": {
      "op": "ADD"
    },
    "12899": {
      "op": "SWAP2"
    },
    "12900": {
      "op": "POP"
    },
    "12901": {
      "op": "DUP6"
    },
    "12902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12904": {
      "op": "DUP4"
    },
    "12905": {
      "op": "ADD"
    },
    "12906": {
      "op": "SLT"
    },
    "12907": {
      "op": "PUSH2",
      "value": "0x3273"
    },
    "12910": {
      "op": "JUMPI"
    },
    "12911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12913": {
      "op": "DUP1"
    },
    "12914": {
      "op": "REVERT"
    },
    "12915": {
      "op": "JUMPDEST"
    },
    "12916": {
      "op": "DUP2"
    },
    "12917": {
      "op": "CALLDATALOAD"
    },
    "12918": {
      "op": "DUP2"
    },
    "12919": {
      "op": "DUP2"
    },
    "12920": {
      "op": "GT"
    },
    "12921": {
      "op": "ISZERO"
    },
    "12922": {
      "op": "PUSH2",
      "value": "0x3282"
    },
    "12925": {
      "op": "JUMPI"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12928": {
      "op": "DUP1"
    },
    "12929": {
      "op": "REVERT"
    },
    "12930": {
      "op": "JUMPDEST"
    },
    "12931": {
      "op": "DUP7"
    },
    "12932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12934": {
      "op": "DUP3"
    },
    "12935": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12937": {
      "op": "SHL"
    },
    "12938": {
      "op": "DUP6"
    },
    "12939": {
      "op": "ADD"
    },
    "12940": {
      "op": "ADD"
    },
    "12941": {
      "op": "GT"
    },
    "12942": {
      "op": "ISZERO"
    },
    "12943": {
      "op": "PUSH2",
      "value": "0x3297"
    },
    "12946": {
      "op": "JUMPI"
    },
    "12947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12949": {
      "op": "DUP1"
    },
    "12950": {
      "op": "REVERT"
    },
    "12951": {
      "op": "JUMPDEST"
    },
    "12952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12954": {
      "op": "SWAP3"
    },
    "12955": {
      "op": "SWAP1"
    },
    "12956": {
      "op": "SWAP3"
    },
    "12957": {
      "op": "ADD"
    },
    "12958": {
      "op": "SWAP7"
    },
    "12959": {
      "op": "SWAP2"
    },
    "12960": {
      "op": "SWAP6"
    },
    "12961": {
      "op": "POP"
    },
    "12962": {
      "op": "SWAP1"
    },
    "12963": {
      "op": "SWAP4"
    },
    "12964": {
      "op": "POP"
    },
    "12965": {
      "op": "POP"
    },
    "12966": {
      "op": "POP"
    },
    "12967": {
      "op": "POP"
    },
    "12968": {
      "jump": "o",
      "op": "JUMP"
    },
    "12969": {
      "op": "JUMPDEST"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12974": {
      "op": "DUP3"
    },
    "12975": {
      "op": "DUP5"
    },
    "12976": {
      "op": "SUB"
    },
    "12977": {
      "op": "SLT"
    },
    "12978": {
      "op": "ISZERO"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "12982": {
      "op": "JUMPI"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12985": {
      "op": "DUP1"
    },
    "12986": {
      "op": "REVERT"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "12991": {
      "op": "DUP3"
    },
    "12992": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12995": {
      "jump": "i",
      "op": "JUMP"
    },
    "12996": {
      "op": "JUMPDEST"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12999": {
      "op": "DUP1"
    },
    "13000": {
      "op": "DUP3"
    },
    "13001": {
      "op": "MSTORE"
    },
    "13002": {
      "op": "DUP3"
    },
    "13003": {
      "op": "MLOAD"
    },
    "13004": {
      "op": "DUP3"
    },
    "13005": {
      "op": "DUP3"
    },
    "13006": {
      "op": "ADD"
    },
    "13007": {
      "op": "DUP2"
    },
    "13008": {
      "op": "SWAP1"
    },
    "13009": {
      "op": "MSTORE"
    },
    "13010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13012": {
      "op": "SWAP2"
    },
    "13013": {
      "op": "SWAP1"
    },
    "13014": {
      "op": "DUP5"
    },
    "13015": {
      "op": "DUP3"
    },
    "13016": {
      "op": "ADD"
    },
    "13017": {
      "op": "SWAP1"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13020": {
      "op": "DUP6"
    },
    "13021": {
      "op": "ADD"
    },
    "13022": {
      "op": "SWAP1"
    },
    "13023": {
      "op": "DUP5"
    },
    "13024": {
      "op": "JUMPDEST"
    },
    "13025": {
      "op": "DUP2"
    },
    "13026": {
      "op": "DUP2"
    },
    "13027": {
      "op": "LT"
    },
    "13028": {
      "op": "ISZERO"
    },
    "13029": {
      "op": "PUSH2",
      "value": "0x32FC"
    },
    "13032": {
      "op": "JUMPI"
    },
    "13033": {
      "op": "DUP4"
    },
    "13034": {
      "op": "MLOAD"
    },
    "13035": {
      "op": "DUP4"
    },
    "13036": {
      "op": "MSTORE"
    },
    "13037": {
      "op": "SWAP3"
    },
    "13038": {
      "op": "DUP5"
    },
    "13039": {
      "op": "ADD"
    },
    "13040": {
      "op": "SWAP3"
    },
    "13041": {
      "op": "SWAP2"
    },
    "13042": {
      "op": "DUP5"
    },
    "13043": {
      "op": "ADD"
    },
    "13044": {
      "op": "SWAP2"
    },
    "13045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13047": {
      "op": "ADD"
    },
    "13048": {
      "op": "PUSH2",
      "value": "0x32E0"
    },
    "13051": {
      "op": "JUMP"
    },
    "13052": {
      "op": "JUMPDEST"
    },
    "13053": {
      "op": "POP"
    },
    "13054": {
      "op": "SWAP1"
    },
    "13055": {
      "op": "SWAP7"
    },
    "13056": {
      "op": "SWAP6"
    },
    "13057": {
      "op": "POP"
    },
    "13058": {
      "op": "POP"
    },
    "13059": {
      "op": "POP"
    },
    "13060": {
      "op": "POP"
    },
    "13061": {
      "op": "POP"
    },
    "13062": {
      "op": "POP"
    },
    "13063": {
      "jump": "o",
      "op": "JUMP"
    },
    "13064": {
      "op": "JUMPDEST"
    },
    "13065": {
      "op": "DUP1"
    },
    "13066": {
      "op": "CALLDATALOAD"
    },
    "13067": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13069": {
      "op": "DUP2"
    },
    "13070": {
      "op": "AND"
    },
    "13071": {
      "op": "DUP2"
    },
    "13072": {
      "op": "EQ"
    },
    "13073": {
      "op": "PUSH2",
      "value": "0x30F4"
    },
    "13076": {
      "op": "JUMPI"
    },
    "13077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13079": {
      "op": "DUP1"
    },
    "13080": {
      "op": "REVERT"
    },
    "13081": {
      "op": "JUMPDEST"
    },
    "13082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13086": {
      "op": "DUP3"
    },
    "13087": {
      "op": "DUP5"
    },
    "13088": {
      "op": "SUB"
    },
    "13089": {
      "op": "SLT"
    },
    "13090": {
      "op": "ISZERO"
    },
    "13091": {
      "op": "PUSH2",
      "value": "0x332B"
    },
    "13094": {
      "op": "JUMPI"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13097": {
      "op": "DUP1"
    },
    "13098": {
      "op": "REVERT"
    },
    "13099": {
      "op": "JUMPDEST"
    },
    "13100": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "13103": {
      "op": "DUP3"
    },
    "13104": {
      "op": "PUSH2",
      "value": "0x3308"
    },
    "13107": {
      "jump": "i",
      "op": "JUMP"
    },
    "13108": {
      "op": "JUMPDEST"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13111": {
      "op": "DUP1"
    },
    "13112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13114": {
      "op": "DUP4"
    },
    "13115": {
      "op": "DUP6"
    },
    "13116": {
      "op": "SUB"
    },
    "13117": {
      "op": "SLT"
    },
    "13118": {
      "op": "ISZERO"
    },
    "13119": {
      "op": "PUSH2",
      "value": "0x3347"
    },
    "13122": {
      "op": "JUMPI"
    },
    "13123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13125": {
      "op": "DUP1"
    },
    "13126": {
      "op": "REVERT"
    },
    "13127": {
      "op": "JUMPDEST"
    },
    "13128": {
      "op": "PUSH2",
      "value": "0x3350"
    },
    "13131": {
      "op": "DUP4"
    },
    "13132": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "13135": {
      "jump": "i",
      "op": "JUMP"
    },
    "13136": {
      "op": "JUMPDEST"
    },
    "13137": {
      "op": "SWAP2"
    },
    "13138": {
      "op": "POP"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13141": {
      "op": "DUP4"
    },
    "13142": {
      "op": "ADD"
    },
    "13143": {
      "op": "CALLDATALOAD"
    },
    "13144": {
      "op": "DUP1"
    },
    "13145": {
      "op": "ISZERO"
    },
    "13146": {
      "op": "ISZERO"
    },
    "13147": {
      "op": "DUP2"
    },
    "13148": {
      "op": "EQ"
    },
    "13149": {
      "op": "PUSH2",
      "value": "0x3365"
    },
    "13152": {
      "op": "JUMPI"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13155": {
      "op": "DUP1"
    },
    "13156": {
      "op": "REVERT"
    },
    "13157": {
      "op": "JUMPDEST"
    },
    "13158": {
      "op": "DUP1"
    },
    "13159": {
      "op": "SWAP2"
    },
    "13160": {
      "op": "POP"
    },
    "13161": {
      "op": "POP"
    },
    "13162": {
      "op": "SWAP3"
    },
    "13163": {
      "op": "POP"
    },
    "13164": {
      "op": "SWAP3"
    },
    "13165": {
      "op": "SWAP1"
    },
    "13166": {
      "op": "POP"
    },
    "13167": {
      "jump": "o",
      "op": "JUMP"
    },
    "13168": {
      "op": "JUMPDEST"
    },
    "13169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13171": {
      "op": "DUP1"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13174": {
      "op": "DUP4"
    },
    "13175": {
      "op": "DUP6"
    },
    "13176": {
      "op": "SUB"
    },
    "13177": {
      "op": "SLT"
    },
    "13178": {
      "op": "ISZERO"
    },
    "13179": {
      "op": "PUSH2",
      "value": "0x3383"
    },
    "13182": {
      "op": "JUMPI"
    },
    "13183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13185": {
      "op": "DUP1"
    },
    "13186": {
      "op": "REVERT"
    },
    "13187": {
      "op": "JUMPDEST"
    },
    "13188": {
      "op": "PUSH2",
      "value": "0x338C"
    },
    "13191": {
      "op": "DUP4"
    },
    "13192": {
      "op": "PUSH2",
      "value": "0x3308"
    },
    "13195": {
      "jump": "i",
      "op": "JUMP"
    },
    "13196": {
      "op": "JUMPDEST"
    },
    "13197": {
      "op": "SWAP2"
    },
    "13198": {
      "op": "POP"
    },
    "13199": {
      "op": "PUSH2",
      "value": "0x339A"
    },
    "13202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13204": {
      "op": "DUP5"
    },
    "13205": {
      "op": "ADD"
    },
    "13206": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "13209": {
      "jump": "i",
      "op": "JUMP"
    },
    "13210": {
      "op": "JUMPDEST"
    },
    "13211": {
      "op": "SWAP1"
    },
    "13212": {
      "op": "POP"
    },
    "13213": {
      "op": "SWAP3"
    },
    "13214": {
      "op": "POP"
    },
    "13215": {
      "op": "SWAP3"
    },
    "13216": {
      "op": "SWAP1"
    },
    "13217": {
      "op": "POP"
    },
    "13218": {
      "jump": "o",
      "op": "JUMP"
    },
    "13219": {
      "op": "JUMPDEST"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13222": {
      "op": "DUP1"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13225": {
      "op": "DUP1"
    },
    "13226": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13228": {
      "op": "DUP6"
    },
    "13229": {
      "op": "DUP8"
    },
    "13230": {
      "op": "SUB"
    },
    "13231": {
      "op": "SLT"
    },
    "13232": {
      "op": "ISZERO"
    },
    "13233": {
      "op": "PUSH2",
      "value": "0x33B9"
    },
    "13236": {
      "op": "JUMPI"
    },
    "13237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13239": {
      "op": "DUP1"
    },
    "13240": {
      "op": "REVERT"
    },
    "13241": {
      "op": "JUMPDEST"
    },
    "13242": {
      "op": "PUSH2",
      "value": "0x33C2"
    },
    "13245": {
      "op": "DUP6"
    },
    "13246": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "13249": {
      "jump": "i",
      "op": "JUMP"
    },
    "13250": {
      "op": "JUMPDEST"
    },
    "13251": {
      "op": "SWAP4"
    },
    "13252": {
      "op": "POP"
    },
    "13253": {
      "op": "PUSH2",
      "value": "0x33D0"
    },
    "13256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13258": {
      "op": "DUP7"
    },
    "13259": {
      "op": "ADD"
    },
    "13260": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "13263": {
      "jump": "i",
      "op": "JUMP"
    },
    "13264": {
      "op": "JUMPDEST"
    },
    "13265": {
      "op": "SWAP3"
    },
    "13266": {
      "op": "POP"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13269": {
      "op": "DUP6"
    },
    "13270": {
      "op": "ADD"
    },
    "13271": {
      "op": "CALLDATALOAD"
    },
    "13272": {
      "op": "SWAP2"
    },
    "13273": {
      "op": "POP"
    },
    "13274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13276": {
      "op": "DUP6"
    },
    "13277": {
      "op": "ADD"
    },
    "13278": {
      "op": "CALLDATALOAD"
    },
    "13279": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13288": {
      "op": "DUP2"
    },
    "13289": {
      "op": "GT"
    },
    "13290": {
      "op": "ISZERO"
    },
    "13291": {
      "op": "PUSH2",
      "value": "0x33F3"
    },
    "13294": {
      "op": "JUMPI"
    },
    "13295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13297": {
      "op": "DUP1"
    },
    "13298": {
      "op": "REVERT"
    },
    "13299": {
      "op": "JUMPDEST"
    },
    "13300": {
      "op": "DUP6"
    },
    "13301": {
      "op": "ADD"
    },
    "13302": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13304": {
      "op": "DUP2"
    },
    "13305": {
      "op": "ADD"
    },
    "13306": {
      "op": "DUP8"
    },
    "13307": {
      "op": "SGT"
    },
    "13308": {
      "op": "PUSH2",
      "value": "0x3404"
    },
    "13311": {
      "op": "JUMPI"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13314": {
      "op": "DUP1"
    },
    "13315": {
      "op": "REVERT"
    },
    "13316": {
      "op": "JUMPDEST"
    },
    "13317": {
      "op": "PUSH2",
      "value": "0x3413"
    },
    "13320": {
      "op": "DUP8"
    },
    "13321": {
      "op": "DUP3"
    },
    "13322": {
      "op": "CALLDATALOAD"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13325": {
      "op": "DUP5"
    },
    "13326": {
      "op": "ADD"
    },
    "13327": {
      "op": "PUSH2",
      "value": "0x3139"
    },
    "13330": {
      "jump": "i",
      "op": "JUMP"
    },
    "13331": {
      "op": "JUMPDEST"
    },
    "13332": {
      "op": "SWAP2"
    },
    "13333": {
      "op": "POP"
    },
    "13334": {
      "op": "POP"
    },
    "13335": {
      "op": "SWAP3"
    },
    "13336": {
      "op": "SWAP6"
    },
    "13337": {
      "op": "SWAP2"
    },
    "13338": {
      "op": "SWAP5"
    },
    "13339": {
      "op": "POP"
    },
    "13340": {
      "op": "SWAP3"
    },
    "13341": {
      "op": "POP"
    },
    "13342": {
      "jump": "o",
      "op": "JUMP"
    },
    "13343": {
      "op": "JUMPDEST"
    },
    "13344": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13351": {
      "op": "SHL"
    },
    "13352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13354": {
      "op": "MSTORE"
    },
    "13355": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13357": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13359": {
      "op": "MSTORE"
    },
    "13360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13364": {
      "op": "REVERT"
    },
    "13365": {
      "op": "JUMPDEST"
    },
    "13366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13368": {
      "op": "DUP2"
    },
    "13369": {
      "op": "ADD"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13372": {
      "op": "DUP4"
    },
    "13373": {
      "op": "LT"
    },
    "13374": {
      "op": "PUSH2",
      "value": "0x3457"
    },
    "13377": {
      "op": "JUMPI"
    },
    "13378": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13385": {
      "op": "SHL"
    },
    "13386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13388": {
      "op": "MSTORE"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13393": {
      "op": "MSTORE"
    },
    "13394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13398": {
      "op": "REVERT"
    },
    "13399": {
      "op": "JUMPDEST"
    },
    "13400": {
      "op": "SWAP2"
    },
    "13401": {
      "op": "SWAP1"
    },
    "13402": {
      "op": "MSTORE"
    },
    "13403": {
      "op": "SWAP1"
    },
    "13404": {
      "jump": "o",
      "op": "JUMP"
    },
    "13405": {
      "op": "JUMPDEST"
    },
    "13406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13410": {
      "op": "DUP3"
    },
    "13411": {
      "op": "DUP5"
    },
    "13412": {
      "op": "SUB"
    },
    "13413": {
      "op": "SLT"
    },
    "13414": {
      "op": "ISZERO"
    },
    "13415": {
      "op": "PUSH2",
      "value": "0x346F"
    },
    "13418": {
      "op": "JUMPI"
    },
    "13419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13421": {
      "op": "DUP1"
    },
    "13422": {
      "op": "REVERT"
    },
    "13423": {
      "op": "JUMPDEST"
    },
    "13424": {
      "op": "DUP2"
    },
    "13425": {
      "op": "CALLDATALOAD"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13428": {
      "op": "DUP2"
    },
    "13429": {
      "op": "LT"
    },
    "13430": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "13433": {
      "op": "JUMPI"
    },
    "13434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13436": {
      "op": "DUP1"
    },
    "13437": {
      "op": "REVERT"
    },
    "13438": {
      "op": "JUMPDEST"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13441": {
      "op": "DUP1"
    },
    "13442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13444": {
      "op": "DUP4"
    },
    "13445": {
      "op": "DUP6"
    },
    "13446": {
      "op": "SUB"
    },
    "13447": {
      "op": "SLT"
    },
    "13448": {
      "op": "ISZERO"
    },
    "13449": {
      "op": "PUSH2",
      "value": "0x3491"
    },
    "13452": {
      "op": "JUMPI"
    },
    "13453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13455": {
      "op": "DUP1"
    },
    "13456": {
      "op": "REVERT"
    },
    "13457": {
      "op": "JUMPDEST"
    },
    "13458": {
      "op": "PUSH2",
      "value": "0x338C"
    },
    "13461": {
      "op": "DUP4"
    },
    "13462": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "13465": {
      "jump": "i",
      "op": "JUMP"
    },
    "13466": {
      "op": "JUMPDEST"
    },
    "13467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13469": {
      "op": "DUP2"
    },
    "13470": {
      "op": "DUP2"
    },
    "13471": {
      "op": "SHR"
    },
    "13472": {
      "op": "SWAP1"
    },
    "13473": {
      "op": "DUP3"
    },
    "13474": {
      "op": "AND"
    },
    "13475": {
      "op": "DUP1"
    },
    "13476": {
      "op": "PUSH2",
      "value": "0x34AE"
    },
    "13479": {
      "op": "JUMPI"
    },
    "13480": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13482": {
      "op": "DUP3"
    },
    "13483": {
      "op": "AND"
    },
    "13484": {
      "op": "SWAP2"
    },
    "13485": {
      "op": "POP"
    },
    "13486": {
      "op": "JUMPDEST"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13489": {
      "op": "DUP3"
    },
    "13490": {
      "op": "LT"
    },
    "13491": {
      "op": "DUP2"
    },
    "13492": {
      "op": "EQ"
    },
    "13493": {
      "op": "ISZERO"
    },
    "13494": {
      "op": "PUSH2",
      "value": "0x34CF"
    },
    "13497": {
      "op": "JUMPI"
    },
    "13498": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13505": {
      "op": "SHL"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13508": {
      "op": "MSTORE"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13511": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13518": {
      "op": "REVERT"
    },
    "13519": {
      "op": "JUMPDEST"
    },
    "13520": {
      "op": "POP"
    },
    "13521": {
      "op": "SWAP2"
    },
    "13522": {
      "op": "SWAP1"
    },
    "13523": {
      "op": "POP"
    },
    "13524": {
      "jump": "o",
      "op": "JUMP"
    },
    "13525": {
      "op": "JUMPDEST"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13528": {
      "op": "DUP1"
    },
    "13529": {
      "op": "DUP3"
    },
    "13530": {
      "op": "MSTORE"
    },
    "13531": {
      "op": "DUP2"
    },
    "13532": {
      "op": "DUP2"
    },
    "13533": {
      "op": "ADD"
    },
    "13534": {
      "op": "MSTORE"
    },
    "13535": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13570": {
      "op": "DUP3"
    },
    "13571": {
      "op": "ADD"
    },
    "13572": {
      "op": "MSTORE"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13575": {
      "op": "ADD"
    },
    "13576": {
      "op": "SWAP1"
    },
    "13577": {
      "jump": "o",
      "op": "JUMP"
    },
    "13578": {
      "op": "JUMPDEST"
    },
    "13579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13581": {
      "op": "DUP1"
    },
    "13582": {
      "op": "DUP3"
    },
    "13583": {
      "op": "MSTORE"
    },
    "13584": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13586": {
      "op": "SWAP1"
    },
    "13587": {
      "op": "DUP3"
    },
    "13588": {
      "op": "ADD"
    },
    "13589": {
      "op": "MSTORE"
    },
    "13590": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13623": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13625": {
      "op": "DUP3"
    },
    "13626": {
      "op": "ADD"
    },
    "13627": {
      "op": "MSTORE"
    },
    "13628": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13646": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13648": {
      "op": "SHL"
    },
    "13649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13651": {
      "op": "DUP3"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "MSTORE"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13656": {
      "op": "ADD"
    },
    "13657": {
      "op": "SWAP1"
    },
    "13658": {
      "jump": "o",
      "op": "JUMP"
    },
    "13659": {
      "op": "JUMPDEST"
    },
    "13660": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13665": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13667": {
      "op": "SHL"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13670": {
      "op": "MSTORE"
    },
    "13671": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13673": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13675": {
      "op": "MSTORE"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13680": {
      "op": "REVERT"
    },
    "13681": {
      "op": "JUMPDEST"
    },
    "13682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13684": {
      "op": "DUP2"
    },
    "13685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13687": {
      "op": "NOT"
    },
    "13688": {
      "op": "DIV"
    },
    "13689": {
      "op": "DUP4"
    },
    "13690": {
      "op": "GT"
    },
    "13691": {
      "op": "DUP3"
    },
    "13692": {
      "op": "ISZERO"
    },
    "13693": {
      "op": "ISZERO"
    },
    "13694": {
      "op": "AND"
    },
    "13695": {
      "op": "ISZERO"
    },
    "13696": {
      "op": "PUSH2",
      "value": "0x358B"
    },
    "13699": {
      "op": "JUMPI"
    },
    "13700": {
      "op": "PUSH2",
      "value": "0x358B"
    },
    "13703": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "13706": {
      "jump": "i",
      "op": "JUMP"
    },
    "13707": {
      "op": "JUMPDEST"
    },
    "13708": {
      "op": "POP"
    },
    "13709": {
      "op": "MUL"
    },
    "13710": {
      "op": "SWAP1"
    },
    "13711": {
      "jump": "o",
      "op": "JUMP"
    },
    "13712": {
      "op": "JUMPDEST"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13715": {
      "op": "DUP1"
    },
    "13716": {
      "op": "DUP3"
    },
    "13717": {
      "op": "MSTORE"
    },
    "13718": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13720": {
      "op": "SWAP1"
    },
    "13721": {
      "op": "DUP3"
    },
    "13722": {
      "op": "ADD"
    },
    "13723": {
      "op": "MSTORE"
    },
    "13724": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13741": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13743": {
      "op": "SHL"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13746": {
      "op": "DUP3"
    },
    "13747": {
      "op": "ADD"
    },
    "13748": {
      "op": "MSTORE"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13751": {
      "op": "ADD"
    },
    "13752": {
      "op": "SWAP1"
    },
    "13753": {
      "jump": "o",
      "op": "JUMP"
    },
    "13754": {
      "op": "JUMPDEST"
    },
    "13755": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13762": {
      "op": "SHL"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13765": {
      "op": "MSTORE"
    },
    "13766": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13768": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13770": {
      "op": "MSTORE"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13775": {
      "op": "REVERT"
    },
    "13776": {
      "op": "JUMPDEST"
    },
    "13777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13781": {
      "op": "NOT"
    },
    "13782": {
      "op": "DUP3"
    },
    "13783": {
      "op": "EQ"
    },
    "13784": {
      "op": "ISZERO"
    },
    "13785": {
      "op": "PUSH2",
      "value": "0x35E4"
    },
    "13788": {
      "op": "JUMPI"
    },
    "13789": {
      "op": "PUSH2",
      "value": "0x35E4"
    },
    "13792": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "13795": {
      "jump": "i",
      "op": "JUMP"
    },
    "13796": {
      "op": "JUMPDEST"
    },
    "13797": {
      "op": "POP"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13800": {
      "op": "ADD"
    },
    "13801": {
      "op": "SWAP1"
    },
    "13802": {
      "jump": "o",
      "op": "JUMP"
    },
    "13803": {
      "op": "JUMPDEST"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13806": {
      "op": "DUP3"
    },
    "13807": {
      "op": "NOT"
    },
    "13808": {
      "op": "DUP3"
    },
    "13809": {
      "op": "GT"
    },
    "13810": {
      "op": "ISZERO"
    },
    "13811": {
      "op": "PUSH2",
      "value": "0x35FE"
    },
    "13814": {
      "op": "JUMPI"
    },
    "13815": {
      "op": "PUSH2",
      "value": "0x35FE"
    },
    "13818": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "13821": {
      "jump": "i",
      "op": "JUMP"
    },
    "13822": {
      "op": "JUMPDEST"
    },
    "13823": {
      "op": "POP"
    },
    "13824": {
      "op": "ADD"
    },
    "13825": {
      "op": "SWAP1"
    },
    "13826": {
      "jump": "o",
      "op": "JUMP"
    },
    "13827": {
      "op": "JUMPDEST"
    },
    "13828": {
      "op": "DUP1"
    },
    "13829": {
      "op": "SLOAD"
    },
    "13830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13832": {
      "op": "SWAP1"
    },
    "13833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13835": {
      "op": "DUP2"
    },
    "13836": {
      "op": "DUP2"
    },
    "13837": {
      "op": "SHR"
    },
    "13838": {
      "op": "SWAP1"
    },
    "13839": {
      "op": "DUP1"
    },
    "13840": {
      "op": "DUP4"
    },
    "13841": {
      "op": "AND"
    },
    "13842": {
      "op": "DUP1"
    },
    "13843": {
      "op": "PUSH2",
      "value": "0x361D"
    },
    "13846": {
      "op": "JUMPI"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13849": {
      "op": "DUP4"
    },
    "13850": {
      "op": "AND"
    },
    "13851": {
      "op": "SWAP3"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "op": "JUMPDEST"
    },
    "13854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13856": {
      "op": "DUP1"
    },
    "13857": {
      "op": "DUP5"
    },
    "13858": {
      "op": "LT"
    },
    "13859": {
      "op": "DUP3"
    },
    "13860": {
      "op": "EQ"
    },
    "13861": {
      "op": "ISZERO"
    },
    "13862": {
      "op": "PUSH2",
      "value": "0x363F"
    },
    "13865": {
      "op": "JUMPI"
    },
    "13866": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13873": {
      "op": "SHL"
    },
    "13874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13876": {
      "op": "MSTORE"
    },
    "13877": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13879": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13881": {
      "op": "MSTORE"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13886": {
      "op": "REVERT"
    },
    "13887": {
      "op": "JUMPDEST"
    },
    "13888": {
      "op": "DUP2"
    },
    "13889": {
      "op": "DUP1"
    },
    "13890": {
      "op": "ISZERO"
    },
    "13891": {
      "op": "PUSH2",
      "value": "0x3653"
    },
    "13894": {
      "op": "JUMPI"
    },
    "13895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13897": {
      "op": "DUP2"
    },
    "13898": {
      "op": "EQ"
    },
    "13899": {
      "op": "PUSH2",
      "value": "0x3664"
    },
    "13902": {
      "op": "JUMPI"
    },
    "13903": {
      "op": "PUSH2",
      "value": "0x3691"
    },
    "13906": {
      "op": "JUMP"
    },
    "13907": {
      "op": "JUMPDEST"
    },
    "13908": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13910": {
      "op": "NOT"
    },
    "13911": {
      "op": "DUP7"
    },
    "13912": {
      "op": "AND"
    },
    "13913": {
      "op": "DUP10"
    },
    "13914": {
      "op": "MSTORE"
    },
    "13915": {
      "op": "DUP5"
    },
    "13916": {
      "op": "DUP10"
    },
    "13917": {
      "op": "ADD"
    },
    "13918": {
      "op": "SWAP7"
    },
    "13919": {
      "op": "POP"
    },
    "13920": {
      "op": "PUSH2",
      "value": "0x3691"
    },
    "13923": {
      "op": "JUMP"
    },
    "13924": {
      "op": "JUMPDEST"
    },
    "13925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13927": {
      "op": "DUP9"
    },
    "13928": {
      "op": "DUP2"
    },
    "13929": {
      "op": "MSTORE"
    },
    "13930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13932": {
      "op": "SWAP1"
    },
    "13933": {
      "op": "KECCAK256"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13936": {
      "op": "JUMPDEST"
    },
    "13937": {
      "op": "DUP7"
    },
    "13938": {
      "op": "DUP2"
    },
    "13939": {
      "op": "LT"
    },
    "13940": {
      "op": "ISZERO"
    },
    "13941": {
      "op": "PUSH2",
      "value": "0x3689"
    },
    "13944": {
      "op": "JUMPI"
    },
    "13945": {
      "op": "DUP2"
    },
    "13946": {
      "op": "SLOAD"
    },
    "13947": {
      "op": "DUP12"
    },
    "13948": {
      "op": "DUP3"
    },
    "13949": {
      "op": "ADD"
    },
    "13950": {
      "op": "MSTORE"
    },
    "13951": {
      "op": "SWAP1"
    },
    "13952": {
      "op": "DUP6"
    },
    "13953": {
      "op": "ADD"
    },
    "13954": {
      "op": "SWAP1"
    },
    "13955": {
      "op": "DUP4"
    },
    "13956": {
      "op": "ADD"
    },
    "13957": {
      "op": "PUSH2",
      "value": "0x3670"
    },
    "13960": {
      "op": "JUMP"
    },
    "13961": {
      "op": "JUMPDEST"
    },
    "13962": {
      "op": "POP"
    },
    "13963": {
      "op": "POP"
    },
    "13964": {
      "op": "DUP5"
    },
    "13965": {
      "op": "DUP10"
    },
    "13966": {
      "op": "ADD"
    },
    "13967": {
      "op": "SWAP7"
    },
    "13968": {
      "op": "POP"
    },
    "13969": {
      "op": "JUMPDEST"
    },
    "13970": {
      "op": "POP"
    },
    "13971": {
      "op": "POP"
    },
    "13972": {
      "op": "POP"
    },
    "13973": {
      "op": "POP"
    },
    "13974": {
      "op": "POP"
    },
    "13975": {
      "op": "POP"
    },
    "13976": {
      "op": "SWAP3"
    },
    "13977": {
      "op": "SWAP2"
    },
    "13978": {
      "op": "POP"
    },
    "13979": {
      "op": "POP"
    },
    "13980": {
      "jump": "o",
      "op": "JUMP"
    },
    "13981": {
      "op": "JUMPDEST"
    },
    "13982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13984": {
      "op": "PUSH2",
      "value": "0x36A9"
    },
    "13987": {
      "op": "DUP3"
    },
    "13988": {
      "op": "DUP7"
    },
    "13989": {
      "op": "PUSH2",
      "value": "0x3603"
    },
    "13992": {
      "jump": "i",
      "op": "JUMP"
    },
    "13993": {
      "op": "JUMPDEST"
    },
    "13994": {
      "op": "DUP5"
    },
    "13995": {
      "op": "MLOAD"
    },
    "13996": {
      "op": "PUSH2",
      "value": "0x36B9"
    },
    "13999": {
      "op": "DUP2"
    },
    "14000": {
      "op": "DUP4"
    },
    "14001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14003": {
      "op": "DUP10"
    },
    "14004": {
      "op": "ADD"
    },
    "14005": {
      "op": "PUSH2",
      "value": "0x3059"
    },
    "14008": {
      "jump": "i",
      "op": "JUMP"
    },
    "14009": {
      "op": "JUMPDEST"
    },
    "14010": {
      "op": "PUSH2",
      "value": "0x36C5"
    },
    "14013": {
      "op": "DUP2"
    },
    "14014": {
      "op": "DUP4"
    },
    "14015": {
      "op": "ADD"
    },
    "14016": {
      "op": "DUP7"
    },
    "14017": {
      "op": "PUSH2",
      "value": "0x3603"
    },
    "14020": {
      "jump": "i",
      "op": "JUMP"
    },
    "14021": {
      "op": "JUMPDEST"
    },
    "14022": {
      "op": "SWAP8"
    },
    "14023": {
      "op": "SWAP7"
    },
    "14024": {
      "op": "POP"
    },
    "14025": {
      "op": "POP"
    },
    "14026": {
      "op": "POP"
    },
    "14027": {
      "op": "POP"
    },
    "14028": {
      "op": "POP"
    },
    "14029": {
      "op": "POP"
    },
    "14030": {
      "op": "POP"
    },
    "14031": {
      "jump": "o",
      "op": "JUMP"
    },
    "14032": {
      "op": "JUMPDEST"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14035": {
      "op": "DUP3"
    },
    "14036": {
      "op": "DUP3"
    },
    "14037": {
      "op": "LT"
    },
    "14038": {
      "op": "ISZERO"
    },
    "14039": {
      "op": "PUSH2",
      "value": "0x36E2"
    },
    "14042": {
      "op": "JUMPI"
    },
    "14043": {
      "op": "PUSH2",
      "value": "0x36E2"
    },
    "14046": {
      "op": "PUSH2",
      "value": "0x355B"
    },
    "14049": {
      "jump": "i",
      "op": "JUMP"
    },
    "14050": {
      "op": "JUMPDEST"
    },
    "14051": {
      "op": "POP"
    },
    "14052": {
      "op": "SUB"
    },
    "14053": {
      "op": "SWAP1"
    },
    "14054": {
      "jump": "o",
      "op": "JUMP"
    },
    "14055": {
      "op": "JUMPDEST"
    },
    "14056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14058": {
      "op": "DUP1"
    },
    "14059": {
      "op": "DUP3"
    },
    "14060": {
      "op": "MSTORE"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14063": {
      "op": "SWAP1"
    },
    "14064": {
      "op": "DUP3"
    },
    "14065": {
      "op": "ADD"
    },
    "14066": {
      "op": "MSTORE"
    },
    "14067": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14102": {
      "op": "DUP3"
    },
    "14103": {
      "op": "ADD"
    },
    "14104": {
      "op": "MSTORE"
    },
    "14105": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14124": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14126": {
      "op": "SHL"
    },
    "14127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14129": {
      "op": "DUP3"
    },
    "14130": {
      "op": "ADD"
    },
    "14131": {
      "op": "MSTORE"
    },
    "14132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14134": {
      "op": "ADD"
    },
    "14135": {
      "op": "SWAP1"
    },
    "14136": {
      "jump": "o",
      "op": "JUMP"
    },
    "14137": {
      "op": "JUMPDEST"
    },
    "14138": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14145": {
      "op": "SHL"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14148": {
      "op": "MSTORE"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14153": {
      "op": "MSTORE"
    },
    "14154": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14158": {
      "op": "REVERT"
    },
    "14159": {
      "op": "JUMPDEST"
    },
    "14160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14162": {
      "op": "DUP3"
    },
    "14163": {
      "op": "PUSH2",
      "value": "0x375E"
    },
    "14166": {
      "op": "JUMPI"
    },
    "14167": {
      "op": "PUSH2",
      "value": "0x375E"
    },
    "14170": {
      "op": "PUSH2",
      "value": "0x3739"
    },
    "14173": {
      "jump": "i",
      "op": "JUMP"
    },
    "14174": {
      "op": "JUMPDEST"
    },
    "14175": {
      "op": "POP"
    },
    "14176": {
      "op": "DIV"
    },
    "14177": {
      "op": "SWAP1"
    },
    "14178": {
      "jump": "o",
      "op": "JUMP"
    },
    "14179": {
      "op": "JUMPDEST"
    },
    "14180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14182": {
      "op": "DUP3"
    },
    "14183": {
      "op": "PUSH2",
      "value": "0x3772"
    },
    "14186": {
      "op": "JUMPI"
    },
    "14187": {
      "op": "PUSH2",
      "value": "0x3772"
    },
    "14190": {
      "op": "PUSH2",
      "value": "0x3739"
    },
    "14193": {
      "jump": "i",
      "op": "JUMP"
    },
    "14194": {
      "op": "JUMPDEST"
    },
    "14195": {
      "op": "POP"
    },
    "14196": {
      "op": "MOD"
    },
    "14197": {
      "op": "SWAP1"
    },
    "14198": {
      "jump": "o",
      "op": "JUMP"
    },
    "14199": {
      "op": "JUMPDEST"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14206": {
      "op": "SHL"
    },
    "14207": {
      "op": "SUB"
    },
    "14208": {
      "op": "DUP6"
    },
    "14209": {
      "op": "DUP2"
    },
    "14210": {
      "op": "AND"
    },
    "14211": {
      "op": "DUP3"
    },
    "14212": {
      "op": "MSTORE"
    },
    "14213": {
      "op": "DUP5"
    },
    "14214": {
      "op": "AND"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14217": {
      "op": "DUP3"
    },
    "14218": {
      "op": "ADD"
    },
    "14219": {
      "op": "MSTORE"
    },
    "14220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14222": {
      "op": "DUP2"
    },
    "14223": {
      "op": "ADD"
    },
    "14224": {
      "op": "DUP4"
    },
    "14225": {
      "op": "SWAP1"
    },
    "14226": {
      "op": "MSTORE"
    },
    "14227": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14229": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14231": {
      "op": "DUP3"
    },
    "14232": {
      "op": "ADD"
    },
    "14233": {
      "op": "DUP2"
    },
    "14234": {
      "op": "SWAP1"
    },
    "14235": {
      "op": "MSTORE"
    },
    "14236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14238": {
      "op": "SWAP1"
    },
    "14239": {
      "op": "PUSH2",
      "value": "0x37AA"
    },
    "14242": {
      "op": "SWAP1"
    },
    "14243": {
      "op": "DUP4"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "DUP5"
    },
    "14246": {
      "op": "PUSH2",
      "value": "0x3085"
    },
    "14249": {
      "jump": "i",
      "op": "JUMP"
    },
    "14250": {
      "op": "JUMPDEST"
    },
    "14251": {
      "op": "SWAP7"
    },
    "14252": {
      "op": "SWAP6"
    },
    "14253": {
      "op": "POP"
    },
    "14254": {
      "op": "POP"
    },
    "14255": {
      "op": "POP"
    },
    "14256": {
      "op": "POP"
    },
    "14257": {
      "op": "POP"
    },
    "14258": {
      "op": "POP"
    },
    "14259": {
      "jump": "o",
      "op": "JUMP"
    },
    "14260": {
      "op": "JUMPDEST"
    },
    "14261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14265": {
      "op": "DUP3"
    },
    "14266": {
      "op": "DUP5"
    },
    "14267": {
      "op": "SUB"
    },
    "14268": {
      "op": "SLT"
    },
    "14269": {
      "op": "ISZERO"
    },
    "14270": {
      "op": "PUSH2",
      "value": "0x37C6"
    },
    "14273": {
      "op": "JUMPI"
    },
    "14274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14276": {
      "op": "DUP1"
    },
    "14277": {
      "op": "REVERT"
    },
    "14278": {
      "op": "JUMPDEST"
    },
    "14279": {
      "op": "DUP2"
    },
    "14280": {
      "op": "MLOAD"
    },
    "14281": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "14284": {
      "op": "DUP2"
    },
    "14285": {
      "op": "PUSH2",
      "value": "0x301F"
    },
    "14288": {
      "jump": "i",
      "op": "JUMP"
    },
    "14289": {
      "op": "JUMPDEST"
    },
    "14290": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14297": {
      "op": "SHL"
    },
    "14298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14300": {
      "op": "MSTORE"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14305": {
      "op": "MSTORE"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14310": {
      "op": "REVERT"
    }
  },
  "sha1": "8feafeaa76df36a048f60ac327c845be108c5808",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title CryptidToken NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, sent, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.1 ether;  \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    modifier isValidMerkleProof(bytes32[] calldata proof, bytes32 root) {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(proof.verify(root, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        _;\n    }\n\n    modifier isCorrectPayment(uint256 price, uint256 numberOfTokens) {\n        require(price * numberOfTokens == msg.value, \"Incorrect ETH value sent.\");\n        _;\n    }\n    \n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        isValidMerkleProof(merkleProof, merkleRoot) \n        isCorrectPayment(salePrice, 1) \n        nonReentrant \n        whenNotPaused \n    {\n        \n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] = true;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");     \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint8 mintAmount\n    ) \n        external\n        payable \n        isCorrectPayment(salePrice, mintAmount) \n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function setClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    // to be used in case of WL error\n    function undoClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = false;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setTeamMintSupply(uint256 _newTeamMintSupply) external onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) external onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) external onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function withdraw() external payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawl failed.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "1139:26:16:-:0;710:8572;1139:26;;;-1:-1:-1;710:8572:16;1139:26;;;;;;;;:::i;:::-;-1:-1:-1;1171:37:16;;;;;;;;;;;;;-1:-1:-1;;;1171:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1250:34:16;;;-1:-1:-1;;;;;;1337:76:16;;;;;1949:9;1922:36;;1992:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:3;;2242:5:16;;2249:7;;1441:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2268:15:16::1;:34:::0;;;2312:14:::1;:32:::0;;;2354:15:::1;:34:::0;;;2398:12:::1;:28:::0;;-1:-1:-1;;2398:28:16::1;;::::0;::::1;;::::0;;2436:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2464:27;:15;:25;;;;;:27;;:::i;:::-;1992:506:::0;;;;;;;710:8572;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;710:8572:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:8572:16;;;-1:-1:-1;710:8572:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:17;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;710:8572:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}