{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wlAddress",
          "type": "address"
        }
      ],
      "name": "overrideClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newmaxMintPerTx",
          "type": "uint8"
        }
      ],
      "name": "setMaxMintPerTx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newSalePrice",
          "type": "uint256"
        }
      ],
      "name": "setPublicSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newTeamMintSupply",
          "type": "uint256"
        }
      ],
      "name": "setTeamMintSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dest1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest4",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dest5",
          "type": "address"
        }
      ],
      "name": "setWithdrawAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest4",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDest5",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "9": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        3019
      ],
      "Context": [
        2561
      ],
      "Counters": [
        2139
      ],
      "CryptidToken": [
        967
      ],
      "ERC165": [
        3246
      ],
      "ERC721": [
        2035
      ],
      "ERC721Burnable": [
        2065
      ],
      "IERC165": [
        3258
      ],
      "IERC721": [
        2677
      ],
      "IERC721Metadata": [
        2722
      ],
      "IERC721Receiver": [
        2695
      ],
      "MerkleProof": [
        2227
      ],
      "Ownable": [
        1072
      ],
      "Pausable": [
        1164
      ],
      "ReentrancyGuard": [
        1204
      ],
      "SafeMath": [
        2539
      ],
      "Strings": [
        3222
      ]
    },
    "id": 968,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 2036,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 1073,
        "src": "116:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 1205,
        "src": "169:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 2540,
        "src": "232:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 2140,
        "src": "290:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 1165,
        "src": "343:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 2066,
        "src": "399:76:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 2228,
        "src": "476:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2035,
              "src": "571:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "571:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1164,
              "src": "579:8:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "579:8:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1072,
              "src": "589:7:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "589:7:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1204,
              "src": "598:15:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "598:15:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2065,
              "src": "615:14:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "615:14:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 967,
        "linearizedBaseContracts": [
          967,
          2065,
          1204,
          1072,
          1164,
          2035,
          2722,
          2677,
          3246,
          3258,
          2561
        ],
        "name": "CryptidToken",
        "nameLocation": "555:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3222,
              "src": "642:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "636:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "id": 23,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2539,
              "src": "673:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "667:27:16",
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 29,
            "libraryName": {
              "id": 26,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2139,
              "src": "705:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "699:36:16",
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2071,
                "src": "718:16:16"
              },
              "referencedDeclaration": 2071,
              "src": "718:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2071_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 33,
            "libraryName": {
              "id": 30,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2227,
              "src": "746:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "740:32:16",
            "typeName": {
              "baseType": {
                "id": 31,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "762:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 32,
              "nodeType": "ArrayTypeName",
              "src": "762:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "803:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "778:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2071_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 35,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2071,
                "src": "778:16:16"
              },
              "referencedDeclaration": 2071,
              "src": "778:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2071_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 38,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "844:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "829:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "829:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 40,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "875:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "861:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "861:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 43,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "909:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "895:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "895:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "919:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 46,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "941:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "927:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "927:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "957:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "984:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "970:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 47,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "970:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "992:1:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1012:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "999:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 50,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "999:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1047:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1035:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1035:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1064:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1087:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1075:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1075:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61869a93",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawDest1",
            "nameLocation": "1137:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1122:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1153:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1214392",
            "id": 63,
            "mutability": "mutable",
            "name": "withdrawDest2",
            "nameLocation": "1225:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1210:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 61,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1210:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1241:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c795047",
            "id": 66,
            "mutability": "mutable",
            "name": "withdrawDest3",
            "nameLocation": "1317:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1302:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1302:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831393533626331664637366635653631634437373541343438326264383542416335366144314562",
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1333:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2fab8b9",
            "id": 69,
            "mutability": "mutable",
            "name": "withdrawDest4",
            "nameLocation": "1409:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1394:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1394:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 68,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1425:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db993f56",
            "id": 72,
            "mutability": "mutable",
            "name": "withdrawDest5",
            "nameLocation": "1501:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1486:73:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 70,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1486:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1517:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 74,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1808:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1793:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1793:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 78,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1884:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1852:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1860:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1852:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 76,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1871:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 80,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1958:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "1943:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1943:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 82,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "2019:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "2004:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 81,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2004:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 84,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "2083:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "2068:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2068:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 87,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "2128:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 967,
            "src": "2113:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2113:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3130",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2140:10:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.10"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "2425:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "2435:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2453:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2435:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:34:16"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "2479:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2496:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2479:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:32:16"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2521:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 117,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2539:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2521:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:34:16"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2565:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 121,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2580:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2565:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2565:28:16"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "2603:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2613:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2603:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 128,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2631:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2071_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2097,
                      "src": "2631:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2071_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:27:16"
                }
              ]
            },
            "id": 134,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 104,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89,
                    "src": "2409:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 105,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91,
                    "src": "2416:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 103,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2035,
                  "src": "2402:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2402:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2194:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2180:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2223:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2209:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2254:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2240:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2280:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2272:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2314:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2306:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2347:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2339:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2379:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "2373:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2373:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:229:16"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:16"
            },
            "scope": 967,
            "src": "2159:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2741:140:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 144,
                            "name": "_proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2778:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 145,
                            "name": "_root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2786:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 149,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2820:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2820:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 147,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2803:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2803:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2803:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 146,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2793:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2793:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 142,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2227,
                            "src": "2759:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$2227_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2163,
                          "src": "2759:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2759:74:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2835:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2751:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:112:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:112:16"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "2873:1:16"
                }
              ]
            },
            "id": 159,
            "name": "isValidMerkleProof",
            "nameLocation": "2680:18:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "2718:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2699:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2699:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "2699:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "2734:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2726:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2698:42:16"
            },
            "src": "2671:210:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2954:103:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 166,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "2972:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 167,
                            "name": "_numberOfTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2981:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2972:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3000:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3000:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2972:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3011:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2964:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:75:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:75:16"
                },
                {
                  "id": 175,
                  "nodeType": "PlaceholderStatement",
                  "src": "3049:1:16"
                }
              ]
            },
            "id": 177,
            "name": "isCorrectPayment",
            "nameLocation": "2896:16:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2921:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2913:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "2937:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2929:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2912:41:16"
            },
            "src": "2887:170:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "3087:95:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 180,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "3105:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "3105:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 182,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3118:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3118:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3105:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063616c6c657220697320616e6f7468657220636f6e74726163742e",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3130:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_198257e8c33fabcd47ec4081ddcdad7319be62c40dd4bd8427944b514edb889a",
                          "typeString": "literal_string \"The caller is another contract.\""
                        },
                        "value": "The caller is another contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_198257e8c33fabcd47ec4081ddcdad7319be62c40dd4bd8427944b514edb889a",
                          "typeString": "literal_string \"The caller is another contract.\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3097:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3097:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3097:67:16"
                },
                {
                  "id": 188,
                  "nodeType": "PlaceholderStatement",
                  "src": "3174:1:16"
                }
              ]
            },
            "id": 190,
            "name": "callerIsUser",
            "nameLocation": "3072:12:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:2:16"
            },
            "src": "3063:119:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "3287:398:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 200,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "3305:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3305:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506173742061697264726f702070686173652e",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea9aeaaff9015eb85a5d1563285c09b308837f873c8a807d4ea27bbfbd6c1cd8",
                          "typeString": "literal_string \"Past airdrop phase.\""
                        },
                        "value": "Past airdrop phase."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea9aeaaff9015eb85a5d1563285c09b308837f873c8a807d4ea27bbfbd6c1cd8",
                          "typeString": "literal_string \"Past airdrop phase.\""
                        }
                      ],
                      "id": 199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3297:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:41:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 207,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "3356:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3370:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3356:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3373:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        },
                        "value": "Airdrop amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8",
                          "typeString": "literal_string \"Airdrop amount must be greater than 0\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3348:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 214,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "3431:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3431:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 216,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "3447:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3431:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 218,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "3462:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3431:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3479:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3423:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:100:16"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "3576:103:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 234,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "3596:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 235,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "3601:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2083,
                                "src": "3601:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2071_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3601:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 233,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "3590:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3590:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "3590:37:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 240,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "3641:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2097,
                            "src": "3641:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2071_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3641:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "3641:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "3553:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 228,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "3558:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3553:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "initializationExpression": {
                    "assignments": [
                      224
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3546:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "3538:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3538:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 226,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3550:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3538:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3571:3:16",
                      "subExpression": {
                        "id": 230,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3571:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 232,
                    "nodeType": "ExpressionStatement",
                    "src": "3571:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "3533:146:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 197,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 196,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "3277:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3277:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "3223:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "3244:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3238:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3265:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3257:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3257:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3237:32:16"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3287:0:16"
            },
            "scope": 967,
            "src": "3214:471:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "3991:382:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 269,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "4009:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4018:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4009:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e74696e67206e6f7420696e697469617465642e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4021:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a6df76625c31eaf4b0c0658ee94c4be1d0714ec40d8b0b8237b8032136ad3c8",
                          "typeString": "literal_string \"Whitelist minting not initiated.\""
                        },
                        "value": "Whitelist minting not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a6df76625c31eaf4b0c0658ee94c4be1d0714ec40d8b0b8237b8032136ad3c8",
                          "typeString": "literal_string \"Whitelist minting not initiated.\""
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4001:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:55:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:55:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 276,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "4074:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 279,
                          "indexExpression": {
                            "expression": {
                              "id": 277,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4082:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4082:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4074:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4097:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4074:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4104:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4066:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4066:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 286,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "4157:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4157:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4173:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4157:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 290,
                          "name": "whitelistSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "4178:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4157:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c206578636565642077686974656c69737420737570706c792e",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4195:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        },
                        "value": "Mint amount will exceed whitelist supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3afd34fe5efe55c777b3e3cfa0cd2800c93f977cd59bbfbfdde92bb2660276f",
                          "typeString": "literal_string \"Mint amount will exceed whitelist supply.\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4149:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:90:16"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 295,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "4249:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 298,
                      "indexExpression": {
                        "expression": {
                          "id": 296,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4257:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4257:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4249:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4271:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4249:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 303,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4291:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4291:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 305,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4303:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2071_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2083,
                          "src": "4303:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2071_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4303:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 302,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1785,
                      "src": "4285:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4285:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "4285:44:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 310,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4339:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2071_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2097,
                      "src": "4339:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2071_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 254,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "3854:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  },
                  {
                    "id": 255,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "3868:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "isValidMerkleProof",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 159,
                  "src": "3835:18:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3835:44:16"
              },
              {
                "arguments": [
                  {
                    "id": 258,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87,
                    "src": "3906:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3917:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 257,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "3889:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3889:30:16"
              },
              {
                "id": 262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 261,
                  "name": "callerIsUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "3929:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3929:12:16"
              },
              {
                "id": 264,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 263,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1203,
                  "src": "3950:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3950:12:16"
              },
              {
                "id": 266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 265,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "3972:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3972:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3732:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "3774:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "3755:31:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 249,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3755:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 250,
                    "nodeType": "ArrayTypeName",
                    "src": "3755:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3745:47:16"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:0:16"
            },
            "scope": 967,
            "src": "3723:650:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "4499:380:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 324,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "4517:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4526:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "4517:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d2073616c65206e6f7420696e697469617465642e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4529:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a9da6ef027a86290b07c6f7a39a1d36c6ec85eb1e3f804f92eeb9cb0747bff9",
                          "typeString": "literal_string \"Team sale not initiated.\""
                        },
                        "value": "Team sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a9da6ef027a86290b07c6f7a39a1d36c6ec85eb1e3f804f92eeb9cb0747bff9",
                          "typeString": "literal_string \"Team sale not initiated.\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4509:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4509:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 331,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "4574:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 332,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "4588:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4574:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 334,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "4605:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4574:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2d73616c6520737570706c79",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4621:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        },
                        "value": "Transaction exceeds total team-sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d44df76f41b3faf37faf1567c4c93791c50f008c20b1c2d041c3918d23b89ac",
                          "typeString": "literal_string \"Transaction exceeds total team-sale supply\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4566:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:100:16"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 339,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "4682:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 340,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "4699:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4682:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4682:28:16"
                },
                {
                  "body": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "4763:110:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 354,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4783:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4783:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 356,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "4795:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 357,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2083,
                                "src": "4795:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2071_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4795:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 353,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "4777:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4777:44:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "4777:44:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 361,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "4835:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2097,
                            "src": "4835:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2071_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4835:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "4835:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 347,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "4740:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 348,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "4745:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4740:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 367,
                  "initializationExpression": {
                    "assignments": [
                      344
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4733:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "4725:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4725:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 346,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4737:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4725:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4758:3:16",
                      "subExpression": {
                        "id": 350,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4758:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 352,
                    "nodeType": "ExpressionStatement",
                    "src": "4758:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4720:153:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 320,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "4484:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4484:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "4415:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4439:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "4433:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4433:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4423:33:16"
            },
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4499:0:16"
            },
            "scope": 967,
            "src": "4406:473:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "5123:504:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 385,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "5141:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5150:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "5141:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74206e6f7420696e69746961697465642e",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5153:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaddfbe00c3303d8dbd1c0586a7dd64593b4d340a7dba01e5c873a6dbc89a961",
                          "typeString": "literal_string \"Public mint not initiaited.\""
                        },
                        "value": "Public mint not initiaited."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aaddfbe00c3303d8dbd1c0586a7dd64593b4d340a7dba01e5c873a6dbc89a961",
                          "typeString": "literal_string \"Public mint not initiaited.\""
                        }
                      ],
                      "id": 384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5133:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5133:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5133:50:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 392,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "5201:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5201:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 394,
                            "name": "_mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "5218:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5201:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 396,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "5233:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5201:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c79",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5250:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        },
                        "value": "Transaction exceeds total sale supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee391234677627ac87988440f630eae84ae81bf0bfe8f40563064b548197bf44",
                          "typeString": "literal_string \"Transaction exceeds total sale supply\""
                        }
                      ],
                      "id": 391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5193:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5193:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "5193:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 402,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "5308:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5322:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5308:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e20302e",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        },
                        "value": "Mint amount must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650a0258eeca4223877934acb05d778aae5cba06499b23fdc545473467cf5b15",
                          "typeString": "literal_string \"Mint amount must be greater than 0.\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5300:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5300:63:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "5300:63:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 409,
                          "name": "_mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "5381:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 410,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "5396:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "5381:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5410:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5373:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5373:82:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:82:16"
                },
                {
                  "body": {
                    "id": 438,
                    "nodeType": "Block",
                    "src": "5511:110:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 426,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5531:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5531:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 428,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "5543:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2083,
                                "src": "5543:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2071_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5543:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "5525:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5525:44:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "5525:44:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 433,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "5583:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2071_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2097,
                            "src": "5583:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2071_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5583:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "5583:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 419,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "5488:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 420,
                      "name": "_mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "5493:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "5488:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 439,
                  "initializationExpression": {
                    "assignments": [
                      416
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5481:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "5473:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5473:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 418,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5485:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5473:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5506:3:16",
                      "subExpression": {
                        "id": 422,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "5506:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 424,
                    "nodeType": "ExpressionStatement",
                    "src": "5506:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "5468:153:16"
                }
              ]
            },
            "functionSelector": "858e83b5",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 374,
                    "name": "salePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87,
                    "src": "5027:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 375,
                    "name": "_mintAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "5038:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 373,
                  "name": "isCorrectPayment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "5010:16:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5010:40:16"
              },
              {
                "id": 378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 377,
                  "name": "callerIsUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "5060:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5060:12:16"
              },
              {
                "id": 380,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 379,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1203,
                  "src": "5081:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5081:12:16"
              },
              {
                "id": 382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 381,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "5103:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5103:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4924:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "4950:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "4944:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4944:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4934:33:16"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5123:0:16"
            },
            "scope": 967,
            "src": "4915:712:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5689:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 446,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "5699:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "5699:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 444,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 443,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "5679:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5679:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "5664:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5669:2:16"
            },
            "returnParameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5689:0:16"
            },
            "scope": 967,
            "src": "5655:59:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 458,
              "nodeType": "Block",
              "src": "5756:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 455,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "5766:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "5766:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 459,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 452,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "5746:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5746:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "5729:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5736:2:16"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5756:0:16"
            },
            "scope": 967,
            "src": "5720:63:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "5893:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 466,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "5903:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 468,
                      "indexExpression": {
                        "id": 467,
                        "name": "_wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "5911:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5903:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5925:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5903:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:26:16"
                }
              ]
            },
            "functionSelector": "bbc903ea",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 464,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 463,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "5884:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5884:9:16"
              }
            ],
            "name": "overrideClaim",
            "nameLocation": "5843:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "_wlAddress",
                  "nameLocation": "5865:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "5857:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5856:20:16"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:16"
            },
            "scope": 967,
            "src": "5834:102:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "6003:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 480,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "6013:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 481,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "6026:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6013:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "6013:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 477,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "5993:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5993:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5951:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5973:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "5965:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5965:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5964:21:16"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6003:0:16"
            },
            "scope": 967,
            "src": "5942:102:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "6114:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6132:15:16",
                        "subExpression": {
                          "id": 493,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6133:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6149:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6124:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6124:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "6124:46:16"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 498,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6180:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "6190:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6180:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "6104:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6104:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "6059:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "6084:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "6070:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:27:16"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6114:0:16"
            },
            "scope": 967,
            "src": "6050:158:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "6261:173:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 511,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6285:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6279:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 509,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6279:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6279:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6279:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6303:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6279:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "626173655552492063616e6e6f7420626520656d707479",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6306:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        },
                        "value": "baseURI cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ec79eca5e21817a169f126861a454a94503229f851339b20cebce4b304152",
                          "typeString": "literal_string \"baseURI cannot be empty\""
                        }
                      ],
                      "id": 508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6271:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6271:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "6271:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6350:15:16",
                        "subExpression": {
                          "id": 520,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "6351:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6367:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6342:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6342:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "6342:54:16"
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6406:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6423:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6406:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6406:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "6251:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6251:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "6228:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6241:2:16"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6261:0:16"
            },
            "scope": 967,
            "src": "6219:215:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "6478:290:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 536,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6496:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6520:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "6496:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6526:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6488:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6488:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6488:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 543,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "6603:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 545,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6614:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6603:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6620:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6603:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652077686974656c697374206d696e74696e672063616e20626567696e",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6623:61:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        },
                        "value": "Merkle root must be set beefore whitelist minting can begin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_909e0169729854836c269c7708fcd81ef092fb6657a424b2c7058c8f600f0cd2",
                          "typeString": "literal_string \"Merkle root must be set beefore whitelist minting can begin\""
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6595:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6595:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "6595:90:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 552,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "6703:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6711:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6703:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20737461676573206166746572207075626c69632073616c65",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6714:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        },
                        "value": "No stages after public sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_440747b5d84006228b6c8ea263b27acd07d89c2dbb9a0101b597b5c356478e3d",
                          "typeString": "literal_string \"No stages after public sale\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6695:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6695:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "6695:49:16"
                },
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6754:7:16",
                    "subExpression": {
                      "id": 558,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "6754:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:7:16"
                }
              ]
            },
            "functionSelector": "ee3743ab",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "6468:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6468:9:16"
              }
            ],
            "name": "nextStage",
            "nameLocation": "6449:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6458:2:16"
            },
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6478:0:16"
            },
            "scope": 967,
            "src": "6440:328:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "6846:52:16",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "6856:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 570,
                      "name": "_newTeamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "6873:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6856:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "6856:35:16"
                }
              ]
            },
            "functionSelector": "20841a6a",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 566,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "6836:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6836:9:16"
              }
            ],
            "name": "setTeamMintSupply",
            "nameLocation": "6783:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_newTeamMintSupply",
                  "nameLocation": "6809:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "6801:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6801:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6800:28:16"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6846:0:16"
            },
            "scope": 967,
            "src": "6774:124:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "6980:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 581,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "6990:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 582,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "7006:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6990:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "6990:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 578,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "6970:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6970:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "6913:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "6944:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "6930:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6930:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6929:33:16"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6980:0:16"
            },
            "scope": 967,
            "src": "6904:126:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "7104:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 593,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "7114:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 594,
                      "name": "_newSalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "7126:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7114:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "7114:25:16"
                }
              ]
            },
            "functionSelector": "791a2519",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 590,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "7094:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7094:9:16"
              }
            ],
            "name": "setPublicSalePrice",
            "nameLocation": "7045:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "_newSalePrice",
                  "nameLocation": "7072:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "7064:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7064:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7063:23:16"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7104:0:16"
            },
            "scope": 967,
            "src": "7036:110:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "7218:48:16",
              "statements": [
                {
                  "expression": {
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 605,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "7228:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 606,
                      "name": "_newmaxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "7243:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "7228:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "7228:31:16"
                }
              ]
            },
            "functionSelector": "622e4e78",
            "id": 610,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 603,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 602,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "7208:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7208:9:16"
              }
            ],
            "name": "setMaxMintPerTx",
            "nameLocation": "7161:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "_newmaxMintPerTx",
                  "nameLocation": "7183:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "7177:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:24:16"
            },
            "returnParameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7218:0:16"
            },
            "scope": 967,
            "src": "7152:114:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "7347:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 620,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 612,
                                "src": "7371:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7365:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 618,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7365:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7365:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7365:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7397:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7365:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7400:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7357:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7460:21:16",
                        "subExpression": {
                          "id": 629,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7461:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7483:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7452:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7452:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "7452:60:16"
                },
                {
                  "expression": {
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 634,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "7522:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 635,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "7539:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7522:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "7522:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 615,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 614,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "7337:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7337:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "7281:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "7313:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7299:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7299:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7298:31:16"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7347:0:16"
            },
            "scope": 967,
            "src": "7272:289:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "7616:209:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 647,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "7640:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7634:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 645,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7634:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7634:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7634:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7665:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7634:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7668:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        },
                        "value": "Provenance hash cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9524e1e8984d8e3b97c3eace024f9e25c01a47beb1e3e0bf0e8dbd2a4657027d",
                          "typeString": "literal_string \"Provenance hash cannot be empty.\""
                        }
                      ],
                      "id": 644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7626:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7626:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "7626:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7721:21:16",
                        "subExpression": {
                          "id": 656,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7722:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7744:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7713:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7713:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "7713:68:16"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 661,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7791:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7814:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7791:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "7791:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 641,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "7606:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7606:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "7576:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7596:2:16"
            },
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7616:0:16"
            },
            "scope": 967,
            "src": "7567:258:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "7956:167:16",
              "statements": [
                {
                  "expression": {
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 681,
                      "name": "withdrawDest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7966:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 682,
                      "name": "_dest1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "7982:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7966:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "7966:22:16"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 685,
                      "name": "withdrawDest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7998:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 686,
                      "name": "_dest2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "8014:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7998:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "7998:22:16"
                },
                {
                  "expression": {
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 689,
                      "name": "withdrawDest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "8030:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 690,
                      "name": "_dest3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "8046:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8030:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "8030:22:16"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 693,
                      "name": "withdrawDest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "8062:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 694,
                      "name": "_dest4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "8078:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8062:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "8062:22:16"
                },
                {
                  "expression": {
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 697,
                      "name": "withdrawDest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "8094:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 698,
                      "name": "_dest5",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "8110:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8094:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "8094:22:16"
                }
              ]
            },
            "functionSelector": "ea74e190",
            "id": 702,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 678,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "7946:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7946:9:16"
              }
            ],
            "name": "setWithdrawAddress",
            "nameLocation": "7840:18:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_dest1",
                  "nameLocation": "7867:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "7859:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_dest2",
                  "nameLocation": "7883:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "7875:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7875:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "_dest3",
                  "nameLocation": "7899:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "7891:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7891:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "_dest4",
                  "nameLocation": "7915:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "7907:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7907:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_dest5",
                  "nameLocation": "7931:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "7923:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7923:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7858:80:16"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7956:0:16"
            },
            "scope": 967,
            "src": "7831:292:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "8174:794:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 710,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8200:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$967",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$967",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8192:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 708,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8192:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8192:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8192:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8216:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8192:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8219:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8184:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8184:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "8184:60:16"
                },
                {
                  "assignments": [
                    719,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 719,
                      "mutability": "mutable",
                      "name": "ms",
                      "nameLocation": "8260:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 847,
                      "src": "8255:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 718,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8255:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 739,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8345:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 722,
                              "name": "withdrawDest1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "8276:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8268:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 720,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8268:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8268:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8268:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8338:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "373030",
                                  "id": 731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8329:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  },
                                  "value": "700"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_700_by_1",
                                    "typeString": "int_const 700"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 727,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8311:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8303:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 725,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8303:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8303:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8303:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2433,
                                "src": "8303:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8303:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2448,
                            "src": "8303:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8303:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8268:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8268:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8254:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 741,
                        "name": "ms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "8366:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2031206661696c6564",
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8370:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        },
                        "value": "withdrawl 1 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40bed3a82e20750be427bdbbe5b4987aac4170f04c36c28554ff005c5fe0a4ac",
                          "typeString": "literal_string \"withdrawl 1 failed\""
                        }
                      ],
                      "id": 740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8358:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8358:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "8358:33:16"
                },
                {
                  "assignments": [
                    746,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "mutability": "mutable",
                      "name": "ns",
                      "nameLocation": "8407:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 847,
                      "src": "8402:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 745,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8402:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 766,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8492:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 749,
                              "name": "withdrawDest2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "8423:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8415:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8415:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8415:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8415:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8485:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8476:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 754,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8458:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 753,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8450:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 752,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8450:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8450:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8450:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2433,
                                "src": "8450:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8450:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2448,
                            "src": "8450:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8450:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8415:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8415:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8401:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 768,
                        "name": "ns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "8514:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2032206661696c6564",
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8518:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        },
                        "value": "withdrawl 2 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e194b17f078bb505dad69cad1964258542395096dece48eb0dcbbc881b977fe",
                          "typeString": "literal_string \"withdrawl 2 failed\""
                        }
                      ],
                      "id": 767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8506:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8506:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 771,
                  "nodeType": "ExpressionStatement",
                  "src": "8506:33:16"
                },
                {
                  "assignments": [
                    773,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "8555:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 847,
                      "src": "8550:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8550:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 793,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8640:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 776,
                              "name": "withdrawDest3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "8571:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8563:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8563:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8563:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8563:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8633:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313035",
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8624:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  },
                                  "value": "105"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_105_by_1",
                                    "typeString": "int_const 105"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 781,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8606:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8598:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 779,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8598:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8598:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8598:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2433,
                                "src": "8598:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8598:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2448,
                            "src": "8598:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8598:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8563:76:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8549:94:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 795,
                        "name": "cr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "8662:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2033206661696c6564",
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8666:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        },
                        "value": "withdrawl 3 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8ceb8d7fd3c63ed2f506f761c8c4afc9d9a8520cae04cbf5469969727cf0d63",
                          "typeString": "literal_string \"withdrawl 3 failed\""
                        }
                      ],
                      "id": 794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8654:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8654:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "8654:33:16"
                },
                {
                  "assignments": [
                    800,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "sn",
                      "nameLocation": "8703:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 847,
                      "src": "8698:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8698:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 820,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8787:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 803,
                              "name": "withdrawDest4",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "8719:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8711:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 801,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8711:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8711:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8711:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8780:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "3435",
                                  "id": 812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8772:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  },
                                  "value": "45"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_45_by_1",
                                    "typeString": "int_const 45"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 808,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8754:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CryptidToken_$967",
                                          "typeString": "contract CryptidToken"
                                        }
                                      ],
                                      "id": 807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8746:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 806,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8746:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8746:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "8746:21:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2433,
                                "src": "8746:25:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8746:29:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2448,
                            "src": "8746:33:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8746:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8711:75:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8711:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8697:93:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 822,
                        "name": "sn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "8808:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2034206661696c6564",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8812:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        },
                        "value": "withdrawl 4 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c3908beeb79d732b652799f4fe47543b852e3766e17b7cc9f21fc6644e154c",
                          "typeString": "literal_string \"withdrawl 4 failed\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8800:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8800:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "8800:33:16"
                },
                {
                  "assignments": [
                    827,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "gr",
                      "nameLocation": "8849:2:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 847,
                      "src": "8844:7:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8844:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 841,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8915:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 830,
                              "name": "withdrawDest5",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "8865:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8857:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 828,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8857:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8857:22:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8857:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 835,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8900:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$967",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$967",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8892:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 833,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8892:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8892:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "8892:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8857:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8857:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8843:75:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 843,
                        "name": "gr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "8936:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261776c2035206661696c6564",
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8940:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        },
                        "value": "withdrawl 5 failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_265ccbd8106eaeffd94268e179ab94f947d90a0c6b60fcfe0b53d21c096b6328",
                          "typeString": "literal_string \"withdrawl 5 failed\""
                        }
                      ],
                      "id": 842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8928:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:33:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 846,
                  "nodeType": "ExpressionStatement",
                  "src": "8928:33:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 848,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 705,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 704,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1014,
                  "src": "8164:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8164:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "8138:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8146:2:16"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8174:0:16"
            },
            "scope": 967,
            "src": "8129:839:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "9059:108:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 854,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "9077:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9077:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9093:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9077:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9096:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9069:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9069:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "9069:52:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 862,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "9146:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9146:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 861,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "9138:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9138:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 852,
                  "id": 865,
                  "nodeType": "Return",
                  "src": "9131:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "9012:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9027:2:16"
            },
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "9051:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9051:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9050:9:16"
            },
            "scope": 967,
            "src": "9003:164:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "9224:100:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 873,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "9242:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9242:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9258:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9242:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206372797074696420657869737473207965742e",
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9261:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        },
                        "value": "No cryptid exists yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9923172a5db93eabfd74f3f506cab5403f00165718cb0569613919e07ec1818e",
                          "typeString": "literal_string \"No cryptid exists yet.\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9234:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:52:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "9234:52:16"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 880,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "9303:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9303:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 882,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9302:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 871,
                  "id": 883,
                  "nodeType": "Return",
                  "src": "9296:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "9182:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9192:2:16"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "9216:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9216:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9215:9:16"
            },
            "scope": 967,
            "src": "9173:151:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "9383:53:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 890,
                          "name": "_tokenIdCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "9400:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$2071_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2083,
                        "src": "9400:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2071_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2071_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9400:25:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9428:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9400:29:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 889,
                  "id": 895,
                  "nodeType": "Return",
                  "src": "9393:36:16"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9339:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9350:2:16"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9374:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9374:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9373:9:16"
            },
            "scope": 967,
            "src": "9330:106:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1412
            ],
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "9530:178:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 907,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "9556:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 906,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "9548:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9566:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 905,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9540:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9540:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "9540:76:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 916,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "9657:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 917,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "9666:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3104,
                              "src": "9666:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9666:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 920,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "9686:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 914,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9640:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9640:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9640:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9633:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 912,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9633:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9633:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 904,
                  "id": 923,
                  "nodeType": "Return",
                  "src": "9626:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9451:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9497:8:16"
            },
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9468:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9460:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9459:17:16"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "9515:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9515:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9514:15:16"
            },
            "scope": 967,
            "src": "9442:266:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "9769:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 930,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "9786:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 931,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "9804:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9804:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9786:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 929,
                  "id": 934,
                  "nodeType": "Return",
                  "src": "9779:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "9723:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9736:2:16"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "9760:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9760:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9759:9:16"
            },
            "scope": 967,
            "src": "9714:110:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "9882:29:16",
              "statements": [
                {
                  "expression": {
                    "id": 941,
                    "name": "stage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "9899:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 940,
                  "id": 942,
                  "nodeType": "Return",
                  "src": "9892:12:16"
                }
              ]
            },
            "functionSelector": "fcaa7664",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStage",
            "nameLocation": "9843:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9851:2:16"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "9875:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9875:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9874:7:16"
            },
            "scope": 967,
            "src": "9834:77:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2034
            ],
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "10030:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "10067:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 961,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "10073:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 962,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "10077:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 957,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10040:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$967_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2034,
                      "src": "10040:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10040:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "10040:45:16"
                }
              ]
            },
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 953,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 952,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "9999:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "9999:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "9926:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 955,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 954,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2035,
                  "src": "10022:6:16"
                }
              ],
              "src": "10013:16:16"
            },
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9955:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "9947:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9947:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9969:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "9961:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9961:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9981:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "9973:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9973:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9946:43:16"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10030:0:16"
            },
            "scope": 967,
            "src": "9917:175:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 968,
        "src": "546:9549:16",
        "usedErrors": []
      }
    ],
    "src": "32:10063:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600b916200021d565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600c916200021d565b50600d805461ff01600160c01b031916771953bc1ff76f5e61cd775a4482bd85bac56ad1eb00000000179055600e80547312b58f5331a6dc897932aa7fb5101667acdf03e26001600160a01b03199182168117909255600f8054731953bc1ff76f5e61cd775a4482bd85bac56ad1eb9083161790556010805482168317905560118054909116909117905567016345785d8a0000601755348015620000ee57600080fd5b5060405162003e6238038062003e62833981016040819052620001119162000390565b8651879087906200012a9060009060208501906200021d565b508051620001409060019060208401906200021d565b50506006805460ff19169055506200015833620001ba565b6001600755601284905560148390556016829055600d805461ff00191661010060ff84160217905584516200019590600b9060208801906200021d565b50620001ad60086200021460201b620026c11760201c565b5050505050505062000497565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b8280546200022b906200045a565b90600052602060002090601f0160209004810192826200024f57600085556200029a565b82601f106200026a57805160ff19168380011785556200029a565b828001600101855582156200029a579182015b828111156200029a5782518255916020019190600101906200027d565b50620002a8929150620002ac565b5090565b5b80821115620002a85760008155600101620002ad565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002eb57600080fd5b81516001600160401b0380821115620003085762000308620002c3565b604051601f8301601f19908116603f01168101908282118183101715620003335762000333620002c3565b816040528381526020925086838588010111156200035057600080fd5b600091505b8382101562000374578582018301518183018401529082019062000355565b83821115620003865760008385830101525b9695505050505050565b600080600080600080600060e0888a031215620003ac57600080fd5b87516001600160401b0380821115620003c457600080fd5b620003d28b838c01620002d9565b985060208a0151915080821115620003e957600080fd5b620003f78b838c01620002d9565b975060408a01519150808211156200040e57600080fd5b506200041d8a828b01620002d9565b955050606088015193506080880151925060a0880151915060c088015160ff811681146200044a57600080fd5b8091505092959891949750929550565b600181811c908216806200046f57607f821691505b602082108114156200049157634e487b7160e01b600052602260045260246000fd5b50919050565b6139bb80620004a76000396000f3fe6080604052600436106103975760003560e01c806381c162f2116101dc578063c87b56dd11610102578063de7fcb1d116100a0578063ee3743ab1161006f578063ee3743ab14610a36578063f2fde38b14610a4b578063f51f96dd14610a6b578063fcaa766414610a8157600080fd5b8063de7fcb1d14610987578063e7bc8208146109b8578063e985e9c5146109cd578063ea74e19014610a1657600080fd5b8063d6d67a09116100dc578063d6d67a091461091d578063da3ef23f14610932578063db993f5614610952578063de5f98661461097257600080fd5b8063c87b56dd146108ad578063c884ef83146108cd578063d2fab8b9146108fd57600080fd5b8063b12143921161017a578063c29de63011610149578063c29de6301461084d578063c32145811461086d578063c668286214610883578063c6ab67a31461089857600080fd5b8063b1214392146107cd578063b3caad01146107ed578063b88d4fde1461080d578063bbc903ea1461082d57600080fd5b80638da5cb5b116101b65780638da5cb5b1461075457806395d89b41146107775780639a2a9c3d1461078c578063a22cb465146107ad57600080fd5b806381c162f2146107175780638456cb591461072c578063858e83b51461074157600080fd5b806342842e0e116102c15780636c0360eb1161025f578063782319781161022e57806378231978146106a1578063791a2519146106b75780637b671780146106d75780637cb64759146106f757600080fd5b80636c0360eb146106425780636cbb89851461065757806370a082311461066c578063715018a61461068c57600080fd5b80635c975abb1161029b5780635c975abb146105c257806361869a93146105da578063622e4e78146106025780636352211e1461062257600080fd5b806342842e0e1461056257806342966c681461058257806355f804b3146105a257600080fd5b806320841a6a11610339578063372f657c11610308578063372f657c146105125780633c795047146105255780633ccfd60b146105455780633f4ba83a1461054d57600080fd5b806320841a6a146104a657806323b872dd146104c65780632eb4a7ab146104e657806333e61413146104fc57600080fd5b8063088139a611610375578063088139a61461042b578063095ea7b31461044f578063109695231461047157806318160ddd1461049157600080fd5b806301ffc9a71461039c57806306fdde03146103d1578063081812fc146103f3575b600080fd5b3480156103a857600080fd5b506103bc6103b73660046131c5565b610a99565b60405190151581526020015b60405180910390f35b3480156103dd57600080fd5b506103e6610aeb565b6040516103c8919061323a565b3480156103ff57600080fd5b5061041361040e36600461324d565b610b7d565b6040516001600160a01b0390911681526020016103c8565b34801561043757600080fd5b5061044160155481565b6040519081526020016103c8565b34801561045b57600080fd5b5061046f61046a366004613282565b610c17565b005b34801561047d57600080fd5b5061046f61048c366004613338565b610d2d565b34801561049d57600080fd5b50610441610e2f565b3480156104b257600080fd5b5061046f6104c136600461324d565b610e4b565b3480156104d257600080fd5b5061046f6104e1366004613381565b610e80565b3480156104f257600080fd5b5061044160095481565b34801561050857600080fd5b5061044160125481565b61046f6105203660046133bd565b610eb2565b34801561053157600080fd5b50600f54610413906001600160a01b031681565b61046f6111c9565b34801561055957600080fd5b5061046f61158c565b34801561056e57600080fd5b5061046f61057d366004613381565b6115c6565b34801561058e57600080fd5b5061046f61059d36600461324d565b6115e1565b3480156105ae57600080fd5b5061046f6105bd366004613338565b61165b565b3480156105ce57600080fd5b5060065460ff166103bc565b3480156105e657600080fd5b50600d546104139064010000000090046001600160a01b031681565b34801561060e57600080fd5b5061046f61061d366004613443565b6116ec565b34801561062e57600080fd5b5061041361063d36600461324d565b611738565b34801561064e57600080fd5b506103e66117af565b34801561066357600080fd5b5061041361183d565b34801561067857600080fd5b5061044161068736600461345e565b611899565b34801561069857600080fd5b5061046f611920565b3480156106ad57600080fd5b5061044160165481565b3480156106c357600080fd5b5061046f6106d236600461324d565b61195a565b3480156106e357600080fd5b5061046f6106f2366004613443565b61198f565b34801561070357600080fd5b5061046f61071236600461324d565b611add565b34801561072357600080fd5b5061046f611b12565b34801561073857600080fd5b5061046f611c1a565b61046f61074f366004613443565b611c52565b34801561076057600080fd5b5060065461010090046001600160a01b0316610413565b34801561078357600080fd5b506103e6611f56565b34801561079857600080fd5b50600d546103bc906301000000900460ff1681565b3480156107b957600080fd5b5061046f6107c8366004613479565b611f65565b3480156107d957600080fd5b50600e54610413906001600160a01b031681565b3480156107f957600080fd5b5061046f6108083660046134b5565b611f70565b34801561081957600080fd5b5061046f6108283660046134e8565b6120bf565b34801561083957600080fd5b5061046f61084836600461345e565b6120f7565b34801561085957600080fd5b50600d546103bc9062010000900460ff1681565b34801561087957600080fd5b5061044160145481565b34801561088f57600080fd5b506103e661214b565b3480156108a457600080fd5b506103e6612158565b3480156108b957600080fd5b506103e66108c836600461324d565b612165565b3480156108d957600080fd5b506103bc6108e836600461345e565b60136020526000908152604090205460ff1681565b34801561090957600080fd5b50601054610413906001600160a01b031681565b34801561092957600080fd5b50610441612219565b34801561093e57600080fd5b5061046f61094d366004613338565b612272565b34801561095e57600080fd5b50601154610413906001600160a01b031681565b34801561097e57600080fd5b506104416122b5565b34801561099357600080fd5b50600d546109a690610100900460ff1681565b60405160ff90911681526020016103c8565b3480156109c457600080fd5b5061046f6122cc565b3480156109d957600080fd5b506103bc6109e8366004613564565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a2257600080fd5b5061046f610a31366004613580565b6123c6565b348015610a4257600080fd5b5061046f612465565b348015610a5757600080fd5b5061046f610a6636600461345e565b612623565b348015610a7757600080fd5b5061044160175481565b348015610a8d57600080fd5b50600d5460ff166109a6565b60006001600160e01b031982166380ac58cd60e01b1480610aca57506001600160e01b03198216635b5e139f60e01b145b80610ae557506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610afa906135e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b26906135e5565b8015610b735780601f10610b4857610100808354040283529160200191610b73565b820191906000526020600020905b815481529060010190602001808311610b5657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610bfb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c2282611738565b9050806001600160a01b0316836001600160a01b03161415610c905760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610bf2565b336001600160a01b0382161480610cac5750610cac81336109e8565b610d1e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610bf2565b610d2883836126ca565b505050565b6006546001600160a01b03610100909104163314610d5d5760405162461bcd60e51b8152600401610bf290613620565b6000815111610dbe5760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610bf2565b600d546301000000900460ff1615610e185760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610bf2565b8051610e2b90600a906020840190613116565b5050565b60006001610e3c60085490565b610e46919061366b565b905090565b6006546001600160a01b03610100909104163314610e7b5760405162461bcd60e51b8152600401610bf290613620565b601455565b610e8b335b82612738565b610ea75760405162461bcd60e51b8152600401610bf290613682565b610d2883838361282f565b8181600954610f29838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b1660208201528592506034019050604051602081830303815290604052805190602001206129da565b610f755760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610bf2565b601754600134610f8582846136d3565b14610fce5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610bf2565b32331461101d5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610bf2565b600260075414156110705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bf2565b600260075560065460ff16156110985760405162461bcd60e51b8152600401610bf2906136f2565b600d5460ff166002146110ed5760405162461bcd60e51b815260206004820181905260248201527f57686974656c697374206d696e74696e67206e6f7420696e697469617465642e6044820152606401610bf2565b3360009081526013602052604090205460ff161561114d5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610bf2565b601254611158610e2f565b61116390600161371c565b11156111815760405162461bcd60e51b8152600401610bf290613734565b336000818152601360205260409020805460ff191660011790556111ad906111a860085490565b6129f0565b6111bb600880546001019055565b505060016007555050505050565b6006546001600160a01b036101009091041633146111f95760405162461bcd60e51b8152600401610bf290613620565b600047116112425760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610bf2565b600d5460009064010000000090046001600160a01b03166112716103e861126b476102bc612b3e565b90612b51565b604051600081818185875af1925050503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b50509050806112f85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610bf2565b600e546000906001600160a01b03166113186103e861126b476069612b3e565b604051600081818185875af1925050503d8060008114611354576040519150601f19603f3d011682016040523d82523d6000602084013e611359565b606091505b505090508061139f5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610bf2565b600f546000906001600160a01b03166113bf6103e861126b476069612b3e565b604051600081818185875af1925050503d80600081146113fb576040519150601f19603f3d011682016040523d82523d6000602084013e611400565b606091505b50509050806114465760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080cc819985a5b195960721b6044820152606401610bf2565b6010546000906001600160a01b03166114666103e861126b47602d612b3e565b604051600081818185875af1925050503d80600081146114a2576040519150601f19603f3d011682016040523d82523d6000602084013e6114a7565b606091505b50509050806114ed5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d0819985a5b195960721b6044820152606401610bf2565b6011546040516000916001600160a01b03169047908381818185875af1925050503d806000811461153a576040519150601f19603f3d011682016040523d82523d6000602084013e61153f565b606091505b50509050806115855760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d4819985a5b195960721b6044820152606401610bf2565b5050505050565b6006546001600160a01b036101009091041633146115bc5760405162461bcd60e51b8152600401610bf290613620565b6115c4612b5d565b565b610d28838383604051806020016040528060008152506120bf565b6115ea33610e85565b61164f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610bf2565b61165881612bf0565b50565b6006546001600160a01b0361010090910416331461168b5760405162461bcd60e51b8152600401610bf290613620565b600d5462010000900460ff16156116d95760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610bf2565b8051610e2b90600b906020840190613116565b6006546001600160a01b0361010090910416331461171c5760405162461bcd60e51b8152600401610bf290613620565b600d805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610ae55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610bf2565b600b80546117bc906135e5565b80601f01602080910402602001604051908101604052809291908181526020018280546117e8906135e5565b80156118355780601f1061180a57610100808354040283529160200191611835565b820191906000526020600020905b81548152906001019060200180831161181857829003601f168201915b505050505081565b600080611848610e2f565b1161188e5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bf2565b610e4661063d610e2f565b60006001600160a01b0382166119045760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610bf2565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146119505760405162461bcd60e51b8152600401610bf290613620565b6115c46000612c97565b6006546001600160a01b0361010090910416331461198a5760405162461bcd60e51b8152600401610bf290613620565b601755565b6006546001600160a01b036101009091041633146119bf5760405162461bcd60e51b8152600401610bf290613620565b600d5460ff16600314611a145760405162461bcd60e51b815260206004820152601860248201527f5465616d2073616c65206e6f7420696e697469617465642e00000000000000006044820152606401610bf2565b601454601554611a279060ff841661371c565b1115611a885760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610bf2565b8060ff1660156000828254611a9d919061371c565b90915550600190505b8160ff168111610e2b57611abd336111a860085490565b611acb600880546001019055565b80611ad58161377d565b915050611aa6565b6006546001600160a01b03610100909104163314611b0d5760405162461bcd60e51b8152600401610bf290613620565b600955565b6006546001600160a01b03610100909104163314611b425760405162461bcd60e51b8152600401610bf290613620565b6000600a8054611b51906135e5565b905011611ba05760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610bf2565b600d546301000000900460ff1615611c055760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610bf2565b600d805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611c4a5760405162461bcd60e51b8152600401610bf290613620565b6115c4612cf1565b60175460ff821634611c6482846136d3565b14611cad5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610bf2565b323314611cfc5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610bf2565b60026007541415611d4f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bf2565b600260075560065460ff1615611d775760405162461bcd60e51b8152600401610bf2906136f2565b600d5460ff16600414611dcc5760405162461bcd60e51b815260206004820152601b60248201527f5075626c6963206d696e74206e6f7420696e69746961697465642e00000000006044820152606401610bf2565b6016548360ff16611ddb610e2f565b611de5919061371c565b1115611e415760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610bf2565b60008360ff1611611ea05760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610bf2565b600d5460ff61010090910481169084161115611f115760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610bf2565b60015b8360ff168111611f4b57611f2b336111a860085490565b611f39600880546001019055565b80611f438161377d565b915050611f14565b505060016007555050565b606060018054610afa906135e5565b610e2b338383612d49565b6006546001600160a01b03610100909104163314611fa05760405162461bcd60e51b8152600401610bf290613620565b600d54600360ff90911610611fed5760405162461bcd60e51b81526020600482015260136024820152722830b9ba1030b4b9323937b810383430b9b29760691b6044820152606401610bf2565b60008260ff161161204e5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610bf2565b6012548260ff1661205d610e2f565b612067919061371c565b11156120855760405162461bcd60e51b8152600401610bf290613734565b60015b8260ff168111610d285761209f826111a860085490565b6120ad600880546001019055565b806120b78161377d565b915050612088565b6120c93383612738565b6120e55760405162461bcd60e51b8152600401610bf290613682565b6120f184848484612e18565b50505050565b6006546001600160a01b036101009091041633146121275760405162461bcd60e51b8152600401610bf290613620565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b600c80546117bc906135e5565b600a80546117bc906135e5565b6000818152600260205260409020546060906001600160a01b03166121e45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610bf2565b600b6121ef83612e4b565b600c60405160200161220393929190613832565b6040516020818303038152906040529050919050565b600080612224610e2f565b1161226a5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bf2565b610e46610e2f565b6006546001600160a01b036101009091041633146122a25760405162461bcd60e51b8152600401610bf290613620565b8051610e2b90600c906020840190613116565b60006122bf610e2f565b601654610e46919061366b565b6006546001600160a01b036101009091041633146122fc5760405162461bcd60e51b8152600401610bf290613620565b6000600b805461230b906135e5565b90501161235a5760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610bf2565b600d5462010000900460ff16156123b35760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610bf2565b600d805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146123f65760405162461bcd60e51b8152600401610bf290613620565b600d80546001600160a01b0396871664010000000002640100000000600160c01b0319909116179055600e80549486166001600160a01b0319958616179055600f8054938616938516939093179092556010805491851691841691909117905560118054919093169116179055565b6006546001600160a01b036101009091041633146124955760405162461bcd60e51b8152600401610bf290613620565b600d546301000000900460ff1615156001146125195760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610bf2565b60095460001a60f81b6001600160f81b03191661259e5760405162461bcd60e51b815260206004820152603b60248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527f77686974656c697374206d696e74696e672063616e20626567696e00000000006064820152608401610bf2565b600d54600460ff909116106125f55760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610bf2565b600d805460ff169060006126088361387b565b91906101000a81548160ff021916908360ff16021790555050565b6006546001600160a01b036101009091041633146126535760405162461bcd60e51b8152600401610bf290613620565b6001600160a01b0381166126b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610bf2565b61165881612c97565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906126ff82611738565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166127b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610bf2565b60006127bc83611738565b9050806001600160a01b0316846001600160a01b031614806127f75750836001600160a01b03166127ec84610b7d565b6001600160a01b0316145b8061282757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661284282611738565b6001600160a01b0316146128aa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610bf2565b6001600160a01b03821661290c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610bf2565b612917838383612f49565b6129226000826126ca565b6001600160a01b038316600090815260036020526040812080546001929061294b90849061366b565b90915550506001600160a01b038216600090815260036020526040812080546001929061297990849061371c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000826129e78584612f6c565b14949350505050565b6001600160a01b038216612a465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610bf2565b6000818152600260205260409020546001600160a01b031615612aab5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610bf2565b612ab760008383612f49565b6001600160a01b0382166000908152600360205260408120805460019290612ae090849061371c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000612b4a82846136d3565b9392505050565b6000612b4a82846138b1565b60065460ff16612ba65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610bf2565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612bfb82611738565b9050612c0981600084612f49565b612c146000836126ca565b6001600160a01b0381166000908152600360205260408120805460019290612c3d90849061366b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612d145760405162461bcd60e51b8152600401610bf2906136f2565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612bd33390565b816001600160a01b0316836001600160a01b03161415612dab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610bf2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612e2384848461282f565b612e2f84848484613018565b6120f15760405162461bcd60e51b8152600401610bf2906138c5565b606081612e6f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612e995780612e838161377d565b9150612e929050600a836138b1565b9150612e73565b60008167ffffffffffffffff811115612eb457612eb46132ac565b6040519080825280601f01601f191660200182016040528015612ede576020820181803683370190505b5090505b841561282757612ef360018361366b565b9150612f00600a86613917565b612f0b90603061371c565b60f81b818381518110612f2057612f20613865565b60200101906001600160f81b031916908160001a905350612f42600a866138b1565b9450612ee2565b60065460ff1615610d285760405162461bcd60e51b8152600401610bf2906136f2565b600081815b8451811015613010576000858281518110612f8e57612f8e613865565b60200260200101519050808311612fd0576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612ffd565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806130088161377d565b915050612f71565b509392505050565b60006001600160a01b0384163b1561310b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061305c90339089908890889060040161392b565b6020604051808303816000875af1925050508015613097575060408051601f3d908101601f1916820190925261309491810190613968565b60015b6130f1573d8080156130c5576040519150601f19603f3d011682016040523d82523d6000602084013e6130ca565b606091505b5080516130e95760405162461bcd60e51b8152600401610bf2906138c5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612827565b506001949350505050565b828054613122906135e5565b90600052602060002090601f016020900481019282613144576000855561318a565b82601f1061315d57805160ff191683800117855561318a565b8280016001018555821561318a579182015b8281111561318a57825182559160200191906001019061316f565b5061319692915061319a565b5090565b5b80821115613196576000815560010161319b565b6001600160e01b03198116811461165857600080fd5b6000602082840312156131d757600080fd5b8135612b4a816131af565b60005b838110156131fd5781810151838201526020016131e5565b838111156120f15750506000910152565b600081518084526132268160208601602086016131e2565b601f01601f19169290920160200192915050565b602081526000612b4a602083018461320e565b60006020828403121561325f57600080fd5b5035919050565b80356001600160a01b038116811461327d57600080fd5b919050565b6000806040838503121561329557600080fd5b61329e83613266565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156132dd576132dd6132ac565b604051601f8501601f19908116603f01168101908282118183101715613305576133056132ac565b8160405280935085815286868601111561331e57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561334a57600080fd5b813567ffffffffffffffff81111561336157600080fd5b8201601f8101841361337257600080fd5b612827848235602084016132c2565b60008060006060848603121561339657600080fd5b61339f84613266565b92506133ad60208501613266565b9150604084013590509250925092565b600080602083850312156133d057600080fd5b823567ffffffffffffffff808211156133e857600080fd5b818501915085601f8301126133fc57600080fd5b81358181111561340b57600080fd5b8660208260051b850101111561342057600080fd5b60209290920196919550909350505050565b803560ff8116811461327d57600080fd5b60006020828403121561345557600080fd5b612b4a82613432565b60006020828403121561347057600080fd5b612b4a82613266565b6000806040838503121561348c57600080fd5b61349583613266565b9150602083013580151581146134aa57600080fd5b809150509250929050565b600080604083850312156134c857600080fd5b6134d183613432565b91506134df60208401613266565b90509250929050565b600080600080608085870312156134fe57600080fd5b61350785613266565b935061351560208601613266565b925060408501359150606085013567ffffffffffffffff81111561353857600080fd5b8501601f8101871361354957600080fd5b613558878235602084016132c2565b91505092959194509250565b6000806040838503121561357757600080fd5b6134d183613266565b600080600080600060a0868803121561359857600080fd5b6135a186613266565b94506135af60208701613266565b93506135bd60408701613266565b92506135cb60608701613266565b91506135d960808701613266565b90509295509295909350565b600181811c908216806135f957607f821691505b6020821081141561361a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561367d5761367d613655565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008160001904831182151516156136ed576136ed613655565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000821982111561372f5761372f613655565b500190565b60208082526029908201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736040820152683a1039bab838363c9760b91b606082015260800190565b600060001982141561379157613791613655565b5060010190565b8054600090600181811c90808316806137b257607f831692505b60208084108214156137d457634e487b7160e01b600052602260045260246000fd5b8180156137e857600181146137f957613826565b60ff19861689528489019650613826565b60008881526020902060005b8681101561381e5781548b820152908501908301613805565b505084890196505b50505050505092915050565b600061383e8286613798565b845161384e8183602089016131e2565b61385a81830186613798565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561389257613892613655565b60010192915050565b634e487b7160e01b600052601260045260246000fd5b6000826138c0576138c061389b565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826139265761392661389b565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061395e9083018461320e565b9695505050505050565b60006020828403121561397a57600080fd5b8151612b4a816131af56fea2646970667358221220279bb24fa7f39e341f0cbf08b17ac026aa5e9f9f211ff8857ecb43deff2a587f64736f6c634300080a0033",
  "bytecodeSha1": "a688128939b78ef776c1214d7b0042d613ca4c91",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "193": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "Strings.toString": {
          "195": [
            601,
            611,
            false
          ]
        }
      },
      "12": {
        "MerkleProof.processProof": {
          "192": [
            1628,
            1656,
            false
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "170": [
            3305,
            3314,
            true
          ],
          "171": [
            3356,
            3371,
            true
          ],
          "172": [
            3431,
            3477,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "174": [
            6279,
            6304,
            true
          ],
          "175": [
            6350,
            6365,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "164": [
            7634,
            7666,
            true
          ],
          "165": [
            7721,
            7742,
            true
          ]
        },
        "CryptidToken.lastMintAddress": {
          "161": [
            9077,
            9094,
            true
          ]
        },
        "CryptidToken.lastMintID": {
          "173": [
            9242,
            9259,
            true
          ]
        },
        "CryptidToken.nextStage": {
          "176": [
            6496,
            6524,
            true
          ],
          "177": [
            6603,
            6621,
            true
          ],
          "178": [
            6703,
            6712,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "166": [
            5141,
            5151,
            true
          ],
          "167": [
            5201,
            5248,
            true
          ],
          "168": [
            5308,
            5323,
            true
          ],
          "169": [
            5381,
            5408,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "160": [
            6132,
            6147,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "148": [
            7365,
            7398,
            true
          ],
          "149": [
            7460,
            7481,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "162": [
            4517,
            4527,
            true
          ],
          "163": [
            4574,
            4619,
            true
          ]
        },
        "CryptidToken.whitelistMint": {
          "150": [
            2759,
            2833,
            true
          ],
          "151": [
            4009,
            4019,
            true
          ],
          "152": [
            4074,
            4102,
            true
          ],
          "153": [
            4157,
            4193,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "154": [
            8192,
            8217,
            true
          ],
          "155": [
            8366,
            8368,
            true
          ],
          "156": [
            8514,
            8516,
            true
          ],
          "157": [
            8662,
            8664,
            true
          ],
          "158": [
            8808,
            8810,
            true
          ],
          "159": [
            8936,
            8938,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.publicMint": {
          "194": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "188": [
            9142,
            9158,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "190": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "189": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "186": [
            10451,
            10482,
            true
          ],
          "187": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "179": [
            3659,
            3670,
            true
          ],
          "180": [
            3740,
            3761,
            true
          ],
          "181": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "184": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "183": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "185": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.transferFrom": {
          "182": [
            4900,
            4941,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Burnable.burn": {
          "191": [
            645,
            686,
            true
          ]
        }
      },
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "126": [
            2378,
            2395
          ],
          "127": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "47": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "96": [
            1998,
            2071
          ],
          "97": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "128": [
            1922,
            1936
          ],
          "129": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "119": [
            2168,
            2183
          ],
          "120": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "0": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Counters.current": {
          "18": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "28": [
            1032,
            1051
          ]
        }
      },
      "11": {
        "Strings.toString": {
          "135": [
            627,
            637
          ],
          "136": [
            743,
            751
          ],
          "137": [
            765,
            775
          ],
          "138": [
            877,
            888
          ],
          "139": [
            902,
            958
          ],
          "140": [
            972,
            983
          ]
        }
      },
      "12": {
        "MerkleProof.processProof": {
          "141": [
            1754,
            1824
          ],
          "142": [
            1941,
            2011
          ],
          "143": [
            1560,
            1563
          ],
          "144": [
            2045,
            2064
          ]
        },
        "MerkleProof.verify": {
          "110": [
            984,
            1024
          ]
        }
      },
      "13": {
        "ERC165.supportsInterface": {
          "5": [
            930,
            977
          ]
        }
      },
      "14": {},
      "15": {
        "SafeMath.div": {
          "118": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "117": [
            3528,
            3540
          ]
        }
      },
      "16": {
        "CryptidToken.airdropCryptid": {
          "69": [
            3297,
            3338
          ],
          "70": [
            3348,
            3413
          ],
          "71": [
            3423,
            3523
          ],
          "72": [
            3590,
            3627
          ],
          "73": [
            3641,
            3668
          ],
          "74": [
            3571,
            3574
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "84": [
            6271,
            6332
          ],
          "85": [
            6342,
            6396
          ],
          "86": [
            6406,
            6427
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "56": [
            7626,
            7703
          ],
          "57": [
            7713,
            7781
          ],
          "58": [
            7791,
            7818
          ]
        },
        "CryptidToken.getStage": {
          "3": [
            9892,
            9904
          ]
        },
        "CryptidToken.getTokensLeft": {
          "83": [
            9779,
            9817
          ]
        },
        "CryptidToken.lastMintAddress": {
          "43": [
            9069,
            9121
          ],
          "44": [
            9131,
            9160
          ]
        },
        "CryptidToken.lastMintID": {
          "80": [
            9234,
            9286
          ],
          "81": [
            9296,
            9317
          ]
        },
        "CryptidToken.nextStage": {
          "92": [
            6488,
            6585
          ],
          "93": [
            6595,
            6685
          ],
          "94": [
            6695,
            6744
          ],
          "95": [
            6754,
            6761
          ]
        },
        "CryptidToken.overrideClaim": {
          "77": [
            5903,
            5929
          ]
        },
        "CryptidToken.pause": {
          "59": [
            5699,
            5707
          ]
        },
        "CryptidToken.publicMint": {
          "60": [
            5133,
            5183
          ],
          "61": [
            5193,
            5290
          ],
          "62": [
            5300,
            5363
          ],
          "63": [
            5373,
            5455
          ],
          "64": [
            5525,
            5569
          ],
          "65": [
            5583,
            5610
          ],
          "66": [
            5506,
            5509
          ]
        },
        "CryptidToken.setBaseExtension": {
          "82": [
            6990,
            7023
          ]
        },
        "CryptidToken.setBaseURI": {
          "39": [
            6124,
            6170
          ],
          "40": [
            6180,
            6201
          ]
        },
        "CryptidToken.setMaxMintPerTx": {
          "41": [
            7228,
            7259
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "55": [
            6013,
            6037
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "14": [
            7357,
            7442
          ],
          "15": [
            7452,
            7512
          ],
          "16": [
            7522,
            7554
          ]
        },
        "CryptidToken.setPublicSalePrice": {
          "48": [
            7114,
            7139
          ]
        },
        "CryptidToken.setTeamMintSupply": {
          "19": [
            6856,
            6891
          ]
        },
        "CryptidToken.setWithdrawAddress": {
          "87": [
            7966,
            7988
          ],
          "88": [
            7998,
            8020
          ],
          "89": [
            8030,
            8052
          ],
          "90": [
            8062,
            8084
          ],
          "91": [
            8094,
            8116
          ]
        },
        "CryptidToken.teamMint": {
          "49": [
            4509,
            4556
          ],
          "50": [
            4566,
            4666
          ],
          "51": [
            4682,
            4710
          ],
          "52": [
            4777,
            4821
          ],
          "53": [
            4835,
            4862
          ],
          "54": [
            4758,
            4761
          ]
        },
        "CryptidToken.tokenURI": {
          "78": [
            9540,
            9616
          ],
          "79": [
            9626,
            9701
          ]
        },
        "CryptidToken.totalSupply": {
          "17": [
            9393,
            9429
          ]
        },
        "CryptidToken.unpause": {
          "35": [
            5766,
            5776
          ]
        },
        "CryptidToken.whitelistMint": {
          "22": [
            4001,
            4056
          ],
          "23": [
            4066,
            4138
          ],
          "24": [
            4149,
            4239
          ],
          "25": [
            4249,
            4275
          ],
          "26": [
            4285,
            4329
          ],
          "27": [
            4339,
            4366
          ]
        },
        "CryptidToken.withdraw": {
          "29": [
            8184,
            8244
          ],
          "30": [
            8358,
            8391
          ],
          "31": [
            8506,
            8539
          ],
          "32": [
            8654,
            8687
          ],
          "33": [
            8800,
            8833
          ],
          "34": [
            8928,
            8961
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "98": [
            11069,
            11098
          ],
          "99": [
            11108,
            11159
          ]
        },
        "ERC721._burn": {
          "121": [
            9761,
            9809
          ],
          "122": [
            9847,
            9876
          ],
          "123": [
            9887,
            9908
          ],
          "124": [
            9918,
            9941
          ],
          "125": [
            9952,
            9993
          ]
        },
        "ERC721._checkOnERC721Received": {
          "145": [
            12647,
            12707
          ],
          "146": [
            12481,
            12539
          ],
          "147": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "7": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "100": [
            7536,
            7609
          ],
          "101": [
            7668,
            7764
          ]
        },
        "ERC721._mint": {
          "111": [
            9134,
            9195
          ],
          "112": [
            9205,
            9263
          ],
          "113": [
            9274,
            9319
          ],
          "114": [
            9330,
            9348
          ],
          "115": [
            9358,
            9379
          ],
          "116": [
            9390,
            9428
          ]
        },
        "ERC721._safeTransfer": {
          "133": [
            6685,
            6713
          ],
          "134": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "130": [
            11434,
            11489
          ],
          "131": [
            11499,
            11545
          ],
          "132": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "102": [
            10443,
            10528
          ],
          "103": [
            10538,
            10603
          ],
          "104": [
            10614,
            10653
          ],
          "105": [
            10715,
            10744
          ],
          "106": [
            10755,
            10775
          ],
          "107": [
            10785,
            10803
          ],
          "108": [
            10813,
            10834
          ],
          "109": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "10": [
            3651,
            3708
          ],
          "12": [
            3719,
            3884
          ],
          "13": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "45": [
            2005,
            2079
          ],
          "46": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4079,
            4152
          ],
          "9": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "6": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "42": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "36": [
            5240,
            5279
          ],
          "75": [
            5513,
            5616
          ],
          "76": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "68": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "4": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "67": [
            2716,
            2730
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            4892,
            4995
          ],
          "21": [
            5006,
            5034
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Burnable.burn": {
          "37": [
            637,
            739
          ],
          "38": [
            749,
            763
          ]
        }
      },
      "7": {},
      "9": {
        "Context._msgSender": {
          "11": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC721Burnable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "6080604052600436106103975760003560e01c806381c162f2116101dc578063c87b56dd11610102578063de7fcb1d116100a0578063ee3743ab1161006f578063ee3743ab14610a36578063f2fde38b14610a4b578063f51f96dd14610a6b578063fcaa766414610a8157600080fd5b8063de7fcb1d14610987578063e7bc8208146109b8578063e985e9c5146109cd578063ea74e19014610a1657600080fd5b8063d6d67a09116100dc578063d6d67a091461091d578063da3ef23f14610932578063db993f5614610952578063de5f98661461097257600080fd5b8063c87b56dd146108ad578063c884ef83146108cd578063d2fab8b9146108fd57600080fd5b8063b12143921161017a578063c29de63011610149578063c29de6301461084d578063c32145811461086d578063c668286214610883578063c6ab67a31461089857600080fd5b8063b1214392146107cd578063b3caad01146107ed578063b88d4fde1461080d578063bbc903ea1461082d57600080fd5b80638da5cb5b116101b65780638da5cb5b1461075457806395d89b41146107775780639a2a9c3d1461078c578063a22cb465146107ad57600080fd5b806381c162f2146107175780638456cb591461072c578063858e83b51461074157600080fd5b806342842e0e116102c15780636c0360eb1161025f578063782319781161022e57806378231978146106a1578063791a2519146106b75780637b671780146106d75780637cb64759146106f757600080fd5b80636c0360eb146106425780636cbb89851461065757806370a082311461066c578063715018a61461068c57600080fd5b80635c975abb1161029b5780635c975abb146105c257806361869a93146105da578063622e4e78146106025780636352211e1461062257600080fd5b806342842e0e1461056257806342966c681461058257806355f804b3146105a257600080fd5b806320841a6a11610339578063372f657c11610308578063372f657c146105125780633c795047146105255780633ccfd60b146105455780633f4ba83a1461054d57600080fd5b806320841a6a146104a657806323b872dd146104c65780632eb4a7ab146104e657806333e61413146104fc57600080fd5b8063088139a611610375578063088139a61461042b578063095ea7b31461044f578063109695231461047157806318160ddd1461049157600080fd5b806301ffc9a71461039c57806306fdde03146103d1578063081812fc146103f3575b600080fd5b3480156103a857600080fd5b506103bc6103b73660046131c5565b610a99565b60405190151581526020015b60405180910390f35b3480156103dd57600080fd5b506103e6610aeb565b6040516103c8919061323a565b3480156103ff57600080fd5b5061041361040e36600461324d565b610b7d565b6040516001600160a01b0390911681526020016103c8565b34801561043757600080fd5b5061044160155481565b6040519081526020016103c8565b34801561045b57600080fd5b5061046f61046a366004613282565b610c17565b005b34801561047d57600080fd5b5061046f61048c366004613338565b610d2d565b34801561049d57600080fd5b50610441610e2f565b3480156104b257600080fd5b5061046f6104c136600461324d565b610e4b565b3480156104d257600080fd5b5061046f6104e1366004613381565b610e80565b3480156104f257600080fd5b5061044160095481565b34801561050857600080fd5b5061044160125481565b61046f6105203660046133bd565b610eb2565b34801561053157600080fd5b50600f54610413906001600160a01b031681565b61046f6111c9565b34801561055957600080fd5b5061046f61158c565b34801561056e57600080fd5b5061046f61057d366004613381565b6115c6565b34801561058e57600080fd5b5061046f61059d36600461324d565b6115e1565b3480156105ae57600080fd5b5061046f6105bd366004613338565b61165b565b3480156105ce57600080fd5b5060065460ff166103bc565b3480156105e657600080fd5b50600d546104139064010000000090046001600160a01b031681565b34801561060e57600080fd5b5061046f61061d366004613443565b6116ec565b34801561062e57600080fd5b5061041361063d36600461324d565b611738565b34801561064e57600080fd5b506103e66117af565b34801561066357600080fd5b5061041361183d565b34801561067857600080fd5b5061044161068736600461345e565b611899565b34801561069857600080fd5b5061046f611920565b3480156106ad57600080fd5b5061044160165481565b3480156106c357600080fd5b5061046f6106d236600461324d565b61195a565b3480156106e357600080fd5b5061046f6106f2366004613443565b61198f565b34801561070357600080fd5b5061046f61071236600461324d565b611add565b34801561072357600080fd5b5061046f611b12565b34801561073857600080fd5b5061046f611c1a565b61046f61074f366004613443565b611c52565b34801561076057600080fd5b5060065461010090046001600160a01b0316610413565b34801561078357600080fd5b506103e6611f56565b34801561079857600080fd5b50600d546103bc906301000000900460ff1681565b3480156107b957600080fd5b5061046f6107c8366004613479565b611f65565b3480156107d957600080fd5b50600e54610413906001600160a01b031681565b3480156107f957600080fd5b5061046f6108083660046134b5565b611f70565b34801561081957600080fd5b5061046f6108283660046134e8565b6120bf565b34801561083957600080fd5b5061046f61084836600461345e565b6120f7565b34801561085957600080fd5b50600d546103bc9062010000900460ff1681565b34801561087957600080fd5b5061044160145481565b34801561088f57600080fd5b506103e661214b565b3480156108a457600080fd5b506103e6612158565b3480156108b957600080fd5b506103e66108c836600461324d565b612165565b3480156108d957600080fd5b506103bc6108e836600461345e565b60136020526000908152604090205460ff1681565b34801561090957600080fd5b50601054610413906001600160a01b031681565b34801561092957600080fd5b50610441612219565b34801561093e57600080fd5b5061046f61094d366004613338565b612272565b34801561095e57600080fd5b50601154610413906001600160a01b031681565b34801561097e57600080fd5b506104416122b5565b34801561099357600080fd5b50600d546109a690610100900460ff1681565b60405160ff90911681526020016103c8565b3480156109c457600080fd5b5061046f6122cc565b3480156109d957600080fd5b506103bc6109e8366004613564565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b348015610a2257600080fd5b5061046f610a31366004613580565b6123c6565b348015610a4257600080fd5b5061046f612465565b348015610a5757600080fd5b5061046f610a6636600461345e565b612623565b348015610a7757600080fd5b5061044160175481565b348015610a8d57600080fd5b50600d5460ff166109a6565b60006001600160e01b031982166380ac58cd60e01b1480610aca57506001600160e01b03198216635b5e139f60e01b145b80610ae557506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610afa906135e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b26906135e5565b8015610b735780601f10610b4857610100808354040283529160200191610b73565b820191906000526020600020905b815481529060010190602001808311610b5657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610bfb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610c2282611738565b9050806001600160a01b0316836001600160a01b03161415610c905760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610bf2565b336001600160a01b0382161480610cac5750610cac81336109e8565b610d1e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610bf2565b610d2883836126ca565b505050565b6006546001600160a01b03610100909104163314610d5d5760405162461bcd60e51b8152600401610bf290613620565b6000815111610dbe5760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610bf2565b600d546301000000900460ff1615610e185760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610bf2565b8051610e2b90600a906020840190613116565b5050565b60006001610e3c60085490565b610e46919061366b565b905090565b6006546001600160a01b03610100909104163314610e7b5760405162461bcd60e51b8152600401610bf290613620565b601455565b610e8b335b82612738565b610ea75760405162461bcd60e51b8152600401610bf290613682565b610d2883838361282f565b8181600954610f29838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b1660208201528592506034019050604051602081830303815290604052805190602001206129da565b610f755760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610bf2565b601754600134610f8582846136d3565b14610fce5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610bf2565b32331461101d5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610bf2565b600260075414156110705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bf2565b600260075560065460ff16156110985760405162461bcd60e51b8152600401610bf2906136f2565b600d5460ff166002146110ed5760405162461bcd60e51b815260206004820181905260248201527f57686974656c697374206d696e74696e67206e6f7420696e697469617465642e6044820152606401610bf2565b3360009081526013602052604090205460ff161561114d5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610bf2565b601254611158610e2f565b61116390600161371c565b11156111815760405162461bcd60e51b8152600401610bf290613734565b336000818152601360205260409020805460ff191660011790556111ad906111a860085490565b6129f0565b6111bb600880546001019055565b505060016007555050505050565b6006546001600160a01b036101009091041633146111f95760405162461bcd60e51b8152600401610bf290613620565b600047116112425760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610bf2565b600d5460009064010000000090046001600160a01b03166112716103e861126b476102bc612b3e565b90612b51565b604051600081818185875af1925050503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b50509050806112f85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c4819985a5b195960721b6044820152606401610bf2565b600e546000906001600160a01b03166113186103e861126b476069612b3e565b604051600081818185875af1925050503d8060008114611354576040519150601f19603f3d011682016040523d82523d6000602084013e611359565b606091505b505090508061139f5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080c8819985a5b195960721b6044820152606401610bf2565b600f546000906001600160a01b03166113bf6103e861126b476069612b3e565b604051600081818185875af1925050503d80600081146113fb576040519150601f19603f3d011682016040523d82523d6000602084013e611400565b606091505b50509050806114465760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080cc819985a5b195960721b6044820152606401610bf2565b6010546000906001600160a01b03166114666103e861126b47602d612b3e565b604051600081818185875af1925050503d80600081146114a2576040519150601f19603f3d011682016040523d82523d6000602084013e6114a7565b606091505b50509050806114ed5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d0819985a5b195960721b6044820152606401610bf2565b6011546040516000916001600160a01b03169047908381818185875af1925050503d806000811461153a576040519150601f19603f3d011682016040523d82523d6000602084013e61153f565b606091505b50509050806115855760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985ddb080d4819985a5b195960721b6044820152606401610bf2565b5050505050565b6006546001600160a01b036101009091041633146115bc5760405162461bcd60e51b8152600401610bf290613620565b6115c4612b5d565b565b610d28838383604051806020016040528060008152506120bf565b6115ea33610e85565b61164f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610bf2565b61165881612bf0565b50565b6006546001600160a01b0361010090910416331461168b5760405162461bcd60e51b8152600401610bf290613620565b600d5462010000900460ff16156116d95760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610bf2565b8051610e2b90600b906020840190613116565b6006546001600160a01b0361010090910416331461171c5760405162461bcd60e51b8152600401610bf290613620565b600d805460ff9092166101000261ff0019909216919091179055565b6000818152600260205260408120546001600160a01b031680610ae55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610bf2565b600b80546117bc906135e5565b80601f01602080910402602001604051908101604052809291908181526020018280546117e8906135e5565b80156118355780601f1061180a57610100808354040283529160200191611835565b820191906000526020600020905b81548152906001019060200180831161181857829003601f168201915b505050505081565b600080611848610e2f565b1161188e5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bf2565b610e4661063d610e2f565b60006001600160a01b0382166119045760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610bf2565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b036101009091041633146119505760405162461bcd60e51b8152600401610bf290613620565b6115c46000612c97565b6006546001600160a01b0361010090910416331461198a5760405162461bcd60e51b8152600401610bf290613620565b601755565b6006546001600160a01b036101009091041633146119bf5760405162461bcd60e51b8152600401610bf290613620565b600d5460ff16600314611a145760405162461bcd60e51b815260206004820152601860248201527f5465616d2073616c65206e6f7420696e697469617465642e00000000000000006044820152606401610bf2565b601454601554611a279060ff841661371c565b1115611a885760405162461bcd60e51b815260206004820152602a60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d2d73604482015269616c6520737570706c7960b01b6064820152608401610bf2565b8060ff1660156000828254611a9d919061371c565b90915550600190505b8160ff168111610e2b57611abd336111a860085490565b611acb600880546001019055565b80611ad58161377d565b915050611aa6565b6006546001600160a01b03610100909104163314611b0d5760405162461bcd60e51b8152600401610bf290613620565b600955565b6006546001600160a01b03610100909104163314611b425760405162461bcd60e51b8152600401610bf290613620565b6000600a8054611b51906135e5565b905011611ba05760405162461bcd60e51b815260206004820181905260248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792e6044820152606401610bf2565b600d546301000000900460ff1615611c055760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610bf2565b600d805463ff00000019166301000000179055565b6006546001600160a01b03610100909104163314611c4a5760405162461bcd60e51b8152600401610bf290613620565b6115c4612cf1565b60175460ff821634611c6482846136d3565b14611cad5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610bf2565b323314611cfc5760405162461bcd60e51b815260206004820152601f60248201527f5468652063616c6c657220697320616e6f7468657220636f6e74726163742e006044820152606401610bf2565b60026007541415611d4f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bf2565b600260075560065460ff1615611d775760405162461bcd60e51b8152600401610bf2906136f2565b600d5460ff16600414611dcc5760405162461bcd60e51b815260206004820152601b60248201527f5075626c6963206d696e74206e6f7420696e69746961697465642e00000000006044820152606401610bf2565b6016548360ff16611ddb610e2f565b611de5919061371c565b1115611e415760405162461bcd60e51b815260206004820152602560248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152647570706c7960d81b6064820152608401610bf2565b60008360ff1611611ea05760405162461bcd60e51b815260206004820152602360248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e60448201526210181760e91b6064820152608401610bf2565b600d5460ff61010090910481169084161115611f115760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610bf2565b60015b8360ff168111611f4b57611f2b336111a860085490565b611f39600880546001019055565b80611f438161377d565b915050611f14565b505060016007555050565b606060018054610afa906135e5565b610e2b338383612d49565b6006546001600160a01b03610100909104163314611fa05760405162461bcd60e51b8152600401610bf290613620565b600d54600360ff90911610611fed5760405162461bcd60e51b81526020600482015260136024820152722830b9ba1030b4b9323937b810383430b9b29760691b6044820152606401610bf2565b60008260ff161161204e5760405162461bcd60e51b815260206004820152602560248201527f41697264726f7020616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610bf2565b6012548260ff1661205d610e2f565b612067919061371c565b11156120855760405162461bcd60e51b8152600401610bf290613734565b60015b8260ff168111610d285761209f826111a860085490565b6120ad600880546001019055565b806120b78161377d565b915050612088565b6120c93383612738565b6120e55760405162461bcd60e51b8152600401610bf290613682565b6120f184848484612e18565b50505050565b6006546001600160a01b036101009091041633146121275760405162461bcd60e51b8152600401610bf290613620565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b600c80546117bc906135e5565b600a80546117bc906135e5565b6000818152600260205260409020546060906001600160a01b03166121e45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610bf2565b600b6121ef83612e4b565b600c60405160200161220393929190613832565b6040516020818303038152906040529050919050565b600080612224610e2f565b1161226a5760405162461bcd60e51b815260206004820152601660248201527527379031b93cb83a34b21032bc34b9ba39903cb2ba1760511b6044820152606401610bf2565b610e46610e2f565b6006546001600160a01b036101009091041633146122a25760405162461bcd60e51b8152600401610bf290613620565b8051610e2b90600c906020840190613116565b60006122bf610e2f565b601654610e46919061366b565b6006546001600160a01b036101009091041633146122fc5760405162461bcd60e51b8152600401610bf290613620565b6000600b805461230b906135e5565b90501161235a5760405162461bcd60e51b815260206004820152601760248201527f626173655552492063616e6e6f7420626520656d7074790000000000000000006044820152606401610bf2565b600d5462010000900460ff16156123b35760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610bf2565b600d805462ff0000191662010000179055565b6006546001600160a01b036101009091041633146123f65760405162461bcd60e51b8152600401610bf290613620565b600d80546001600160a01b0396871664010000000002640100000000600160c01b0319909116179055600e80549486166001600160a01b0319958616179055600f8054938616938516939093179092556010805491851691841691909117905560118054919093169116179055565b6006546001600160a01b036101009091041633146124955760405162461bcd60e51b8152600401610bf290613620565b600d546301000000900460ff1615156001146125195760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610bf2565b60095460001a60f81b6001600160f81b03191661259e5760405162461bcd60e51b815260206004820152603b60248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527f77686974656c697374206d696e74696e672063616e20626567696e00000000006064820152608401610bf2565b600d54600460ff909116106125f55760405162461bcd60e51b815260206004820152601b60248201527f4e6f20737461676573206166746572207075626c69632073616c6500000000006044820152606401610bf2565b600d805460ff169060006126088361387b565b91906101000a81548160ff021916908360ff16021790555050565b6006546001600160a01b036101009091041633146126535760405162461bcd60e51b8152600401610bf290613620565b6001600160a01b0381166126b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610bf2565b61165881612c97565b80546001019055565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906126ff82611738565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166127b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610bf2565b60006127bc83611738565b9050806001600160a01b0316846001600160a01b031614806127f75750836001600160a01b03166127ec84610b7d565b6001600160a01b0316145b8061282757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661284282611738565b6001600160a01b0316146128aa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610bf2565b6001600160a01b03821661290c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610bf2565b612917838383612f49565b6129226000826126ca565b6001600160a01b038316600090815260036020526040812080546001929061294b90849061366b565b90915550506001600160a01b038216600090815260036020526040812080546001929061297990849061371c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000826129e78584612f6c565b14949350505050565b6001600160a01b038216612a465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610bf2565b6000818152600260205260409020546001600160a01b031615612aab5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610bf2565b612ab760008383612f49565b6001600160a01b0382166000908152600360205260408120805460019290612ae090849061371c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000612b4a82846136d3565b9392505050565b6000612b4a82846138b1565b60065460ff16612ba65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610bf2565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000612bfb82611738565b9050612c0981600084612f49565b612c146000836126ca565b6001600160a01b0381166000908152600360205260408120805460019290612c3d90849061366b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff1615612d145760405162461bcd60e51b8152600401610bf2906136f2565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612bd33390565b816001600160a01b0316836001600160a01b03161415612dab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610bf2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612e2384848461282f565b612e2f84848484613018565b6120f15760405162461bcd60e51b8152600401610bf2906138c5565b606081612e6f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612e995780612e838161377d565b9150612e929050600a836138b1565b9150612e73565b60008167ffffffffffffffff811115612eb457612eb46132ac565b6040519080825280601f01601f191660200182016040528015612ede576020820181803683370190505b5090505b841561282757612ef360018361366b565b9150612f00600a86613917565b612f0b90603061371c565b60f81b818381518110612f2057612f20613865565b60200101906001600160f81b031916908160001a905350612f42600a866138b1565b9450612ee2565b60065460ff1615610d285760405162461bcd60e51b8152600401610bf2906136f2565b600081815b8451811015613010576000858281518110612f8e57612f8e613865565b60200260200101519050808311612fd0576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612ffd565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806130088161377d565b915050612f71565b509392505050565b60006001600160a01b0384163b1561310b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061305c90339089908890889060040161392b565b6020604051808303816000875af1925050508015613097575060408051601f3d908101601f1916820190925261309491810190613968565b60015b6130f1573d8080156130c5576040519150601f19603f3d011682016040523d82523d6000602084013e6130ca565b606091505b5080516130e95760405162461bcd60e51b8152600401610bf2906138c5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612827565b506001949350505050565b828054613122906135e5565b90600052602060002090601f016020900481019282613144576000855561318a565b82601f1061315d57805160ff191683800117855561318a565b8280016001018555821561318a579182015b8281111561318a57825182559160200191906001019061316f565b5061319692915061319a565b5090565b5b80821115613196576000815560010161319b565b6001600160e01b03198116811461165857600080fd5b6000602082840312156131d757600080fd5b8135612b4a816131af565b60005b838110156131fd5781810151838201526020016131e5565b838111156120f15750506000910152565b600081518084526132268160208601602086016131e2565b601f01601f19169290920160200192915050565b602081526000612b4a602083018461320e565b60006020828403121561325f57600080fd5b5035919050565b80356001600160a01b038116811461327d57600080fd5b919050565b6000806040838503121561329557600080fd5b61329e83613266565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156132dd576132dd6132ac565b604051601f8501601f19908116603f01168101908282118183101715613305576133056132ac565b8160405280935085815286868601111561331e57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561334a57600080fd5b813567ffffffffffffffff81111561336157600080fd5b8201601f8101841361337257600080fd5b612827848235602084016132c2565b60008060006060848603121561339657600080fd5b61339f84613266565b92506133ad60208501613266565b9150604084013590509250925092565b600080602083850312156133d057600080fd5b823567ffffffffffffffff808211156133e857600080fd5b818501915085601f8301126133fc57600080fd5b81358181111561340b57600080fd5b8660208260051b850101111561342057600080fd5b60209290920196919550909350505050565b803560ff8116811461327d57600080fd5b60006020828403121561345557600080fd5b612b4a82613432565b60006020828403121561347057600080fd5b612b4a82613266565b6000806040838503121561348c57600080fd5b61349583613266565b9150602083013580151581146134aa57600080fd5b809150509250929050565b600080604083850312156134c857600080fd5b6134d183613432565b91506134df60208401613266565b90509250929050565b600080600080608085870312156134fe57600080fd5b61350785613266565b935061351560208601613266565b925060408501359150606085013567ffffffffffffffff81111561353857600080fd5b8501601f8101871361354957600080fd5b613558878235602084016132c2565b91505092959194509250565b6000806040838503121561357757600080fd5b6134d183613266565b600080600080600060a0868803121561359857600080fd5b6135a186613266565b94506135af60208701613266565b93506135bd60408701613266565b92506135cb60608701613266565b91506135d960808701613266565b90509295509295909350565b600181811c908216806135f957607f821691505b6020821081141561361a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561367d5761367d613655565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008160001904831182151516156136ed576136ed613655565b500290565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000821982111561372f5761372f613655565b500190565b60208082526029908201527f4d696e7420616d6f756e742077696c6c206578636565642077686974656c69736040820152683a1039bab838363c9760b91b606082015260800190565b600060001982141561379157613791613655565b5060010190565b8054600090600181811c90808316806137b257607f831692505b60208084108214156137d457634e487b7160e01b600052602260045260246000fd5b8180156137e857600181146137f957613826565b60ff19861689528489019650613826565b60008881526020902060005b8681101561381e5781548b820152908501908301613805565b505084890196505b50505050505092915050565b600061383e8286613798565b845161384e8183602089016131e2565b61385a81830186613798565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81141561389257613892613655565b60010192915050565b634e487b7160e01b600052601260045260246000fd5b6000826138c0576138c061389b565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000826139265761392661389b565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061395e9083018461320e565b9695505050505050565b60006020828403121561397a57600080fd5b8151612b4a816131af56fea2646970667358221220279bb24fa7f39e341f0cbf08b17ac026aa5e9f9f211ff8857ecb43deff2a587f64736f6c634300080a0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1555:300:3;;;;;;;;2473:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;3984:217:3;1528:203:17;2004:28:16;;;;;;;;;;;;;;;;;;;1882:25:17;;;1870:2;1855:18;2004:28:16;1736:177:17;3522:401:3;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;7272:289:16;;;;;;;;;;-1:-1:-1;7272:289:16;;;;;:::i;:::-;;:::i;9330:106::-;;;;;;;;;;;;;:::i;6774:124::-;;;;;;;;;;-1:-1:-1;6774:124:16;;;;;:::i;:::-;;:::i;4711:330:3:-;;;;;;;;;;-1:-1:-1;4711:330:3;;;;;:::i;:::-;;:::i;829:25:16:-;;;;;;;;;;;;;;;;1793:30;;;;;;;;;;;;;;;;3723:650;;;;;;:::i;:::-;;:::i;1302:73::-;;;;;;;;;;-1:-1:-1;1302:73:16;;;;-1:-1:-1;;;;;1302:73:16;;;8129:839;;;:::i;5720:63::-;;;;;;;;;;;;;:::i;5107:179:3:-;;;;;;;;;;-1:-1:-1;5107:179:3;;;;;:::i;:::-;;:::i;529:241:6:-;;;;;;;;;;-1:-1:-1;529:241:6;;;;;:::i;:::-;;:::i;6050:158:16:-;;;;;;;;;;-1:-1:-1;6050:158:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;1122:73:16;;;;;;;;;;-1:-1:-1;1122:73:16;;;;;;;-1:-1:-1;;;;;1122:73:16;;;7152:114;;;;;;;;;;-1:-1:-1;7152:114:16;;;;;:::i;:::-;;:::i;2176:235:3:-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;895:26:16:-;;;;;;;;;;;;;:::i;9003:164::-;;;;;;;;;;;;;:::i;1914:205:3:-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;2068:30:16:-;;;;;;;;;;;;;;;;7036:110;;;;;;;;;;-1:-1:-1;7036:110:16;;;;;:::i;:::-;;:::i;4406:473::-;;;;;;;;;;-1:-1:-1;4406:473:16;;;;;:::i;:::-;;:::i;5942:102::-;;;;;;;;;;-1:-1:-1;5942:102:16;;;;;:::i;:::-;;:::i;7567:258::-;;;;;;;;;;;;;:::i;5655:59::-;;;;;;;;;;;;;:::i;4915:712::-;;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2635:102:3;;;;;;;;;;;;;:::i;1075:40:16:-;;;;;;;;;;-1:-1:-1;1075:40:16;;;;;;;;;;;4268:153:3;;;;;;;;;;-1:-1:-1;4268:153:3;;;;;:::i;:::-;;:::i;1210:73:16:-;;;;;;;;;;-1:-1:-1;1210:73:16;;;;-1:-1:-1;;;;;1210:73:16;;;3214:471;;;;;;;;;;-1:-1:-1;3214:471:16;;;;;:::i;:::-;;:::i;5352:320:3:-;;;;;;;;;;-1:-1:-1;5352:320:3;;;;;:::i;:::-;;:::i;5834:102:16:-;;;;;;;;;;-1:-1:-1;5834:102:16;;;;;:::i;:::-;;:::i;1035:34::-;;;;;;;;;;-1:-1:-1;1035:34:16;;;;;;;;;;;1943:29;;;;;;;;;;;;;;;;927:37;;;;;;;;;;;;;:::i;861:28::-;;;;;;;;;;;;;:::i;9442:266::-;;;;;;;;;;-1:-1:-1;9442:266:16;;;;;:::i;:::-;;:::i;1852:39::-;;;;;;;;;;-1:-1:-1;1852:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;1394:73;;;;;;;;;;-1:-1:-1;1394:73:16;;;;-1:-1:-1;;;;;1394:73:16;;;9173:151;;;;;;;;;;;;;:::i;6904:126::-;;;;;;;;;;-1:-1:-1;6904:126:16;;;;;:::i;:::-;;:::i;1486:73::-;;;;;;;;;;-1:-1:-1;1486:73:16;;;;-1:-1:-1;;;;;1486:73:16;;;9714:110;;;;;;;;;;;;;:::i;999:25::-;;;;;;;;;;-1:-1:-1;999:25:16;;;;;;;;;;;;;;6896:4:17;6884:17;;;6866:36;;6854:2;6839:18;999:25:16;6724:184:17;6219:215:16;;;;;;;;;;;;;:::i;4487:162:3:-;;;;;;;;;;-1:-1:-1;4487:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;7831:292:16;;;;;;;;;;-1:-1:-1;7831:292:16;;;;;:::i;:::-;;:::i;6440:328::-;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2113:37:16:-;;;;;;;;;;;;;;;;9834:77;;;;;;;;;;-1:-1:-1;9899:5:16;;;;9834:77;;1555:300:3;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1812:36:3;1673:175;1555:300;-1:-1:-1;;1555:300:3:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;4079:73;;;;-1:-1:-1;;;4079:73:3;;8254:2:17;4079:73:3;;;8236:21:17;8293:2;8273:18;;;8266:30;8332:34;8312:18;;;8305:62;-1:-1:-1;;;8383:18:17;;;8376:42;8435:19;;4079:73:3;;;;;;;;;-1:-1:-1;4170:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:3;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;8667:2:17;3651:57:3;;;8649:21:17;8706:2;8686:18;;;8679:30;8745:34;8725:18;;;8718:62;-1:-1:-1;;;8796:18:17;;;8789:31;8837:19;;3651:57:3;8465:397:17;3651:57:3;719:10:9;-1:-1:-1;;;;;3740:21:3;;;;:62;;-1:-1:-1;3765:37:3;3782:5;719:10:9;4487:162:3;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;9069:2:17;3719:165:3;;;9051:21:17;9108:2;9088:18;;;9081:30;9147:34;9127:18;;;9120:62;9218:26;9198:18;;;9191:54;9262:19;;3719:165:3;8867:420:17;3719:165:3;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;7272:289:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7397:1:16::1;7371:15;7365:29;:33;7357:85;;;::::0;-1:-1:-1;;;7357:85:16;;9855:2:17;7357:85:16::1;::::0;::::1;9837:21:17::0;9894:2;9874:18;;;9867:30;9933:34;9913:18;;;9906:62;-1:-1:-1;;;9984:18:17;;;9977:37;10031:19;;7357:85:16::1;9653:403:17::0;7357:85:16::1;7461:20;::::0;;;::::1;;;7460:21;7452:60;;;::::0;-1:-1:-1;;;7452:60:16;;10263:2:17;7452:60:16::1;::::0;::::1;10245:21:17::0;10302:2;10282:18;;;10275:30;10341:28;10321:18;;;10314:56;10387:18;;7452:60:16::1;10061:350:17::0;7452:60:16::1;7522:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;7272:289:::0;:::o;9330:106::-;9374:7;9428:1;9400:25;:15;918:14:10;;827:112;9400:25:16;:29;;;;:::i;:::-;9393:36;;9330:106;:::o;6774:124::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6856:14:16::1;:35:::0;6774:124::o;4711:330:3:-;4900:41;719:10:9;4919:12:3;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:3;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;3723:650:16:-;3854:12;;3868:10;;2759:74;2778:6;;2759:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2803:28:16;;-1:-1:-1;;2820:10:16;11245:2:17;11241:15;11237:53;2803:28:16;;;11225:66:17;2786:5:16;;-1:-1:-1;11307:12:17;;;-1:-1:-1;2803:28:16;;;;;;;;;;;;2793:39;;;;;;2759:18;:74::i;:::-;2751:112;;;;-1:-1:-1;;;2751:112:16;;11532:2:17;2751:112:16;;;11514:21:17;11571:2;11551:18;;;11544:30;11610:27;11590:18;;;11583:55;11655:18;;2751:112:16;11330:349:17;2751:112:16;3906:9:::1;::::0;3917:1:::1;3000:9;2972:24;3917:1:::0;3906:9;2972:24:::1;:::i;:::-;:37;2964:75;;;::::0;-1:-1:-1;;;2964:75:16;;12059:2:17;2964:75:16::1;::::0;::::1;12041:21:17::0;12098:2;12078:18;;;12071:30;-1:-1:-1;;;12117:18:17;;;12110:55;12182:18;;2964:75:16::1;11857:349:17::0;2964:75:16::1;3105:9:::2;3118:10;3105:23;3097:67;;;::::0;-1:-1:-1;;;3097:67:16;;12413:2:17;3097:67:16::2;::::0;::::2;12395:21:17::0;12452:2;12432:18;;;12425:30;12491:33;12471:18;;;12464:61;12542:18;;3097:67:16::2;12211:355:17::0;3097:67:16::2;1744:1:2::3;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;12773:2:17;2317:63:2::3;::::0;::::3;12755:21:17::0;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:2::3;12571:355:17::0;2317:63:2::3;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::4;1403:38;;;;-1:-1:-1::0;;;1403:38:1::4;;;;;;;:::i;:::-;4009:5:16::5;::::0;::::5;;4018:1;4009:10;4001:55;;;::::0;-1:-1:-1;;;4001:55:16;;13478:2:17;4001:55:16::5;::::0;::::5;13460:21:17::0;;;13497:18;;;13490:30;13556:34;13536:18;;;13529:62;13608:18;;4001:55:16::5;13276:356:17::0;4001:55:16::5;4082:10;4074:19;::::0;;;:7:::5;:19;::::0;;;;;::::5;;:28;4066:72;;;::::0;-1:-1:-1;;;4066:72:16;;13839:2:17;4066:72:16::5;::::0;::::5;13821:21:17::0;13878:2;13858:18;;;13851:30;13917:33;13897:18;;;13890:61;13968:18;;4066:72:16::5;13637:355:17::0;4066:72:16::5;4178:15;;4157:13;:11;:13::i;:::-;:17;::::0;4173:1:::5;4157:17;:::i;:::-;:36;;4149:90;;;;-1:-1:-1::0;;;4149:90:16::5;;;;;;;:::i;:::-;4257:10;4249:19;::::0;;;:7:::5;:19;::::0;;;;:26;;-1:-1:-1;;4249:26:16::5;4271:4;4249:26;::::0;;4285:44:::5;::::0;4303:25:::5;:15;918:14:10::0;;827:112;4303:25:16::5;4285:5;:44::i;:::-;4339:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;4339:27:16::5;-1:-1:-1::0;;1701:1:2::3;2628:7;:22:::0;-1:-1:-1;;;;;3723:650:16:o;8129:839::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8216:1:16::1;8192:21;:25;8184:60;;;::::0;-1:-1:-1;;;8184:60:16;;14742:2:17;8184:60:16::1;::::0;::::1;14724:21:17::0;14781:2;14761:18;;;14754:30;-1:-1:-1;;;14800:18:17;;;14793:52;14862:18;;8184:60:16::1;14540:346:17::0;8184:60:16::1;8276:13;::::0;8255:7:::1;::::0;8276:13;;::::1;-1:-1:-1::0;;;;;8276:13:16::1;8303:40;8338:4;8303:30;:21;8329:3;8303:25;:30::i;:::-;:34:::0;::::1;:40::i;:::-;8268:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8254:94;;;8366:2;8358:33;;;::::0;-1:-1:-1;;;8358:33:16;;15303:2:17;8358:33:16::1;::::0;::::1;15285:21:17::0;15342:2;15322:18;;;15315:30;-1:-1:-1;;;15361:18:17;;;15354:48;15419:18;;8358:33:16::1;15101:342:17::0;8358:33:16::1;8423:13;::::0;8402:7:::1;::::0;-1:-1:-1;;;;;8423:13:16::1;8450:40;8485:4;8450:30;:21;8476:3;8450:25;:30::i;:40::-;8415:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8401:94;;;8514:2;8506:33;;;::::0;-1:-1:-1;;;8506:33:16;;15650:2:17;8506:33:16::1;::::0;::::1;15632:21:17::0;15689:2;15669:18;;;15662:30;-1:-1:-1;;;15708:18:17;;;15701:48;15766:18;;8506:33:16::1;15448:342:17::0;8506:33:16::1;8571:13;::::0;8550:7:::1;::::0;-1:-1:-1;;;;;8571:13:16::1;8598:40;8633:4;8598:30;:21;8624:3;8598:25;:30::i;:40::-;8563:80;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8549:94;;;8662:2;8654:33;;;::::0;-1:-1:-1;;;8654:33:16;;15997:2:17;8654:33:16::1;::::0;::::1;15979:21:17::0;16036:2;16016:18;;;16009:30;-1:-1:-1;;;16055:18:17;;;16048:48;16113:18;;8654:33:16::1;15795:342:17::0;8654:33:16::1;8719:13;::::0;8698:7:::1;::::0;-1:-1:-1;;;;;8719:13:16::1;8746:39;8780:4;8746:29;:21;8772:2;8746:25;:29::i;:39::-;8711:79;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8697:93;;;8808:2;8800:33;;;::::0;-1:-1:-1;;;8800:33:16;;16344:2:17;8800:33:16::1;::::0;::::1;16326:21:17::0;16383:2;16363:18;;;16356:30;-1:-1:-1;;;16402:18:17;;;16395:48;16460:18;;8800:33:16::1;16142:342:17::0;8800:33:16::1;8865:13;::::0;8857:61:::1;::::0;8844:7:::1;::::0;-1:-1:-1;;;;;8865:13:16::1;::::0;8892:21:::1;::::0;8844:7;8857:61;8844:7;8857:61;8892:21;8865:13;8857:61:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:75;;;8936:2;8928:33;;;::::0;-1:-1:-1;;;8928:33:16;;16691:2:17;8928:33:16::1;::::0;::::1;16673:21:17::0;16730:2;16710:18;;;16703:30;-1:-1:-1;;;16749:18:17;;;16742:48;16807:18;;8928:33:16::1;16489:342:17::0;8928:33:16::1;8174:794;;;;;8129:839::o:0;5720:63::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5766:10:16::1;:8;:10::i;:::-;5720:63::o:0;5107:179:3:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;529:241:6:-;645:41;719:10:9;664:12:6;640:96:9;645:41:6;637:102;;;;-1:-1:-1;;;637:102:6;;17038:2:17;637:102:6;;;17020:21:17;17077:2;17057:18;;;17050:30;17116:34;17096:18;;;17089:62;-1:-1:-1;;;17167:18:17;;;17160:46;17223:19;;637:102:6;16836:412:17;637:102:6;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;6050:158:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6133:14:16::1;::::0;;;::::1;;;6132:15;6124:46;;;::::0;-1:-1:-1;;;6124:46:16;;17455:2:17;6124:46:16::1;::::0;::::1;17437:21:17::0;17494:2;17474:18;;;17467:30;-1:-1:-1;;;17513:18:17;;;17506:48;17571:18;;6124:46:16::1;17253:342:17::0;6124:46:16::1;6180:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;7152:114::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7228:12:16::1;:31:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7228:31:16;;::::1;::::0;;;::::1;::::0;;7152:114::o;2176:235:3:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;17802:2:17;2309:73:3;;;17784:21:17;17841:2;17821:18;;;17814:30;17880:34;17860:18;;;17853:62;-1:-1:-1;;;17931:18:17;;;17924:39;17980:19;;2309:73:3;17600:405:17;895:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9003:164::-;9051:7;9093:1;9077:13;:11;:13::i;:::-;:17;9069:52;;;;-1:-1:-1;;;9069:52:16;;18212:2:17;9069:52:16;;;18194:21:17;18251:2;18231:18;;;18224:30;-1:-1:-1;;;18270:18:17;;;18263:52;18332:18;;9069:52:16;18010:346:17;9069:52:16;9138:22;9146:13;:11;:13::i;1914:205:3:-;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;18563:2:17;2005:74:3;;;18545:21:17;18602:2;18582:18;;;18575:30;18641:34;18621:18;;;18614:62;-1:-1:-1;;;18692:18:17;;;18685:40;18742:19;;2005:74:3;18361:406:17;2005:74:3;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;7036:110:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7114:9:16::1;:25:::0;7036:110::o;4406:473::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4517:5:16::1;::::0;::::1;;4526:1;4517:10;4509:47;;;::::0;-1:-1:-1;;;4509:47:16;;18974:2:17;4509:47:16::1;::::0;::::1;18956:21:17::0;19013:2;18993:18;;;18986:30;19052:26;19032:18;;;19025:54;19096:18;;4509:47:16::1;18772:348:17::0;4509:47:16::1;4605:14;::::0;4588:13:::1;::::0;4574:27:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:45;;4566:100;;;::::0;-1:-1:-1;;;4566:100:16;;19327:2:17;4566:100:16::1;::::0;::::1;19309:21:17::0;19366:2;19346:18;;;19339:30;19405:34;19385:18;;;19378:62;-1:-1:-1;;;19456:18:17;;;19449:40;19506:19;;4566:100:16::1;19125:406:17::0;4566:100:16::1;4699:11;4682:28;;:13;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4737:1:16::1;::::0;-1:-1:-1;4720:153:16::1;4745:11;4740:16;;:1;:16;4720:153;;4777:44;4783:10;4795:25;:15;918:14:10::0;;827:112;4777:44:16::1;4835:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;4835:27:16::1;4758:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4720:153;;5942:102:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6013:10:16::1;:24:::0;5942:102::o;7567:258::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7665:1:16::1;7640:14;7634:28;;;;;:::i;:::-;;;:32;7626:77;;;::::0;-1:-1:-1;;;7626:77:16;;19878:2:17;7626:77:16::1;::::0;::::1;19860:21:17::0;;;19897:18;;;19890:30;19956:34;19936:18;;;19929:62;20008:18;;7626:77:16::1;19676:356:17::0;7626:77:16::1;7722:20;::::0;;;::::1;;;7721:21;7713:68;;;::::0;-1:-1:-1;;;7713:68:16;;20239:2:17;7713:68:16::1;::::0;::::1;20221:21:17::0;20278:2;20258:18;;;20251:30;20317:34;20297:18;;;20290:62;-1:-1:-1;;;20368:18:17;;;20361:32;20410:19;;7713:68:16::1;20037:398:17::0;7713:68:16::1;7791:20;:27:::0;;-1:-1:-1;;7791:27:16::1;::::0;::::1;::::0;;7567:258::o;5655:59::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5699:8:16::1;:6;:8::i;4915:712::-:0;5027:9;;2887:170;;;3000:9;2972:24;2887:170;5027:9;2972:24;:::i;:::-;:37;2964:75;;;;-1:-1:-1;;;2964:75:16;;12059:2:17;2964:75:16;;;12041:21:17;12098:2;12078:18;;;12071:30;-1:-1:-1;;;12117:18:17;;;12110:55;12182:18;;2964:75:16;11857:349:17;2964:75:16;3105:9:::1;3118:10;3105:23;3097:67;;;::::0;-1:-1:-1;;;3097:67:16;;12413:2:17;3097:67:16::1;::::0;::::1;12395:21:17::0;12452:2;12432:18;;;12425:30;12491:33;12471:18;;;12464:61;12542:18;;3097:67:16::1;12211:355:17::0;3097:67:16::1;1744:1:2::2;2325:7;;:19;;2317:63;;;::::0;-1:-1:-1;;;2317:63:2;;12773:2:17;2317:63:2::2;::::0;::::2;12755:21:17::0;12812:2;12792:18;;;12785:30;12851:33;12831:18;;;12824:61;12902:18;;2317:63:2::2;12571:355:17::0;2317:63:2::2;1744:1;2455:7;:18:::0;1168:7:1;;;;1411:9:::3;1403:38;;;;-1:-1:-1::0;;;1403:38:1::3;;;;;;;:::i;:::-;5141:5:16::4;::::0;::::4;;5150:1;5141:10;5133:50;;;::::0;-1:-1:-1;;;5133:50:16;;20642:2:17;5133:50:16::4;::::0;::::4;20624:21:17::0;20681:2;20661:18;;;20654:30;20720:29;20700:18;;;20693:57;20767:18;;5133:50:16::4;20440:351:17::0;5133:50:16::4;5233:15;;5218:11;5201:28;;:13;:11;:13::i;:::-;:28;;;;:::i;:::-;:47;;5193:97;;;::::0;-1:-1:-1;;;5193:97:16;;20998:2:17;5193:97:16::4;::::0;::::4;20980:21:17::0;21037:2;21017:18;;;21010:30;21076:34;21056:18;;;21049:62;-1:-1:-1;;;21127:18:17;;;21120:35;21172:19;;5193:97:16::4;20796:401:17::0;5193:97:16::4;5322:1;5308:11;:15;;;5300:63;;;::::0;-1:-1:-1;;;5300:63:16;;21404:2:17;5300:63:16::4;::::0;::::4;21386:21:17::0;21443:2;21423:18;;;21416:30;21482:34;21462:18;;;21455:62;-1:-1:-1;;;21533:18:17;;;21526:33;21576:19;;5300:63:16::4;21202:399:17::0;5300:63:16::4;5396:12;::::0;::::4;;::::0;;::::4;::::0;::::4;5381:27:::0;;::::4;;;5373:82;;;::::0;-1:-1:-1;;;5373:82:16;;21808:2:17;5373:82:16::4;::::0;::::4;21790:21:17::0;21847:2;21827:18;;;21820:30;21886:34;21866:18;;;21859:62;-1:-1:-1;;;21937:18:17;;;21930:40;21987:19;;5373:82:16::4;21606:406:17::0;5373:82:16::4;5485:1;5468:153;5493:11;5488:16;;:1;:16;5468:153;;5525:44;5531:10;5543:25;:15;918:14:10::0;;827:112;5525:44:16::4;5583:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;5583:27:16::4;5506:3:::0;::::4;::::0;::::4;:::i;:::-;;;;5468:153;;;-1:-1:-1::0;;1701:1:2::2;2628:7;:22:::0;-1:-1:-1;;4915:712:16:o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:9;4395:8:3;4405;4362:18;:52::i;3214:471:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3305:5:16::1;::::0;3313:1:::1;3305:5;::::0;;::::1;:9;3297:41;;;::::0;-1:-1:-1;;;3297:41:16;;22219:2:17;3297:41:16::1;::::0;::::1;22201:21:17::0;22258:2;22238:18;;;22231:30;-1:-1:-1;;;22277:18:17;;;22270:49;22336:18;;3297:41:16::1;22017:343:17::0;3297:41:16::1;3370:1;3356:11;:15;;;3348:65;;;::::0;-1:-1:-1;;;3348:65:16;;22567:2:17;3348:65:16::1;::::0;::::1;22549:21:17::0;22606:2;22586:18;;;22579:30;22645:34;22625:18;;;22618:62;-1:-1:-1;;;22696:18:17;;;22689:35;22741:19;;3348:65:16::1;22365:401:17::0;3348:65:16::1;3462:15;;3447:11;3431:27;;:13;:11;:13::i;:::-;:27;;;;:::i;:::-;:46;;3423:100;;;;-1:-1:-1::0;;;3423:100:16::1;;;;;;;:::i;:::-;3550:1;3533:146;3558:11;3553:16;;:1;:16;3533:146;;3590:37;3596:3;3601:25;:15;918:14:10::0;;827:112;3590:37:16::1;3641:27;:15;1032:19:10::0;;1050:1;1032:19;;;945:123;3641:27:16::1;3571:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3533:146;;5352:320:3::0;5521:41;719:10:9;5554:7:3;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:3;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;5834:102:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5903:19:16::1;;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;5903:26:16::1;5925:4;5903:26;::::0;;5834:102::o;927:37::-;;;;;;;:::i;861:28::-;;;;;;;:::i;9442:266::-;7209:4:3;7232:16;;;:7;:16;;;;;;9515:13:16;;-1:-1:-1;;;;;7232:16:3;9540:76:16;;;;-1:-1:-1;;;9540:76:16;;22973:2:17;9540:76:16;;;22955:21:17;23012:2;22992:18;;;22985:30;23051:34;23031:18;;;23024:62;-1:-1:-1;;;23102:18:17;;;23095:45;23157:19;;9540:76:16;22771:411:17;9540:76:16;9657:7;9666:18;:7;:16;:18::i;:::-;9686:13;9640:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9626:75;;9442:266;;;:::o;9173:151::-;9216:7;9258:1;9242:13;:11;:13::i;:::-;:17;9234:52;;;;-1:-1:-1;;;9234:52:16;;18212:2:17;9234:52:16;;;18194:21:17;18251:2;18231:18;;;18224:30;-1:-1:-1;;;18270:18:17;;;18263:52;18332:18;;9234:52:16;18010:346:17;9234:52:16;9303:13;:11;:13::i;6904:126::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6990:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;9714:110::-:0;9760:7;9804:13;:11;:13::i;:::-;9786:15;;:31;;;;:::i;6219:215::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6303:1:16::1;6285:7;6279:21;;;;;:::i;:::-;;;:25;6271:61;;;::::0;-1:-1:-1;;;6271:61:16;;24954:2:17;6271:61:16::1;::::0;::::1;24936:21:17::0;24993:2;24973:18;;;24966:30;25032:25;25012:18;;;25005:53;25075:18;;6271:61:16::1;24752:347:17::0;6271:61:16::1;6351:14;::::0;;;::::1;;;6350:15;6342:54;;;::::0;-1:-1:-1;;;6342:54:16;;25306:2:17;6342:54:16::1;::::0;::::1;25288:21:17::0;25345:2;25325:18;;;25318:30;25384:28;25364:18;;;25357:56;25430:18;;6342:54:16::1;25104:350:17::0;6342:54:16::1;6406:14;:21:::0;;-1:-1:-1;;6406:21:16::1;::::0;::::1;::::0;;6219:215::o;7831:292::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7966:13:16::1;:22:::0;;-1:-1:-1;;;;;7966:22:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;7966:22:16;;::::1;;::::0;;7998:13:::1;:22:::0;;;;::::1;-1:-1:-1::0;;;;;;7998:22:16;;::::1;;::::0;;8030:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;8062:13:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8094:13:::1;:22:::0;;;;;::::1;::::0;::::1;;::::0;;7831:292::o;6440:328::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6496:20:16::1;::::0;;;::::1;;;:28;;6520:4;6496:28;6488:97;;;::::0;-1:-1:-1;;;6488:97:16;;25661:2:17;6488:97:16::1;::::0;::::1;25643:21:17::0;25700:2;25680:18;;;25673:30;25739:34;25719:18;;;25712:62;25810:26;25790:18;;;25783:54;25854:19;;6488:97:16::1;25459:420:17::0;6488:97:16::1;6603:10;::::0;6614:1:::1;6603:13;;;-1:-1:-1::0;;;;;;6603:18:16::1;6595:90;;;::::0;-1:-1:-1;;;6595:90:16;;26218:2:17;6595:90:16::1;::::0;::::1;26200:21:17::0;26257:2;26237:18;;;26230:30;26296:34;26276:18;;;26269:62;26367:29;26347:18;;;26340:57;26414:19;;6595:90:16::1;26016:423:17::0;6595:90:16::1;6703:5;::::0;6711:1:::1;6703:5;::::0;;::::1;:9;6695:49;;;::::0;-1:-1:-1;;;6695:49:16;;26646:2:17;6695:49:16::1;::::0;::::1;26628:21:17::0;26685:2;26665:18;;;26658:30;26724:29;26704:18;;;26697:57;26771:18;;6695:49:16::1;26444:351:17::0;6695:49:16::1;6754:5;:7:::0;;::::1;;::::0;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6440:328::o:0;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:9;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;27182:2:17;1998:73:0::1;::::0;::::1;27164:21:17::0;27221:2;27201:18;;;27194:30;27260:34;27240:18;;;27233:62;-1:-1:-1;;;27311:18:17;;;27304:36;27357:19;;1998:73:0::1;26980:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;945:123:10:-:0;1032:19;;1050:1;1032:19;;;945:123::o;10995:171:3:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:3;-1:-1:-1;;;;;11069:29:3;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:3;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;7536:73;;;;-1:-1:-1;;;7536:73:3;;27589:2:17;7536:73:3;;;27571:21:17;27628:2;27608:18;;;27601:30;27667:34;27647:18;;;27640:62;-1:-1:-1;;;27718:18:17;;;27711:42;27770:19;;7536:73:3;27387:408:17;7536:73:3;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:3;:7;-1:-1:-1;;;;;7676:16:3;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:3;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:3;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:3:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:3;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:3;;10443:85;;;;-1:-1:-1;;;10443:85:3;;28002:2:17;10443:85:3;;;27984:21:17;28041:2;28021:18;;;28014:30;28080:34;28060:18;;;28053:62;-1:-1:-1;;;28131:18:17;;;28124:39;28180:19;;10443:85:3;27800:405:17;10443:85:3;-1:-1:-1;;;;;10546:16:3;;10538:65;;;;-1:-1:-1;;;10538:65:3;;28412:2:17;10538:65:3;;;28394:21:17;28451:2;28431:18;;;28424:30;28490:34;28470:18;;;28463:62;-1:-1:-1;;;28541:18:17;;;28534:34;28585:19;;10538:65:3;28210:400:17;10538:65:3;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:3;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:3;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:3;-1:-1:-1;;;;;10813:21:3;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;847:184:12:-;968:4;1020;991:25;1004:5;1011:4;991:12;:25::i;:::-;:33;;847:184;-1:-1:-1;;;;847:184:12:o;9063:372:3:-;-1:-1:-1;;;;;9142:16:3;;9134:61;;;;-1:-1:-1;;;9134:61:3;;28817:2:17;9134:61:3;;;28799:21:17;;;28836:18;;;28829:30;28895:34;28875:18;;;28868:62;28947:18;;9134:61:3;28615:356:17;9134:61:3;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;:30;9205:58;;;;-1:-1:-1;;;9205:58:3;;29178:2:17;9205:58:3;;;29160:21:17;29217:2;29197:18;;;29190:30;29256;29236:18;;;29229:58;29304:18;;9205:58:3;28976:352:17;9205:58:3;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:3;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:3;-1:-1:-1;;;;;9358:21:3;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;3451:96:15:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:15:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;29792:2:17;1669:41:1;;;29774:21:17;29831:2;29811:18;;;29804:30;-1:-1:-1;;;29850:18:17;;;29843:50;29910:18;;1669:41:1;29590:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:9::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;9652:348:3:-;9711:13;9727:23;9742:7;9727:14;:23::i;:::-;9711:39;;9761:48;9782:5;9797:1;9801:7;9761:20;:48::i;:::-;9847:29;9864:1;9868:7;9847:8;:29::i;:::-;-1:-1:-1;;;;;9887:16:3;;;;;;:9;:16;;;;;:21;;9907:1;;9887:16;:21;;9907:1;;9887:21;:::i;:::-;;;;-1:-1:-1;;9925:16:3;;;;:7;:16;;;;;;9918:23;;-1:-1:-1;;;;;;9918:23:3;;;9957:36;9933:7;;9925:16;-1:-1:-1;;;;;9957:36:3;;;;;9925:16;;9957:36;9701:299;9652:348;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:9::0;;640:96;11301:307:3;11451:8;-1:-1:-1;;;;;11442:17:3;:5;-1:-1:-1;;;;;11442:17:3;;;11434:55;;;;-1:-1:-1;;;11434:55:3;;30141:2:17;11434:55:3;;;30123:21:17;30180:2;30160:18;;;30153:30;30219:27;30199:18;;;30192:55;30264:18;;11434:55:3;29939:349:17;11434:55:3;-1:-1:-1;;;;;11499:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:3;;;;;;;;;;11560:41;;540::17;;;11560::3;;513:18:17;11560:41:3;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:3;;;;;;;:::i;328:703:11:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:11;;;;;;;;;;;;-1:-1:-1;;;627:10:11;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:11;;-1:-1:-1;773:2:11;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:11;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:11;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:11;;;;;;;;-1:-1:-1;972:11:11;981:2;972:11;;:::i;:::-;;;844:150;;9917:175:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;1383:688:12:-;1466:7;1508:4;1466:7;1522:514;1546:5;:12;1542:1;:16;1522:514;;;1579:20;1602:5;1608:1;1602:8;;;;;;;;:::i;:::-;;;;;;;1579:31;;1644:12;1628;:28;1624:402;;1779:44;;;;;;30986:19:17;;;31021:12;;;31014:28;;;31058:12;;1779:44:12;;;;;;;;;;;;1769:55;;;;;;1754:70;;1624:402;;;1966:44;;;;;;30986:19:17;;;31021:12;;;31014:28;;;31058:12;;1966:44:12;;;;;;;;;;;;1956:55;;;;;;1941:70;;1624:402;-1:-1:-1;1560:3:12;;;;:::i;:::-;;;;1522:514;;;-1:-1:-1;2052:12:12;1383:688;-1:-1:-1;;;1383:688:12:o;12161:778:3:-;12311:4;-1:-1:-1;;;;;12331:13:3;;1087:20:8;1133:8;12327:606:3;;12366:72;;-1:-1:-1;;;12366:72:3;;-1:-1:-1;;;;;12366:36:3;;;;;:72;;719:10:9;;12417:4:3;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:3;;;;;;;;-1:-1:-1;;12366:72:3;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:3;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:3;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:3;-1:-1:-1;;;12488:51:3;;-1:-1:-1;12481:58:3;;12327:606;-1:-1:-1;12918:4:3;12161:778;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:17;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:17:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:17;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:17;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:17;;-1:-1:-1;;;;4095:615:17:o;4715:156::-;4781:20;;4841:4;4830:16;;4820:27;;4810:55;;4861:1;4858;4851:12;4876:182;4933:6;4986:2;4974:9;4965:7;4961:23;4957:32;4954:52;;;5002:1;4999;4992:12;4954:52;5025:27;5042:9;5025:27;:::i;5063:186::-;5122:6;5175:2;5163:9;5154:7;5150:23;5146:32;5143:52;;;5191:1;5188;5181:12;5143:52;5214:29;5233:9;5214:29;:::i;5439:347::-;5504:6;5512;5565:2;5553:9;5544:7;5540:23;5536:32;5533:52;;;5581:1;5578;5571:12;5533:52;5604:29;5623:9;5604:29;:::i;:::-;5594:39;;5683:2;5672:9;5668:18;5655:32;5730:5;5723:13;5716:21;5709:5;5706:32;5696:60;;5752:1;5749;5742:12;5696:60;5775:5;5765:15;;;5439:347;;;;;:::o;5791:256::-;5857:6;5865;5918:2;5906:9;5897:7;5893:23;5889:32;5886:52;;;5934:1;5931;5924:12;5886:52;5957:27;5974:9;5957:27;:::i;:::-;5947:37;;6003:38;6037:2;6026:9;6022:18;6003:38;:::i;:::-;5993:48;;5791:256;;;;;:::o;6052:667::-;6147:6;6155;6163;6171;6224:3;6212:9;6203:7;6199:23;6195:33;6192:53;;;6241:1;6238;6231:12;6192:53;6264:29;6283:9;6264:29;:::i;:::-;6254:39;;6312:38;6346:2;6335:9;6331:18;6312:38;:::i;:::-;6302:48;;6397:2;6386:9;6382:18;6369:32;6359:42;;6452:2;6441:9;6437:18;6424:32;6479:18;6471:6;6468:30;6465:50;;;6511:1;6508;6501:12;6465:50;6534:22;;6587:4;6579:13;;6575:27;-1:-1:-1;6565:55:17;;6616:1;6613;6606:12;6565:55;6639:74;6705:7;6700:2;6687:16;6682:2;6678;6674:11;6639:74;:::i;:::-;6629:84;;;6052:667;;;;;;;:::o;6913:260::-;6981:6;6989;7042:2;7030:9;7021:7;7017:23;7013:32;7010:52;;;7058:1;7055;7048:12;7010:52;7081:29;7100:9;7081:29;:::i;7178:484::-;7273:6;7281;7289;7297;7305;7358:3;7346:9;7337:7;7333:23;7329:33;7326:53;;;7375:1;7372;7365:12;7326:53;7398:29;7417:9;7398:29;:::i;:::-;7388:39;;7446:38;7480:2;7469:9;7465:18;7446:38;:::i;:::-;7436:48;;7503:38;7537:2;7526:9;7522:18;7503:38;:::i;:::-;7493:48;;7560:38;7594:2;7583:9;7579:18;7560:38;:::i;:::-;7550:48;;7617:39;7651:3;7640:9;7636:19;7617:39;:::i;:::-;7607:49;;7178:484;;;;;;;;:::o;7667:380::-;7746:1;7742:12;;;;7789;;;7810:61;;7864:4;7856:6;7852:17;7842:27;;7810:61;7917:2;7909:6;7906:14;7886:18;7883:38;7880:161;;;7963:10;7958:3;7954:20;7951:1;7944:31;7998:4;7995:1;7988:15;8026:4;8023:1;8016:15;7880:161;;7667:380;;;:::o;9292:356::-;9494:2;9476:21;;;9513:18;;;9506:30;9572:34;9567:2;9552:18;;9545:62;9639:2;9624:18;;9292:356::o;10416:127::-;10477:10;10472:3;10468:20;10465:1;10458:31;10508:4;10505:1;10498:15;10532:4;10529:1;10522:15;10548:125;10588:4;10616:1;10613;10610:8;10607:34;;;10621:18;;:::i;:::-;-1:-1:-1;10658:9:17;;10548:125::o;10678:413::-;10880:2;10862:21;;;10919:2;10899:18;;;10892:30;10958:34;10953:2;10938:18;;10931:62;-1:-1:-1;;;11024:2:17;11009:18;;11002:47;11081:3;11066:19;;10678:413::o;11684:168::-;11724:7;11790:1;11786;11782:6;11778:14;11775:1;11772:21;11767:1;11760:9;11753:17;11749:45;11746:71;;;11797:18;;:::i;:::-;-1:-1:-1;11837:9:17;;11684:168::o;12931:340::-;13133:2;13115:21;;;13172:2;13152:18;;;13145:30;-1:-1:-1;;;13206:2:17;13191:18;;13184:46;13262:2;13247:18;;12931:340::o;13997:128::-;14037:3;14068:1;14064:6;14061:1;14058:13;14055:39;;;14074:18;;:::i;:::-;-1:-1:-1;14110:9:17;;13997:128::o;14130:405::-;14332:2;14314:21;;;14371:2;14351:18;;;14344:30;14410:34;14405:2;14390:18;;14383:62;-1:-1:-1;;;14476:2:17;14461:18;;14454:39;14525:3;14510:19;;14130:405::o;19536:135::-;19575:3;-1:-1:-1;;19596:17:17;;19593:43;;;19616:18;;:::i;:::-;-1:-1:-1;19663:1:17;19652:13;;19536:135::o;23313:973::-;23398:12;;23363:3;;23453:1;23473:18;;;;23526;;;;23553:61;;23607:4;23599:6;23595:17;23585:27;;23553:61;23633:2;23681;23673:6;23670:14;23650:18;23647:38;23644:161;;;23727:10;23722:3;23718:20;23715:1;23708:31;23762:4;23759:1;23752:15;23790:4;23787:1;23780:15;23644:161;23821:18;23848:104;;;;23966:1;23961:319;;;;23814:466;;23848:104;-1:-1:-1;;23881:24:17;;23869:37;;23926:16;;;;-1:-1:-1;23848:104:17;;23961:319;23260:1;23253:14;;;23297:4;23284:18;;24055:1;24069:165;24083:6;24080:1;24077:13;24069:165;;;24161:14;;24148:11;;;24141:35;24204:16;;;;24098:10;;24069:165;;;24073:3;;24263:6;24258:3;24254:16;24247:23;;23814:466;;;;;;;23313:973;;;;:::o;24291:456::-;24512:3;24540:38;24574:3;24566:6;24540:38;:::i;:::-;24607:6;24601:13;24623:52;24668:6;24664:2;24657:4;24649:6;24645:17;24623:52;:::i;:::-;24691:50;24733:6;24729:2;24725:15;24717:6;24691:50;:::i;:::-;24684:57;24291:456;-1:-1:-1;;;;;;;24291:456:17:o;25884:127::-;25945:10;25940:3;25936:20;25933:1;25926:31;25976:4;25973:1;25966:15;26000:4;25997:1;25990:15;26800:175;26837:3;26881:4;26874:5;26870:16;26910:4;26901:7;26898:17;26895:43;;;26918:18;;:::i;:::-;26967:1;26954:15;;26800:175;-1:-1:-1;;26800:175:17:o;29333:127::-;29394:10;29389:3;29385:20;29382:1;29375:31;29425:4;29422:1;29415:15;29449:4;29446:1;29439:15;29465:120;29505:1;29531;29521:35;;29536:18;;:::i;:::-;-1:-1:-1;29570:9:17;;29465:120::o;30293:414::-;30495:2;30477:21;;;30534:2;30514:18;;;30507:30;30573:34;30568:2;30553:18;;30546:62;-1:-1:-1;;;30639:2:17;30624:18;;30617:48;30697:3;30682:19;;30293:414::o;30712:112::-;30744:1;30770;30760:35;;30775:18;;:::i;:::-;-1:-1:-1;30809:9:17;;30712:112::o;31081:489::-;-1:-1:-1;;;;;31350:15:17;;;31332:34;;31402:15;;31397:2;31382:18;;31375:43;31449:2;31434:18;;31427:34;;;31497:3;31492:2;31477:18;;31470:31;;;31275:4;;31518:46;;31544:19;;31536:6;31518:46;:::i;:::-;31510:54;31081:489;-1:-1:-1;;;;;;31081:489:17:o;31575:249::-;31644:6;31697:2;31685:9;31676:7;31672:23;31668:32;31665:52;;;31713:1;31710;31703:12;31665:52;31745:9;31739:16;31764:30;31788:5;31764:30;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    546,
    10095
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x397 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81C162F2 GT PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE7FCB1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEE3743AB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEE3743AB EQ PUSH2 0xA36 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xFCAA7664 EQ PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x9B8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x9CD JUMPI DUP1 PUSH4 0xEA74E190 EQ PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD6D67A09 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x932 JUMPI DUP1 PUSH4 0xDB993F56 EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xD2FAB8B9 EQ PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1214392 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0xC29DE630 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x84D JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x883 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1214392 EQ PUSH2 0x7CD JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0xBBC903EA EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x777 JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0x858E83B5 EQ PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x6C0360EB GT PUSH2 0x25F JUMPI DUP1 PUSH4 0x78231978 GT PUSH2 0x22E JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x791A2519 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0x29B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x61869A93 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0x622E4E78 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A GT PUSH2 0x339 JUMPI DUP1 PUSH4 0x372F657C GT PUSH2 0x308 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0x3C795047 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20841A6A EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x375 JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3F3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x31C5 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x323A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x3282 JUMP JUMPDEST PUSH2 0xC17 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x3338 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0xE2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0xE4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3381 JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x46F PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x33BD JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x413 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x46F PUSH2 0x11C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x158C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x3381 JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x5BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3338 JUMP JUMPDEST PUSH2 0x165B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x3BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x413 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x16EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x1738 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x17AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x183D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x687 CALLDATASIZE PUSH1 0x4 PUSH2 0x345E JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x1920 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x6D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x195A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x6F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x198F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x712 CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x1ADD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x1B12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x46F PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x1C52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x413 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x1F56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BC SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x7C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3479 JUMP JUMPDEST PUSH2 0x1F65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x413 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x34B5 JUMP JUMPDEST PUSH2 0x1F70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x828 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E8 JUMP JUMPDEST PUSH2 0x20BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x848 CALLDATASIZE PUSH1 0x4 PUSH2 0x345E JUMP JUMPDEST PUSH2 0x20F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x3BC SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x214B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x2158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x8C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x324D JUMP JUMPDEST PUSH2 0x2165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x8E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x345E JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x413 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x2219 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x94D CALLDATASIZE PUSH1 0x4 PUSH2 0x3338 JUMP JUMPDEST PUSH2 0x2272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x413 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0x22B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x9A6 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x22CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x9E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xA31 CALLDATASIZE PUSH1 0x4 PUSH2 0x3580 JUMP JUMPDEST PUSH2 0x23C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0x2465 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xA66 CALLDATASIZE PUSH1 0x4 PUSH2 0x345E JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xACA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xAE5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH2 0x35E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB26 SWAP1 PUSH2 0x35E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB48 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 DUP3 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xCAC JUMPI POP PUSH2 0xCAC DUP2 CALLER PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0xD28 DUP4 DUP4 PUSH2 0x26CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE2B SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3116 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xE3C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH2 0xE8B CALLER JUMPDEST DUP3 PUSH2 0x2738 JUMP JUMPDEST PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3682 JUMP JUMPDEST PUSH2 0xD28 DUP4 DUP4 DUP4 PUSH2 0x282F JUMP JUMPDEST DUP2 DUP2 PUSH1 0x9 SLOAD PUSH2 0xF29 DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE DUP6 SWAP3 POP PUSH1 0x34 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x29DA JUMP JUMPDEST PUSH2 0xF75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 CALLVALUE PUSH2 0xF85 DUP3 DUP5 PUSH2 0x36D3 JUMP JUMPDEST EQ PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1070 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E74696E67206E6F7420696E697469617465642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x1158 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x1163 SWAP1 PUSH1 0x1 PUSH2 0x371C JUMP JUMPDEST GT ISZERO PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3734 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11AD SWAP1 PUSH2 0x11A8 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x29F0 JUMP JUMPDEST PUSH2 0x11BB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x1242 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1271 PUSH2 0x3E8 PUSH2 0x126B SELFBALANCE PUSH2 0x2BC PUSH2 0x2B3E JUMP JUMPDEST SWAP1 PUSH2 0x2B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1318 PUSH2 0x3E8 PUSH2 0x126B SELFBALANCE PUSH1 0x69 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13BF PUSH2 0x3E8 PUSH2 0x126B SELFBALANCE PUSH1 0x69 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080CC819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1466 PUSH2 0x3E8 PUSH2 0x126B SELFBALANCE PUSH1 0x2D PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x153A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x153F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DDB080D4819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x15C4 PUSH2 0x2B5D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD28 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x15EA CALLER PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x2BF0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE2B SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3116 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x171C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x17BC SWAP1 PUSH2 0x35E5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17E8 SWAP1 PUSH2 0x35E5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1835 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x180A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1835 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1818 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1848 PUSH2 0xE2F JUMP JUMPDEST GT PUSH2 0x188E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0xE46 PUSH2 0x63D PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1950 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x15C4 PUSH1 0x0 PUSH2 0x2C97 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x19BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0x1A14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D2073616C65206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x1A27 SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x371C JUMP JUMPDEST GT ISZERO PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x616C6520737570706C79 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xE2B JUMPI PUSH2 0x1ABD CALLER PUSH2 0x11A8 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1ACB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1AD5 DUP2 PUSH2 0x377D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1B42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP1 SLOAD PUSH2 0x1B51 SWAP1 PUSH2 0x35E5 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1BA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1C4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH2 0x15C4 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0xFF DUP3 AND CALLVALUE PUSH2 0x1C64 DUP3 DUP5 PUSH2 0x36D3 JUMP JUMPDEST EQ PUSH2 0x1CAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x1D4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND PUSH1 0x4 EQ PUSH2 0x1DCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C6963206D696E74206E6F7420696E69746961697465642E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 PUSH1 0xFF AND PUSH2 0x1DDB PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x1DE5 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7570706C79 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xFF AND GT PUSH2 0x1EA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x101817 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP5 AND GT ISZERO PUSH2 0x1F11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP4 PUSH1 0xFF AND DUP2 GT PUSH2 0x1F4B JUMPI PUSH2 0x1F2B CALLER PUSH2 0x11A8 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F39 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1F43 DUP2 PUSH2 0x377D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F14 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x7 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xAFA SWAP1 PUSH2 0x35E5 JUMP JUMPDEST PUSH2 0xE2B CALLER DUP4 DUP4 PUSH2 0x2D49 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1FA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x1FED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2830B9BA1030B4B9323937B810383430B9B297 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x204E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F7020616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x205D PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x2067 SWAP2 SWAP1 PUSH2 0x371C JUMP JUMPDEST GT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3734 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xD28 JUMPI PUSH2 0x209F DUP3 PUSH2 0x11A8 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20AD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x20B7 DUP2 PUSH2 0x377D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x20C9 CALLER DUP4 PUSH2 0x2738 JUMP JUMPDEST PUSH2 0x20E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3682 JUMP JUMPDEST PUSH2 0x20F1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2E18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2127 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x17BC SWAP1 PUSH2 0x35E5 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x17BC SWAP1 PUSH2 0x35E5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xB PUSH2 0x21EF DUP4 PUSH2 0x2E4B JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2203 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2224 PUSH2 0xE2F JUMP JUMPDEST GT PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0xE46 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xE2B SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x3116 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x22FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP1 SLOAD PUSH2 0x230B SWAP1 PUSH2 0x35E5 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x235A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173655552492063616E6E6F7420626520656D707479000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x23B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x23F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0xE DUP1 SLOAD SWAP5 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP6 DUP7 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD SWAP4 DUP7 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH2 0x259E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x77686974656C697374206D696E74696E672063616E20626567696E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 PUSH1 0xFF SWAP1 SWAP2 AND LT PUSH2 0x25F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20737461676573206166746572207075626C69632073616C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x0 PUSH2 0x2608 DUP4 PUSH2 0x387B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x2653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x26B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x2C97 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x26FF DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BC DUP4 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x27F7 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x27EC DUP5 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2842 DUP3 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x290C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x2917 DUP4 DUP4 DUP4 PUSH2 0x2F49 JUMP JUMPDEST PUSH2 0x2922 PUSH1 0x0 DUP3 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x294B SWAP1 DUP5 SWAP1 PUSH2 0x366B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2979 SWAP1 DUP5 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29E7 DUP6 DUP5 PUSH2 0x2F6C JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2A46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2AAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x2AB7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2F49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2AE0 SWAP1 DUP5 SWAP1 PUSH2 0x371C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP3 DUP5 PUSH2 0x36D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B4A DUP3 DUP5 PUSH2 0x38B1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x2BA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFB DUP3 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C09 DUP2 PUSH1 0x0 DUP5 PUSH2 0x2F49 JUMP JUMPDEST PUSH2 0x2C14 PUSH1 0x0 DUP4 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2C3D SWAP1 DUP5 SWAP1 PUSH2 0x366B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2BD3 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2DAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2E23 DUP5 DUP5 DUP5 PUSH2 0x282F JUMP JUMPDEST PUSH2 0x2E2F DUP5 DUP5 DUP5 DUP5 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x20F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2E6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2E99 JUMPI DUP1 PUSH2 0x2E83 DUP2 PUSH2 0x377D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x38B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EB4 JUMPI PUSH2 0x2EB4 PUSH2 0x32AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2827 JUMPI PUSH2 0x2EF3 PUSH1 0x1 DUP4 PUSH2 0x366B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F00 PUSH1 0xA DUP7 PUSH2 0x3917 JUMP JUMPDEST PUSH2 0x2F0B SWAP1 PUSH1 0x30 PUSH2 0x371C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F20 JUMPI PUSH2 0x2F20 PUSH2 0x3865 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2F42 PUSH1 0xA DUP7 PUSH2 0x38B1 JUMP JUMPDEST SWAP5 POP PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x36F2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3010 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F8E JUMPI PUSH2 0x2F8E PUSH2 0x3865 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2FD0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x2FFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x3008 DUP2 PUSH2 0x377D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F71 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x310B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x305C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x392B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3097 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3094 SWAP2 DUP2 ADD SWAP1 PUSH2 0x3968 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x30F1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x30C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x30CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x30E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2827 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3122 SWAP1 PUSH2 0x35E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3144 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x318A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x315D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x318A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x318A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x318A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x316F JUMP JUMPDEST POP PUSH2 0x3196 SWAP3 SWAP2 POP PUSH2 0x319A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3196 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x319B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B4A DUP2 PUSH2 0x31AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x31E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3226 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x31E2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2B4A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x327D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x329E DUP4 PUSH2 0x3266 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x32DD JUMPI PUSH2 0x32DD PUSH2 0x32AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3305 JUMPI PUSH2 0x3305 PUSH2 0x32AC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x331E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x334A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x3372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2827 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x339F DUP5 PUSH2 0x3266 JUMP JUMPDEST SWAP3 POP PUSH2 0x33AD PUSH1 0x20 DUP6 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x33E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x340B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x327D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B4A DUP3 PUSH2 0x3432 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B4A DUP3 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x348C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3495 DUP4 PUSH2 0x3266 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x34AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34D1 DUP4 PUSH2 0x3432 JUMP JUMPDEST SWAP2 POP PUSH2 0x34DF PUSH1 0x20 DUP5 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x34FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3507 DUP6 PUSH2 0x3266 JUMP JUMPDEST SWAP4 POP PUSH2 0x3515 PUSH1 0x20 DUP7 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3558 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x32C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34D1 DUP4 PUSH2 0x3266 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35A1 DUP7 PUSH2 0x3266 JUMP JUMPDEST SWAP5 POP PUSH2 0x35AF PUSH1 0x20 DUP8 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP4 POP PUSH2 0x35BD PUSH1 0x40 DUP8 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP3 POP PUSH2 0x35CB PUSH1 0x60 DUP8 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP2 POP PUSH2 0x35D9 PUSH1 0x80 DUP8 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x35F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x361A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x367D JUMPI PUSH2 0x367D PUSH2 0x3655 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x36ED JUMPI PUSH2 0x36ED PUSH2 0x3655 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x372F JUMPI PUSH2 0x372F PUSH2 0x3655 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3A1039BAB838363C97 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3791 JUMPI PUSH2 0x3791 PUSH2 0x3655 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x37B2 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x37D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x37E8 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x37F9 JUMPI PUSH2 0x3826 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3826 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x381E JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x3805 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383E DUP3 DUP7 PUSH2 0x3798 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x384E DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x385A DUP2 DUP4 ADD DUP7 PUSH2 0x3798 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x3892 JUMPI PUSH2 0x3892 PUSH2 0x3655 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38C0 JUMPI PUSH2 0x38C0 PUSH2 0x389B JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3926 JUMPI PUSH2 0x3926 PUSH2 0x389B JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x395E SWAP1 DUP4 ADD DUP5 PUSH2 0x320E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x397A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2B4A DUP2 PUSH2 0x31AF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 SWAP12 0xB2 0x4F 0xA7 RETURN SWAP15 CALLVALUE 0x1F 0xC 0xBF ADDMOD 0xB1 PUSH27 0xC026AA5E9F9F211FF8857ECB43DEFF2A587F64736F6C634300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x397"
    },
    "12": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "25": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DC"
    },
    "29": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "36": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "47": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEE3743AB"
    },
    "58": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEE3743AB"
    },
    "69": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA36"
    },
    "73": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA4B"
    },
    "84": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA6B"
    },
    "95": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFCAA7664"
    },
    "102": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA81"
    },
    "106": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "118": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x987"
    },
    "122": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "129": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9B8"
    },
    "133": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "140": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9CD"
    },
    "144": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEA74E190"
    },
    "151": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA16"
    },
    "155": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "167": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "178": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91D"
    },
    "182": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "189": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x932"
    },
    "193": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDB993F56"
    },
    "200": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x952"
    },
    "204": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "211": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x972"
    },
    "215": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "227": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AD"
    },
    "231": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "238": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CD"
    },
    "242": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD2FAB8B9"
    },
    "249": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FD"
    },
    "253": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB1214392"
    },
    "265": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17A"
    },
    "269": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "276": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "287": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84D"
    },
    "291": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "298": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86D"
    },
    "302": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "309": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x883"
    },
    "313": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "320": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x898"
    },
    "324": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB1214392"
    },
    "336": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7CD"
    },
    "340": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "347": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7ED"
    },
    "351": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "358": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x80D"
    },
    "362": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBBC903EA"
    },
    "369": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "370": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x82D"
    },
    "373": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "374": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "376": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "377": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "378": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "385": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B6"
    },
    "389": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "396": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x754"
    },
    "400": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "407": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x777"
    },
    "411": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "418": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x78C"
    },
    "422": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "424": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "429": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "430": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7AD"
    },
    "433": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "436": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "437": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "445": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x717"
    },
    "449": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "456": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x72C"
    },
    "460": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "462": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x858E83B5"
    },
    "467": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "468": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x741"
    },
    "471": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "472": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "474": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "475": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "476": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "483": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C1"
    },
    "487": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "494": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25F"
    },
    "498": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "505": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22E"
    },
    "509": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "516": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A1"
    },
    "520": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x791A2519"
    },
    "527": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B7"
    },
    "531": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "538": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D7"
    },
    "542": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "544": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "549": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "550": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F7"
    },
    "553": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "554": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "556": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "557": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "558": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "565": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x642"
    },
    "569": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "576": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x657"
    },
    "580": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "587": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66C"
    },
    "591": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "593": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "598": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "599": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x68C"
    },
    "602": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "603": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "605": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "606": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "607": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "614": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29B"
    },
    "618": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "625": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C2"
    },
    "629": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x61869A93"
    },
    "636": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DA"
    },
    "640": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x622E4E78"
    },
    "647": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x602"
    },
    "651": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "653": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "658": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "659": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x622"
    },
    "662": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "663": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "665": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "666": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "667": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "674": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x562"
    },
    "678": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42966C68"
    },
    "685": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x582"
    },
    "689": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "691": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "696": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "697": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5A2"
    },
    "700": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "701": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "703": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "704": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "705": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "712": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x339"
    },
    "716": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "723": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x308"
    },
    "727": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "734": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x512"
    },
    "738": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3C795047"
    },
    "745": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x525"
    },
    "749": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "756": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x545"
    },
    "760": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "762": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "767": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "768": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54D"
    },
    "771": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "772": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "774": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "775": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "776": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x20841A6A"
    },
    "783": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A6"
    },
    "787": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "794": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C6"
    },
    "798": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "800": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "805": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "806": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E6"
    },
    "809": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "810": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "816": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "817": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4FC"
    },
    "820": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "821": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "823": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "824": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "825": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "832": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "GT",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x375"
    },
    "836": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "843": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "847": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "854": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x44F"
    },
    "858": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "860": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "865": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "866": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x471"
    },
    "869": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "870": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "876": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "877": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x491"
    },
    "880": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "881": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "883": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "884": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "885": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "892": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "893": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x39C"
    },
    "896": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "903": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "904": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D1"
    },
    "907": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "908": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "909": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "914": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "EQ",
      "path": "16"
    },
    "915": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F3"
    },
    "918": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "919": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "920": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "922": {
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "DUP1",
      "path": "16"
    },
    "923": {
      "first_revert": true,
      "fn": null,
      "offset": [
        546,
        10095
      ],
      "op": "REVERT",
      "path": "16"
    },
    "924": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "925": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "926": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "927": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "928": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A8"
    },
    "931": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "932": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "934": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "935": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "REVERT",
      "path": "3"
    },
    "936": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BC"
    },
    "941": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B7"
    },
    "944": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "947": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31C5"
    },
    "950": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "951": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "952": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA99"
    },
    "955": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "957": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "960": {
      "op": "SWAP1"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "ISZERO"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "972": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "3"
    },
    "973": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "974": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "3"
    },
    "975": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "976": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "981": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DD"
    },
    "984": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "985": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "987": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "DUP1",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "REVERT",
      "path": "3"
    },
    "989": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "POP",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEB"
    },
    "997": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "998": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "999": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1001": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1002": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C8"
    },
    "1005": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1006": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1007": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x323A"
    },
    "1010": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1013": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1015": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1019": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1022": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x413"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40E"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x324D"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1038": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1039": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7D"
    },
    "1042": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1043": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1044": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "op": "SWAP1"
    },
    "1056": {
      "op": "SWAP2"
    },
    "1057": {
      "op": "AND"
    },
    "1058": {
      "op": "DUP2"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1062": {
      "op": "ADD"
    },
    "1063": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C8"
    },
    "1066": {
      "op": "JUMP"
    },
    "1067": {
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1069": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1071": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x437"
    },
    "1074": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1075": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1077": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1078": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1079": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1080": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "POP",
      "path": "16"
    },
    "1081": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "1084": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1086": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1087": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1088": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1089": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1090": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1092": {
      "fn": "ERC721.getApproved",
      "offset": [
        2004,
        2032
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "DUP2"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "offset": [
        2004,
        2032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C8"
    },
    "1102": {
      "op": "JUMP"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1106": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1107": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45B"
    },
    "1110": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1111": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1114": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1115": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "1120": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46A"
    },
    "1123": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1124": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1126": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3282"
    },
    "1129": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1130": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1131": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC17"
    },
    "1134": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1135": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1136": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "3"
    },
    "1137": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1139": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1140": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1141": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47D"
    },
    "1144": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1145": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1147": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1148": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1149": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1154": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x48C"
    },
    "1157": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1158": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1160": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3338"
    },
    "1163": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1164": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1165": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD2D"
    },
    "1168": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1169": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1170": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1171": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1172": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1173": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49D"
    },
    "1176": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1177": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1179": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1181": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1182": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "POP",
      "path": "16"
    },
    "1183": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "1186": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "1189": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1190": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1191": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1192": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1193": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1194": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B2"
    },
    "1197": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1198": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1200": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1201": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1202": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1207": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C1"
    },
    "1210": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1211": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1213": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x324D"
    },
    "1216": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1217": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1218": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE4B"
    },
    "1221": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "i",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1224": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D2"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1230": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1233": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1234": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E1"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3381"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE80"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1254": {
      "offset": [
        829,
        854
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1258": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F2"
    },
    "1261": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1262": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1264": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1265": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1266": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1267": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "POP",
      "path": "16"
    },
    "1268": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "1271": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1273": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1274": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1275": {
      "fn": "ERC721.transferFrom",
      "offset": [
        829,
        854
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1276": {
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1277": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1278": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1279": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1280": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x508"
    },
    "1283": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1284": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1286": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1287": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1288": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1289": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "POP",
      "path": "16"
    },
    "1290": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "1293": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1295": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1296": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1297": {
      "fn": "ERC721.transferFrom",
      "offset": [
        1793,
        1823
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1298": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1299": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1302": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x520"
    },
    "1305": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1306": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1308": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33BD"
    },
    "1311": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1312": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1313": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB2"
    },
    "1316": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1317": {
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1318": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1319": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1320": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1321": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x531"
    },
    "1324": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1325": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1327": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1328": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1329": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "1333": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1334": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "1337": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "offset": [
        1302,
        1375
      ],
      "op": "AND",
      "path": "16"
    },
    "1347": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        1302,
        1375
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1349": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1350": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1353": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8968
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11C9"
    },
    "1356": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8129,
        8968
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1357": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1358": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1359": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1360": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1361": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x559"
    },
    "1364": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1365": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1367": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1368": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1369": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1370": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "POP",
      "path": "16"
    },
    "1371": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1374": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x158C"
    },
    "1377": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1380": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1381": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56E"
    },
    "1385": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1386": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1390": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "1395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57D"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3381"
    },
    "1404": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1405": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C6"
    },
    "1409": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1410": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1411": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1412": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1413": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1414": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x58E"
    },
    "1417": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1418": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1420": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1421": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1422": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46F"
    },
    "1427": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59D"
    },
    "1430": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1431": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1433": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x324D"
    },
    "1436": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1437": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1438": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E1"
    },
    "1441": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1442": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1443": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1444": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1445": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1446": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AE"
    },
    "1449": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1450": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1452": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1453": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1454": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1459": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5BD"
    },
    "1462": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1463": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1465": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3338"
    },
    "1468": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1469": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1470": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x165B"
    },
    "1473": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1474": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1475": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1476": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1477": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1478": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CE"
    },
    "1481": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1482": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1484": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1485": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1486": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x6"
    },
    "1490": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1491": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1493": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1494": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BC"
    },
    "1497": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1498": {
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1499": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1500": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1501": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1502": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E6"
    },
    "1505": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1506": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1508": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1509": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1510": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1514": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1515": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "1518": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1519": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "1525": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1526": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DIV",
      "path": "16"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "offset": [
        1122,
        1195
      ],
      "op": "AND",
      "path": "16"
    },
    "1536": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1537": {
      "fn": "Pausable.paused",
      "offset": [
        1122,
        1195
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1538": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1539": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1540": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1541": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1542": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60E"
    },
    "1545": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1546": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1548": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1549": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1550": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1555": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x61D"
    },
    "1558": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1559": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1561": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3443"
    },
    "1564": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1565": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1566": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16EC"
    },
    "1569": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "i",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1571": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1572": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "1577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1581": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x413"
    },
    "1587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63D"
    },
    "1590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1591": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x324D"
    },
    "1596": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1597": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "1601": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1602": {
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1603": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1605": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64E"
    },
    "1609": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1610": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1612": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "1619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17AF"
    },
    "1622": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1623": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1624": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1625": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1626": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1627": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x663"
    },
    "1630": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1631": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1633": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1634": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1635": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1636": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "POP",
      "path": "16"
    },
    "1637": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "1640": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x183D"
    },
    "1643": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9003,
        9167
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1644": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1645": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1646": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1647": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1648": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x678"
    },
    "1651": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1652": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1654": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x441"
    },
    "1661": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x687"
    },
    "1664": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1665": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1667": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x345E"
    },
    "1670": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1671": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1672": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1899"
    },
    "1675": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x698"
    },
    "1683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1920"
    },
    "1696": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1697": {
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1698": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1699": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AD"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "POP",
      "path": "16"
    },
    "1711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "1714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1717": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2068,
        2098
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1719": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1720": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1721": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1722": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1723": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C3"
    },
    "1726": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1727": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1729": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1730": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1731": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1736": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D2"
    },
    "1739": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1740": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1742": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x324D"
    },
    "1745": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1746": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1747": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195A"
    },
    "1750": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "i",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1751": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1752": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1753": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1754": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1755": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E3"
    },
    "1758": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1759": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1761": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1762": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1763": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1768": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F2"
    },
    "1771": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1772": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1774": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3443"
    },
    "1777": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1778": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1779": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x198F"
    },
    "1782": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1783": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1784": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1785": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1786": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1787": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x703"
    },
    "1790": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1791": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1793": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1794": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1795": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1800": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x712"
    },
    "1803": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1804": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1806": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x324D"
    },
    "1809": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1810": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1811": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1ADD"
    },
    "1814": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1815": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1816": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1817": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1818": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1819": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x723"
    },
    "1822": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1823": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1825": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1826": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1827": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1828": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "POP",
      "path": "16"
    },
    "1829": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1832": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B12"
    },
    "1835": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1836": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1837": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1838": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1839": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1840": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x738"
    },
    "1843": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1844": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1846": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1847": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1848": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1849": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "POP",
      "path": "16"
    },
    "1850": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1853": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1A"
    },
    "1856": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5655,
        5714
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1857": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1858": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "1861": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x74F"
    },
    "1864": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1865": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1867": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3443"
    },
    "1870": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1871": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1872": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C52"
    },
    "1875": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1876": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1877": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1878": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1879": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1880": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x760"
    },
    "1883": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1884": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1886": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1887": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1888": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x6"
    },
    "1892": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1893": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1896": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1897": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1904": {
      "op": "SHL"
    },
    "1905": {
      "op": "SUB"
    },
    "1906": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1907": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "1910": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1911": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1912": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1913": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1914": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1915": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x783"
    },
    "1918": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1919": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1921": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1922": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1923": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1924": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "POP",
      "path": "3"
    },
    "1925": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E6"
    },
    "1928": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F56"
    },
    "1931": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1932": {
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1933": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1934": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1935": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1936": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x798"
    },
    "1939": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1940": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1942": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1943": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1944": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1948": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1949": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BC"
    },
    "1952": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1953": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "1958": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1959": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DIV",
      "path": "16"
    },
    "1960": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1962": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "AND",
      "path": "16"
    },
    "1963": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1964": {
      "fn": "ERC721.symbol",
      "offset": [
        1075,
        1115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1965": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1966": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1967": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1969": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B9"
    },
    "1972": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1973": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1975": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1976": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1977": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "1982": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C8"
    },
    "1985": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1986": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1988": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3479"
    },
    "1991": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1992": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1993": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F65"
    },
    "1996": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1997": {
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1998": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1999": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2000": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2001": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D9"
    },
    "2004": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2005": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2007": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2008": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2009": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "2013": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2014": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "2017": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "offset": [
        1210,
        1283
      ],
      "op": "AND",
      "path": "16"
    },
    "2027": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2028": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        1210,
        1283
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2029": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2030": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2031": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2032": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2033": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F9"
    },
    "2036": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2037": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2039": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2040": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2041": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2046": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x808"
    },
    "2049": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2050": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2052": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B5"
    },
    "2055": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2056": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2057": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F70"
    },
    "2060": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2063": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x819"
    },
    "2068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2072": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "2078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x828"
    },
    "2081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2082": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2084": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34E8"
    },
    "2087": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2088": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2089": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20BF"
    },
    "2092": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2093": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2094": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2095": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2096": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2097": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x839"
    },
    "2100": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2101": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2103": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2104": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2105": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2110": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x848"
    },
    "2113": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2114": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2116": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x345E"
    },
    "2119": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2120": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2121": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F7"
    },
    "2124": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2125": {
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2127": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2128": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2129": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x859"
    },
    "2132": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2133": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2135": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2136": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2137": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "2141": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2142": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BC"
    },
    "2145": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2146": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "2150": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2151": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DIV",
      "path": "16"
    },
    "2152": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2154": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "AND",
      "path": "16"
    },
    "2155": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2156": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1035,
        1069
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2157": {
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2160": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2161": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x879"
    },
    "2164": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2165": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2167": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2168": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2169": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2170": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "POP",
      "path": "16"
    },
    "2171": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "2174": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2176": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2177": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2178": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        1943,
        1972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2179": {
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2180": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2181": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2182": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2183": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88F"
    },
    "2186": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2187": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2189": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2190": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "POP",
      "path": "16"
    },
    "2193": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "2196": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x214B"
    },
    "2199": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        927,
        964
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2200": {
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2203": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2204": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A4"
    },
    "2207": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2208": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2210": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2211": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "POP",
      "path": "16"
    },
    "2214": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "2217": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2158"
    },
    "2220": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        861,
        889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2221": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2222": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2223": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2224": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2225": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8B9"
    },
    "2228": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2229": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2231": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2233": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2234": {
      "op": "POP"
    },
    "2235": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "2238": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2242": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2244": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x324D"
    },
    "2247": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2248": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2165"
    },
    "2252": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2253": {
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2254": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2255": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2256": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2257": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8D9"
    },
    "2260": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2261": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2263": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2265": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BC"
    },
    "2270": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E8"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2276": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x345E"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2280": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2281": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2283": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2285": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2290": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2291": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2293": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2294": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2295": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2296": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2298": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "AND",
      "path": "16"
    },
    "2299": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2300": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1852,
        1891
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2301": {
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2302": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2303": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2304": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2305": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x909"
    },
    "2308": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2309": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2311": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2312": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2313": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "2317": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2318": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "2321": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "op": "SUB"
    },
    "2330": {
      "offset": [
        1394,
        1467
      ],
      "op": "AND",
      "path": "16"
    },
    "2331": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2332": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1394,
        1467
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2333": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2336": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2337": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x929"
    },
    "2340": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2341": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2343": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2344": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2345": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2346": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "POP",
      "path": "16"
    },
    "2347": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "2350": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2219"
    },
    "2353": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9173,
        9324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2354": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2355": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2356": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2357": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2358": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x93E"
    },
    "2361": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2362": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2364": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2365": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2366": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2371": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x94D"
    },
    "2374": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2375": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2377": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3338"
    },
    "2380": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2381": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2382": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2272"
    },
    "2385": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2386": {
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2388": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2389": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2390": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95E"
    },
    "2393": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2394": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2396": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2397": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2398": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2402": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2403": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x413"
    },
    "2406": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2413": {
      "op": "SHL"
    },
    "2414": {
      "op": "SUB"
    },
    "2415": {
      "offset": [
        1486,
        1559
      ],
      "op": "AND",
      "path": "16"
    },
    "2416": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2417": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        1486,
        1559
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2420": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x97E"
    },
    "2425": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2426": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2428": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2429": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2430": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2431": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "POP",
      "path": "16"
    },
    "2432": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "2435": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22B5"
    },
    "2438": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9714,
        9824
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2439": {
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2440": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2441": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2442": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2443": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x993"
    },
    "2446": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2447": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2449": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2450": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2451": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "2455": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2456": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9A6"
    },
    "2459": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2460": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2463": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2464": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DIV",
      "path": "16"
    },
    "2465": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2467": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "AND",
      "path": "16"
    },
    "2468": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2469": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2470": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2471": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2473": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        999,
        1024
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2476": {
      "op": "SWAP1"
    },
    "2477": {
      "op": "SWAP2"
    },
    "2478": {
      "op": "AND"
    },
    "2479": {
      "op": "DUP2"
    },
    "2480": {
      "op": "MSTORE"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "offset": [
        999,
        1024
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C8"
    },
    "2487": {
      "op": "JUMP"
    },
    "2488": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2489": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2490": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2491": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2492": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9C4"
    },
    "2495": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2496": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2498": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2499": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2500": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2501": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "POP",
      "path": "16"
    },
    "2502": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2505": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22CC"
    },
    "2508": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2512": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D9"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BC"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E8"
    },
    "2529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3564"
    },
    "2535": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2543": {
      "op": "SHL"
    },
    "2544": {
      "op": "SUB"
    },
    "2545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 2
    },
    "2546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "2548": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2553": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2555": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2558": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2559": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2560": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2563": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2564": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2565": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2566": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2567": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2569": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2570": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2571": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2572": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2573": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2574": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2575": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2576": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2577": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2579": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "2580": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2581": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2583": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2584": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2585": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2586": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA22"
    },
    "2589": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2590": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2592": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2593": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2594": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2599": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA31"
    },
    "2602": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2603": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2605": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3580"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2609": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2610": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23C6"
    },
    "2613": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "i",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2614": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2615": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2616": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2617": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2618": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA42"
    },
    "2621": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2622": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2624": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2625": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2626": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2627": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "POP",
      "path": "16"
    },
    "2628": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x46F"
    },
    "2631": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2465"
    },
    "2634": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2635": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA57"
    },
    "2642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2643": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "2652": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA66"
    },
    "2655": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2656": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2658": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345E"
    },
    "2661": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2662": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2623"
    },
    "2666": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2667": {
      "offset": [
        2113,
        2150
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA77"
    },
    "2674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2675": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "POP",
      "path": "16"
    },
    "2681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x441"
    },
    "2684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2113,
        2150
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2689": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2690": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2691": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2692": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2693": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA8D"
    },
    "2696": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2697": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2699": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2700": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2701": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2702": {
      "op": "POP"
    },
    "2703": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9899,
        9904
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0xD"
    },
    "2705": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9899,
        9904
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2706": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9899,
        9904
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2708": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9899,
        9904
      ],
      "op": "AND",
      "path": "16"
    },
    "2709": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9A6"
    },
    "2712": {
      "fn": "CryptidToken.getStage",
      "offset": [
        9834,
        9911
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2713": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "op": "NOT"
    },
    "2725": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 4
    },
    "2726": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "3"
    },
    "2727": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2734": {
      "op": "SHL"
    },
    "2735": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACA"
    },
    "2740": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2741": {
      "op": "POP"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "op": "NOT"
    },
    "2751": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2752": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "3"
    },
    "2753": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2760": {
      "op": "SHL"
    },
    "2761": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE5"
    },
    "2767": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2776": {
      "op": "SHL"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "op": "SUB"
    },
    "2785": {
      "op": "NOT"
    },
    "2786": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 5
    },
    "2787": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "13"
    },
    "2788": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "13"
    },
    "2789": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2790": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2791": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "2800": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFA"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E5"
    },
    "2809": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2810": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2814": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2817": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2820": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2821": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2823": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2824": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2826": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2828": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2829": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2830": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2832": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2833": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2837": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2838": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2839": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2840": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2842": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2843": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2844": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2845": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2846": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB26"
    },
    "2849": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E5"
    },
    "2853": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2854": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2855": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2856": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2857": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "2860": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2862": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2864": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "3"
    },
    "2865": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB48"
    },
    "2868": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2869": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2872": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2873": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2874": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2875": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "3"
    },
    "2876": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "3"
    },
    "2877": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2878": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2879": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2880": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2882": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2883": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2884": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "2887": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2888": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2889": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2890": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2891": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2892": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2893": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2895": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2896": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2898": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2900": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2901": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2903": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2904": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2905": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2906": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2907": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2908": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2910": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2911": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2912": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2914": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2915": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2916": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2917": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "3"
    },
    "2918": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB56"
    },
    "2921": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2922": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2923": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2924": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "3"
    },
    "2925": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2927": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "3"
    },
    "2928": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2929": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "3"
    },
    "2930": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2931": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2932": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2933": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2934": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2935": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2936": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2937": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2938": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2940": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2941": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2942": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2944": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 7
    },
    "2945": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2946": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2947": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2949": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2951": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2952": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2954": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2955": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2956": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "op": "SUB"
    },
    "2965": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "2966": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0xBFB"
    },
    "2969": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2970": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2972": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2981": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2984": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2986": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "3"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2993": {
      "op": "DUP3"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3031": {
      "op": "DUP3"
    },
    "3032": {
      "op": "ADD"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "ADD"
    },
    "3054": {
      "op": "MSTORE"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3057": {
      "op": "ADD"
    },
    "3058": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3059": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3061": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3062": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3063": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3064": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "3"
    },
    "3065": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3066": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "3067": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "3071": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3072": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3073": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3074": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3076": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3078": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3079": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3081": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3082": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3083": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "3"
    },
    "3093": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3094": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3095": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3098": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC22"
    },
    "3101": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3102": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "3105": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3106": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3107": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3108": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "3"
    },
    "3109": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 10
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3119": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "3"
    },
    "3129": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "3"
    },
    "3130": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3131": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC90"
    },
    "3134": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3135": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3137": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3146": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3149": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3151": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3152": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "3"
    },
    "3153": {
      "op": "MSTORE"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3158": {
      "op": "DUP3"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3196": {
      "op": "DUP3"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3203": {
      "op": "SHL"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3206": {
      "op": "DUP3"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "op": "MSTORE"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "3215": {
      "op": "JUMP"
    },
    "3216": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3217": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 11
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3224": {
      "op": "SHL"
    },
    "3225": {
      "op": "SUB"
    },
    "3226": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 12
    },
    "3227": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "3"
    },
    "3228": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "3"
    },
    "3229": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3230": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCAC"
    },
    "3233": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3234": {
      "op": "POP"
    },
    "3235": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCAC"
    },
    "3238": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3239": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3240": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E8"
    },
    "3243": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3244": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3245": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1E"
    },
    "3248": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3249": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3251": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3258": {
      "op": "SHL"
    },
    "3259": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3260": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3263": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3265": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3266": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "3"
    },
    "3267": {
      "op": "MSTORE"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3272": {
      "op": "DUP3"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "MSTORE"
    },
    "3275": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "ADD"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3348": {
      "op": "DUP3"
    },
    "3349": {
      "op": "ADD"
    },
    "3350": {
      "op": "MSTORE"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "3357": {
      "op": "JUMP"
    },
    "3358": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3359": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0xD28"
    },
    "3362": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3363": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3364": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26CA"
    },
    "3367": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3368": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3369": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3370": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3371": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "3"
    },
    "3372": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3373": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3374": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3376": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3388": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3389": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3390": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3391": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3392": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3393": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3394": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5D"
    },
    "3397": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3398": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3400": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3409": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3412": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "3416": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "3420": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3421": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3422": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7397,
        7398
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x0"
    },
    "3424": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7371,
        7386
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3425": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7365,
        7394
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3426": {
      "branch": 148,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7365,
        7398
      ],
      "op": "GT",
      "path": "16"
    },
    "3427": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDBE"
    },
    "3430": {
      "branch": 148,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3431": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3433": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3440": {
      "op": "SHL"
    },
    "3441": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3442": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3445": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3447": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3448": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "ADD",
      "path": "16"
    },
    "3449": {
      "op": "MSTORE"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3454": {
      "op": "DUP3"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "MSTORE"
    },
    "3457": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3492": {
      "op": "DUP3"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "op": "MSTORE"
    },
    "3495": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "3517": {
      "op": "JUMP"
    },
    "3518": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7357,
        7442
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3519": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0xD"
    },
    "3521": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3522": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "3527": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3528": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "DIV",
      "path": "16"
    },
    "3529": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3531": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7461,
        7481
      ],
      "op": "AND",
      "path": "16"
    },
    "3532": {
      "branch": 149,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7460,
        7481
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3533": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE18"
    },
    "3536": {
      "branch": 149,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3537": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3539": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3546": {
      "op": "SHL"
    },
    "3547": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3548": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3551": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3553": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3554": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "ADD",
      "path": "16"
    },
    "3555": {
      "op": "MSTORE"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3560": {
      "op": "DUP3"
    },
    "3561": {
      "op": "ADD"
    },
    "3562": {
      "op": "MSTORE"
    },
    "3563": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "ADD"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3603": {
      "op": "ADD"
    },
    "3604": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "3607": {
      "op": "JUMP"
    },
    "3608": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7452,
        7512
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3609": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 16
    },
    "3610": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3611": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2B"
    },
    "3614": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3615": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3617": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7536
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3618": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3620": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3621": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "ADD",
      "path": "16"
    },
    "3622": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3623": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3116"
    },
    "3626": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        7522,
        7554
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3627": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3628": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7522,
        7554
      ],
      "op": "POP",
      "path": "16"
    },
    "3629": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        7272,
        7561
      ],
      "op": "POP",
      "path": "16"
    },
    "3630": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        7272,
        7561
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3631": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3632": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9374,
        9381
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3634": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9428,
        9429
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x1"
    },
    "3636": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9425
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE3C"
    },
    "3639": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9415
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "3641": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10",
      "statement": 18
    },
    "3642": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3643": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3644": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9425
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3645": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9429
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE46"
    },
    "3648": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9429
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3649": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9429
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3650": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9429
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x366B"
    },
    "3653": {
      "fn": "CryptidToken.totalSupply",
      "jump": "i",
      "offset": [
        9400,
        9429
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3654": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9400,
        9429
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3655": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9393,
        9429
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3656": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9393,
        9429
      ],
      "op": "POP",
      "path": "16"
    },
    "3657": {
      "fn": "CryptidToken.totalSupply",
      "offset": [
        9330,
        9436
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3658": {
      "fn": "CryptidToken.totalSupply",
      "jump": "o",
      "offset": [
        9330,
        9436
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3659": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3662": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "op": "SUB"
    },
    "3671": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3676": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3677": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3678": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3679": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3680": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7B"
    },
    "3683": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3686": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3698": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "3702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "3706": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3708": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6856,
        6870
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x14"
    },
    "3710": {
      "fn": "CryptidToken.setTeamMintSupply",
      "offset": [
        6856,
        6891
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3711": {
      "fn": "CryptidToken.setTeamMintSupply",
      "jump": "o",
      "offset": [
        6774,
        6898
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3712": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3713": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0xE8B"
    },
    "3716": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3717": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3718": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3719": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2738"
    },
    "3722": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3723": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3724": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA7"
    },
    "3727": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3737": {
      "op": "SHL"
    },
    "3738": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3739": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "3"
    },
    "3743": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "3746": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3747": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3682"
    },
    "3750": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xD28"
    },
    "3755": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3756": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x282F"
    },
    "3761": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3762": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3763": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3854,
        3866
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3764": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3854,
        3866
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3765": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3868,
        3878
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "3767": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3868,
        3878
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3768": {
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF29"
    },
    "3771": {
      "offset": [
        2778,
        2784
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3772": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2778,
        2784
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3773": {
      "offset": [
        2759,
        2833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3774": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3775": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3777": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MUL",
      "path": "16"
    },
    "3778": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3780": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "ADD",
      "path": "16"
    },
    "3781": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3783": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3784": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3785": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3786": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "ADD",
      "path": "16"
    },
    "3787": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3789": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3790": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3791": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3792": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3793": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3794": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3795": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3796": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3797": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3798": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3800": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "ADD",
      "path": "16"
    },
    "3801": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3802": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3803": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3805": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MUL",
      "path": "16"
    },
    "3806": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3807": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3808": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3809": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "3810": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3812": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3813": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "ADD",
      "path": "16"
    },
    "3814": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3815": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3816": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3817": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "offset": [
        2803,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3822": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3823": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3836": {
      "op": "NOT"
    },
    "3837": {
      "offset": [
        2820,
        2830
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "op": "AND"
    },
    "3842": {
      "offset": [
        2803,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3844": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3845": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "ADD",
      "path": "16"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "offset": [
        2786,
        2791
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3848": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2786,
        2791
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "SWAP1"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "offset": [
        2803,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3857": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3858": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3860": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3861": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3862": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "SUB",
      "path": "16"
    },
    "3863": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "SUB",
      "path": "16"
    },
    "3864": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3865": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3866": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3867": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3869": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2803,
        2831
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3870": {
      "offset": [
        2793,
        2832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3871": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2793,
        2832
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3872": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2793,
        2832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3873": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2793,
        2832
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3875": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2793,
        2832
      ],
      "op": "ADD",
      "path": "16"
    },
    "3876": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2793,
        2832
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3877": {
      "offset": [
        2759,
        2777
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29DA"
    },
    "3880": {
      "jump": "i",
      "offset": [
        2759,
        2833
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3881": {
      "branch": 150,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2759,
        2833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3882": {
      "offset": [
        2751,
        2863
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF75"
    },
    "3885": {
      "branch": 150,
      "offset": [
        2751,
        2863
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3886": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2751,
        2863
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3888": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2751,
        2863
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "offset": [
        2751,
        2863
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3897": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2751,
        2863
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3900": {
      "offset": [
        2751,
        2863
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3902": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2751,
        2863
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3903": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2751,
        2863
      ],
      "op": "ADD",
      "path": "16"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3909": {
      "op": "DUP3"
    },
    "3910": {
      "op": "ADD"
    },
    "3911": {
      "op": "MSTORE"
    },
    "3912": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3947": {
      "op": "DUP3"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "MSTORE"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "offset": [
        2751,
        2863
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "3956": {
      "op": "JUMP"
    },
    "3957": {
      "offset": [
        2751,
        2863
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3958": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3906,
        3915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "3960": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3906,
        3915
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3961": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3917,
        3918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3963": {
      "offset": [
        3000,
        3009
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "3964": {
      "offset": [
        2972,
        2996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF85"
    },
    "3967": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3917,
        3918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3968": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3906,
        3915
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3969": {
      "offset": [
        2972,
        2996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36D3"
    },
    "3972": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        2972,
        2996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3973": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2972,
        2996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3974": {
      "offset": [
        2972,
        3009
      ],
      "op": "EQ",
      "path": "16"
    },
    "3975": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFCE"
    },
    "3978": {
      "offset": [
        2964,
        3039
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3979": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3981": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2964,
        3039
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "offset": [
        2964,
        3039
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3990": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2964,
        3039
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3993": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3995": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2964,
        3039
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3996": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2964,
        3039
      ],
      "op": "ADD",
      "path": "16"
    },
    "3997": {
      "op": "MSTORE"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4002": {
      "op": "DUP3"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4036": {
      "op": "DUP3"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4045": {
      "op": "JUMP"
    },
    "4046": {
      "offset": [
        2964,
        3039
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4047": {
      "offset": [
        3105,
        3114
      ],
      "op": "ORIGIN",
      "path": "16"
    },
    "4048": {
      "offset": [
        3118,
        3128
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4049": {
      "offset": [
        3105,
        3128
      ],
      "op": "EQ",
      "path": "16"
    },
    "4050": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x101D"
    },
    "4053": {
      "offset": [
        3097,
        3164
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4054": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4056": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3097,
        3164
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4063": {
      "op": "SHL"
    },
    "4064": {
      "offset": [
        3097,
        3164
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4065": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3097,
        3164
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4068": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4070": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3097,
        3164
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4071": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3097,
        3164
      ],
      "op": "ADD",
      "path": "16"
    },
    "4072": {
      "op": "MSTORE"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4077": {
      "op": "DUP3"
    },
    "4078": {
      "op": "ADD"
    },
    "4079": {
      "op": "MSTORE"
    },
    "4080": {
      "op": "PUSH32",
      "value": "0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4115": {
      "op": "DUP3"
    },
    "4116": {
      "op": "ADD"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4124": {
      "op": "JUMP"
    },
    "4125": {
      "offset": [
        3097,
        3164
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4126": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4128": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4130": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4131": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4132": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4133": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1070"
    },
    "4136": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4137": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4139": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4148": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4151": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4153": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4154": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4198": {
      "op": "DUP3"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "MSTORE"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4203": {
      "op": "ADD"
    },
    "4204": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF2"
    },
    "4207": {
      "op": "JUMP"
    },
    "4208": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4209": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4211": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4213": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4214": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "4216": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4217": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4219": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4220": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4221": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1098"
    },
    "4224": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4225": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4227": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4236": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4237": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4239": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4240": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "4243": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4244": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36F2"
    },
    "4247": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4248": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4249": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4009,
        4014
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0xD"
    },
    "4251": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4009,
        4014
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4252": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4009,
        4014
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4254": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4009,
        4014
      ],
      "op": "AND",
      "path": "16"
    },
    "4255": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4018,
        4019
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4257": {
      "branch": 151,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4009,
        4019
      ],
      "op": "EQ",
      "path": "16"
    },
    "4258": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10ED"
    },
    "4261": {
      "branch": 151,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4262": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4264": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4273": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4276": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4278": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4279": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "ADD",
      "path": "16"
    },
    "4280": {
      "op": "DUP2"
    },
    "4281": {
      "op": "SWAP1"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "op": "MSTORE"
    },
    "4288": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E74696E67206E6F7420696E697469617465642E"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4332": {
      "op": "JUMP"
    },
    "4333": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4001,
        4056
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4334": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4082,
        4092
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 23
    },
    "4335": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4337": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4338": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4339": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4340": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4081
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4342": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4344": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4345": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4347": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4348": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4349": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4350": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4352": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4093
      ],
      "op": "AND",
      "path": "16"
    },
    "4353": {
      "branch": 152,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4074,
        4102
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4354": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114D"
    },
    "4357": {
      "branch": 152,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4358": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4360": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4369": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4372": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4374": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4375": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "ADD",
      "path": "16"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "op": "MSTORE"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4424": {
      "op": "ADD"
    },
    "4425": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4428": {
      "op": "JUMP"
    },
    "4429": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4066,
        4138
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4430": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4178,
        4193
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x12"
    },
    "4432": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4178,
        4193
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4433": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4170
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1158"
    },
    "4436": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "4439": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4157,
        4170
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4440": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4170
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4441": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1163"
    },
    "4444": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4174
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4445": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4173,
        4174
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4447": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371C"
    },
    "4450": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4157,
        4174
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4451": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4174
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4452": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4193
      ],
      "op": "GT",
      "path": "16"
    },
    "4453": {
      "branch": 153,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4157,
        4193
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4454": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1181"
    },
    "4457": {
      "branch": 153,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4458": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4460": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4467": {
      "op": "SHL"
    },
    "4468": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4469": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4470": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4472": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "ADD",
      "path": "16"
    },
    "4473": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4476": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4477": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3734"
    },
    "4480": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4149,
        4239
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4481": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4149,
        4239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4482": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4257,
        4267
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 25
    },
    "4483": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4485": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4486": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4487": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4488": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4256
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4490": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4492": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4493": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4495": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4496": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4268
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4497": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4498": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4501": {
      "op": "NOT"
    },
    "4502": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "AND",
      "path": "16"
    },
    "4503": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4271,
        4275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4505": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "OR",
      "path": "16"
    },
    "4506": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4507": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4249,
        4275
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4508": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4285,
        4329
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 26,
      "value": "0x11AD"
    },
    "4511": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4285,
        4329
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4512": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4303,
        4328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A8"
    },
    "4515": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4303,
        4318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4517": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4518": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4519": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4520": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4303,
        4328
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4521": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4285,
        4290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29F0"
    },
    "4524": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        4285,
        4329
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4525": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4285,
        4329
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4526": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4339,
        4366
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 27,
      "value": "0x11BB"
    },
    "4529": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4339,
        4354
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "4531": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 28
    },
    "4532": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4533": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4535": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "4536": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4537": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4538": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4539": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        4339,
        4366
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4540": {
      "op": "POP"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4544": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4546": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "op": "POP"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "o",
      "offset": [
        3723,
        4373
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4553": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8129,
        8968
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4554": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4556": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "SUB"
    },
    "4565": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "4568": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4569": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "4571": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4572": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4573": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4574": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F9"
    },
    "4577": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4578": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4587": {
      "op": "SHL"
    },
    "4588": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4589": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4592": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "4596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "4600": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4602": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8216,
        8217
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 29,
      "value": "0x0"
    },
    "4604": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8192,
        8213
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4605": {
      "branch": 154,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8192,
        8217
      ],
      "op": "GT",
      "path": "16"
    },
    "4606": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1242"
    },
    "4609": {
      "branch": 154,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4610": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4612": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4619": {
      "op": "SHL"
    },
    "4620": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4621": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4624": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4626": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4627": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "ADD",
      "path": "16"
    },
    "4628": {
      "op": "MSTORE"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4633": {
      "op": "DUP3"
    },
    "4634": {
      "op": "ADD"
    },
    "4635": {
      "op": "MSTORE"
    },
    "4636": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "4661": {
      "op": "SHL"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4664": {
      "op": "DUP3"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4673": {
      "op": "JUMP"
    },
    "4674": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8184,
        8244
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4675": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "4677": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4678": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8255,
        8262
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4680": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8255,
        8262
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4681": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "4687": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4688": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "DIV",
      "path": "16"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4695": {
      "op": "SHL"
    },
    "4696": {
      "op": "SUB"
    },
    "4697": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8276,
        8289
      ],
      "op": "AND",
      "path": "16"
    },
    "4698": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8343
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1271"
    },
    "4701": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8338,
        8342
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "4704": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8333
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x126B"
    },
    "4707": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8324
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4708": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8329,
        8332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2BC"
    },
    "4711": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B3E"
    },
    "4714": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8303,
        8333
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4715": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8333
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4716": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8337
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4717": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8337
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B51"
    },
    "4720": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8303,
        8343
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4721": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8303,
        8343
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4722": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4724": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4725": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4727": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4728": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4729": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4732": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "GAS",
      "path": "16"
    },
    "4733": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "CALL",
      "path": "16"
    },
    "4734": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4735": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4736": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4737": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4738": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4739": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4740": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4742": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4743": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "EQ",
      "path": "16"
    },
    "4744": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12AD"
    },
    "4747": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4748": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4750": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4751": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4752": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4753": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4755": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "NOT",
      "path": "16"
    },
    "4756": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4758": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4759": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "ADD",
      "path": "16"
    },
    "4760": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "AND",
      "path": "16"
    },
    "4761": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4762": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "ADD",
      "path": "16"
    },
    "4763": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4765": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4766": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4767": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4768": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4769": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4770": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4772": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4774": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4775": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "ADD",
      "path": "16"
    },
    "4776": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4777": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12B2"
    },
    "4780": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4781": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4782": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4784": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4785": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4786": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4787": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8268,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4788": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8254,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4789": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8254,
        8348
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4790": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8254,
        8348
      ],
      "op": "POP",
      "path": "16"
    },
    "4791": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8366,
        8368
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 30
    },
    "4792": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12F8"
    },
    "4795": {
      "branch": 155,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4796": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4798": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4805": {
      "op": "SHL"
    },
    "4806": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4807": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4810": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4812": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4813": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "ADD",
      "path": "16"
    },
    "4814": {
      "op": "MSTORE"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "ADD"
    },
    "4821": {
      "op": "MSTORE"
    },
    "4822": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C4819985A5B1959"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4843": {
      "op": "SHL"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4846": {
      "op": "DUP3"
    },
    "4847": {
      "op": "ADD"
    },
    "4848": {
      "op": "MSTORE"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4851": {
      "op": "ADD"
    },
    "4852": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "4855": {
      "op": "JUMP"
    },
    "4856": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8358,
        8391
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4857": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8423,
        8436
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "4859": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8423,
        8436
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4860": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8402,
        8409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4862": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8402,
        8409
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "SUB"
    },
    "4871": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8423,
        8436
      ],
      "op": "AND",
      "path": "16"
    },
    "4872": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8490
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1318"
    },
    "4875": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8485,
        8489
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "4878": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8480
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x126B"
    },
    "4881": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8471
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "4882": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8476,
        8479
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x69"
    },
    "4884": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8475
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B3E"
    },
    "4887": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8450,
        8480
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4888": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8450,
        8490
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4889": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4891": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4892": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4894": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4895": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4896": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4897": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP6",
      "path": "16"
    },
    "4898": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP8",
      "path": "16"
    },
    "4899": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "GAS",
      "path": "16"
    },
    "4900": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "CALL",
      "path": "16"
    },
    "4901": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4902": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4903": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4904": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4905": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4906": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4907": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4909": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4910": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "EQ",
      "path": "16"
    },
    "4911": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1354"
    },
    "4914": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4915": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4917": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4918": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4919": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4920": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4922": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "NOT",
      "path": "16"
    },
    "4923": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "4925": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4926": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "ADD",
      "path": "16"
    },
    "4927": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "AND",
      "path": "16"
    },
    "4928": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4929": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "ADD",
      "path": "16"
    },
    "4930": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4932": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4933": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4934": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4935": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4936": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4937": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4939": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4941": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4942": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "ADD",
      "path": "16"
    },
    "4943": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4944": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1359"
    },
    "4947": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4948": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4949": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "4951": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4952": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4953": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4954": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8415,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4955": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8401,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4956": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8401,
        8495
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4957": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8401,
        8495
      ],
      "op": "POP",
      "path": "16"
    },
    "4958": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8514,
        8516
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 31
    },
    "4959": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x139F"
    },
    "4962": {
      "branch": 156,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4963": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4965": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4974": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4977": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4979": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4980": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "ADD",
      "path": "16"
    },
    "4981": {
      "op": "MSTORE"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4986": {
      "op": "DUP3"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "MSTORE"
    },
    "4989": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080C8819985A5B1959"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5010": {
      "op": "SHL"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5013": {
      "op": "DUP3"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "MSTORE"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "5022": {
      "op": "JUMP"
    },
    "5023": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8506,
        8539
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5024": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8571,
        8584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5026": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8571,
        8584
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5027": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8550,
        8557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5029": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8550,
        8557
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5036": {
      "op": "SHL"
    },
    "5037": {
      "op": "SUB"
    },
    "5038": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8571,
        8584
      ],
      "op": "AND",
      "path": "16"
    },
    "5039": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8598,
        8638
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13BF"
    },
    "5042": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8633,
        8637
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5045": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8598,
        8628
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x126B"
    },
    "5048": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8598,
        8619
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5049": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8624,
        8627
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x69"
    },
    "5051": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8598,
        8623
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B3E"
    },
    "5054": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8598,
        8628
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5055": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8598,
        8638
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5056": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5058": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5059": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5061": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5062": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5063": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5064": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5065": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5066": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "GAS",
      "path": "16"
    },
    "5067": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "CALL",
      "path": "16"
    },
    "5068": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5069": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5070": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5072": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5073": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5074": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5076": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5077": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "EQ",
      "path": "16"
    },
    "5078": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13FB"
    },
    "5081": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5082": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5084": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5085": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5086": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5087": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5089": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "NOT",
      "path": "16"
    },
    "5090": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5092": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5093": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "ADD",
      "path": "16"
    },
    "5094": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "AND",
      "path": "16"
    },
    "5095": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5096": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "ADD",
      "path": "16"
    },
    "5097": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5099": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5100": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5101": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5102": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5103": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5104": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5106": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5108": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5109": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "ADD",
      "path": "16"
    },
    "5110": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5111": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1400"
    },
    "5114": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5115": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5116": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5118": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5119": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5120": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5121": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8563,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5122": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8549,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5123": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8549,
        8643
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5124": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8549,
        8643
      ],
      "op": "POP",
      "path": "16"
    },
    "5125": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8662,
        8664
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 32
    },
    "5126": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1446"
    },
    "5129": {
      "branch": 157,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5130": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5132": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5139": {
      "op": "SHL"
    },
    "5140": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5141": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5144": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5146": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5147": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "ADD",
      "path": "16"
    },
    "5148": {
      "op": "MSTORE"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080CC819985A5B1959"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5177": {
      "op": "SHL"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5180": {
      "op": "DUP3"
    },
    "5181": {
      "op": "ADD"
    },
    "5182": {
      "op": "MSTORE"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5185": {
      "op": "ADD"
    },
    "5186": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "5189": {
      "op": "JUMP"
    },
    "5190": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8654,
        8687
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5191": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8719,
        8732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "5193": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8719,
        8732
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5194": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8698,
        8705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5196": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8698,
        8705
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "op": "SUB"
    },
    "5205": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8719,
        8732
      ],
      "op": "AND",
      "path": "16"
    },
    "5206": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8746,
        8785
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1466"
    },
    "5209": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8780,
        8784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E8"
    },
    "5212": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8746,
        8775
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x126B"
    },
    "5215": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8746,
        8767
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5216": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8772,
        8774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2D"
    },
    "5218": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8746,
        8771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B3E"
    },
    "5221": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        8746,
        8775
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8746,
        8785
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5223": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5225": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5226": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5228": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5229": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5230": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5231": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5232": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5233": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "GAS",
      "path": "16"
    },
    "5234": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "CALL",
      "path": "16"
    },
    "5235": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5236": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5237": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5238": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5239": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5240": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5241": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5243": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5244": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "EQ",
      "path": "16"
    },
    "5245": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A2"
    },
    "5248": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5249": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5251": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5252": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5253": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5254": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5256": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "NOT",
      "path": "16"
    },
    "5257": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5259": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5260": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "ADD",
      "path": "16"
    },
    "5261": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "AND",
      "path": "16"
    },
    "5262": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5263": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "ADD",
      "path": "16"
    },
    "5264": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5266": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5267": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5268": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5269": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5270": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5271": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5273": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5275": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5276": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "ADD",
      "path": "16"
    },
    "5277": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5278": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14A7"
    },
    "5281": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5282": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5283": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5285": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5286": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5287": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5288": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8711,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5289": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8697,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5290": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8697,
        8790
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5291": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8697,
        8790
      ],
      "op": "POP",
      "path": "16"
    },
    "5292": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8808,
        8810
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 33
    },
    "5293": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14ED"
    },
    "5296": {
      "branch": 158,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5297": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5299": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5308": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5311": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5313": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5314": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "ADD",
      "path": "16"
    },
    "5315": {
      "op": "MSTORE"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5320": {
      "op": "DUP3"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "MSTORE"
    },
    "5323": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D0819985A5B1959"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5347": {
      "op": "DUP3"
    },
    "5348": {
      "op": "ADD"
    },
    "5349": {
      "op": "MSTORE"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5352": {
      "op": "ADD"
    },
    "5353": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "5356": {
      "op": "JUMP"
    },
    "5357": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8800,
        8833
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5358": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8865,
        8878
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "5360": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8865,
        8878
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5361": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5363": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5364": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8844,
        8851
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5366": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8844,
        8851
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "op": "SUB"
    },
    "5375": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8865,
        8878
      ],
      "op": "AND",
      "path": "16"
    },
    "5376": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8865,
        8878
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5377": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8892,
        8913
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5378": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8892,
        8913
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5379": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8844,
        8851
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5380": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5381": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8844,
        8851
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5382": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5383": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8892,
        8913
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5384": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8865,
        8878
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5385": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "GAS",
      "path": "16"
    },
    "5386": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "CALL",
      "path": "16"
    },
    "5387": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5388": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5389": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5390": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5391": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5392": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5393": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5395": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5396": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "EQ",
      "path": "16"
    },
    "5397": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x153A"
    },
    "5400": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5401": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5403": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5404": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5405": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5406": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5408": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "NOT",
      "path": "16"
    },
    "5409": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5411": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5412": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "ADD",
      "path": "16"
    },
    "5413": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "AND",
      "path": "16"
    },
    "5414": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5415": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "ADD",
      "path": "16"
    },
    "5416": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5418": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5419": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5420": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5421": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5422": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5423": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5425": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5427": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5428": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "ADD",
      "path": "16"
    },
    "5429": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5430": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x153F"
    },
    "5433": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5434": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5435": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5437": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5438": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5439": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5440": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8857,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5441": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8843,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5442": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8843,
        8918
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5443": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8843,
        8918
      ],
      "op": "POP",
      "path": "16"
    },
    "5444": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8936,
        8938
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 34
    },
    "5445": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1585"
    },
    "5448": {
      "branch": 159,
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5449": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5451": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5460": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5463": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5465": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5466": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "ADD",
      "path": "16"
    },
    "5467": {
      "op": "MSTORE"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5472": {
      "op": "DUP3"
    },
    "5473": {
      "op": "ADD"
    },
    "5474": {
      "op": "MSTORE"
    },
    "5475": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DDB080D4819985A5B1959"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "5496": {
      "op": "SHL"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5499": {
      "op": "DUP3"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "op": "MSTORE"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "5508": {
      "op": "JUMP"
    },
    "5509": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8928,
        8961
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5510": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8174,
        8968
      ],
      "op": "POP",
      "path": "16"
    },
    "5511": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8174,
        8968
      ],
      "op": "POP",
      "path": "16"
    },
    "5512": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8174,
        8968
      ],
      "op": "POP",
      "path": "16"
    },
    "5513": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8174,
        8968
      ],
      "op": "POP",
      "path": "16"
    },
    "5514": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        8174,
        8968
      ],
      "op": "POP",
      "path": "16"
    },
    "5515": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        8129,
        8968
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5516": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5517": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5519": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5526": {
      "op": "SHL"
    },
    "5527": {
      "op": "SUB"
    },
    "5528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5531": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5532": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5533": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5534": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5535": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5536": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5537": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BC"
    },
    "5540": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5541": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5543": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5550": {
      "op": "SHL"
    },
    "5551": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5552": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5553": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5555": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "5559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "5563": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5565": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5766,
        5776
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0x15C4"
    },
    "5568": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5766,
        5774
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B5D"
    },
    "5571": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5766,
        5776
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5572": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5766,
        5776
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5573": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        5720,
        5783
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5574": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5575": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 36,
      "value": "0xD28"
    },
    "5578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5579": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5584": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5585": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5587": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "3"
    },
    "5588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5590": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5591": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5592": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5594": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5595": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "3"
    },
    "5597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20BF"
    },
    "5600": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5601": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5602": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 37,
      "value": "0x15EA"
    },
    "5605": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5606": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        664,
        676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE85"
    },
    "5609": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5610": {
      "branch": 191,
      "fn": "ERC721Burnable.burn",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5611": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164F"
    },
    "5614": {
      "branch": 191,
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5615": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5617": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5624": {
      "op": "SHL"
    },
    "5625": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5626": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5629": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5631": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5632": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "ADD",
      "path": "6"
    },
    "5633": {
      "op": "MSTORE"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5638": {
      "op": "DUP3"
    },
    "5639": {
      "op": "ADD"
    },
    "5640": {
      "op": "MSTORE"
    },
    "5641": {
      "op": "PUSH32",
      "value": "0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "MSTORE"
    },
    "5679": {
      "op": "PUSH16",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD9959"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5698": {
      "op": "SHL"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5701": {
      "op": "DUP3"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5706": {
      "op": "ADD"
    },
    "5707": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF2"
    },
    "5710": {
      "op": "JUMP"
    },
    "5711": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        637,
        739
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5712": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0x1658"
    },
    "5715": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        755,
        762
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5716": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        754
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BF0"
    },
    "5719": {
      "fn": "ERC721Burnable.burn",
      "jump": "i",
      "offset": [
        749,
        763
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5720": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        749,
        763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5721": {
      "fn": "ERC721Burnable.burn",
      "offset": [
        529,
        770
      ],
      "op": "POP",
      "path": "6"
    },
    "5722": {
      "fn": "ERC721Burnable.burn",
      "jump": "o",
      "offset": [
        529,
        770
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5723": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6050,
        6208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5724": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5726": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5733": {
      "op": "SHL"
    },
    "5734": {
      "op": "SUB"
    },
    "5735": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5738": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5740": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5741": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5742": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5743": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5744": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "5747": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5759": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5763": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "5766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "5770": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5771": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5772": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0xD"
    },
    "5774": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5775": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "5779": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5780": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "DIV",
      "path": "16"
    },
    "5781": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5783": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6133,
        6147
      ],
      "op": "AND",
      "path": "16"
    },
    "5784": {
      "branch": 160,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6132,
        6147
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5785": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16D9"
    },
    "5788": {
      "branch": 160,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5789": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5791": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5798": {
      "op": "SHL"
    },
    "5799": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5800": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5803": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5805": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5806": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "ADD",
      "path": "16"
    },
    "5807": {
      "op": "MSTORE"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5812": {
      "op": "DUP3"
    },
    "5813": {
      "op": "ADD"
    },
    "5814": {
      "op": "MSTORE"
    },
    "5815": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5836": {
      "op": "SHL"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5839": {
      "op": "DUP3"
    },
    "5840": {
      "op": "ADD"
    },
    "5841": {
      "op": "MSTORE"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5844": {
      "op": "ADD"
    },
    "5845": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "5848": {
      "op": "JUMP"
    },
    "5849": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6124,
        6170
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5850": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 40
    },
    "5851": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5852": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2B"
    },
    "5855": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5856": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "5858": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6187
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5859": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5861": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5862": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "ADD",
      "path": "16"
    },
    "5863": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5864": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        6180,
        6201
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3116"
    },
    "5867": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        6180,
        6201
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5868": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5869": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5878": {
      "op": "SHL"
    },
    "5879": {
      "op": "SUB"
    },
    "5880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5883": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5884": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5885": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5886": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5887": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "5888": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5889": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x171C"
    },
    "5892": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5895": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5902": {
      "op": "SHL"
    },
    "5903": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5905": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5907": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5908": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "5911": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5912": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "5915": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5917": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7240
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 41,
      "value": "0xD"
    },
    "5919": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5920": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5921": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5923": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5924": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5925": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "AND",
      "path": "16"
    },
    "5926": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5929": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "MUL",
      "path": "16"
    },
    "5930": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5933": {
      "op": "NOT"
    },
    "5934": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5935": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5936": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "AND",
      "path": "16"
    },
    "5937": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5938": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5939": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5940": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "OR",
      "path": "16"
    },
    "5941": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5942": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "offset": [
        7228,
        7259
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5943": {
      "fn": "CryptidToken.setMaxMintPerTx",
      "jump": "o",
      "offset": [
        7152,
        7266
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5944": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5945": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5948": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5949": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5950": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5952": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5954": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5955": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5957": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5958": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5959": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5966": {
      "op": "SHL"
    },
    "5967": {
      "op": "SUB"
    },
    "5968": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "3"
    },
    "5969": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 42
    },
    "5970": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE5"
    },
    "5973": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5974": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5985": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5988": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5990": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5991": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "3"
    },
    "5992": {
      "op": "MSTORE"
    },
    "5993": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5997": {
      "op": "DUP3"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "MSTORE"
    },
    "6000": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6035": {
      "op": "DUP3"
    },
    "6036": {
      "op": "ADD"
    },
    "6037": {
      "op": "MSTORE"
    },
    "6038": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6050": {
      "op": "SHL"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6053": {
      "op": "DUP3"
    },
    "6054": {
      "op": "ADD"
    },
    "6055": {
      "op": "MSTORE"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "6062": {
      "op": "JUMP"
    },
    "6063": {
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6064": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "6066": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6067": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6068": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17BC"
    },
    "6071": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6072": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "6075": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6076": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6077": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6078": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6080": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6081": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6083": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6084": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6085": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DIV",
      "path": "16"
    },
    "6086": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MUL",
      "path": "16"
    },
    "6087": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6089": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6090": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6092": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6093": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6094": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6095": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6096": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6098": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6099": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6100": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6101": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6102": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6103": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6104": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6105": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6106": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6108": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6109": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6110": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6111": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6112": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17E8"
    },
    "6115": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6116": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "6119": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6120": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6121": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6122": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6123": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1835"
    },
    "6126": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6127": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6128": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6130": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "LT",
      "path": "16"
    },
    "6131": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x180A"
    },
    "6134": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6135": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6138": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6139": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6140": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6141": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DIV",
      "path": "16"
    },
    "6142": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MUL",
      "path": "16"
    },
    "6143": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6144": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6145": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6146": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6148": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6149": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6150": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1835"
    },
    "6153": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6154": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6155": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6156": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6157": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6158": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6159": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6161": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6162": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6164": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6166": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6167": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6168": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6169": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6170": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6171": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6172": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6173": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6174": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6176": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6177": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6180": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6181": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6183": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "GT",
      "path": "16"
    },
    "6184": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1818"
    },
    "6187": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6188": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6189": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6190": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SUB",
      "path": "16"
    },
    "6191": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6193": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "AND",
      "path": "16"
    },
    "6194": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6195": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "ADD",
      "path": "16"
    },
    "6196": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6197": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6200": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "POP",
      "path": "16"
    },
    "6203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        895,
        921
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6204": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        895,
        921
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6205": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9003,
        9167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6206": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9051,
        9058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6208": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9093,
        9094
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 43
    },
    "6209": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9077,
        9090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1848"
    },
    "6212": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9077,
        9088
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "6215": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9077,
        9090
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6216": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9077,
        9090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6217": {
      "branch": 161,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9077,
        9094
      ],
      "op": "GT",
      "path": "16"
    },
    "6218": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x188E"
    },
    "6221": {
      "branch": 161,
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6222": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6224": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6233": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6236": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6238": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6239": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "ADD",
      "path": "16"
    },
    "6240": {
      "op": "MSTORE"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6245": {
      "op": "DUP3"
    },
    "6246": {
      "op": "ADD"
    },
    "6247": {
      "op": "MSTORE"
    },
    "6248": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6276": {
      "op": "DUP3"
    },
    "6277": {
      "op": "ADD"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6281": {
      "op": "ADD"
    },
    "6282": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "6285": {
      "op": "JUMP"
    },
    "6286": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9069,
        9121
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6287": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9138,
        9160
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 44,
      "value": "0xE46"
    },
    "6290": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9146,
        9159
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63D"
    },
    "6293": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        9146,
        9157
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "6296": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        9146,
        9159
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6297": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6298": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6306": {
      "op": "SHL"
    },
    "6307": {
      "op": "SUB"
    },
    "6308": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 45
    },
    "6309": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "3"
    },
    "6310": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1904"
    },
    "6313": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6314": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6323": {
      "op": "SHL"
    },
    "6324": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6325": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6328": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6330": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6331": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "3"
    },
    "6332": {
      "op": "MSTORE"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6337": {
      "op": "DUP3"
    },
    "6338": {
      "op": "ADD"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6375": {
      "op": "DUP3"
    },
    "6376": {
      "op": "ADD"
    },
    "6377": {
      "op": "MSTORE"
    },
    "6378": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6391": {
      "op": "SHL"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6394": {
      "op": "DUP3"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "MSTORE"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6399": {
      "op": "ADD"
    },
    "6400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "6403": {
      "op": "JUMP"
    },
    "6404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "op": "SUB"
    },
    "6414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "3",
      "statement": 46
    },
    "6415": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6422": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6427": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6428": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6429": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6430": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6431": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6432": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6433": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6435": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6442": {
      "op": "SHL"
    },
    "6443": {
      "op": "SUB"
    },
    "6444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6448": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6449": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6450": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6451": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6452": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6453": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1950"
    },
    "6456": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6457": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6459": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6466": {
      "op": "SHL"
    },
    "6467": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6469": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "6475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "6479": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6480": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6481": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x15C4"
    },
    "6484": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C97"
    },
    "6489": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6490": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6491": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6493": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6500": {
      "op": "SHL"
    },
    "6501": {
      "op": "SUB"
    },
    "6502": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6505": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6506": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6507": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6508": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6509": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6510": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6511": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198A"
    },
    "6514": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6517": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6524": {
      "op": "SHL"
    },
    "6525": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6526": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "6533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6534": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "6537": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6539": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7114,
        7123
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 48,
      "value": "0x17"
    },
    "6541": {
      "fn": "CryptidToken.setPublicSalePrice",
      "offset": [
        7114,
        7139
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6542": {
      "fn": "CryptidToken.setPublicSalePrice",
      "jump": "o",
      "offset": [
        7036,
        7146
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6543": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4406,
        4879
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6544": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6546": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "op": "SUB"
    },
    "6555": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6558": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6559": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6560": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6561": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6562": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6563": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6564": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19BF"
    },
    "6567": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6568": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6577": {
      "op": "SHL"
    },
    "6578": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6582": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "6586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6587": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "6590": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6592": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4517,
        4522
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 49,
      "value": "0xD"
    },
    "6594": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4517,
        4522
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6595": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4517,
        4522
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6597": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4517,
        4522
      ],
      "op": "AND",
      "path": "16"
    },
    "6598": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4526,
        4527
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "6600": {
      "branch": 162,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4517,
        4527
      ],
      "op": "EQ",
      "path": "16"
    },
    "6601": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A14"
    },
    "6604": {
      "branch": 162,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6605": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6607": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6614": {
      "op": "SHL"
    },
    "6615": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6616": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6619": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6621": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6622": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "ADD",
      "path": "16"
    },
    "6623": {
      "op": "MSTORE"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6628": {
      "op": "DUP3"
    },
    "6629": {
      "op": "ADD"
    },
    "6630": {
      "op": "MSTORE"
    },
    "6631": {
      "op": "PUSH32",
      "value": "0x5465616D2073616C65206E6F7420696E697469617465642E0000000000000000"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6666": {
      "op": "DUP3"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "MSTORE"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "6675": {
      "op": "JUMP"
    },
    "6676": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4509,
        4556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6677": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4605,
        4619
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 50,
      "value": "0x14"
    },
    "6679": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4605,
        4619
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6680": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4588,
        4601
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6682": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4588,
        4601
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6683": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A27"
    },
    "6686": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6687": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6689": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6690": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "AND",
      "path": "16"
    },
    "6691": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371C"
    },
    "6694": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4574,
        4601
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6695": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4601
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6696": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4619
      ],
      "op": "GT",
      "path": "16"
    },
    "6697": {
      "branch": 163,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4574,
        4619
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6698": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A88"
    },
    "6701": {
      "branch": 163,
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6702": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6704": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6705": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6711": {
      "op": "SHL"
    },
    "6712": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6713": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6716": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6718": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6719": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "ADD",
      "path": "16"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6725": {
      "op": "DUP3"
    },
    "6726": {
      "op": "ADD"
    },
    "6727": {
      "op": "MSTORE"
    },
    "6728": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2D73"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6763": {
      "op": "DUP3"
    },
    "6764": {
      "op": "ADD"
    },
    "6765": {
      "op": "MSTORE"
    },
    "6766": {
      "op": "PUSH10",
      "value": "0x616C6520737570706C79"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6779": {
      "op": "SHL"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6782": {
      "op": "DUP3"
    },
    "6783": {
      "op": "ADD"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6787": {
      "op": "ADD"
    },
    "6788": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "6791": {
      "op": "JUMP"
    },
    "6792": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4566,
        4666
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6793": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4699,
        4710
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 51
    },
    "6794": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6796": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "AND",
      "path": "16"
    },
    "6797": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6799": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4695
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6801": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6802": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6803": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6804": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A9D"
    },
    "6807": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6808": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6809": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371C"
    },
    "6812": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4682,
        4710
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6813": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6814": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6815": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6816": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4682,
        4710
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6817": {
      "op": "POP"
    },
    "6818": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4738
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6820": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4737,
        4738
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4720,
        4873
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6823": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4745,
        4756
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6824": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4740,
        4756
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6826": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4740,
        4756
      ],
      "op": "AND",
      "path": "16"
    },
    "6827": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4740,
        4741
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6828": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4740,
        4756
      ],
      "op": "GT",
      "path": "16"
    },
    "6829": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4720,
        4873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2B"
    },
    "6832": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4720,
        4873
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6833": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4777,
        4821
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 52,
      "value": "0x1ABD"
    },
    "6836": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4783,
        4793
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6837": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4795,
        4820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A8"
    },
    "6840": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4795,
        4810
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "6842": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6843": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6844": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6845": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4777,
        4821
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6846": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4835,
        4862
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 53,
      "value": "0x1ACB"
    },
    "6849": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4835,
        4850
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "6851": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6852": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6853": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6855": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "6856": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6857": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6858": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6859": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4835,
        4862
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6860": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 54
    },
    "6861": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AD5"
    },
    "6864": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6865": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x377D"
    },
    "6868": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4758,
        4761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6869": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6870": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6871": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "POP",
      "path": "16"
    },
    "6872": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4758,
        4761
      ],
      "op": "POP",
      "path": "16"
    },
    "6873": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4720,
        4873
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AA6"
    },
    "6876": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4720,
        4873
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6877": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6878": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6880": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6887": {
      "op": "SHL"
    },
    "6888": {
      "op": "SUB"
    },
    "6889": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6892": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6893": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6894": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6895": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6896": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6897": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6898": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0D"
    },
    "6901": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6902": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6904": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6911": {
      "op": "SHL"
    },
    "6912": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6913": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6914": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6916": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6917": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "6920": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6921": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "6924": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6925": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6926": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        6013,
        6023
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x9"
    },
    "6928": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        6013,
        6037
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6929": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5942,
        6044
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6930": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6931": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "6933": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "op": "SUB"
    },
    "6942": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6945": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6946": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6947": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6948": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6949": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "6950": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6951": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B42"
    },
    "6954": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6955": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6964": {
      "op": "SHL"
    },
    "6965": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6966": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6967": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6969": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6970": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "6973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6974": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "6977": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6978": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6979": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7665,
        7666
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 56,
      "value": "0x0"
    },
    "6981": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7640,
        7654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "6983": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6984": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6985": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B51"
    },
    "6988": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6989": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "6992": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        7634,
        7662
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6993": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6994": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6995": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7662
      ],
      "op": "POP",
      "path": "16"
    },
    "6996": {
      "branch": 164,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7634,
        7666
      ],
      "op": "GT",
      "path": "16"
    },
    "6997": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BA0"
    },
    "7000": {
      "branch": 164,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7001": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7003": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7010": {
      "op": "SHL"
    },
    "7011": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7012": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7015": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7017": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7018": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "ADD",
      "path": "16"
    },
    "7019": {
      "op": "DUP2"
    },
    "7020": {
      "op": "SWAP1"
    },
    "7021": {
      "op": "MSTORE"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7024": {
      "op": "DUP3"
    },
    "7025": {
      "op": "ADD"
    },
    "7026": {
      "op": "MSTORE"
    },
    "7027": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D7074792E"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7062": {
      "op": "DUP3"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "op": "MSTORE"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7067": {
      "op": "ADD"
    },
    "7068": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7071": {
      "op": "JUMP"
    },
    "7072": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7626,
        7703
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7073": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 57,
      "value": "0xD"
    },
    "7075": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7076": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "7081": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7082": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "DIV",
      "path": "16"
    },
    "7083": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7085": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7722,
        7742
      ],
      "op": "AND",
      "path": "16"
    },
    "7086": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7721,
        7742
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7087": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C05"
    },
    "7090": {
      "branch": 165,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7091": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7093": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7100": {
      "op": "SHL"
    },
    "7101": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7102": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7105": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7107": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7108": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "ADD",
      "path": "16"
    },
    "7109": {
      "op": "MSTORE"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7114": {
      "op": "DUP3"
    },
    "7115": {
      "op": "ADD"
    },
    "7116": {
      "op": "MSTORE"
    },
    "7117": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7152": {
      "op": "DUP3"
    },
    "7153": {
      "op": "ADD"
    },
    "7154": {
      "op": "MSTORE"
    },
    "7155": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7160": {
      "op": "SHL"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7163": {
      "op": "DUP3"
    },
    "7164": {
      "op": "ADD"
    },
    "7165": {
      "op": "MSTORE"
    },
    "7166": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7168": {
      "op": "ADD"
    },
    "7169": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7172": {
      "op": "JUMP"
    },
    "7173": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7713,
        7781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7174": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7811
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 58,
      "value": "0xD"
    },
    "7176": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7177": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7178": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "7183": {
      "op": "NOT"
    },
    "7184": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "AND",
      "path": "16"
    },
    "7185": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "7190": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "OR",
      "path": "16"
    },
    "7191": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7192": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        7791,
        7818
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7193": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        7567,
        7825
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7194": {
      "fn": "CryptidToken.pause",
      "offset": [
        5655,
        5714
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7195": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7197": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7204": {
      "op": "SHL"
    },
    "7205": {
      "op": "SUB"
    },
    "7206": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7210": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7212": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7213": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7214": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7215": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C4A"
    },
    "7218": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7219": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7228": {
      "op": "SHL"
    },
    "7229": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7231": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7233": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7234": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "7237": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7238": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "7241": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7242": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7243": {
      "fn": "CryptidToken.pause",
      "offset": [
        5699,
        5707
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 59,
      "value": "0x15C4"
    },
    "7246": {
      "fn": "CryptidToken.pause",
      "offset": [
        5699,
        5705
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CF1"
    },
    "7249": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        5699,
        5707
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7250": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7251": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5027,
        5036
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "7253": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5027,
        5036
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7254": {
      "offset": [
        2887,
        3057
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7256": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2887,
        3057
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7257": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2887,
        3057
      ],
      "op": "AND",
      "path": "16"
    },
    "7258": {
      "offset": [
        3000,
        3009
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "7259": {
      "offset": [
        2972,
        2996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C64"
    },
    "7262": {
      "offset": [
        2887,
        3057
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7263": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5027,
        5036
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7264": {
      "offset": [
        2972,
        2996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x36D3"
    },
    "7267": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        2972,
        2996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7268": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2972,
        2996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7269": {
      "offset": [
        2972,
        3009
      ],
      "op": "EQ",
      "path": "16"
    },
    "7270": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CAD"
    },
    "7273": {
      "offset": [
        2964,
        3039
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7274": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7276": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2964,
        3039
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7283": {
      "op": "SHL"
    },
    "7284": {
      "offset": [
        2964,
        3039
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7285": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2964,
        3039
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7288": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7290": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2964,
        3039
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7291": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2964,
        3039
      ],
      "op": "ADD",
      "path": "16"
    },
    "7292": {
      "op": "MSTORE"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7297": {
      "op": "DUP3"
    },
    "7298": {
      "op": "ADD"
    },
    "7299": {
      "op": "MSTORE"
    },
    "7300": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7328": {
      "op": "SHL"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7331": {
      "op": "DUP3"
    },
    "7332": {
      "op": "ADD"
    },
    "7333": {
      "op": "MSTORE"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "offset": [
        2964,
        3039
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7340": {
      "op": "JUMP"
    },
    "7341": {
      "offset": [
        2964,
        3039
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7342": {
      "offset": [
        3105,
        3114
      ],
      "op": "ORIGIN",
      "path": "16"
    },
    "7343": {
      "offset": [
        3118,
        3128
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7344": {
      "offset": [
        3105,
        3128
      ],
      "op": "EQ",
      "path": "16"
    },
    "7345": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CFC"
    },
    "7348": {
      "offset": [
        3097,
        3164
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7349": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7351": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3097,
        3164
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7358": {
      "op": "SHL"
    },
    "7359": {
      "offset": [
        3097,
        3164
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7360": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3097,
        3164
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7363": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7365": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3097,
        3164
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7366": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        3097,
        3164
      ],
      "op": "ADD",
      "path": "16"
    },
    "7367": {
      "op": "MSTORE"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7372": {
      "op": "DUP3"
    },
    "7373": {
      "op": "ADD"
    },
    "7374": {
      "op": "MSTORE"
    },
    "7375": {
      "op": "PUSH32",
      "value": "0x5468652063616C6C657220697320616E6F7468657220636F6E74726163742E00"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7410": {
      "op": "DUP3"
    },
    "7411": {
      "op": "ADD"
    },
    "7412": {
      "op": "MSTORE"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7415": {
      "op": "ADD"
    },
    "7416": {
      "offset": [
        3097,
        3164
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7419": {
      "op": "JUMP"
    },
    "7420": {
      "offset": [
        3097,
        3164
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7421": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7423": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7425": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7426": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "7427": {
      "branch": 194,
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7428": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4F"
    },
    "7431": {
      "branch": 194,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7432": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7434": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7435": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7443": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7446": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7448": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7449": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7455": {
      "op": "DUP3"
    },
    "7456": {
      "op": "ADD"
    },
    "7457": {
      "op": "MSTORE"
    },
    "7458": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7493": {
      "op": "DUP3"
    },
    "7494": {
      "op": "ADD"
    },
    "7495": {
      "op": "MSTORE"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7498": {
      "op": "ADD"
    },
    "7499": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF2"
    },
    "7502": {
      "op": "JUMP"
    },
    "7503": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7504": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7506": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7508": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7509": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "7511": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7512": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7514": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "7515": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7516": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D77"
    },
    "7519": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7520": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7522": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7529": {
      "op": "SHL"
    },
    "7530": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7531": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7532": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7534": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "7535": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "7538": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7539": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36F2"
    },
    "7542": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7543": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7544": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5141,
        5146
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0xD"
    },
    "7546": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5141,
        5146
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7547": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5141,
        5146
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7549": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5141,
        5146
      ],
      "op": "AND",
      "path": "16"
    },
    "7550": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5150,
        5151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7552": {
      "branch": 166,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5141,
        5151
      ],
      "op": "EQ",
      "path": "16"
    },
    "7553": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DCC"
    },
    "7556": {
      "branch": 166,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7557": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7559": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7566": {
      "op": "SHL"
    },
    "7567": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7568": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7571": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7573": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7574": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "ADD",
      "path": "16"
    },
    "7575": {
      "op": "MSTORE"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7580": {
      "op": "DUP3"
    },
    "7581": {
      "op": "ADD"
    },
    "7582": {
      "op": "MSTORE"
    },
    "7583": {
      "op": "PUSH32",
      "value": "0x5075626C6963206D696E74206E6F7420696E69746961697465642E0000000000"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7618": {
      "op": "DUP3"
    },
    "7619": {
      "op": "ADD"
    },
    "7620": {
      "op": "MSTORE"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7623": {
      "op": "ADD"
    },
    "7624": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7627": {
      "op": "JUMP"
    },
    "7628": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5133,
        5183
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7629": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5233,
        5248
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x16"
    },
    "7631": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5233,
        5248
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7632": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5218,
        5229
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7633": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7635": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "AND",
      "path": "16"
    },
    "7636": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DDB"
    },
    "7639": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5212
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "7642": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5201,
        5214
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7643": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7644": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE5"
    },
    "7647": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7648": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7649": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371C"
    },
    "7652": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5201,
        5229
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7653": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5229
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7654": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5248
      ],
      "op": "GT",
      "path": "16"
    },
    "7655": {
      "branch": 167,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5201,
        5248
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7656": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E41"
    },
    "7659": {
      "branch": 167,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7660": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7662": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7669": {
      "op": "SHL"
    },
    "7670": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7671": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7674": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7676": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7677": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "ADD",
      "path": "16"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7683": {
      "op": "DUP3"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "MSTORE"
    },
    "7686": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7721": {
      "op": "DUP3"
    },
    "7722": {
      "op": "ADD"
    },
    "7723": {
      "op": "MSTORE"
    },
    "7724": {
      "op": "PUSH5",
      "value": "0x7570706C79"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7732": {
      "op": "SHL"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7735": {
      "op": "DUP3"
    },
    "7736": {
      "op": "ADD"
    },
    "7737": {
      "op": "MSTORE"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7740": {
      "op": "ADD"
    },
    "7741": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7744": {
      "op": "JUMP"
    },
    "7745": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5193,
        5290
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7746": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5322,
        5323
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x0"
    },
    "7748": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5308,
        5319
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7749": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5308,
        5323
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7751": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5308,
        5323
      ],
      "op": "AND",
      "path": "16"
    },
    "7752": {
      "branch": 168,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5308,
        5323
      ],
      "op": "GT",
      "path": "16"
    },
    "7753": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA0"
    },
    "7756": {
      "branch": 168,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7757": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7759": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7766": {
      "op": "SHL"
    },
    "7767": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7768": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7771": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7773": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7774": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "ADD",
      "path": "16"
    },
    "7775": {
      "op": "MSTORE"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7780": {
      "op": "DUP3"
    },
    "7781": {
      "op": "ADD"
    },
    "7782": {
      "op": "MSTORE"
    },
    "7783": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7818": {
      "op": "DUP3"
    },
    "7819": {
      "op": "ADD"
    },
    "7820": {
      "op": "MSTORE"
    },
    "7821": {
      "op": "PUSH3",
      "value": "0x101817"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "7827": {
      "op": "SHL"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7830": {
      "op": "DUP3"
    },
    "7831": {
      "op": "ADD"
    },
    "7832": {
      "op": "MSTORE"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7835": {
      "op": "ADD"
    },
    "7836": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7839": {
      "op": "JUMP"
    },
    "7840": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5300,
        5363
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7841": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0xD"
    },
    "7843": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7844": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7846": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "7849": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7850": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7851": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "DIV",
      "path": "16"
    },
    "7852": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7853": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5396,
        5408
      ],
      "op": "AND",
      "path": "16"
    },
    "7854": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5381,
        5408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7855": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5381,
        5408
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7856": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5381,
        5408
      ],
      "op": "AND",
      "path": "16"
    },
    "7857": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5381,
        5408
      ],
      "op": "GT",
      "path": "16"
    },
    "7858": {
      "branch": 169,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5381,
        5408
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7859": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F11"
    },
    "7862": {
      "branch": 169,
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7863": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7865": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7872": {
      "op": "SHL"
    },
    "7873": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7874": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7877": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7879": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7880": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "ADD",
      "path": "16"
    },
    "7881": {
      "op": "MSTORE"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7886": {
      "op": "DUP3"
    },
    "7887": {
      "op": "ADD"
    },
    "7888": {
      "op": "MSTORE"
    },
    "7889": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7924": {
      "op": "DUP3"
    },
    "7925": {
      "op": "ADD"
    },
    "7926": {
      "op": "MSTORE"
    },
    "7927": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7940": {
      "op": "SHL"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7943": {
      "op": "DUP3"
    },
    "7944": {
      "op": "ADD"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7948": {
      "op": "ADD"
    },
    "7949": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "7952": {
      "op": "JUMP"
    },
    "7953": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5373,
        5455
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7954": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5485,
        5486
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7956": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7957": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5493,
        5504
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7958": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5488,
        5504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7960": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5488,
        5504
      ],
      "op": "AND",
      "path": "16"
    },
    "7961": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5488,
        5489
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7962": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5488,
        5504
      ],
      "op": "GT",
      "path": "16"
    },
    "7963": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F4B"
    },
    "7966": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7967": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5525,
        5569
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 64,
      "value": "0x1F2B"
    },
    "7970": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5531,
        5541
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7971": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5543,
        5568
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A8"
    },
    "7974": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5543,
        5558
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "7976": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7977": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7978": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7979": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5525,
        5569
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7980": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5583,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 65,
      "value": "0x1F39"
    },
    "7983": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5583,
        5598
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "7985": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7986": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7987": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7989": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "7990": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7991": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7992": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7993": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5583,
        5610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7994": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 66
    },
    "7995": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F43"
    },
    "7998": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7999": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x377D"
    },
    "8002": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        5506,
        5509
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8003": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8004": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8005": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "POP",
      "path": "16"
    },
    "8006": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5506,
        5509
      ],
      "op": "POP",
      "path": "16"
    },
    "8007": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F14"
    },
    "8010": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8011": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        5468,
        5621
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8012": {
      "op": "POP"
    },
    "8013": {
      "op": "POP"
    },
    "8014": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8016": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8018": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "op": "POP"
    },
    "8021": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4915,
        5627
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8022": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8023": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "8025": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 67,
      "value": "0x1"
    },
    "8027": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8028": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8029": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFA"
    },
    "8032": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8033": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E5"
    },
    "8036": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8037": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8038": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 68,
      "value": "0xE2B"
    },
    "8041": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8042": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8043": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8044": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D49"
    },
    "8047": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8048": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3214,
        3685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8049": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8051": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8058": {
      "op": "SHL"
    },
    "8059": {
      "op": "SUB"
    },
    "8060": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8063": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8064": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8065": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8066": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8068": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8069": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA0"
    },
    "8072": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8075": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8076": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8082": {
      "op": "SHL"
    },
    "8083": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8087": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "8091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "8095": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8097": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0xD"
    },
    "8099": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8100": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3313,
        3314
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "8102": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8104": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8105": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8106": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3310
      ],
      "op": "AND",
      "path": "16"
    },
    "8107": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3305,
        3314
      ],
      "op": "LT",
      "path": "16"
    },
    "8108": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FED"
    },
    "8111": {
      "branch": 170,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8112": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8114": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8123": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8126": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8128": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8129": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "ADD",
      "path": "16"
    },
    "8130": {
      "op": "MSTORE"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8135": {
      "op": "DUP3"
    },
    "8136": {
      "op": "ADD"
    },
    "8137": {
      "op": "MSTORE"
    },
    "8138": {
      "op": "PUSH19",
      "value": "0x2830B9BA1030B4B9323937B810383430B9B297"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "8160": {
      "op": "SHL"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8163": {
      "op": "DUP3"
    },
    "8164": {
      "op": "ADD"
    },
    "8165": {
      "op": "MSTORE"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8168": {
      "op": "ADD"
    },
    "8169": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "8172": {
      "op": "JUMP"
    },
    "8173": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3297,
        3338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8174": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3370,
        3371
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 70,
      "value": "0x0"
    },
    "8176": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3356,
        3367
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8177": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3356,
        3371
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8179": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3356,
        3371
      ],
      "op": "AND",
      "path": "16"
    },
    "8180": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3356,
        3371
      ],
      "op": "GT",
      "path": "16"
    },
    "8181": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x204E"
    },
    "8184": {
      "branch": 171,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8185": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8187": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8194": {
      "op": "SHL"
    },
    "8195": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8196": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8199": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8201": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8202": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "ADD",
      "path": "16"
    },
    "8203": {
      "op": "MSTORE"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8208": {
      "op": "DUP3"
    },
    "8209": {
      "op": "ADD"
    },
    "8210": {
      "op": "MSTORE"
    },
    "8211": {
      "op": "PUSH32",
      "value": "0x41697264726F7020616D6F756E74206D75737420626520677265617465722074"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8246": {
      "op": "DUP3"
    },
    "8247": {
      "op": "ADD"
    },
    "8248": {
      "op": "MSTORE"
    },
    "8249": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "8257": {
      "op": "SHL"
    },
    "8258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8260": {
      "op": "DUP3"
    },
    "8261": {
      "op": "ADD"
    },
    "8262": {
      "op": "MSTORE"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "8269": {
      "op": "JUMP"
    },
    "8270": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3348,
        3413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8271": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3462,
        3477
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 71,
      "value": "0x12"
    },
    "8273": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3462,
        3477
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8274": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3447,
        3458
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8275": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8277": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "AND",
      "path": "16"
    },
    "8278": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x205D"
    },
    "8281": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3442
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "8284": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3431,
        3444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8285": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8286": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2067"
    },
    "8289": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8290": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8291": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371C"
    },
    "8294": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3431,
        3458
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8295": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3458
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8296": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3477
      ],
      "op": "GT",
      "path": "16"
    },
    "8297": {
      "branch": 172,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3431,
        3477
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8298": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2085"
    },
    "8301": {
      "branch": 172,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8302": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8304": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8311": {
      "op": "SHL"
    },
    "8312": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8313": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8314": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8316": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "ADD",
      "path": "16"
    },
    "8317": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "8320": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8321": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3734"
    },
    "8324": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3423,
        3523
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8325": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3423,
        3523
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8326": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3550,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8328": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3533,
        3679
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8329": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3558,
        3569
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8330": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3553,
        3569
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8332": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3553,
        3569
      ],
      "op": "AND",
      "path": "16"
    },
    "8333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3553,
        3554
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8334": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3553,
        3569
      ],
      "op": "GT",
      "path": "16"
    },
    "8335": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3533,
        3679
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD28"
    },
    "8338": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3533,
        3679
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3590,
        3627
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 72,
      "value": "0x209F"
    },
    "8342": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3596,
        3599
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8343": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3601,
        3626
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A8"
    },
    "8346": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3601,
        3616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8348": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8349": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8350": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8351": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3590,
        3627
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8352": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3641,
        3668
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 73,
      "value": "0x20AD"
    },
    "8355": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3641,
        3656
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "8357": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8358": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8359": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8361": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "8362": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8363": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8364": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8365": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3641,
        3668
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8366": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 74
    },
    "8367": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20B7"
    },
    "8370": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8371": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x377D"
    },
    "8374": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        3571,
        3574
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8375": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8376": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8377": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "POP",
      "path": "16"
    },
    "8378": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3571,
        3574
      ],
      "op": "POP",
      "path": "16"
    },
    "8379": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3533,
        3679
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2088"
    },
    "8382": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        3533,
        3679
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x20C9"
    },
    "8387": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2738"
    },
    "8392": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8393": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E5"
    },
    "8397": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8400": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8407": {
      "op": "SHL"
    },
    "8408": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8410": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8412": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "3"
    },
    "8413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "8416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8417": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3682"
    },
    "8420": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8421": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 76,
      "value": "0x20F1"
    },
    "8425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8427": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E18"
    },
    "8432": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8433": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8436": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "3"
    },
    "8438": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8439": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8440": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8442": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8449": {
      "op": "SHL"
    },
    "8450": {
      "op": "SUB"
    },
    "8451": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8454": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8455": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8456": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8458": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8459": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8460": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2127"
    },
    "8463": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8473": {
      "op": "SHL"
    },
    "8474": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "8482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "8486": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8487": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8494": {
      "op": "SHL"
    },
    "8495": {
      "op": "SUB"
    },
    "8496": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "AND",
      "path": "16",
      "statement": 77
    },
    "8497": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8499": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8500": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8501": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8502": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5910
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "8504": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8506": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8507": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8509": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8510": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5922
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8511": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8512": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8513": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8515": {
      "op": "NOT"
    },
    "8516": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "AND",
      "path": "16"
    },
    "8517": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5925,
        5929
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8519": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "OR",
      "path": "16"
    },
    "8520": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8521": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        5903,
        5929
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8522": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "o",
      "offset": [
        5834,
        5936
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8523": {
      "offset": [
        927,
        964
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8524": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "8526": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8527": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8528": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17BC"
    },
    "8531": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8532": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        927,
        964
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "8535": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        927,
        964
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8536": {
      "offset": [
        861,
        889
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8537": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "8539": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8540": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8541": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17BC"
    },
    "8544": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8545": {
      "fn": "CryptidToken.overrideClaim",
      "offset": [
        861,
        889
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "8548": {
      "fn": "CryptidToken.overrideClaim",
      "jump": "i",
      "offset": [
        861,
        889
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8549": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8550": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8552": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8553": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8554": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8555": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "8557": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8559": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8560": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8562": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8563": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8564": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8565": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9515,
        9528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "8567": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9515,
        9528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8574": {
      "op": "SHL"
    },
    "8575": {
      "op": "SUB"
    },
    "8576": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "8577": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 78,
      "value": "0x21E4"
    },
    "8580": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8581": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8583": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8590": {
      "op": "SHL"
    },
    "8591": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8592": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8595": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8597": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8598": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "ADD",
      "path": "16"
    },
    "8599": {
      "op": "MSTORE"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "8602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8604": {
      "op": "DUP3"
    },
    "8605": {
      "op": "ADD"
    },
    "8606": {
      "op": "MSTORE"
    },
    "8607": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8642": {
      "op": "DUP3"
    },
    "8643": {
      "op": "ADD"
    },
    "8644": {
      "op": "MSTORE"
    },
    "8645": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "8663": {
      "op": "SHL"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8666": {
      "op": "DUP3"
    },
    "8667": {
      "op": "ADD"
    },
    "8668": {
      "op": "MSTORE"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8671": {
      "op": "ADD"
    },
    "8672": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "8675": {
      "op": "JUMP"
    },
    "8676": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9540,
        9616
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8677": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9657,
        9664
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 79,
      "value": "0xB"
    },
    "8679": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9666,
        9684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21EF"
    },
    "8682": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9666,
        9673
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8683": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9666,
        9682
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E4B"
    },
    "8686": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9666,
        9684
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8687": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9666,
        9684
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8688": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9686,
        9699
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "8690": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8692": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8693": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8695": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "ADD",
      "path": "16"
    },
    "8696": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2203"
    },
    "8699": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "8700": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8701": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8702": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8703": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3832"
    },
    "8706": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        9640,
        9700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8707": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8708": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8710": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8711": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8713": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8714": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8715": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SUB",
      "path": "16"
    },
    "8716": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SUB",
      "path": "16"
    },
    "8717": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8718": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8719": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8720": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8722": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9640,
        9700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8723": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9626,
        9701
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8724": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9626,
        9701
      ],
      "op": "POP",
      "path": "16"
    },
    "8725": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8726": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8727": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        9442,
        9708
      ],
      "op": "POP",
      "path": "16"
    },
    "8728": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        9442,
        9708
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8729": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9173,
        9324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8730": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9216,
        9223
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8732": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9258,
        9259
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 80
    },
    "8733": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9242,
        9255
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2224"
    },
    "8736": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9242,
        9253
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "8739": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9242,
        9255
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8740": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9242,
        9255
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8741": {
      "branch": 173,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9242,
        9259
      ],
      "op": "GT",
      "path": "16"
    },
    "8742": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x226A"
    },
    "8745": {
      "branch": 173,
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8746": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8748": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8755": {
      "op": "SHL"
    },
    "8756": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8757": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8760": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8762": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8763": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "ADD",
      "path": "16"
    },
    "8764": {
      "op": "MSTORE"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8769": {
      "op": "DUP3"
    },
    "8770": {
      "op": "ADD"
    },
    "8771": {
      "op": "MSTORE"
    },
    "8772": {
      "op": "PUSH22",
      "value": "0x27379031B93CB83A34B21032BC34B9BA39903CB2BA17"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "8797": {
      "op": "SHL"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8800": {
      "op": "DUP3"
    },
    "8801": {
      "op": "ADD"
    },
    "8802": {
      "op": "MSTORE"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8805": {
      "op": "ADD"
    },
    "8806": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "8809": {
      "op": "JUMP"
    },
    "8810": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9234,
        9286
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8811": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9303,
        9316
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 81,
      "value": "0xE46"
    },
    "8814": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        9303,
        9314
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "8817": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        9303,
        9316
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8818": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6904,
        7030
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8819": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8821": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8828": {
      "op": "SHL"
    },
    "8829": {
      "op": "SUB"
    },
    "8830": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8836": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8837": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8838": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8839": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A2"
    },
    "8842": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8845": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8852": {
      "op": "SHL"
    },
    "8853": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8854": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8858": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "8861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "8865": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8867": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 82
    },
    "8868": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8869": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2B"
    },
    "8872": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8873": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7003
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "8875": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7003
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8876": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8878": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8879": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "ADD",
      "path": "16"
    },
    "8880": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8881": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        6990,
        7023
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3116"
    },
    "8884": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        6990,
        7023
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8885": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9714,
        9824
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8886": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9760,
        9767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8888": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9804,
        9817
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 83,
      "value": "0x22BF"
    },
    "8891": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9804,
        9815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "8894": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9804,
        9817
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8895": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9804,
        9817
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8896": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9801
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "8898": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9801
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8899": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE46"
    },
    "8902": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9817
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8903": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9817
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8904": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        9786,
        9817
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x366B"
    },
    "8907": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        9786,
        9817
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8908": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8909": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8911": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8918": {
      "op": "SHL"
    },
    "8919": {
      "op": "SUB"
    },
    "8920": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8923": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8924": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8925": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8926": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8927": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "8928": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8929": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22FC"
    },
    "8932": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8933": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8935": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8942": {
      "op": "SHL"
    },
    "8943": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8944": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8947": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8948": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "8951": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8952": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "8955": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8957": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6303,
        6304
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 84,
      "value": "0x0"
    },
    "8959": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6285,
        6292
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "8961": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8962": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8963": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x230B"
    },
    "8966": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8967": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E5"
    },
    "8970": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        6279,
        6300
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8971": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8972": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8973": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6300
      ],
      "op": "POP",
      "path": "16"
    },
    "8974": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6279,
        6304
      ],
      "op": "GT",
      "path": "16"
    },
    "8975": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x235A"
    },
    "8978": {
      "branch": 174,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8979": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8981": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8988": {
      "op": "SHL"
    },
    "8989": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8990": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8993": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8995": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8996": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "ADD",
      "path": "16"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9002": {
      "op": "DUP3"
    },
    "9003": {
      "op": "ADD"
    },
    "9004": {
      "op": "MSTORE"
    },
    "9005": {
      "op": "PUSH32",
      "value": "0x626173655552492063616E6E6F7420626520656D707479000000000000000000"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9040": {
      "op": "DUP3"
    },
    "9041": {
      "op": "ADD"
    },
    "9042": {
      "op": "MSTORE"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9045": {
      "op": "ADD"
    },
    "9046": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "9049": {
      "op": "JUMP"
    },
    "9050": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6271,
        6332
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9051": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 85,
      "value": "0xD"
    },
    "9053": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9054": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "9058": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9059": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "DIV",
      "path": "16"
    },
    "9060": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9062": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6351,
        6365
      ],
      "op": "AND",
      "path": "16"
    },
    "9063": {
      "branch": 175,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6350,
        6365
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9064": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23B3"
    },
    "9067": {
      "branch": 175,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9068": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9070": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9077": {
      "op": "SHL"
    },
    "9078": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9079": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9082": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9084": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9085": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "ADD",
      "path": "16"
    },
    "9086": {
      "op": "MSTORE"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9091": {
      "op": "DUP3"
    },
    "9092": {
      "op": "ADD"
    },
    "9093": {
      "op": "MSTORE"
    },
    "9094": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9129": {
      "op": "DUP3"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "op": "MSTORE"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "9138": {
      "op": "JUMP"
    },
    "9139": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6342,
        6396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9140": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6420
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0xD"
    },
    "9142": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9143": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9144": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "9148": {
      "op": "NOT"
    },
    "9149": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "AND",
      "path": "16"
    },
    "9150": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "9154": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "OR",
      "path": "16"
    },
    "9155": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9156": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        6406,
        6427
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9157": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        6219,
        6434
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9158": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9159": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9161": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9168": {
      "op": "SHL"
    },
    "9169": {
      "op": "SUB"
    },
    "9170": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9173": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9174": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9175": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9176": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9177": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9178": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9179": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F6"
    },
    "9182": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9183": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9185": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9192": {
      "op": "SHL"
    },
    "9193": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9194": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9195": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9197": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9198": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "9201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9202": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "9205": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9206": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9207": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0xD"
    },
    "9209": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9210": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9217": {
      "op": "SHL"
    },
    "9218": {
      "op": "SUB"
    },
    "9219": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SWAP7",
      "path": "16"
    },
    "9220": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "DUP8",
      "path": "16"
    },
    "9221": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "AND",
      "path": "16"
    },
    "9222": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "9228": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "MUL",
      "path": "16"
    },
    "9229": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9239": {
      "op": "SHL"
    },
    "9240": {
      "op": "SUB"
    },
    "9241": {
      "op": "NOT"
    },
    "9242": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9243": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9244": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "AND",
      "path": "16"
    },
    "9245": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "OR",
      "path": "16"
    },
    "9246": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9247": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7966,
        7988
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9248": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8011
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 88,
      "value": "0xE"
    },
    "9250": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9251": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9252": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "9253": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9254": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "AND",
      "path": "16"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9261": {
      "op": "SHL"
    },
    "9262": {
      "op": "SUB"
    },
    "9263": {
      "op": "NOT"
    },
    "9264": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "SWAP6",
      "path": "16"
    },
    "9265": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9266": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "AND",
      "path": "16"
    },
    "9267": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "OR",
      "path": "16"
    },
    "9268": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9269": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        7998,
        8020
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9270": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8043
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 89,
      "value": "0xF"
    },
    "9272": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9273": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9274": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9275": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "DUP7",
      "path": "16"
    },
    "9276": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "AND",
      "path": "16"
    },
    "9277": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9278": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9279": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "AND",
      "path": "16"
    },
    "9280": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9281": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9282": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9283": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "OR",
      "path": "16"
    },
    "9284": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9285": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9286": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8030,
        8052
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9287": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8075
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 90,
      "value": "0x10"
    },
    "9289": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9290": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9291": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9292": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9293": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "AND",
      "path": "16"
    },
    "9294": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9295": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9296": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "AND",
      "path": "16"
    },
    "9297": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9298": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9299": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9300": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "OR",
      "path": "16"
    },
    "9301": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9302": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8062,
        8084
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9303": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8107
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 91,
      "value": "0x11"
    },
    "9305": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9306": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9307": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9308": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9309": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "9310": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "AND",
      "path": "16"
    },
    "9311": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9312": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "AND",
      "path": "16"
    },
    "9313": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "OR",
      "path": "16"
    },
    "9314": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9315": {
      "fn": "CryptidToken.setWithdrawAddress",
      "offset": [
        8094,
        8116
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9316": {
      "fn": "CryptidToken.setWithdrawAddress",
      "jump": "o",
      "offset": [
        7831,
        8123
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9317": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9318": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9320": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9327": {
      "op": "SHL"
    },
    "9328": {
      "op": "SUB"
    },
    "9329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9332": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9333": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9334": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9335": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9336": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9337": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9338": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2495"
    },
    "9341": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9342": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9351": {
      "op": "SHL"
    },
    "9352": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9354": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9356": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9357": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "9360": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9361": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "9364": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9366": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 92,
      "value": "0xD"
    },
    "9368": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9369": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "9374": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9375": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "DIV",
      "path": "16"
    },
    "9376": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9378": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6516
      ],
      "op": "AND",
      "path": "16"
    },
    "9379": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6524
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9380": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6524
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "9381": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6520,
        6524
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "9383": {
      "branch": 176,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6496,
        6524
      ],
      "op": "EQ",
      "path": "16"
    },
    "9384": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2519"
    },
    "9387": {
      "branch": 176,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9388": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9390": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9397": {
      "op": "SHL"
    },
    "9398": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9399": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9402": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9404": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9405": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "ADD",
      "path": "16"
    },
    "9406": {
      "op": "MSTORE"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "9409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9411": {
      "op": "DUP3"
    },
    "9412": {
      "op": "ADD"
    },
    "9413": {
      "op": "MSTORE"
    },
    "9414": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9449": {
      "op": "DUP3"
    },
    "9450": {
      "op": "ADD"
    },
    "9451": {
      "op": "MSTORE"
    },
    "9452": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9487": {
      "op": "DUP3"
    },
    "9488": {
      "op": "ADD"
    },
    "9489": {
      "op": "MSTORE"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9492": {
      "op": "ADD"
    },
    "9493": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "9496": {
      "op": "JUMP"
    },
    "9497": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6488,
        6585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9498": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6613
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 93,
      "value": "0x9"
    },
    "9500": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6613
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9501": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6614,
        6615
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9503": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6616
      ],
      "op": "BYTE",
      "path": "16"
    },
    "9504": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF8"
    },
    "9506": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6616
      ],
      "op": "SHL",
      "path": "16"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9511": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9513": {
      "op": "SHL"
    },
    "9514": {
      "op": "SUB"
    },
    "9515": {
      "op": "NOT"
    },
    "9516": {
      "branch": 177,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6603,
        6621
      ],
      "op": "AND",
      "path": "16"
    },
    "9517": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x259E"
    },
    "9520": {
      "branch": 177,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9521": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9523": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9530": {
      "op": "SHL"
    },
    "9531": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9532": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9535": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9537": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9538": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "ADD",
      "path": "16"
    },
    "9539": {
      "op": "MSTORE"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9544": {
      "op": "DUP3"
    },
    "9545": {
      "op": "ADD"
    },
    "9546": {
      "op": "MSTORE"
    },
    "9547": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9582": {
      "op": "DUP3"
    },
    "9583": {
      "op": "ADD"
    },
    "9584": {
      "op": "MSTORE"
    },
    "9585": {
      "op": "PUSH32",
      "value": "0x77686974656C697374206D696E74696E672063616E20626567696E0000000000"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9620": {
      "op": "DUP3"
    },
    "9621": {
      "op": "ADD"
    },
    "9622": {
      "op": "MSTORE"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9625": {
      "op": "ADD"
    },
    "9626": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "9629": {
      "op": "JUMP"
    },
    "9630": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6595,
        6685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9631": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 94,
      "value": "0xD"
    },
    "9633": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9634": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6711,
        6712
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9636": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9638": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9639": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9640": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6708
      ],
      "op": "AND",
      "path": "16"
    },
    "9641": {
      "branch": 178,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6703,
        6712
      ],
      "op": "LT",
      "path": "16"
    },
    "9642": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25F5"
    },
    "9645": {
      "branch": 178,
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9646": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9648": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9655": {
      "op": "SHL"
    },
    "9656": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9657": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9660": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9662": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9663": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "ADD",
      "path": "16"
    },
    "9664": {
      "op": "MSTORE"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9669": {
      "op": "DUP3"
    },
    "9670": {
      "op": "ADD"
    },
    "9671": {
      "op": "MSTORE"
    },
    "9672": {
      "op": "PUSH32",
      "value": "0x4E6F20737461676573206166746572207075626C69632073616C650000000000"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9707": {
      "op": "DUP3"
    },
    "9708": {
      "op": "ADD"
    },
    "9709": {
      "op": "MSTORE"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9712": {
      "op": "ADD"
    },
    "9713": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBF2"
    },
    "9716": {
      "op": "JUMP"
    },
    "9717": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6695,
        6744
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9718": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6759
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 95,
      "value": "0xD"
    },
    "9720": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9721": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9722": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9724": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "AND",
      "path": "16"
    },
    "9725": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9726": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6759
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9728": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2608"
    },
    "9731": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9732": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x387B"
    },
    "9735": {
      "fn": "CryptidToken.nextStage",
      "jump": "i",
      "offset": [
        6754,
        6761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9736": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9737": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9738": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9739": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "9742": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "EXP",
      "path": "16"
    },
    "9743": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9744": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9745": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9746": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9748": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "MUL",
      "path": "16"
    },
    "9749": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "NOT",
      "path": "16"
    },
    "9750": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "AND",
      "path": "16"
    },
    "9751": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9752": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9753": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "9755": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "AND",
      "path": "16"
    },
    "9756": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "MUL",
      "path": "16"
    },
    "9757": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "OR",
      "path": "16"
    },
    "9758": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9759": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9760": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "POP",
      "path": "16"
    },
    "9761": {
      "fn": "CryptidToken.nextStage",
      "offset": [
        6754,
        6761
      ],
      "op": "POP",
      "path": "16"
    },
    "9762": {
      "fn": "CryptidToken.nextStage",
      "jump": "o",
      "offset": [
        6440,
        6768
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9764": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "9766": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9773": {
      "op": "SHL"
    },
    "9774": {
      "op": "SUB"
    },
    "9775": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9778": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9779": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "9781": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "9782": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9783": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "9784": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2653"
    },
    "9787": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9788": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9797": {
      "op": "SHL"
    },
    "9798": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9799": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9800": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9802": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "9803": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "9806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3620"
    },
    "9810": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9811": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9818": {
      "op": "SHL"
    },
    "9819": {
      "op": "SUB"
    },
    "9820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 96
    },
    "9821": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "9822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B8"
    },
    "9825": {
      "branch": 193,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9835": {
      "op": "SHL"
    },
    "9836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9844": {
      "op": "MSTORE"
    },
    "9845": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9849": {
      "op": "DUP3"
    },
    "9850": {
      "op": "ADD"
    },
    "9851": {
      "op": "MSTORE"
    },
    "9852": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9887": {
      "op": "DUP3"
    },
    "9888": {
      "op": "ADD"
    },
    "9889": {
      "op": "MSTORE"
    },
    "9890": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9899": {
      "op": "SHL"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9902": {
      "op": "DUP3"
    },
    "9903": {
      "op": "ADD"
    },
    "9904": {
      "op": "MSTORE"
    },
    "9905": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9907": {
      "op": "ADD"
    },
    "9908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF2"
    },
    "9911": {
      "op": "JUMP"
    },
    "9912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 97,
      "value": "0x1658"
    },
    "9916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C97"
    },
    "9920": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9921": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9922": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9923": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9924": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9926": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "10"
    },
    "9927": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9928": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9929": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9930": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9931": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 98,
      "value": "0x0"
    },
    "9933": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9934": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9935": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9936": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9938": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9940": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9941": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9943": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9944": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9945": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9946": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9953": {
      "op": "SHL"
    },
    "9954": {
      "op": "SUB"
    },
    "9955": {
      "op": "NOT"
    },
    "9956": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9963": {
      "op": "SHL"
    },
    "9964": {
      "op": "SUB"
    },
    "9965": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9966": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "3"
    },
    "9967": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9968": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9969": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "3"
    },
    "9970": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9971": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9972": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9973": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9974": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9975": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 99,
      "value": "0x26FF"
    },
    "9978": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9979": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "9982": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9983": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9990": {
      "op": "SHL"
    },
    "9991": {
      "op": "SUB"
    },
    "9992": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "3"
    },
    "9993": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10026": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10028": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10029": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10031": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10032": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10033": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10034": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "3"
    },
    "10035": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10036": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "3"
    },
    "10037": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "10038": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "3"
    },
    "10039": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10040": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10041": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10043": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10044": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10045": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10046": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10048": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10050": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10051": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10053": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10054": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10055": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "op": "SUB"
    },
    "10064": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "10065": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 100,
      "value": "0x27B1"
    },
    "10068": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10069": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10071": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10078": {
      "op": "SHL"
    },
    "10079": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10080": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10083": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10085": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "3"
    },
    "10087": {
      "op": "MSTORE"
    },
    "10088": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10092": {
      "op": "DUP3"
    },
    "10093": {
      "op": "ADD"
    },
    "10094": {
      "op": "MSTORE"
    },
    "10095": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "10128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10130": {
      "op": "DUP3"
    },
    "10131": {
      "op": "ADD"
    },
    "10132": {
      "op": "MSTORE"
    },
    "10133": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10148": {
      "op": "SHL"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10151": {
      "op": "DUP3"
    },
    "10152": {
      "op": "ADD"
    },
    "10153": {
      "op": "MSTORE"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10156": {
      "op": "ADD"
    },
    "10157": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "10160": {
      "op": "JUMP"
    },
    "10161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10164": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BC"
    },
    "10167": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10168": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "10171": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10172": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10173": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10174": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "3"
    },
    "10175": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 101
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10182": {
      "op": "SHL"
    },
    "10183": {
      "op": "SUB"
    },
    "10184": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "10185": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10192": {
      "op": "SHL"
    },
    "10193": {
      "op": "SUB"
    },
    "10194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "3"
    },
    "10195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "3"
    },
    "10196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F7"
    },
    "10200": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10201": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "10202": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10209": {
      "op": "SHL"
    },
    "10210": {
      "op": "SUB"
    },
    "10211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "10212": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27EC"
    },
    "10215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7D"
    },
    "10219": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10227": {
      "op": "SHL"
    },
    "10228": {
      "op": "SUB"
    },
    "10229": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "3"
    },
    "10230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "3"
    },
    "10231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10232": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10233": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2827"
    },
    "10236": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10237": {
      "op": "POP"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10244": {
      "op": "SHL"
    },
    "10245": {
      "op": "SUB"
    },
    "10246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "3"
    },
    "10249": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10251": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10254": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10256": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10258": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10259": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "10269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10274": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10276": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "10278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "3"
    },
    "10279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10281": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "op": "POP"
    },
    "10284": {
      "op": "POP"
    },
    "10285": {
      "op": "POP"
    },
    "10286": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10287": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10288": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 102
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10295": {
      "op": "SHL"
    },
    "10296": {
      "op": "SUB"
    },
    "10297": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "10298": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2842"
    },
    "10301": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10302": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "10305": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10306": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10313": {
      "op": "SHL"
    },
    "10314": {
      "op": "SUB"
    },
    "10315": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "10316": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "3"
    },
    "10317": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28AA"
    },
    "10320": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10321": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10323": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10330": {
      "op": "SHL"
    },
    "10331": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10332": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10335": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10337": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10338": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "3"
    },
    "10339": {
      "op": "MSTORE"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10344": {
      "op": "DUP3"
    },
    "10345": {
      "op": "ADD"
    },
    "10346": {
      "op": "MSTORE"
    },
    "10347": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "10380": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10382": {
      "op": "DUP3"
    },
    "10383": {
      "op": "ADD"
    },
    "10384": {
      "op": "MSTORE"
    },
    "10385": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "10397": {
      "op": "SHL"
    },
    "10398": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10400": {
      "op": "DUP3"
    },
    "10401": {
      "op": "ADD"
    },
    "10402": {
      "op": "MSTORE"
    },
    "10403": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10405": {
      "op": "ADD"
    },
    "10406": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "10409": {
      "op": "JUMP"
    },
    "10410": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10417": {
      "op": "SHL"
    },
    "10418": {
      "op": "SUB"
    },
    "10419": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 103
    },
    "10420": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "3"
    },
    "10421": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x290C"
    },
    "10424": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10425": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10427": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10434": {
      "op": "SHL"
    },
    "10435": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10436": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10439": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10441": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10442": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "3"
    },
    "10443": {
      "op": "MSTORE"
    },
    "10444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10446": {
      "op": "DUP1"
    },
    "10447": {
      "op": "DUP3"
    },
    "10448": {
      "op": "ADD"
    },
    "10449": {
      "op": "MSTORE"
    },
    "10450": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10485": {
      "op": "DUP3"
    },
    "10486": {
      "op": "ADD"
    },
    "10487": {
      "op": "MSTORE"
    },
    "10488": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10495": {
      "op": "SHL"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10498": {
      "op": "DUP3"
    },
    "10499": {
      "op": "ADD"
    },
    "10500": {
      "op": "MSTORE"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10503": {
      "op": "ADD"
    },
    "10504": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "10507": {
      "op": "JUMP"
    },
    "10508": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10509": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 104,
      "value": "0x2917"
    },
    "10512": {
      "fn": "ERC721._transfer",
      "offset": [
        10635,
        10639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10513": {
      "fn": "ERC721._transfer",
      "offset": [
        10641,
        10643
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10514": {
      "fn": "ERC721._transfer",
      "offset": [
        10645,
        10652
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10515": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F49"
    },
    "10518": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10519": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10520": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 105,
      "value": "0x2922"
    },
    "10523": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10525": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10526": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26CA"
    },
    "10529": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10530": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10537": {
      "op": "SHL"
    },
    "10538": {
      "op": "SUB"
    },
    "10539": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 106
    },
    "10540": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "3"
    },
    "10541": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10543": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10544": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10545": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10546": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10548": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10550": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10551": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10553": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10554": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10555": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10556": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10557": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10559": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10560": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10561": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x294B"
    },
    "10564": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10565": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10566": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10567": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x366B"
    },
    "10570": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10571": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10572": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10573": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10574": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10575": {
      "op": "POP"
    },
    "10576": {
      "op": "POP"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10583": {
      "op": "SHL"
    },
    "10584": {
      "op": "SUB"
    },
    "10585": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 107
    },
    "10586": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "3"
    },
    "10587": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10589": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10590": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10591": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10592": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10594": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10596": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10597": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10599": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10600": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10601": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10602": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10603": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10605": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10606": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10607": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2979"
    },
    "10610": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10611": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10612": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10613": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x371C"
    },
    "10616": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10617": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10618": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10619": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10620": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10621": {
      "op": "POP"
    },
    "10622": {
      "op": "POP"
    },
    "10623": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 108,
      "value": "0x0"
    },
    "10625": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10626": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10627": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10628": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10630": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10632": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10633": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10635": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10636": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10637": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10638": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10639": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10646": {
      "op": "SHL"
    },
    "10647": {
      "op": "SUB"
    },
    "10648": {
      "op": "NOT"
    },
    "10649": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10656": {
      "op": "SHL"
    },
    "10657": {
      "op": "SUB"
    },
    "10658": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10659": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10660": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "3"
    },
    "10661": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10662": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10663": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "3"
    },
    "10664": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10665": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10666": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10667": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 109
    },
    "10668": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10669": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10670": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "10671": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10672": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10673": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "3"
    },
    "10674": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10675": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10708": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10709": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "3"
    },
    "10710": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10711": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10712": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "3"
    },
    "10713": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10714": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10715": {
      "fn": "MerkleProof.verify",
      "offset": [
        968,
        972
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10717": {
      "fn": "MerkleProof.verify",
      "offset": [
        1020,
        1024
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 110
    },
    "10718": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29E7"
    },
    "10721": {
      "fn": "MerkleProof.verify",
      "offset": [
        1004,
        1009
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10722": {
      "fn": "MerkleProof.verify",
      "offset": [
        1011,
        1015
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10723": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1003
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F6C"
    },
    "10726": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        991,
        1016
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10727": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1016
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10728": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "EQ",
      "path": "12"
    },
    "10729": {
      "fn": "MerkleProof.verify",
      "offset": [
        991,
        1024
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10730": {
      "fn": "MerkleProof.verify",
      "offset": [
        847,
        1031
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10731": {
      "op": "POP"
    },
    "10732": {
      "op": "POP"
    },
    "10733": {
      "op": "POP"
    },
    "10734": {
      "op": "POP"
    },
    "10735": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        847,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10736": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10743": {
      "op": "SHL"
    },
    "10744": {
      "op": "SUB"
    },
    "10745": {
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 111
    },
    "10746": {
      "branch": 188,
      "fn": "ERC721._mint",
      "offset": [
        9142,
        9158
      ],
      "op": "AND",
      "path": "3"
    },
    "10747": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A46"
    },
    "10750": {
      "branch": 188,
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10751": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10753": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10760": {
      "op": "SHL"
    },
    "10761": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10762": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10765": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10767": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10768": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "ADD",
      "path": "3"
    },
    "10769": {
      "op": "DUP2"
    },
    "10770": {
      "op": "SWAP1"
    },
    "10771": {
      "op": "MSTORE"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10774": {
      "op": "DUP3"
    },
    "10775": {
      "op": "ADD"
    },
    "10776": {
      "op": "MSTORE"
    },
    "10777": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "10810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10812": {
      "op": "DUP3"
    },
    "10813": {
      "op": "ADD"
    },
    "10814": {
      "op": "MSTORE"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10817": {
      "op": "ADD"
    },
    "10818": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "10821": {
      "op": "JUMP"
    },
    "10822": {
      "fn": "ERC721._mint",
      "offset": [
        9134,
        9195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10823": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10825": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10826": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10827": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10828": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10830": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10832": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10833": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10835": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10836": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10837": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10844": {
      "op": "SHL"
    },
    "10845": {
      "op": "SUB"
    },
    "10846": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "3"
    },
    "10847": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7262
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10848": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 112,
      "value": "0x2AAB"
    },
    "10851": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10852": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10854": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10855": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10861": {
      "op": "SHL"
    },
    "10862": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10863": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10866": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10868": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10869": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "ADD",
      "path": "3"
    },
    "10870": {
      "op": "MSTORE"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10875": {
      "op": "DUP3"
    },
    "10876": {
      "op": "ADD"
    },
    "10877": {
      "op": "MSTORE"
    },
    "10878": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10913": {
      "op": "DUP3"
    },
    "10914": {
      "op": "ADD"
    },
    "10915": {
      "op": "MSTORE"
    },
    "10916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10918": {
      "op": "ADD"
    },
    "10919": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "10922": {
      "op": "JUMP"
    },
    "10923": {
      "fn": "ERC721._mint",
      "offset": [
        9205,
        9263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10924": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 113,
      "value": "0x2AB7"
    },
    "10927": {
      "fn": "ERC721._mint",
      "offset": [
        9303,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10929": {
      "fn": "ERC721._mint",
      "offset": [
        9307,
        9309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10930": {
      "fn": "ERC721._mint",
      "offset": [
        9311,
        9318
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10931": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9294
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F49"
    },
    "10934": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10935": {
      "fn": "ERC721._mint",
      "offset": [
        9274,
        9319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10942": {
      "op": "SHL"
    },
    "10943": {
      "op": "SUB"
    },
    "10944": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 114
    },
    "10945": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "AND",
      "path": "3"
    },
    "10946": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10948": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10949": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10950": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10951": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "10953": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10955": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10956": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10958": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10959": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10960": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10961": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10962": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10964": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10965": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10966": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AE0"
    },
    "10969": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10970": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10971": {
      "fn": "ERC721._mint",
      "offset": [
        9347,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10972": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x371C"
    },
    "10975": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10976": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10977": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10978": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10979": {
      "fn": "ERC721._mint",
      "offset": [
        9330,
        9348
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10980": {
      "op": "POP"
    },
    "10981": {
      "op": "POP"
    },
    "10982": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 115,
      "value": "0x0"
    },
    "10984": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10985": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10986": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10987": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "10989": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10991": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10992": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10994": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10995": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10996": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10997": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10998": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11005": {
      "op": "SHL"
    },
    "11006": {
      "op": "SUB"
    },
    "11007": {
      "op": "NOT"
    },
    "11008": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11015": {
      "op": "SHL"
    },
    "11016": {
      "op": "SUB"
    },
    "11017": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11018": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "AND",
      "path": "3"
    },
    "11019": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11020": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11021": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "OR",
      "path": "3"
    },
    "11022": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11023": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11024": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9379
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11025": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 116
    },
    "11026": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11027": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11028": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11029": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11030": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11063": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11064": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11065": {
      "fn": "ERC721._mint",
      "offset": [
        9358,
        9374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11066": {
      "fn": "ERC721._mint",
      "offset": [
        9395,
        9428
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11067": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11068": {
      "fn": "ERC721._mint",
      "offset": [
        9063,
        9435
      ],
      "op": "POP",
      "path": "3"
    },
    "11069": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9063,
        9435
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11070": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11071": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11073": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 117,
      "value": "0x2B4A"
    },
    "11076": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11077": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11078": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36D3"
    },
    "11081": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11082": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11083": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11084": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11085": {
      "op": "POP"
    },
    "11086": {
      "op": "POP"
    },
    "11087": {
      "op": "POP"
    },
    "11088": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11089": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11090": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11092": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 118,
      "value": "0x2B4A"
    },
    "11095": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11096": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11097": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38B1"
    },
    "11100": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11101": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11102": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11104": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11105": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11107": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11108": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA6"
    },
    "11111": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11112": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11114": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11121": {
      "op": "SHL"
    },
    "11122": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11123": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11126": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11128": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11129": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "11130": {
      "op": "MSTORE"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11135": {
      "op": "DUP3"
    },
    "11136": {
      "op": "ADD"
    },
    "11137": {
      "op": "MSTORE"
    },
    "11138": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "11161": {
      "op": "SHL"
    },
    "11162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11164": {
      "op": "DUP3"
    },
    "11165": {
      "op": "ADD"
    },
    "11166": {
      "op": "MSTORE"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11169": {
      "op": "ADD"
    },
    "11170": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "11173": {
      "op": "JUMP"
    },
    "11174": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11175": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 119,
      "value": "0x6"
    },
    "11177": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11178": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11179": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11181": {
      "op": "NOT"
    },
    "11182": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "11183": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11184": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11185": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 120,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "11218": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "11219": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11220": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11222": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11229": {
      "op": "SHL"
    },
    "11230": {
      "op": "SUB"
    },
    "11231": {
      "op": "SWAP1"
    },
    "11232": {
      "op": "SWAP2"
    },
    "11233": {
      "op": "AND"
    },
    "11234": {
      "op": "DUP2"
    },
    "11235": {
      "op": "MSTORE"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11238": {
      "op": "ADD"
    },
    "11239": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11241": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11242": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11243": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11244": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "11245": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11246": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11247": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11248": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11249": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11251": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BFB"
    },
    "11254": {
      "fn": "ERC721._burn",
      "offset": [
        9742,
        9749
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11255": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9741
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1738"
    },
    "11258": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11259": {
      "fn": "ERC721._burn",
      "offset": [
        9727,
        9750
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11260": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11261": {
      "fn": "ERC721._burn",
      "offset": [
        9711,
        9750
      ],
      "op": "POP",
      "path": "3"
    },
    "11262": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 121,
      "value": "0x2C09"
    },
    "11265": {
      "fn": "ERC721._burn",
      "offset": [
        9782,
        9787
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11266": {
      "fn": "ERC721._burn",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11268": {
      "fn": "ERC721._burn",
      "offset": [
        9801,
        9808
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11269": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9781
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F49"
    },
    "11272": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11273": {
      "fn": "ERC721._burn",
      "offset": [
        9761,
        9809
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11274": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 122,
      "value": "0x2C14"
    },
    "11277": {
      "fn": "ERC721._burn",
      "offset": [
        9864,
        9865
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11279": {
      "fn": "ERC721._burn",
      "offset": [
        9868,
        9875
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11280": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26CA"
    },
    "11283": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11284": {
      "fn": "ERC721._burn",
      "offset": [
        9847,
        9876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11291": {
      "op": "SHL"
    },
    "11292": {
      "op": "SUB"
    },
    "11293": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 123
    },
    "11294": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "AND",
      "path": "3"
    },
    "11295": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11297": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11298": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11299": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11300": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11302": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11304": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11305": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11307": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11308": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11309": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11310": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11311": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11313": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11314": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11315": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C3D"
    },
    "11318": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11319": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11320": {
      "fn": "ERC721._burn",
      "offset": [
        9907,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11321": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x366B"
    },
    "11324": {
      "fn": "ERC721._burn",
      "jump": "i",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11325": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11326": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11327": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11328": {
      "fn": "ERC721._burn",
      "offset": [
        9887,
        9908
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11329": {
      "op": "POP"
    },
    "11330": {
      "op": "POP"
    },
    "11331": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 124,
      "value": "0x0"
    },
    "11333": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11334": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11335": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11336": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11338": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11340": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11341": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11343": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11344": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11345": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11346": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11347": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11354": {
      "op": "SHL"
    },
    "11355": {
      "op": "SUB"
    },
    "11356": {
      "op": "NOT"
    },
    "11357": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "3"
    },
    "11358": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11359": {
      "fn": "ERC721._burn",
      "offset": [
        9918,
        9941
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11360": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 125
    },
    "11361": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11362": {
      "fn": "ERC721._burn",
      "offset": [
        9933,
        9940
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11363": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11370": {
      "op": "SHL"
    },
    "11371": {
      "op": "SUB"
    },
    "11372": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11373": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "AND",
      "path": "3"
    },
    "11374": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11375": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11408": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11409": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11410": {
      "fn": "ERC721._burn",
      "offset": [
        9925,
        9941
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11411": {
      "fn": "ERC721._burn",
      "offset": [
        9957,
        9993
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11412": {
      "fn": "ERC721._burn",
      "offset": [
        9701,
        10000
      ],
      "op": "POP",
      "path": "3"
    },
    "11413": {
      "fn": "ERC721._burn",
      "offset": [
        9652,
        10000
      ],
      "op": "POP",
      "path": "3"
    },
    "11414": {
      "fn": "ERC721._burn",
      "jump": "o",
      "offset": [
        9652,
        10000
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "11418": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11419": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11426": {
      "op": "SHL"
    },
    "11427": {
      "op": "SUB"
    },
    "11428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 126
    },
    "11429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "11437": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11444": {
      "op": "SHL"
    },
    "11445": {
      "op": "SUB"
    },
    "11446": {
      "op": "NOT"
    },
    "11447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "11448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "11449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "11450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "11452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11453": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 127,
      "value": "0x40"
    },
    "11455": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11456": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11457": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11458": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11459": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "11460": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "11461": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11462": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11463": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11464": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11497": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11498": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11500": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11501": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11503": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "11504": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11505": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11506": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "11508": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11509": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "11511": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "11512": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11513": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D14"
    },
    "11516": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11517": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11519": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11526": {
      "op": "SHL"
    },
    "11527": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11528": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11529": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "11531": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "11532": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "11535": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11536": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36F2"
    },
    "11539": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11540": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11541": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 128,
      "value": "0x6"
    },
    "11543": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11544": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11547": {
      "op": "NOT"
    },
    "11548": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "11549": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11551": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "11552": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11553": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11554": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 129,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "11587": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BD3"
    },
    "11590": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "11591": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "11592": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "9"
    },
    "11593": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11594": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 130
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11601": {
      "op": "SHL"
    },
    "11602": {
      "op": "SUB"
    },
    "11603": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "11604": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11611": {
      "op": "SHL"
    },
    "11612": {
      "op": "SUB"
    },
    "11613": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "3"
    },
    "11614": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "3"
    },
    "11615": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11616": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DAB"
    },
    "11619": {
      "branch": 189,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11620": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11622": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11629": {
      "op": "SHL"
    },
    "11630": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11631": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11634": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11636": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11637": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "3"
    },
    "11638": {
      "op": "MSTORE"
    },
    "11639": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11643": {
      "op": "DUP3"
    },
    "11644": {
      "op": "ADD"
    },
    "11645": {
      "op": "MSTORE"
    },
    "11646": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11681": {
      "op": "DUP3"
    },
    "11682": {
      "op": "ADD"
    },
    "11683": {
      "op": "MSTORE"
    },
    "11684": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11686": {
      "op": "ADD"
    },
    "11687": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "11690": {
      "op": "JUMP"
    },
    "11691": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11698": {
      "op": "SHL"
    },
    "11699": {
      "op": "SUB"
    },
    "11700": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 131
    },
    "11701": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11702": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "3"
    },
    "11703": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11705": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11706": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11707": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11708": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "11710": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11712": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11713": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11714": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11715": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11717": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11718": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11719": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11720": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11721": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "3"
    },
    "11722": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "3"
    },
    "11723": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11724": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11726": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11728": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11729": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11730": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11731": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11732": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11733": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11734": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11735": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11737": {
      "op": "NOT"
    },
    "11738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "3"
    },
    "11739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "3"
    },
    "11745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 132
    },
    "11749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11750": {
      "op": "SWAP2"
    },
    "11751": {
      "op": "DUP3"
    },
    "11752": {
      "op": "MSTORE"
    },
    "11753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "11786": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11787": {
      "op": "ADD"
    },
    "11788": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11790": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11791": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11792": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "3"
    },
    "11794": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11795": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "3"
    },
    "11796": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "11797": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "11798": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "3"
    },
    "11799": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11800": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11801": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 133,
      "value": "0x2E23"
    },
    "11804": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11805": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11806": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11807": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x282F"
    },
    "11810": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11811": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11812": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 134,
      "value": "0x2E2F"
    },
    "11815": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11816": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11817": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3018"
    },
    "11822": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11823": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20F1"
    },
    "11827": {
      "branch": 190,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11828": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11837": {
      "op": "SHL"
    },
    "11838": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "3"
    },
    "11843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "11846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38C5"
    },
    "11850": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11851": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11852": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "11854": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11855": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E6F"
    },
    "11858": {
      "branch": 195,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11859": {
      "op": "POP"
    },
    "11860": {
      "op": "POP"
    },
    "11861": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 135,
      "value": "0x40"
    },
    "11863": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11864": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11865": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11866": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11867": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "11"
    },
    "11868": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11869": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11870": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11871": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "11873": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11874": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "11879": {
      "op": "SHL"
    },
    "11880": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11882": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11883": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "11"
    },
    "11884": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11885": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11886": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11887": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11888": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11889": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11891": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11892": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11893": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11894": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E99"
    },
    "11897": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11898": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 136
    },
    "11899": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E83"
    },
    "11902": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11903": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x377D"
    },
    "11906": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11907": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11908": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11909": {
      "op": "POP"
    },
    "11910": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 137,
      "value": "0x2E92"
    },
    "11913": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11914": {
      "op": "POP"
    },
    "11915": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "11917": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11918": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x38B1"
    },
    "11921": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11922": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11923": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "11924": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "11"
    },
    "11925": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E73"
    },
    "11928": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11929": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11930": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "11932": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11933": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11942": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11943": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "11"
    },
    "11944": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11945": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EB4"
    },
    "11948": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11949": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EB4"
    },
    "11952": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32AC"
    },
    "11955": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11956": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11957": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11959": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11960": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11961": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11962": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11963": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11964": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11965": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "11967": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "11968": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "11970": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "11"
    },
    "11971": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "11"
    },
    "11972": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11974": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "11975": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11976": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "11977": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11979": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "11982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EDE"
    },
    "11985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11986": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "11988": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "11990": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11991": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "11"
    },
    "11992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "11993": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "11"
    },
    "11994": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "11995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "11"
    },
    "11996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11997": {
      "op": "POP"
    },
    "11998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "11"
    },
    "12000": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12001": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "11"
    },
    "12002": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12003": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "11"
    },
    "12004": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "12005": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2827"
    },
    "12008": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12009": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 138,
      "value": "0x2EF3"
    },
    "12012": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "12014": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12015": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x366B"
    },
    "12018": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12019": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12020": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "12021": {
      "op": "POP"
    },
    "12022": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 139,
      "value": "0x2F00"
    },
    "12025": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "12027": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "11"
    },
    "12028": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3917"
    },
    "12031": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12032": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12033": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F0B"
    },
    "12036": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12037": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x30"
    },
    "12039": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x371C"
    },
    "12042": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12043": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12044": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF8"
    },
    "12046": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "11"
    },
    "12047": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12048": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "11"
    },
    "12049": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12050": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "12051": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12052": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "11"
    },
    "12053": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F20"
    },
    "12056": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12057": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F20"
    },
    "12060": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3865"
    },
    "12063": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12064": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12065": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "12067": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "11"
    },
    "12068": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "11"
    },
    "12069": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12076": {
      "op": "SHL"
    },
    "12077": {
      "op": "SUB"
    },
    "12078": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "11"
    },
    "12079": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "11"
    },
    "12080": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12081": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "11"
    },
    "12082": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "12084": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "11"
    },
    "12085": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "12086": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "12087": {
      "op": "POP"
    },
    "12088": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 140,
      "value": "0x2F42"
    },
    "12091": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "12093": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "11"
    },
    "12094": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x38B1"
    },
    "12097": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12098": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "12099": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "12100": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "11"
    },
    "12101": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EE2"
    },
    "12104": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "12105": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        9917,
        10092
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "12106": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "12108": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12109": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12111": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "12112": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12113": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD28"
    },
    "12116": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12117": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12119": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12126": {
      "op": "SHL"
    },
    "12127": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12128": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12129": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12131": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "12132": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "12135": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12136": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36F2"
    },
    "12139": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12140": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12141": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12143": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1508,
        1512
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12144": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1466,
        1473
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12145": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12146": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1551
      ],
      "op": "DUP5",
      "path": "12"
    },
    "12147": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1546,
        1558
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12148": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1543
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12149": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1542,
        1558
      ],
      "op": "LT",
      "path": "12"
    },
    "12150": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "12151": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3010"
    },
    "12154": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12155": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1599
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12157": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1607
      ],
      "op": "DUP6",
      "path": "12"
    },
    "12158": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1608,
        1609
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12159": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12160": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12161": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12162": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "LT",
      "path": "12"
    },
    "12163": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F8E"
    },
    "12166": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12167": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F8E"
    },
    "12170": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3865"
    },
    "12173": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12174": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12175": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12177": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MUL",
      "path": "12"
    },
    "12178": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12180": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "12"
    },
    "12181": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "ADD",
      "path": "12"
    },
    "12182": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1602,
        1610
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12183": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12184": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1579,
        1610
      ],
      "op": "POP",
      "path": "12"
    },
    "12185": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1644,
        1656
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12186": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1640
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12187": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1628,
        1656
      ],
      "op": "GT",
      "path": "12"
    },
    "12188": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FD0"
    },
    "12191": {
      "branch": 192,
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12192": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 141,
      "value": "0x40"
    },
    "12194": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12195": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12196": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12198": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12199": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "ADD",
      "path": "12"
    },
    "12200": {
      "op": "DUP6"
    },
    "12201": {
      "op": "SWAP1"
    },
    "12202": {
      "op": "MSTORE"
    },
    "12203": {
      "op": "SWAP1"
    },
    "12204": {
      "op": "DUP2"
    },
    "12205": {
      "op": "ADD"
    },
    "12206": {
      "op": "DUP3"
    },
    "12207": {
      "op": "SWAP1"
    },
    "12208": {
      "op": "MSTORE"
    },
    "12209": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12211": {
      "op": "ADD"
    },
    "12212": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12214": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12215": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12217": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12218": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12219": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "12"
    },
    "12220": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SUB",
      "path": "12"
    },
    "12221": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12222": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12223": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12224": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12226": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1779,
        1823
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12227": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12228": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12229": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12230": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12232": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "ADD",
      "path": "12"
    },
    "12233": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1824
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12234": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12235": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1754,
        1824
      ],
      "op": "POP",
      "path": "12"
    },
    "12236": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2FFD"
    },
    "12239": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12240": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12241": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 142,
      "value": "0x40"
    },
    "12243": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12244": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12245": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12247": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12248": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "ADD",
      "path": "12"
    },
    "12249": {
      "op": "DUP4"
    },
    "12250": {
      "op": "SWAP1"
    },
    "12251": {
      "op": "MSTORE"
    },
    "12252": {
      "op": "SWAP1"
    },
    "12253": {
      "op": "DUP2"
    },
    "12254": {
      "op": "ADD"
    },
    "12255": {
      "op": "DUP5"
    },
    "12256": {
      "op": "SWAP1"
    },
    "12257": {
      "op": "MSTORE"
    },
    "12258": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12260": {
      "op": "ADD"
    },
    "12261": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12263": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12264": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12266": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12267": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12268": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "12"
    },
    "12269": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SUB",
      "path": "12"
    },
    "12270": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12271": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12272": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12273": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "12275": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1966,
        2010
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "12276": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12277": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12278": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12279": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "12281": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "ADD",
      "path": "12"
    },
    "12282": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1956,
        2011
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "12283": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12284": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1941,
        2011
      ],
      "op": "POP",
      "path": "12"
    },
    "12285": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1624,
        2026
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12286": {
      "op": "POP"
    },
    "12287": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 143
    },
    "12288": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3008"
    },
    "12291": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12292": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x377D"
    },
    "12295": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12296": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12297": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12298": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "12"
    },
    "12299": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1560,
        1563
      ],
      "op": "POP",
      "path": "12"
    },
    "12300": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2F71"
    },
    "12303": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12304": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1522,
        2036
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12305": {
      "op": "POP"
    },
    "12306": {
      "fn": "MerkleProof.processProof",
      "offset": [
        2052,
        2064
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 144
    },
    "12307": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1383,
        2071
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "12308": {
      "op": "POP"
    },
    "12309": {
      "op": "POP"
    },
    "12310": {
      "op": "POP"
    },
    "12311": {
      "fn": "MerkleProof.processProof",
      "jump": "o",
      "offset": [
        1383,
        2071
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12321": {
      "op": "SHL"
    },
    "12322": {
      "op": "SUB"
    },
    "12323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "3"
    },
    "12325": {
      "op": "EXTCODESIZE"
    },
    "12326": {
      "op": "ISZERO"
    },
    "12327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x310B"
    },
    "12330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12334": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12341": {
      "op": "SHL"
    },
    "12342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12350": {
      "op": "SHL"
    },
    "12351": {
      "op": "SUB"
    },
    "12352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "3"
    },
    "12353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "3"
    },
    "12354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "12360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x305C"
    },
    "12364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12365": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "12366": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "12367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "3"
    },
    "12368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "3"
    },
    "12370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "3"
    },
    "12372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x392B"
    },
    "12379": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "12388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "3"
    },
    "12389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "3"
    },
    "12393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "3"
    },
    "12394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "3"
    },
    "12395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "12396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "3"
    },
    "12399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3097"
    },
    "12404": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12405": {
      "op": "POP"
    },
    "12406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12410": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "12412": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12413": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12414": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12418": {
      "op": "NOT"
    },
    "12419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "3"
    },
    "12420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12423": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "12424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12425": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3094"
    },
    "12428": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12429": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "3"
    },
    "12431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3968"
    },
    "12435": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12437": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "12439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30F1"
    },
    "12443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "12448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C5"
    },
    "12451": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12456": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "12457": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "12459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "3"
    },
    "12460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "12462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "3"
    },
    "12465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "12469": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "12472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "12474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "12476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "3"
    },
    "12479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "3"
    },
    "12480": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "12481": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30CA"
    },
    "12484": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12485": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "12488": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "12489": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "3"
    },
    "12490": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12491": {
      "op": "POP"
    },
    "12492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12494": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30E9"
    },
    "12497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 145,
      "value": "0x40"
    },
    "12500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12507": {
      "op": "SHL"
    },
    "12508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "12510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "12512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "3"
    },
    "12513": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF2"
    },
    "12516": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38C5"
    },
    "12520": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "12523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "12524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "3"
    },
    "12525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "12527": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "3"
    },
    "12528": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "3"
    },
    "12529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12536": {
      "op": "SHL"
    },
    "12537": {
      "op": "SUB"
    },
    "12538": {
      "op": "NOT"
    },
    "12539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "3",
      "statement": 146
    },
    "12540": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "12545": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12547": {
      "op": "SHL"
    },
    "12548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "3"
    },
    "12549": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "12550": {
      "op": "POP"
    },
    "12551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2827"
    },
    "12554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12555": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "12556": {
      "op": "POP"
    },
    "12557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 147,
      "value": "0x1"
    },
    "12559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "12560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "12561": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "12565": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "12566": {
      "op": "JUMPDEST"
    },
    "12567": {
      "op": "DUP3"
    },
    "12568": {
      "op": "DUP1"
    },
    "12569": {
      "op": "SLOAD"
    },
    "12570": {
      "op": "PUSH2",
      "value": "0x3122"
    },
    "12573": {
      "op": "SWAP1"
    },
    "12574": {
      "op": "PUSH2",
      "value": "0x35E5"
    },
    "12577": {
      "jump": "i",
      "op": "JUMP"
    },
    "12578": {
      "op": "JUMPDEST"
    },
    "12579": {
      "op": "SWAP1"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12582": {
      "op": "MSTORE"
    },
    "12583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12587": {
      "op": "KECCAK256"
    },
    "12588": {
      "op": "SWAP1"
    },
    "12589": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12591": {
      "op": "ADD"
    },
    "12592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12594": {
      "op": "SWAP1"
    },
    "12595": {
      "op": "DIV"
    },
    "12596": {
      "op": "DUP2"
    },
    "12597": {
      "op": "ADD"
    },
    "12598": {
      "op": "SWAP3"
    },
    "12599": {
      "op": "DUP3"
    },
    "12600": {
      "op": "PUSH2",
      "value": "0x3144"
    },
    "12603": {
      "op": "JUMPI"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12606": {
      "op": "DUP6"
    },
    "12607": {
      "op": "SSTORE"
    },
    "12608": {
      "op": "PUSH2",
      "value": "0x318A"
    },
    "12611": {
      "op": "JUMP"
    },
    "12612": {
      "op": "JUMPDEST"
    },
    "12613": {
      "op": "DUP3"
    },
    "12614": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12616": {
      "op": "LT"
    },
    "12617": {
      "op": "PUSH2",
      "value": "0x315D"
    },
    "12620": {
      "op": "JUMPI"
    },
    "12621": {
      "op": "DUP1"
    },
    "12622": {
      "op": "MLOAD"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12625": {
      "op": "NOT"
    },
    "12626": {
      "op": "AND"
    },
    "12627": {
      "op": "DUP4"
    },
    "12628": {
      "op": "DUP1"
    },
    "12629": {
      "op": "ADD"
    },
    "12630": {
      "op": "OR"
    },
    "12631": {
      "op": "DUP6"
    },
    "12632": {
      "op": "SSTORE"
    },
    "12633": {
      "op": "PUSH2",
      "value": "0x318A"
    },
    "12636": {
      "op": "JUMP"
    },
    "12637": {
      "op": "JUMPDEST"
    },
    "12638": {
      "op": "DUP3"
    },
    "12639": {
      "op": "DUP1"
    },
    "12640": {
      "op": "ADD"
    },
    "12641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12643": {
      "op": "ADD"
    },
    "12644": {
      "op": "DUP6"
    },
    "12645": {
      "op": "SSTORE"
    },
    "12646": {
      "op": "DUP3"
    },
    "12647": {
      "op": "ISZERO"
    },
    "12648": {
      "op": "PUSH2",
      "value": "0x318A"
    },
    "12651": {
      "op": "JUMPI"
    },
    "12652": {
      "op": "SWAP2"
    },
    "12653": {
      "op": "DUP3"
    },
    "12654": {
      "op": "ADD"
    },
    "12655": {
      "op": "JUMPDEST"
    },
    "12656": {
      "op": "DUP3"
    },
    "12657": {
      "op": "DUP2"
    },
    "12658": {
      "op": "GT"
    },
    "12659": {
      "op": "ISZERO"
    },
    "12660": {
      "op": "PUSH2",
      "value": "0x318A"
    },
    "12663": {
      "op": "JUMPI"
    },
    "12664": {
      "op": "DUP3"
    },
    "12665": {
      "op": "MLOAD"
    },
    "12666": {
      "op": "DUP3"
    },
    "12667": {
      "op": "SSTORE"
    },
    "12668": {
      "op": "SWAP2"
    },
    "12669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12671": {
      "op": "ADD"
    },
    "12672": {
      "op": "SWAP2"
    },
    "12673": {
      "op": "SWAP1"
    },
    "12674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12676": {
      "op": "ADD"
    },
    "12677": {
      "op": "SWAP1"
    },
    "12678": {
      "op": "PUSH2",
      "value": "0x316F"
    },
    "12681": {
      "op": "JUMP"
    },
    "12682": {
      "op": "JUMPDEST"
    },
    "12683": {
      "op": "POP"
    },
    "12684": {
      "op": "PUSH2",
      "value": "0x3196"
    },
    "12687": {
      "op": "SWAP3"
    },
    "12688": {
      "op": "SWAP2"
    },
    "12689": {
      "op": "POP"
    },
    "12690": {
      "op": "PUSH2",
      "value": "0x319A"
    },
    "12693": {
      "jump": "i",
      "op": "JUMP"
    },
    "12694": {
      "op": "JUMPDEST"
    },
    "12695": {
      "op": "POP"
    },
    "12696": {
      "op": "SWAP1"
    },
    "12697": {
      "jump": "o",
      "op": "JUMP"
    },
    "12698": {
      "op": "JUMPDEST"
    },
    "12699": {
      "op": "JUMPDEST"
    },
    "12700": {
      "op": "DUP1"
    },
    "12701": {
      "op": "DUP3"
    },
    "12702": {
      "op": "GT"
    },
    "12703": {
      "op": "ISZERO"
    },
    "12704": {
      "op": "PUSH2",
      "value": "0x3196"
    },
    "12707": {
      "op": "JUMPI"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12710": {
      "op": "DUP2"
    },
    "12711": {
      "op": "SSTORE"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12714": {
      "op": "ADD"
    },
    "12715": {
      "op": "PUSH2",
      "value": "0x319B"
    },
    "12718": {
      "op": "JUMP"
    },
    "12719": {
      "op": "JUMPDEST"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12726": {
      "op": "SHL"
    },
    "12727": {
      "op": "SUB"
    },
    "12728": {
      "op": "NOT"
    },
    "12729": {
      "op": "DUP2"
    },
    "12730": {
      "op": "AND"
    },
    "12731": {
      "op": "DUP2"
    },
    "12732": {
      "op": "EQ"
    },
    "12733": {
      "op": "PUSH2",
      "value": "0x1658"
    },
    "12736": {
      "op": "JUMPI"
    },
    "12737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12739": {
      "op": "DUP1"
    },
    "12740": {
      "op": "REVERT"
    },
    "12741": {
      "op": "JUMPDEST"
    },
    "12742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12746": {
      "op": "DUP3"
    },
    "12747": {
      "op": "DUP5"
    },
    "12748": {
      "op": "SUB"
    },
    "12749": {
      "op": "SLT"
    },
    "12750": {
      "op": "ISZERO"
    },
    "12751": {
      "op": "PUSH2",
      "value": "0x31D7"
    },
    "12754": {
      "op": "JUMPI"
    },
    "12755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12757": {
      "op": "DUP1"
    },
    "12758": {
      "op": "REVERT"
    },
    "12759": {
      "op": "JUMPDEST"
    },
    "12760": {
      "op": "DUP2"
    },
    "12761": {
      "op": "CALLDATALOAD"
    },
    "12762": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "12765": {
      "op": "DUP2"
    },
    "12766": {
      "op": "PUSH2",
      "value": "0x31AF"
    },
    "12769": {
      "jump": "i",
      "op": "JUMP"
    },
    "12770": {
      "op": "JUMPDEST"
    },
    "12771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12773": {
      "op": "JUMPDEST"
    },
    "12774": {
      "op": "DUP4"
    },
    "12775": {
      "op": "DUP2"
    },
    "12776": {
      "op": "LT"
    },
    "12777": {
      "op": "ISZERO"
    },
    "12778": {
      "op": "PUSH2",
      "value": "0x31FD"
    },
    "12781": {
      "op": "JUMPI"
    },
    "12782": {
      "op": "DUP2"
    },
    "12783": {
      "op": "DUP2"
    },
    "12784": {
      "op": "ADD"
    },
    "12785": {
      "op": "MLOAD"
    },
    "12786": {
      "op": "DUP4"
    },
    "12787": {
      "op": "DUP3"
    },
    "12788": {
      "op": "ADD"
    },
    "12789": {
      "op": "MSTORE"
    },
    "12790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12792": {
      "op": "ADD"
    },
    "12793": {
      "op": "PUSH2",
      "value": "0x31E5"
    },
    "12796": {
      "op": "JUMP"
    },
    "12797": {
      "op": "JUMPDEST"
    },
    "12798": {
      "op": "DUP4"
    },
    "12799": {
      "op": "DUP2"
    },
    "12800": {
      "op": "GT"
    },
    "12801": {
      "op": "ISZERO"
    },
    "12802": {
      "op": "PUSH2",
      "value": "0x20F1"
    },
    "12805": {
      "op": "JUMPI"
    },
    "12806": {
      "op": "POP"
    },
    "12807": {
      "op": "POP"
    },
    "12808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12810": {
      "op": "SWAP2"
    },
    "12811": {
      "op": "ADD"
    },
    "12812": {
      "op": "MSTORE"
    },
    "12813": {
      "jump": "o",
      "op": "JUMP"
    },
    "12814": {
      "op": "JUMPDEST"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12817": {
      "op": "DUP2"
    },
    "12818": {
      "op": "MLOAD"
    },
    "12819": {
      "op": "DUP1"
    },
    "12820": {
      "op": "DUP5"
    },
    "12821": {
      "op": "MSTORE"
    },
    "12822": {
      "op": "PUSH2",
      "value": "0x3226"
    },
    "12825": {
      "op": "DUP2"
    },
    "12826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12828": {
      "op": "DUP7"
    },
    "12829": {
      "op": "ADD"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12832": {
      "op": "DUP7"
    },
    "12833": {
      "op": "ADD"
    },
    "12834": {
      "op": "PUSH2",
      "value": "0x31E2"
    },
    "12837": {
      "jump": "i",
      "op": "JUMP"
    },
    "12838": {
      "op": "JUMPDEST"
    },
    "12839": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12841": {
      "op": "ADD"
    },
    "12842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12844": {
      "op": "NOT"
    },
    "12845": {
      "op": "AND"
    },
    "12846": {
      "op": "SWAP3"
    },
    "12847": {
      "op": "SWAP1"
    },
    "12848": {
      "op": "SWAP3"
    },
    "12849": {
      "op": "ADD"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12852": {
      "op": "ADD"
    },
    "12853": {
      "op": "SWAP3"
    },
    "12854": {
      "op": "SWAP2"
    },
    "12855": {
      "op": "POP"
    },
    "12856": {
      "op": "POP"
    },
    "12857": {
      "jump": "o",
      "op": "JUMP"
    },
    "12858": {
      "op": "JUMPDEST"
    },
    "12859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12861": {
      "op": "DUP2"
    },
    "12862": {
      "op": "MSTORE"
    },
    "12863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12865": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "12868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12870": {
      "op": "DUP4"
    },
    "12871": {
      "op": "ADD"
    },
    "12872": {
      "op": "DUP5"
    },
    "12873": {
      "op": "PUSH2",
      "value": "0x320E"
    },
    "12876": {
      "jump": "i",
      "op": "JUMP"
    },
    "12877": {
      "op": "JUMPDEST"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12882": {
      "op": "DUP3"
    },
    "12883": {
      "op": "DUP5"
    },
    "12884": {
      "op": "SUB"
    },
    "12885": {
      "op": "SLT"
    },
    "12886": {
      "op": "ISZERO"
    },
    "12887": {
      "op": "PUSH2",
      "value": "0x325F"
    },
    "12890": {
      "op": "JUMPI"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12893": {
      "op": "DUP1"
    },
    "12894": {
      "op": "REVERT"
    },
    "12895": {
      "op": "JUMPDEST"
    },
    "12896": {
      "op": "POP"
    },
    "12897": {
      "op": "CALLDATALOAD"
    },
    "12898": {
      "op": "SWAP2"
    },
    "12899": {
      "op": "SWAP1"
    },
    "12900": {
      "op": "POP"
    },
    "12901": {
      "jump": "o",
      "op": "JUMP"
    },
    "12902": {
      "op": "JUMPDEST"
    },
    "12903": {
      "op": "DUP1"
    },
    "12904": {
      "op": "CALLDATALOAD"
    },
    "12905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12911": {
      "op": "SHL"
    },
    "12912": {
      "op": "SUB"
    },
    "12913": {
      "op": "DUP2"
    },
    "12914": {
      "op": "AND"
    },
    "12915": {
      "op": "DUP2"
    },
    "12916": {
      "op": "EQ"
    },
    "12917": {
      "op": "PUSH2",
      "value": "0x327D"
    },
    "12920": {
      "op": "JUMPI"
    },
    "12921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12923": {
      "op": "DUP1"
    },
    "12924": {
      "op": "REVERT"
    },
    "12925": {
      "op": "JUMPDEST"
    },
    "12926": {
      "op": "SWAP2"
    },
    "12927": {
      "op": "SWAP1"
    },
    "12928": {
      "op": "POP"
    },
    "12929": {
      "jump": "o",
      "op": "JUMP"
    },
    "12930": {
      "op": "JUMPDEST"
    },
    "12931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12933": {
      "op": "DUP1"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12936": {
      "op": "DUP4"
    },
    "12937": {
      "op": "DUP6"
    },
    "12938": {
      "op": "SUB"
    },
    "12939": {
      "op": "SLT"
    },
    "12940": {
      "op": "ISZERO"
    },
    "12941": {
      "op": "PUSH2",
      "value": "0x3295"
    },
    "12944": {
      "op": "JUMPI"
    },
    "12945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12947": {
      "op": "DUP1"
    },
    "12948": {
      "op": "REVERT"
    },
    "12949": {
      "op": "JUMPDEST"
    },
    "12950": {
      "op": "PUSH2",
      "value": "0x329E"
    },
    "12953": {
      "op": "DUP4"
    },
    "12954": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "12957": {
      "jump": "i",
      "op": "JUMP"
    },
    "12958": {
      "op": "JUMPDEST"
    },
    "12959": {
      "op": "SWAP5"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12962": {
      "op": "SWAP4"
    },
    "12963": {
      "op": "SWAP1"
    },
    "12964": {
      "op": "SWAP4"
    },
    "12965": {
      "op": "ADD"
    },
    "12966": {
      "op": "CALLDATALOAD"
    },
    "12967": {
      "op": "SWAP4"
    },
    "12968": {
      "op": "POP"
    },
    "12969": {
      "op": "POP"
    },
    "12970": {
      "op": "POP"
    },
    "12971": {
      "jump": "o",
      "op": "JUMP"
    },
    "12972": {
      "op": "JUMPDEST"
    },
    "12973": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12978": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12980": {
      "op": "SHL"
    },
    "12981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12983": {
      "op": "MSTORE"
    },
    "12984": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12986": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12988": {
      "op": "MSTORE"
    },
    "12989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12993": {
      "op": "REVERT"
    },
    "12994": {
      "op": "JUMPDEST"
    },
    "12995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12997": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13006": {
      "op": "DUP1"
    },
    "13007": {
      "op": "DUP5"
    },
    "13008": {
      "op": "GT"
    },
    "13009": {
      "op": "ISZERO"
    },
    "13010": {
      "op": "PUSH2",
      "value": "0x32DD"
    },
    "13013": {
      "op": "JUMPI"
    },
    "13014": {
      "op": "PUSH2",
      "value": "0x32DD"
    },
    "13017": {
      "op": "PUSH2",
      "value": "0x32AC"
    },
    "13020": {
      "jump": "i",
      "op": "JUMP"
    },
    "13021": {
      "op": "JUMPDEST"
    },
    "13022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13024": {
      "op": "MLOAD"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13027": {
      "op": "DUP6"
    },
    "13028": {
      "op": "ADD"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13031": {
      "op": "NOT"
    },
    "13032": {
      "op": "SWAP1"
    },
    "13033": {
      "op": "DUP2"
    },
    "13034": {
      "op": "AND"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13037": {
      "op": "ADD"
    },
    "13038": {
      "op": "AND"
    },
    "13039": {
      "op": "DUP2"
    },
    "13040": {
      "op": "ADD"
    },
    "13041": {
      "op": "SWAP1"
    },
    "13042": {
      "op": "DUP3"
    },
    "13043": {
      "op": "DUP3"
    },
    "13044": {
      "op": "GT"
    },
    "13045": {
      "op": "DUP2"
    },
    "13046": {
      "op": "DUP4"
    },
    "13047": {
      "op": "LT"
    },
    "13048": {
      "op": "OR"
    },
    "13049": {
      "op": "ISZERO"
    },
    "13050": {
      "op": "PUSH2",
      "value": "0x3305"
    },
    "13053": {
      "op": "JUMPI"
    },
    "13054": {
      "op": "PUSH2",
      "value": "0x3305"
    },
    "13057": {
      "op": "PUSH2",
      "value": "0x32AC"
    },
    "13060": {
      "jump": "i",
      "op": "JUMP"
    },
    "13061": {
      "op": "JUMPDEST"
    },
    "13062": {
      "op": "DUP2"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13065": {
      "op": "MSTORE"
    },
    "13066": {
      "op": "DUP1"
    },
    "13067": {
      "op": "SWAP4"
    },
    "13068": {
      "op": "POP"
    },
    "13069": {
      "op": "DUP6"
    },
    "13070": {
      "op": "DUP2"
    },
    "13071": {
      "op": "MSTORE"
    },
    "13072": {
      "op": "DUP7"
    },
    "13073": {
      "op": "DUP7"
    },
    "13074": {
      "op": "DUP7"
    },
    "13075": {
      "op": "ADD"
    },
    "13076": {
      "op": "GT"
    },
    "13077": {
      "op": "ISZERO"
    },
    "13078": {
      "op": "PUSH2",
      "value": "0x331E"
    },
    "13081": {
      "op": "JUMPI"
    },
    "13082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13084": {
      "op": "DUP1"
    },
    "13085": {
      "op": "REVERT"
    },
    "13086": {
      "op": "JUMPDEST"
    },
    "13087": {
      "op": "DUP6"
    },
    "13088": {
      "op": "DUP6"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13091": {
      "op": "DUP4"
    },
    "13092": {
      "op": "ADD"
    },
    "13093": {
      "op": "CALLDATACOPY"
    },
    "13094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13098": {
      "op": "DUP8"
    },
    "13099": {
      "op": "DUP4"
    },
    "13100": {
      "op": "ADD"
    },
    "13101": {
      "op": "ADD"
    },
    "13102": {
      "op": "MSTORE"
    },
    "13103": {
      "op": "POP"
    },
    "13104": {
      "op": "POP"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "op": "SWAP4"
    },
    "13107": {
      "op": "SWAP3"
    },
    "13108": {
      "op": "POP"
    },
    "13109": {
      "op": "POP"
    },
    "13110": {
      "op": "POP"
    },
    "13111": {
      "jump": "o",
      "op": "JUMP"
    },
    "13112": {
      "op": "JUMPDEST"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13117": {
      "op": "DUP3"
    },
    "13118": {
      "op": "DUP5"
    },
    "13119": {
      "op": "SUB"
    },
    "13120": {
      "op": "SLT"
    },
    "13121": {
      "op": "ISZERO"
    },
    "13122": {
      "op": "PUSH2",
      "value": "0x334A"
    },
    "13125": {
      "op": "JUMPI"
    },
    "13126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13128": {
      "op": "DUP1"
    },
    "13129": {
      "op": "REVERT"
    },
    "13130": {
      "op": "JUMPDEST"
    },
    "13131": {
      "op": "DUP2"
    },
    "13132": {
      "op": "CALLDATALOAD"
    },
    "13133": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13142": {
      "op": "DUP2"
    },
    "13143": {
      "op": "GT"
    },
    "13144": {
      "op": "ISZERO"
    },
    "13145": {
      "op": "PUSH2",
      "value": "0x3361"
    },
    "13148": {
      "op": "JUMPI"
    },
    "13149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13151": {
      "op": "DUP1"
    },
    "13152": {
      "op": "REVERT"
    },
    "13153": {
      "op": "JUMPDEST"
    },
    "13154": {
      "op": "DUP3"
    },
    "13155": {
      "op": "ADD"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13158": {
      "op": "DUP2"
    },
    "13159": {
      "op": "ADD"
    },
    "13160": {
      "op": "DUP5"
    },
    "13161": {
      "op": "SGT"
    },
    "13162": {
      "op": "PUSH2",
      "value": "0x3372"
    },
    "13165": {
      "op": "JUMPI"
    },
    "13166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13168": {
      "op": "DUP1"
    },
    "13169": {
      "op": "REVERT"
    },
    "13170": {
      "op": "JUMPDEST"
    },
    "13171": {
      "op": "PUSH2",
      "value": "0x2827"
    },
    "13174": {
      "op": "DUP5"
    },
    "13175": {
      "op": "DUP3"
    },
    "13176": {
      "op": "CALLDATALOAD"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13179": {
      "op": "DUP5"
    },
    "13180": {
      "op": "ADD"
    },
    "13181": {
      "op": "PUSH2",
      "value": "0x32C2"
    },
    "13184": {
      "jump": "i",
      "op": "JUMP"
    },
    "13185": {
      "op": "JUMPDEST"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13188": {
      "op": "DUP1"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13191": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13193": {
      "op": "DUP5"
    },
    "13194": {
      "op": "DUP7"
    },
    "13195": {
      "op": "SUB"
    },
    "13196": {
      "op": "SLT"
    },
    "13197": {
      "op": "ISZERO"
    },
    "13198": {
      "op": "PUSH2",
      "value": "0x3396"
    },
    "13201": {
      "op": "JUMPI"
    },
    "13202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13204": {
      "op": "DUP1"
    },
    "13205": {
      "op": "REVERT"
    },
    "13206": {
      "op": "JUMPDEST"
    },
    "13207": {
      "op": "PUSH2",
      "value": "0x339F"
    },
    "13210": {
      "op": "DUP5"
    },
    "13211": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13214": {
      "jump": "i",
      "op": "JUMP"
    },
    "13215": {
      "op": "JUMPDEST"
    },
    "13216": {
      "op": "SWAP3"
    },
    "13217": {
      "op": "POP"
    },
    "13218": {
      "op": "PUSH2",
      "value": "0x33AD"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13223": {
      "op": "DUP6"
    },
    "13224": {
      "op": "ADD"
    },
    "13225": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13228": {
      "jump": "i",
      "op": "JUMP"
    },
    "13229": {
      "op": "JUMPDEST"
    },
    "13230": {
      "op": "SWAP2"
    },
    "13231": {
      "op": "POP"
    },
    "13232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13234": {
      "op": "DUP5"
    },
    "13235": {
      "op": "ADD"
    },
    "13236": {
      "op": "CALLDATALOAD"
    },
    "13237": {
      "op": "SWAP1"
    },
    "13238": {
      "op": "POP"
    },
    "13239": {
      "op": "SWAP3"
    },
    "13240": {
      "op": "POP"
    },
    "13241": {
      "op": "SWAP3"
    },
    "13242": {
      "op": "POP"
    },
    "13243": {
      "op": "SWAP3"
    },
    "13244": {
      "jump": "o",
      "op": "JUMP"
    },
    "13245": {
      "op": "JUMPDEST"
    },
    "13246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13248": {
      "op": "DUP1"
    },
    "13249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13251": {
      "op": "DUP4"
    },
    "13252": {
      "op": "DUP6"
    },
    "13253": {
      "op": "SUB"
    },
    "13254": {
      "op": "SLT"
    },
    "13255": {
      "op": "ISZERO"
    },
    "13256": {
      "op": "PUSH2",
      "value": "0x33D0"
    },
    "13259": {
      "op": "JUMPI"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13262": {
      "op": "DUP1"
    },
    "13263": {
      "op": "REVERT"
    },
    "13264": {
      "op": "JUMPDEST"
    },
    "13265": {
      "op": "DUP3"
    },
    "13266": {
      "op": "CALLDATALOAD"
    },
    "13267": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13276": {
      "op": "DUP1"
    },
    "13277": {
      "op": "DUP3"
    },
    "13278": {
      "op": "GT"
    },
    "13279": {
      "op": "ISZERO"
    },
    "13280": {
      "op": "PUSH2",
      "value": "0x33E8"
    },
    "13283": {
      "op": "JUMPI"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13286": {
      "op": "DUP1"
    },
    "13287": {
      "op": "REVERT"
    },
    "13288": {
      "op": "JUMPDEST"
    },
    "13289": {
      "op": "DUP2"
    },
    "13290": {
      "op": "DUP6"
    },
    "13291": {
      "op": "ADD"
    },
    "13292": {
      "op": "SWAP2"
    },
    "13293": {
      "op": "POP"
    },
    "13294": {
      "op": "DUP6"
    },
    "13295": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13297": {
      "op": "DUP4"
    },
    "13298": {
      "op": "ADD"
    },
    "13299": {
      "op": "SLT"
    },
    "13300": {
      "op": "PUSH2",
      "value": "0x33FC"
    },
    "13303": {
      "op": "JUMPI"
    },
    "13304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13306": {
      "op": "DUP1"
    },
    "13307": {
      "op": "REVERT"
    },
    "13308": {
      "op": "JUMPDEST"
    },
    "13309": {
      "op": "DUP2"
    },
    "13310": {
      "op": "CALLDATALOAD"
    },
    "13311": {
      "op": "DUP2"
    },
    "13312": {
      "op": "DUP2"
    },
    "13313": {
      "op": "GT"
    },
    "13314": {
      "op": "ISZERO"
    },
    "13315": {
      "op": "PUSH2",
      "value": "0x340B"
    },
    "13318": {
      "op": "JUMPI"
    },
    "13319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13321": {
      "op": "DUP1"
    },
    "13322": {
      "op": "REVERT"
    },
    "13323": {
      "op": "JUMPDEST"
    },
    "13324": {
      "op": "DUP7"
    },
    "13325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13327": {
      "op": "DUP3"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13330": {
      "op": "SHL"
    },
    "13331": {
      "op": "DUP6"
    },
    "13332": {
      "op": "ADD"
    },
    "13333": {
      "op": "ADD"
    },
    "13334": {
      "op": "GT"
    },
    "13335": {
      "op": "ISZERO"
    },
    "13336": {
      "op": "PUSH2",
      "value": "0x3420"
    },
    "13339": {
      "op": "JUMPI"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13342": {
      "op": "DUP1"
    },
    "13343": {
      "op": "REVERT"
    },
    "13344": {
      "op": "JUMPDEST"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13347": {
      "op": "SWAP3"
    },
    "13348": {
      "op": "SWAP1"
    },
    "13349": {
      "op": "SWAP3"
    },
    "13350": {
      "op": "ADD"
    },
    "13351": {
      "op": "SWAP7"
    },
    "13352": {
      "op": "SWAP2"
    },
    "13353": {
      "op": "SWAP6"
    },
    "13354": {
      "op": "POP"
    },
    "13355": {
      "op": "SWAP1"
    },
    "13356": {
      "op": "SWAP4"
    },
    "13357": {
      "op": "POP"
    },
    "13358": {
      "op": "POP"
    },
    "13359": {
      "op": "POP"
    },
    "13360": {
      "op": "POP"
    },
    "13361": {
      "jump": "o",
      "op": "JUMP"
    },
    "13362": {
      "op": "JUMPDEST"
    },
    "13363": {
      "op": "DUP1"
    },
    "13364": {
      "op": "CALLDATALOAD"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13367": {
      "op": "DUP2"
    },
    "13368": {
      "op": "AND"
    },
    "13369": {
      "op": "DUP2"
    },
    "13370": {
      "op": "EQ"
    },
    "13371": {
      "op": "PUSH2",
      "value": "0x327D"
    },
    "13374": {
      "op": "JUMPI"
    },
    "13375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13377": {
      "op": "DUP1"
    },
    "13378": {
      "op": "REVERT"
    },
    "13379": {
      "op": "JUMPDEST"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13384": {
      "op": "DUP3"
    },
    "13385": {
      "op": "DUP5"
    },
    "13386": {
      "op": "SUB"
    },
    "13387": {
      "op": "SLT"
    },
    "13388": {
      "op": "ISZERO"
    },
    "13389": {
      "op": "PUSH2",
      "value": "0x3455"
    },
    "13392": {
      "op": "JUMPI"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13395": {
      "op": "DUP1"
    },
    "13396": {
      "op": "REVERT"
    },
    "13397": {
      "op": "JUMPDEST"
    },
    "13398": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "13401": {
      "op": "DUP3"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x3432"
    },
    "13405": {
      "jump": "i",
      "op": "JUMP"
    },
    "13406": {
      "op": "JUMPDEST"
    },
    "13407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13411": {
      "op": "DUP3"
    },
    "13412": {
      "op": "DUP5"
    },
    "13413": {
      "op": "SUB"
    },
    "13414": {
      "op": "SLT"
    },
    "13415": {
      "op": "ISZERO"
    },
    "13416": {
      "op": "PUSH2",
      "value": "0x3470"
    },
    "13419": {
      "op": "JUMPI"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13422": {
      "op": "DUP1"
    },
    "13423": {
      "op": "REVERT"
    },
    "13424": {
      "op": "JUMPDEST"
    },
    "13425": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "13428": {
      "op": "DUP3"
    },
    "13429": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13432": {
      "jump": "i",
      "op": "JUMP"
    },
    "13433": {
      "op": "JUMPDEST"
    },
    "13434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13436": {
      "op": "DUP1"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13439": {
      "op": "DUP4"
    },
    "13440": {
      "op": "DUP6"
    },
    "13441": {
      "op": "SUB"
    },
    "13442": {
      "op": "SLT"
    },
    "13443": {
      "op": "ISZERO"
    },
    "13444": {
      "op": "PUSH2",
      "value": "0x348C"
    },
    "13447": {
      "op": "JUMPI"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13450": {
      "op": "DUP1"
    },
    "13451": {
      "op": "REVERT"
    },
    "13452": {
      "op": "JUMPDEST"
    },
    "13453": {
      "op": "PUSH2",
      "value": "0x3495"
    },
    "13456": {
      "op": "DUP4"
    },
    "13457": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13460": {
      "jump": "i",
      "op": "JUMP"
    },
    "13461": {
      "op": "JUMPDEST"
    },
    "13462": {
      "op": "SWAP2"
    },
    "13463": {
      "op": "POP"
    },
    "13464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13466": {
      "op": "DUP4"
    },
    "13467": {
      "op": "ADD"
    },
    "13468": {
      "op": "CALLDATALOAD"
    },
    "13469": {
      "op": "DUP1"
    },
    "13470": {
      "op": "ISZERO"
    },
    "13471": {
      "op": "ISZERO"
    },
    "13472": {
      "op": "DUP2"
    },
    "13473": {
      "op": "EQ"
    },
    "13474": {
      "op": "PUSH2",
      "value": "0x34AA"
    },
    "13477": {
      "op": "JUMPI"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13480": {
      "op": "DUP1"
    },
    "13481": {
      "op": "REVERT"
    },
    "13482": {
      "op": "JUMPDEST"
    },
    "13483": {
      "op": "DUP1"
    },
    "13484": {
      "op": "SWAP2"
    },
    "13485": {
      "op": "POP"
    },
    "13486": {
      "op": "POP"
    },
    "13487": {
      "op": "SWAP3"
    },
    "13488": {
      "op": "POP"
    },
    "13489": {
      "op": "SWAP3"
    },
    "13490": {
      "op": "SWAP1"
    },
    "13491": {
      "op": "POP"
    },
    "13492": {
      "jump": "o",
      "op": "JUMP"
    },
    "13493": {
      "op": "JUMPDEST"
    },
    "13494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13496": {
      "op": "DUP1"
    },
    "13497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13499": {
      "op": "DUP4"
    },
    "13500": {
      "op": "DUP6"
    },
    "13501": {
      "op": "SUB"
    },
    "13502": {
      "op": "SLT"
    },
    "13503": {
      "op": "ISZERO"
    },
    "13504": {
      "op": "PUSH2",
      "value": "0x34C8"
    },
    "13507": {
      "op": "JUMPI"
    },
    "13508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13510": {
      "op": "DUP1"
    },
    "13511": {
      "op": "REVERT"
    },
    "13512": {
      "op": "JUMPDEST"
    },
    "13513": {
      "op": "PUSH2",
      "value": "0x34D1"
    },
    "13516": {
      "op": "DUP4"
    },
    "13517": {
      "op": "PUSH2",
      "value": "0x3432"
    },
    "13520": {
      "jump": "i",
      "op": "JUMP"
    },
    "13521": {
      "op": "JUMPDEST"
    },
    "13522": {
      "op": "SWAP2"
    },
    "13523": {
      "op": "POP"
    },
    "13524": {
      "op": "PUSH2",
      "value": "0x34DF"
    },
    "13527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13529": {
      "op": "DUP5"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13534": {
      "jump": "i",
      "op": "JUMP"
    },
    "13535": {
      "op": "JUMPDEST"
    },
    "13536": {
      "op": "SWAP1"
    },
    "13537": {
      "op": "POP"
    },
    "13538": {
      "op": "SWAP3"
    },
    "13539": {
      "op": "POP"
    },
    "13540": {
      "op": "SWAP3"
    },
    "13541": {
      "op": "SWAP1"
    },
    "13542": {
      "op": "POP"
    },
    "13543": {
      "jump": "o",
      "op": "JUMP"
    },
    "13544": {
      "op": "JUMPDEST"
    },
    "13545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13547": {
      "op": "DUP1"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13550": {
      "op": "DUP1"
    },
    "13551": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13553": {
      "op": "DUP6"
    },
    "13554": {
      "op": "DUP8"
    },
    "13555": {
      "op": "SUB"
    },
    "13556": {
      "op": "SLT"
    },
    "13557": {
      "op": "ISZERO"
    },
    "13558": {
      "op": "PUSH2",
      "value": "0x34FE"
    },
    "13561": {
      "op": "JUMPI"
    },
    "13562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13564": {
      "op": "DUP1"
    },
    "13565": {
      "op": "REVERT"
    },
    "13566": {
      "op": "JUMPDEST"
    },
    "13567": {
      "op": "PUSH2",
      "value": "0x3507"
    },
    "13570": {
      "op": "DUP6"
    },
    "13571": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13574": {
      "jump": "i",
      "op": "JUMP"
    },
    "13575": {
      "op": "JUMPDEST"
    },
    "13576": {
      "op": "SWAP4"
    },
    "13577": {
      "op": "POP"
    },
    "13578": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13583": {
      "op": "DUP7"
    },
    "13584": {
      "op": "ADD"
    },
    "13585": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13588": {
      "jump": "i",
      "op": "JUMP"
    },
    "13589": {
      "op": "JUMPDEST"
    },
    "13590": {
      "op": "SWAP3"
    },
    "13591": {
      "op": "POP"
    },
    "13592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13594": {
      "op": "DUP6"
    },
    "13595": {
      "op": "ADD"
    },
    "13596": {
      "op": "CALLDATALOAD"
    },
    "13597": {
      "op": "SWAP2"
    },
    "13598": {
      "op": "POP"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13601": {
      "op": "DUP6"
    },
    "13602": {
      "op": "ADD"
    },
    "13603": {
      "op": "CALLDATALOAD"
    },
    "13604": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13613": {
      "op": "DUP2"
    },
    "13614": {
      "op": "GT"
    },
    "13615": {
      "op": "ISZERO"
    },
    "13616": {
      "op": "PUSH2",
      "value": "0x3538"
    },
    "13619": {
      "op": "JUMPI"
    },
    "13620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13622": {
      "op": "DUP1"
    },
    "13623": {
      "op": "REVERT"
    },
    "13624": {
      "op": "JUMPDEST"
    },
    "13625": {
      "op": "DUP6"
    },
    "13626": {
      "op": "ADD"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13629": {
      "op": "DUP2"
    },
    "13630": {
      "op": "ADD"
    },
    "13631": {
      "op": "DUP8"
    },
    "13632": {
      "op": "SGT"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x3549"
    },
    "13636": {
      "op": "JUMPI"
    },
    "13637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13639": {
      "op": "DUP1"
    },
    "13640": {
      "op": "REVERT"
    },
    "13641": {
      "op": "JUMPDEST"
    },
    "13642": {
      "op": "PUSH2",
      "value": "0x3558"
    },
    "13645": {
      "op": "DUP8"
    },
    "13646": {
      "op": "DUP3"
    },
    "13647": {
      "op": "CALLDATALOAD"
    },
    "13648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13650": {
      "op": "DUP5"
    },
    "13651": {
      "op": "ADD"
    },
    "13652": {
      "op": "PUSH2",
      "value": "0x32C2"
    },
    "13655": {
      "jump": "i",
      "op": "JUMP"
    },
    "13656": {
      "op": "JUMPDEST"
    },
    "13657": {
      "op": "SWAP2"
    },
    "13658": {
      "op": "POP"
    },
    "13659": {
      "op": "POP"
    },
    "13660": {
      "op": "SWAP3"
    },
    "13661": {
      "op": "SWAP6"
    },
    "13662": {
      "op": "SWAP2"
    },
    "13663": {
      "op": "SWAP5"
    },
    "13664": {
      "op": "POP"
    },
    "13665": {
      "op": "SWAP3"
    },
    "13666": {
      "op": "POP"
    },
    "13667": {
      "jump": "o",
      "op": "JUMP"
    },
    "13668": {
      "op": "JUMPDEST"
    },
    "13669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13671": {
      "op": "DUP1"
    },
    "13672": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13674": {
      "op": "DUP4"
    },
    "13675": {
      "op": "DUP6"
    },
    "13676": {
      "op": "SUB"
    },
    "13677": {
      "op": "SLT"
    },
    "13678": {
      "op": "ISZERO"
    },
    "13679": {
      "op": "PUSH2",
      "value": "0x3577"
    },
    "13682": {
      "op": "JUMPI"
    },
    "13683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13685": {
      "op": "DUP1"
    },
    "13686": {
      "op": "REVERT"
    },
    "13687": {
      "op": "JUMPDEST"
    },
    "13688": {
      "op": "PUSH2",
      "value": "0x34D1"
    },
    "13691": {
      "op": "DUP4"
    },
    "13692": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13695": {
      "jump": "i",
      "op": "JUMP"
    },
    "13696": {
      "op": "JUMPDEST"
    },
    "13697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13699": {
      "op": "DUP1"
    },
    "13700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13702": {
      "op": "DUP1"
    },
    "13703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13707": {
      "op": "DUP7"
    },
    "13708": {
      "op": "DUP9"
    },
    "13709": {
      "op": "SUB"
    },
    "13710": {
      "op": "SLT"
    },
    "13711": {
      "op": "ISZERO"
    },
    "13712": {
      "op": "PUSH2",
      "value": "0x3598"
    },
    "13715": {
      "op": "JUMPI"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13718": {
      "op": "DUP1"
    },
    "13719": {
      "op": "REVERT"
    },
    "13720": {
      "op": "JUMPDEST"
    },
    "13721": {
      "op": "PUSH2",
      "value": "0x35A1"
    },
    "13724": {
      "op": "DUP7"
    },
    "13725": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13728": {
      "jump": "i",
      "op": "JUMP"
    },
    "13729": {
      "op": "JUMPDEST"
    },
    "13730": {
      "op": "SWAP5"
    },
    "13731": {
      "op": "POP"
    },
    "13732": {
      "op": "PUSH2",
      "value": "0x35AF"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13737": {
      "op": "DUP8"
    },
    "13738": {
      "op": "ADD"
    },
    "13739": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13742": {
      "jump": "i",
      "op": "JUMP"
    },
    "13743": {
      "op": "JUMPDEST"
    },
    "13744": {
      "op": "SWAP4"
    },
    "13745": {
      "op": "POP"
    },
    "13746": {
      "op": "PUSH2",
      "value": "0x35BD"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13751": {
      "op": "DUP8"
    },
    "13752": {
      "op": "ADD"
    },
    "13753": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13756": {
      "jump": "i",
      "op": "JUMP"
    },
    "13757": {
      "op": "JUMPDEST"
    },
    "13758": {
      "op": "SWAP3"
    },
    "13759": {
      "op": "POP"
    },
    "13760": {
      "op": "PUSH2",
      "value": "0x35CB"
    },
    "13763": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13765": {
      "op": "DUP8"
    },
    "13766": {
      "op": "ADD"
    },
    "13767": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13770": {
      "jump": "i",
      "op": "JUMP"
    },
    "13771": {
      "op": "JUMPDEST"
    },
    "13772": {
      "op": "SWAP2"
    },
    "13773": {
      "op": "POP"
    },
    "13774": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "13777": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13779": {
      "op": "DUP8"
    },
    "13780": {
      "op": "ADD"
    },
    "13781": {
      "op": "PUSH2",
      "value": "0x3266"
    },
    "13784": {
      "jump": "i",
      "op": "JUMP"
    },
    "13785": {
      "op": "JUMPDEST"
    },
    "13786": {
      "op": "SWAP1"
    },
    "13787": {
      "op": "POP"
    },
    "13788": {
      "op": "SWAP3"
    },
    "13789": {
      "op": "SWAP6"
    },
    "13790": {
      "op": "POP"
    },
    "13791": {
      "op": "SWAP3"
    },
    "13792": {
      "op": "SWAP6"
    },
    "13793": {
      "op": "SWAP1"
    },
    "13794": {
      "op": "SWAP4"
    },
    "13795": {
      "op": "POP"
    },
    "13796": {
      "jump": "o",
      "op": "JUMP"
    },
    "13797": {
      "op": "JUMPDEST"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13800": {
      "op": "DUP2"
    },
    "13801": {
      "op": "DUP2"
    },
    "13802": {
      "op": "SHR"
    },
    "13803": {
      "op": "SWAP1"
    },
    "13804": {
      "op": "DUP3"
    },
    "13805": {
      "op": "AND"
    },
    "13806": {
      "op": "DUP1"
    },
    "13807": {
      "op": "PUSH2",
      "value": "0x35F9"
    },
    "13810": {
      "op": "JUMPI"
    },
    "13811": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13813": {
      "op": "DUP3"
    },
    "13814": {
      "op": "AND"
    },
    "13815": {
      "op": "SWAP2"
    },
    "13816": {
      "op": "POP"
    },
    "13817": {
      "op": "JUMPDEST"
    },
    "13818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13820": {
      "op": "DUP3"
    },
    "13821": {
      "op": "LT"
    },
    "13822": {
      "op": "DUP2"
    },
    "13823": {
      "op": "EQ"
    },
    "13824": {
      "op": "ISZERO"
    },
    "13825": {
      "op": "PUSH2",
      "value": "0x361A"
    },
    "13828": {
      "op": "JUMPI"
    },
    "13829": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13834": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13836": {
      "op": "SHL"
    },
    "13837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13839": {
      "op": "MSTORE"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13844": {
      "op": "MSTORE"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13849": {
      "op": "REVERT"
    },
    "13850": {
      "op": "JUMPDEST"
    },
    "13851": {
      "op": "POP"
    },
    "13852": {
      "op": "SWAP2"
    },
    "13853": {
      "op": "SWAP1"
    },
    "13854": {
      "op": "POP"
    },
    "13855": {
      "jump": "o",
      "op": "JUMP"
    },
    "13856": {
      "op": "JUMPDEST"
    },
    "13857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13859": {
      "op": "DUP1"
    },
    "13860": {
      "op": "DUP3"
    },
    "13861": {
      "op": "MSTORE"
    },
    "13862": {
      "op": "DUP2"
    },
    "13863": {
      "op": "DUP2"
    },
    "13864": {
      "op": "ADD"
    },
    "13865": {
      "op": "MSTORE"
    },
    "13866": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13901": {
      "op": "DUP3"
    },
    "13902": {
      "op": "ADD"
    },
    "13903": {
      "op": "MSTORE"
    },
    "13904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13906": {
      "op": "ADD"
    },
    "13907": {
      "op": "SWAP1"
    },
    "13908": {
      "jump": "o",
      "op": "JUMP"
    },
    "13909": {
      "op": "JUMPDEST"
    },
    "13910": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13917": {
      "op": "SHL"
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13920": {
      "op": "MSTORE"
    },
    "13921": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13923": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13925": {
      "op": "MSTORE"
    },
    "13926": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13930": {
      "op": "REVERT"
    },
    "13931": {
      "op": "JUMPDEST"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13934": {
      "op": "DUP3"
    },
    "13935": {
      "op": "DUP3"
    },
    "13936": {
      "op": "LT"
    },
    "13937": {
      "op": "ISZERO"
    },
    "13938": {
      "op": "PUSH2",
      "value": "0x367D"
    },
    "13941": {
      "op": "JUMPI"
    },
    "13942": {
      "op": "PUSH2",
      "value": "0x367D"
    },
    "13945": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "13948": {
      "jump": "i",
      "op": "JUMP"
    },
    "13949": {
      "op": "JUMPDEST"
    },
    "13950": {
      "op": "POP"
    },
    "13951": {
      "op": "SUB"
    },
    "13952": {
      "op": "SWAP1"
    },
    "13953": {
      "jump": "o",
      "op": "JUMP"
    },
    "13954": {
      "op": "JUMPDEST"
    },
    "13955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13957": {
      "op": "DUP1"
    },
    "13958": {
      "op": "DUP3"
    },
    "13959": {
      "op": "MSTORE"
    },
    "13960": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13962": {
      "op": "SWAP1"
    },
    "13963": {
      "op": "DUP3"
    },
    "13964": {
      "op": "ADD"
    },
    "13965": {
      "op": "MSTORE"
    },
    "13966": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14001": {
      "op": "DUP3"
    },
    "14002": {
      "op": "ADD"
    },
    "14003": {
      "op": "MSTORE"
    },
    "14004": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14024": {
      "op": "SHL"
    },
    "14025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14027": {
      "op": "DUP3"
    },
    "14028": {
      "op": "ADD"
    },
    "14029": {
      "op": "MSTORE"
    },
    "14030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14032": {
      "op": "ADD"
    },
    "14033": {
      "op": "SWAP1"
    },
    "14034": {
      "jump": "o",
      "op": "JUMP"
    },
    "14035": {
      "op": "JUMPDEST"
    },
    "14036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14038": {
      "op": "DUP2"
    },
    "14039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14041": {
      "op": "NOT"
    },
    "14042": {
      "op": "DIV"
    },
    "14043": {
      "op": "DUP4"
    },
    "14044": {
      "op": "GT"
    },
    "14045": {
      "op": "DUP3"
    },
    "14046": {
      "op": "ISZERO"
    },
    "14047": {
      "op": "ISZERO"
    },
    "14048": {
      "op": "AND"
    },
    "14049": {
      "op": "ISZERO"
    },
    "14050": {
      "op": "PUSH2",
      "value": "0x36ED"
    },
    "14053": {
      "op": "JUMPI"
    },
    "14054": {
      "op": "PUSH2",
      "value": "0x36ED"
    },
    "14057": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14060": {
      "jump": "i",
      "op": "JUMP"
    },
    "14061": {
      "op": "JUMPDEST"
    },
    "14062": {
      "op": "POP"
    },
    "14063": {
      "op": "MUL"
    },
    "14064": {
      "op": "SWAP1"
    },
    "14065": {
      "jump": "o",
      "op": "JUMP"
    },
    "14066": {
      "op": "JUMPDEST"
    },
    "14067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14069": {
      "op": "DUP1"
    },
    "14070": {
      "op": "DUP3"
    },
    "14071": {
      "op": "MSTORE"
    },
    "14072": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "14074": {
      "op": "SWAP1"
    },
    "14075": {
      "op": "DUP3"
    },
    "14076": {
      "op": "ADD"
    },
    "14077": {
      "op": "MSTORE"
    },
    "14078": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "14095": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "14097": {
      "op": "SHL"
    },
    "14098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14100": {
      "op": "DUP3"
    },
    "14101": {
      "op": "ADD"
    },
    "14102": {
      "op": "MSTORE"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14105": {
      "op": "ADD"
    },
    "14106": {
      "op": "SWAP1"
    },
    "14107": {
      "jump": "o",
      "op": "JUMP"
    },
    "14108": {
      "op": "JUMPDEST"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14111": {
      "op": "DUP3"
    },
    "14112": {
      "op": "NOT"
    },
    "14113": {
      "op": "DUP3"
    },
    "14114": {
      "op": "GT"
    },
    "14115": {
      "op": "ISZERO"
    },
    "14116": {
      "op": "PUSH2",
      "value": "0x372F"
    },
    "14119": {
      "op": "JUMPI"
    },
    "14120": {
      "op": "PUSH2",
      "value": "0x372F"
    },
    "14123": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14126": {
      "jump": "i",
      "op": "JUMP"
    },
    "14127": {
      "op": "JUMPDEST"
    },
    "14128": {
      "op": "POP"
    },
    "14129": {
      "op": "ADD"
    },
    "14130": {
      "op": "SWAP1"
    },
    "14131": {
      "jump": "o",
      "op": "JUMP"
    },
    "14132": {
      "op": "JUMPDEST"
    },
    "14133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14135": {
      "op": "DUP1"
    },
    "14136": {
      "op": "DUP3"
    },
    "14137": {
      "op": "MSTORE"
    },
    "14138": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "14140": {
      "op": "SWAP1"
    },
    "14141": {
      "op": "DUP3"
    },
    "14142": {
      "op": "ADD"
    },
    "14143": {
      "op": "MSTORE"
    },
    "14144": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C206578636565642077686974656C6973"
    },
    "14177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14179": {
      "op": "DUP3"
    },
    "14180": {
      "op": "ADD"
    },
    "14181": {
      "op": "MSTORE"
    },
    "14182": {
      "op": "PUSH9",
      "value": "0x3A1039BAB838363C97"
    },
    "14192": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "14194": {
      "op": "SHL"
    },
    "14195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14197": {
      "op": "DUP3"
    },
    "14198": {
      "op": "ADD"
    },
    "14199": {
      "op": "MSTORE"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "op": "SWAP1"
    },
    "14204": {
      "jump": "o",
      "op": "JUMP"
    },
    "14205": {
      "op": "JUMPDEST"
    },
    "14206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14210": {
      "op": "NOT"
    },
    "14211": {
      "op": "DUP3"
    },
    "14212": {
      "op": "EQ"
    },
    "14213": {
      "op": "ISZERO"
    },
    "14214": {
      "op": "PUSH2",
      "value": "0x3791"
    },
    "14217": {
      "op": "JUMPI"
    },
    "14218": {
      "op": "PUSH2",
      "value": "0x3791"
    },
    "14221": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14224": {
      "jump": "i",
      "op": "JUMP"
    },
    "14225": {
      "op": "JUMPDEST"
    },
    "14226": {
      "op": "POP"
    },
    "14227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14229": {
      "op": "ADD"
    },
    "14230": {
      "op": "SWAP1"
    },
    "14231": {
      "jump": "o",
      "op": "JUMP"
    },
    "14232": {
      "op": "JUMPDEST"
    },
    "14233": {
      "op": "DUP1"
    },
    "14234": {
      "op": "SLOAD"
    },
    "14235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14237": {
      "op": "SWAP1"
    },
    "14238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14240": {
      "op": "DUP2"
    },
    "14241": {
      "op": "DUP2"
    },
    "14242": {
      "op": "SHR"
    },
    "14243": {
      "op": "SWAP1"
    },
    "14244": {
      "op": "DUP1"
    },
    "14245": {
      "op": "DUP4"
    },
    "14246": {
      "op": "AND"
    },
    "14247": {
      "op": "DUP1"
    },
    "14248": {
      "op": "PUSH2",
      "value": "0x37B2"
    },
    "14251": {
      "op": "JUMPI"
    },
    "14252": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14254": {
      "op": "DUP4"
    },
    "14255": {
      "op": "AND"
    },
    "14256": {
      "op": "SWAP3"
    },
    "14257": {
      "op": "POP"
    },
    "14258": {
      "op": "JUMPDEST"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14261": {
      "op": "DUP1"
    },
    "14262": {
      "op": "DUP5"
    },
    "14263": {
      "op": "LT"
    },
    "14264": {
      "op": "DUP3"
    },
    "14265": {
      "op": "EQ"
    },
    "14266": {
      "op": "ISZERO"
    },
    "14267": {
      "op": "PUSH2",
      "value": "0x37D4"
    },
    "14270": {
      "op": "JUMPI"
    },
    "14271": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14276": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14278": {
      "op": "SHL"
    },
    "14279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14281": {
      "op": "MSTORE"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14284": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14286": {
      "op": "MSTORE"
    },
    "14287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14291": {
      "op": "REVERT"
    },
    "14292": {
      "op": "JUMPDEST"
    },
    "14293": {
      "op": "DUP2"
    },
    "14294": {
      "op": "DUP1"
    },
    "14295": {
      "op": "ISZERO"
    },
    "14296": {
      "op": "PUSH2",
      "value": "0x37E8"
    },
    "14299": {
      "op": "JUMPI"
    },
    "14300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14302": {
      "op": "DUP2"
    },
    "14303": {
      "op": "EQ"
    },
    "14304": {
      "op": "PUSH2",
      "value": "0x37F9"
    },
    "14307": {
      "op": "JUMPI"
    },
    "14308": {
      "op": "PUSH2",
      "value": "0x3826"
    },
    "14311": {
      "op": "JUMP"
    },
    "14312": {
      "op": "JUMPDEST"
    },
    "14313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14315": {
      "op": "NOT"
    },
    "14316": {
      "op": "DUP7"
    },
    "14317": {
      "op": "AND"
    },
    "14318": {
      "op": "DUP10"
    },
    "14319": {
      "op": "MSTORE"
    },
    "14320": {
      "op": "DUP5"
    },
    "14321": {
      "op": "DUP10"
    },
    "14322": {
      "op": "ADD"
    },
    "14323": {
      "op": "SWAP7"
    },
    "14324": {
      "op": "POP"
    },
    "14325": {
      "op": "PUSH2",
      "value": "0x3826"
    },
    "14328": {
      "op": "JUMP"
    },
    "14329": {
      "op": "JUMPDEST"
    },
    "14330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14332": {
      "op": "DUP9"
    },
    "14333": {
      "op": "DUP2"
    },
    "14334": {
      "op": "MSTORE"
    },
    "14335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14337": {
      "op": "SWAP1"
    },
    "14338": {
      "op": "KECCAK256"
    },
    "14339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14341": {
      "op": "JUMPDEST"
    },
    "14342": {
      "op": "DUP7"
    },
    "14343": {
      "op": "DUP2"
    },
    "14344": {
      "op": "LT"
    },
    "14345": {
      "op": "ISZERO"
    },
    "14346": {
      "op": "PUSH2",
      "value": "0x381E"
    },
    "14349": {
      "op": "JUMPI"
    },
    "14350": {
      "op": "DUP2"
    },
    "14351": {
      "op": "SLOAD"
    },
    "14352": {
      "op": "DUP12"
    },
    "14353": {
      "op": "DUP3"
    },
    "14354": {
      "op": "ADD"
    },
    "14355": {
      "op": "MSTORE"
    },
    "14356": {
      "op": "SWAP1"
    },
    "14357": {
      "op": "DUP6"
    },
    "14358": {
      "op": "ADD"
    },
    "14359": {
      "op": "SWAP1"
    },
    "14360": {
      "op": "DUP4"
    },
    "14361": {
      "op": "ADD"
    },
    "14362": {
      "op": "PUSH2",
      "value": "0x3805"
    },
    "14365": {
      "op": "JUMP"
    },
    "14366": {
      "op": "JUMPDEST"
    },
    "14367": {
      "op": "POP"
    },
    "14368": {
      "op": "POP"
    },
    "14369": {
      "op": "DUP5"
    },
    "14370": {
      "op": "DUP10"
    },
    "14371": {
      "op": "ADD"
    },
    "14372": {
      "op": "SWAP7"
    },
    "14373": {
      "op": "POP"
    },
    "14374": {
      "op": "JUMPDEST"
    },
    "14375": {
      "op": "POP"
    },
    "14376": {
      "op": "POP"
    },
    "14377": {
      "op": "POP"
    },
    "14378": {
      "op": "POP"
    },
    "14379": {
      "op": "POP"
    },
    "14380": {
      "op": "POP"
    },
    "14381": {
      "op": "SWAP3"
    },
    "14382": {
      "op": "SWAP2"
    },
    "14383": {
      "op": "POP"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "jump": "o",
      "op": "JUMP"
    },
    "14386": {
      "op": "JUMPDEST"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14389": {
      "op": "PUSH2",
      "value": "0x383E"
    },
    "14392": {
      "op": "DUP3"
    },
    "14393": {
      "op": "DUP7"
    },
    "14394": {
      "op": "PUSH2",
      "value": "0x3798"
    },
    "14397": {
      "jump": "i",
      "op": "JUMP"
    },
    "14398": {
      "op": "JUMPDEST"
    },
    "14399": {
      "op": "DUP5"
    },
    "14400": {
      "op": "MLOAD"
    },
    "14401": {
      "op": "PUSH2",
      "value": "0x384E"
    },
    "14404": {
      "op": "DUP2"
    },
    "14405": {
      "op": "DUP4"
    },
    "14406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14408": {
      "op": "DUP10"
    },
    "14409": {
      "op": "ADD"
    },
    "14410": {
      "op": "PUSH2",
      "value": "0x31E2"
    },
    "14413": {
      "jump": "i",
      "op": "JUMP"
    },
    "14414": {
      "op": "JUMPDEST"
    },
    "14415": {
      "op": "PUSH2",
      "value": "0x385A"
    },
    "14418": {
      "op": "DUP2"
    },
    "14419": {
      "op": "DUP4"
    },
    "14420": {
      "op": "ADD"
    },
    "14421": {
      "op": "DUP7"
    },
    "14422": {
      "op": "PUSH2",
      "value": "0x3798"
    },
    "14425": {
      "jump": "i",
      "op": "JUMP"
    },
    "14426": {
      "op": "JUMPDEST"
    },
    "14427": {
      "op": "SWAP8"
    },
    "14428": {
      "op": "SWAP7"
    },
    "14429": {
      "op": "POP"
    },
    "14430": {
      "op": "POP"
    },
    "14431": {
      "op": "POP"
    },
    "14432": {
      "op": "POP"
    },
    "14433": {
      "op": "POP"
    },
    "14434": {
      "op": "POP"
    },
    "14435": {
      "op": "POP"
    },
    "14436": {
      "jump": "o",
      "op": "JUMP"
    },
    "14437": {
      "op": "JUMPDEST"
    },
    "14438": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14445": {
      "op": "SHL"
    },
    "14446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14448": {
      "op": "MSTORE"
    },
    "14449": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14451": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14453": {
      "op": "MSTORE"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14458": {
      "op": "REVERT"
    },
    "14459": {
      "op": "JUMPDEST"
    },
    "14460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14462": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14464": {
      "op": "DUP3"
    },
    "14465": {
      "op": "AND"
    },
    "14466": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14468": {
      "op": "DUP2"
    },
    "14469": {
      "op": "EQ"
    },
    "14470": {
      "op": "ISZERO"
    },
    "14471": {
      "op": "PUSH2",
      "value": "0x3892"
    },
    "14474": {
      "op": "JUMPI"
    },
    "14475": {
      "op": "PUSH2",
      "value": "0x3892"
    },
    "14478": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14481": {
      "jump": "i",
      "op": "JUMP"
    },
    "14482": {
      "op": "JUMPDEST"
    },
    "14483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14485": {
      "op": "ADD"
    },
    "14486": {
      "op": "SWAP3"
    },
    "14487": {
      "op": "SWAP2"
    },
    "14488": {
      "op": "POP"
    },
    "14489": {
      "op": "POP"
    },
    "14490": {
      "jump": "o",
      "op": "JUMP"
    },
    "14491": {
      "op": "JUMPDEST"
    },
    "14492": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14499": {
      "op": "SHL"
    },
    "14500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14502": {
      "op": "MSTORE"
    },
    "14503": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14505": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14507": {
      "op": "MSTORE"
    },
    "14508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14512": {
      "op": "REVERT"
    },
    "14513": {
      "op": "JUMPDEST"
    },
    "14514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14516": {
      "op": "DUP3"
    },
    "14517": {
      "op": "PUSH2",
      "value": "0x38C0"
    },
    "14520": {
      "op": "JUMPI"
    },
    "14521": {
      "op": "PUSH2",
      "value": "0x38C0"
    },
    "14524": {
      "op": "PUSH2",
      "value": "0x389B"
    },
    "14527": {
      "jump": "i",
      "op": "JUMP"
    },
    "14528": {
      "op": "JUMPDEST"
    },
    "14529": {
      "op": "POP"
    },
    "14530": {
      "op": "DIV"
    },
    "14531": {
      "op": "SWAP1"
    },
    "14532": {
      "jump": "o",
      "op": "JUMP"
    },
    "14533": {
      "op": "JUMPDEST"
    },
    "14534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14536": {
      "op": "DUP1"
    },
    "14537": {
      "op": "DUP3"
    },
    "14538": {
      "op": "MSTORE"
    },
    "14539": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14541": {
      "op": "SWAP1"
    },
    "14542": {
      "op": "DUP3"
    },
    "14543": {
      "op": "ADD"
    },
    "14544": {
      "op": "MSTORE"
    },
    "14545": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14580": {
      "op": "DUP3"
    },
    "14581": {
      "op": "ADD"
    },
    "14582": {
      "op": "MSTORE"
    },
    "14583": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14602": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14604": {
      "op": "SHL"
    },
    "14605": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14607": {
      "op": "DUP3"
    },
    "14608": {
      "op": "ADD"
    },
    "14609": {
      "op": "MSTORE"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14612": {
      "op": "ADD"
    },
    "14613": {
      "op": "SWAP1"
    },
    "14614": {
      "jump": "o",
      "op": "JUMP"
    },
    "14615": {
      "op": "JUMPDEST"
    },
    "14616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14618": {
      "op": "DUP3"
    },
    "14619": {
      "op": "PUSH2",
      "value": "0x3926"
    },
    "14622": {
      "op": "JUMPI"
    },
    "14623": {
      "op": "PUSH2",
      "value": "0x3926"
    },
    "14626": {
      "op": "PUSH2",
      "value": "0x389B"
    },
    "14629": {
      "jump": "i",
      "op": "JUMP"
    },
    "14630": {
      "op": "JUMPDEST"
    },
    "14631": {
      "op": "POP"
    },
    "14632": {
      "op": "MOD"
    },
    "14633": {
      "op": "SWAP1"
    },
    "14634": {
      "jump": "o",
      "op": "JUMP"
    },
    "14635": {
      "op": "JUMPDEST"
    },
    "14636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14642": {
      "op": "SHL"
    },
    "14643": {
      "op": "SUB"
    },
    "14644": {
      "op": "DUP6"
    },
    "14645": {
      "op": "DUP2"
    },
    "14646": {
      "op": "AND"
    },
    "14647": {
      "op": "DUP3"
    },
    "14648": {
      "op": "MSTORE"
    },
    "14649": {
      "op": "DUP5"
    },
    "14650": {
      "op": "AND"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14653": {
      "op": "DUP3"
    },
    "14654": {
      "op": "ADD"
    },
    "14655": {
      "op": "MSTORE"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14658": {
      "op": "DUP2"
    },
    "14659": {
      "op": "ADD"
    },
    "14660": {
      "op": "DUP4"
    },
    "14661": {
      "op": "SWAP1"
    },
    "14662": {
      "op": "MSTORE"
    },
    "14663": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14667": {
      "op": "DUP3"
    },
    "14668": {
      "op": "ADD"
    },
    "14669": {
      "op": "DUP2"
    },
    "14670": {
      "op": "SWAP1"
    },
    "14671": {
      "op": "MSTORE"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14674": {
      "op": "SWAP1"
    },
    "14675": {
      "op": "PUSH2",
      "value": "0x395E"
    },
    "14678": {
      "op": "SWAP1"
    },
    "14679": {
      "op": "DUP4"
    },
    "14680": {
      "op": "ADD"
    },
    "14681": {
      "op": "DUP5"
    },
    "14682": {
      "op": "PUSH2",
      "value": "0x320E"
    },
    "14685": {
      "jump": "i",
      "op": "JUMP"
    },
    "14686": {
      "op": "JUMPDEST"
    },
    "14687": {
      "op": "SWAP7"
    },
    "14688": {
      "op": "SWAP6"
    },
    "14689": {
      "op": "POP"
    },
    "14690": {
      "op": "POP"
    },
    "14691": {
      "op": "POP"
    },
    "14692": {
      "op": "POP"
    },
    "14693": {
      "op": "POP"
    },
    "14694": {
      "op": "POP"
    },
    "14695": {
      "jump": "o",
      "op": "JUMP"
    },
    "14696": {
      "op": "JUMPDEST"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14701": {
      "op": "DUP3"
    },
    "14702": {
      "op": "DUP5"
    },
    "14703": {
      "op": "SUB"
    },
    "14704": {
      "op": "SLT"
    },
    "14705": {
      "op": "ISZERO"
    },
    "14706": {
      "op": "PUSH2",
      "value": "0x397A"
    },
    "14709": {
      "op": "JUMPI"
    },
    "14710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14712": {
      "op": "DUP1"
    },
    "14713": {
      "op": "REVERT"
    },
    "14714": {
      "op": "JUMPDEST"
    },
    "14715": {
      "op": "DUP2"
    },
    "14716": {
      "op": "MLOAD"
    },
    "14717": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "14720": {
      "op": "DUP2"
    },
    "14721": {
      "op": "PUSH2",
      "value": "0x31AF"
    },
    "14724": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "4306cdcaf3916cfa93aab24d87c83d96cdffc6a3",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol';\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract CryptidToken is ERC721, Pausable, Ownable, ReentrancyGuard, ERC721Burnable{ \n    using Strings for uint256;\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 private stage = 0;\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawDest1 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // trust\n    address public withdrawDest2 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 1\n    address public withdrawDest3 = 0x1953bc1fF76f5e61cD775A4482bd85BAc56aD1Eb; // founder 2\n    address public withdrawDest4 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 3\n    address public withdrawDest5 = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2; // founder 4\n    \n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrops for Trivia/Contest Winners\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=1)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=2)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=3)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.10 ether;  \n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    modifier isValidMerkleProof(bytes32[] calldata _proof, bytes32 _root) {\n        require(MerkleProof.verify(_proof, _root, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        _;\n    }\n\n    modifier isCorrectPayment(uint256 _price, uint256 _numberOfTokens) {\n        require(_price * _numberOfTokens == msg.value, \"Incorrect ETH value sent.\");\n        _;\n    }\n\n    modifier callerIsUser() {\n        require(tx.origin == msg.sender, \"The caller is another contract.\");\n        _;\n    }\n\n    // Stage 1 - Airdrops\n    function airdropCryptid(uint8 _mintAmount, address _to) public onlyOwner {\n        require(stage < 3, \"Past airdrop phase.\");\n        require(_mintAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(totalSupply() + _mintAmount <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(_to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Mint\n    function whitelistMint(\n        bytes32[] calldata _merkleProof\n    ) \n        public \n        payable \n        isValidMerkleProof(_merkleProof, merkleRoot) \n        isCorrectPayment(salePrice, 1) \n        callerIsUser\n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == 2, \"Whitelist minting not initiated.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        require(totalSupply() + 1 <= whitelistSupply, \"Mint amount will exceed whitelist supply.\");\n        claimed[msg.sender] = true;\n        _mint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 _mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == 3, \"Team sale not initiated.\");\n        require(_mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team-sale supply\");      \n        teamMintCount += _mintAmount;\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint8 _mintAmount\n    ) \n        public \n        payable \n        isCorrectPayment(salePrice, _mintAmount) \n        callerIsUser\n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == 4, \"Public mint not initiaited.\");\n        require(totalSupply()  + _mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply\");\n        require(_mintAmount > 0, \"Mint amount must be greater than 0.\");\n        require(_mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _mint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function overrideClaim(address _wlAddress) public onlyOwner{\n        claimed[_wlAddress] = true;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() public onlyOwner {\n        require(bytes(baseURI).length > 0, \"baseURI cannot be empty\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function nextStage() public onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot[0] != 0, \"Merkle root must be set beefore whitelist minting can begin\");\n        require(stage < 4, \"No stages after public sale\");\n        stage++;\n    }\n\n    function setTeamMintSupply(uint256 _newTeamMintSupply) public onlyOwner {\n        teamMintSupply = _newTeamMintSupply;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setPublicSalePrice(uint256 _newSalePrice) public onlyOwner {\n        salePrice = _newSalePrice;\n    }\n\n    function setMaxMintPerTx(uint8 _newmaxMintPerTx) public onlyOwner {\n        maxMintPerTx = _newmaxMintPerTx;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() public onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash cannot be empty.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawAddress(address _dest1, address _dest2, address _dest3, address _dest4, address _dest5) public onlyOwner {\n        withdrawDest1 = _dest1;\n        withdrawDest2 = _dest2;\n        withdrawDest3 = _dest3;\n        withdrawDest4 = _dest4;\n        withdrawDest5 = _dest5;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool ms, ) = payable(withdrawDest1).call{value: address(this).balance.mul(700).div(1000)}(\"\");\n        require(ms, \"withdrawl 1 failed\");\n        (bool ns, ) = payable(withdrawDest2).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(ns, \"withdrawl 2 failed\");\n        (bool cr, ) = payable(withdrawDest3).call{value: address(this).balance.mul(105).div(1000)}(\"\"); \n        require(cr, \"withdrawl 3 failed\");\n        (bool sn, ) = payable(withdrawDest4).call{value: address(this).balance.mul(45).div(1000)}(\"\");\n        require(sn, \"withdrawl 4 failed\");\n        (bool gr, ) = payable(withdrawDest5).call{value: address(this).balance}(\"\");\n        require(gr, \"withdrawl 5 failed\");\n    }\n\n    // Public view functions\n    function lastMintAddress() public view returns (address){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() public view returns (uint256){\n        require(totalSupply() > 0, \"No cryptid exists yet.\");\n        return(totalSupply());\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIdCounter.current() - 1;\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() public view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function getStage() public view returns (uint8) {\n        return stage;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n}",
  "sourceMap": "895:26:16:-:0;546:9549;895:26;;;-1:-1:-1;546:9549:16;895:26;;;;;;;;:::i;:::-;-1:-1:-1;927:37:16;;;;;;;;;;;;;-1:-1:-1;;;927:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;970:23:16;;;-1:-1:-1;;;;;;1122:73:16;;;;;1210;;;1241:42;-1:-1:-1;;;;;;1210:73:16;;;;;;;;1302;;;1153:42;1302:73;;;;;;1394;;;;;;;;;1486;;;;;;;;;;;2140:10;2113:37;;2159:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:3;;2409:5:16;;2416:7;;1441:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:9;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2435:15:16::1;:34:::0;;;2479:14:::1;:32:::0;;;2521:15:::1;:34:::0;;;2565:12:::1;:28:::0;;-1:-1:-1;;2565:28:16::1;;;::::0;::::1;;;::::0;;2603:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2631:27;:15;:25;;;;;:27;;:::i;:::-;2159:506:::0;;;;;;;546:9549;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:10:-;1032:19;;1050:1;1032:19;;;945:123::o;546:9549:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;546:9549:16;;;-1:-1:-1;546:9549:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:17;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;546:9549:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}