{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_whitelistSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamMintSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSaleSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_maxMintPerTx",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "airdropCryptid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMintID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerTx",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provenanceHashFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "publicMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseExtension",
          "type": "string"
        }
      ],
      "name": "setBaseExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "setClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_provenanceHash",
          "type": "string"
        }
      ],
      "name": "setProvenanceHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "setSalePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "_stage",
          "type": "uint8"
        }
      ],
      "name": "setStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawlAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawlAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "internalType": "enum CryptidToken.Stage",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "mintAmount",
          "type": "uint8"
        }
      ],
      "name": "teamMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamMintSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURIFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSaleSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wlAddress",
          "type": "address"
        }
      ],
      "name": "undoClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "walletOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "whitelistMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawlAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
    "10": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "11": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
    "12": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Strings.sol",
    "13": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
    "14": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "16": "contracts/CryptidToken.sol",
    "2": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "3": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
    "4": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/IERC721.sol",
    "6": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "7": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/CryptidToken.sol",
    "exportedSymbols": {
      "Address": [
        2977
      ],
      "Context": [
        2521
      ],
      "Counters": [
        2406
      ],
      "CryptidToken": [
        807
      ],
      "ERC165": [
        3204
      ],
      "ERC721": [
        1994
      ],
      "ERC721Enumerable": [
        2332
      ],
      "IERC165": [
        3247
      ],
      "IERC721": [
        2637
      ],
      "IERC721Enumerable": [
        3235
      ],
      "IERC721Metadata": [
        2682
      ],
      "IERC721Receiver": [
        2655
      ],
      "MerkleProof": [
        2499
      ],
      "Ownable": [
        996
      ],
      "Pausable": [
        1088
      ],
      "ReentrancyGuard": [
        1128
      ],
      "Strings": [
        3180
      ]
    },
    "id": 808,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:16"
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 1995,
        "src": "58:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 2333,
        "src": "116:78:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 997,
        "src": "195:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 1129,
        "src": "248:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 2407,
        "src": "311:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 1089,
        "src": "364:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chrisrussell/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 808,
        "sourceUnit": 2500,
        "src": "420:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1994,
              "src": "735:6:16"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "735:6:16"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2332,
              "src": "743:16:16"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "743:16:16"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1088,
              "src": "761:8:16"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:16"
          },
          {
            "baseName": {
              "id": 16,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 996,
              "src": "771:7:16"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "771:7:16"
          },
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1128,
              "src": "780:15:16"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "780:15:16"
          }
        ],
        "canonicalName": "CryptidToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "490:220:16",
          "text": "@title CryptidToken NFT Contract\n @author @chrisrusselljr\n @notice You can use this contract to mint, send, and interact with CRYPTIDS\n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 807,
        "linearizedBaseContracts": [
          807,
          1128,
          996,
          1088,
          2332,
          3235,
          1994,
          2682,
          2637,
          3204,
          3247,
          2521
        ],
        "name": "CryptidToken",
        "nameLocation": "719:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3180,
              "src": "808:7:16"
            },
            "nodeType": "UsingForDirective",
            "src": "802:26:16",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "820:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 26,
            "libraryName": {
              "id": 23,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2406,
              "src": "839:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "833:36:16",
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2338,
                "src": "852:16:16"
              },
              "referencedDeclaration": 2338,
              "src": "852:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2338_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 30,
            "libraryName": {
              "id": 27,
              "name": "MerkleProof",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2499,
              "src": "880:11:16"
            },
            "nodeType": "UsingForDirective",
            "src": "874:32:16",
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "896:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            }
          },
          {
            "canonicalName": "CryptidToken.Stage",
            "id": 36,
            "members": [
              {
                "id": 31,
                "name": "Init",
                "nameLocation": "933:4:16",
                "nodeType": "EnumValue",
                "src": "933:4:16"
              },
              {
                "id": 32,
                "name": "Airdrop",
                "nameLocation": "947:7:16",
                "nodeType": "EnumValue",
                "src": "947:7:16"
              },
              {
                "id": 33,
                "name": "Whitelist",
                "nameLocation": "964:9:16",
                "nodeType": "EnumValue",
                "src": "964:9:16"
              },
              {
                "id": 34,
                "name": "TeamMint",
                "nameLocation": "983:8:16",
                "nodeType": "EnumValue",
                "src": "983:8:16"
              },
              {
                "id": 35,
                "name": "PublicSale",
                "nameLocation": "1001:10:16",
                "nodeType": "EnumValue",
                "src": "1001:10:16"
              }
            ],
            "name": "Stage",
            "nameLocation": "917:5:16",
            "nodeType": "EnumDefinition",
            "src": "912:105:16"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "1048:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1023:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2338_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 38,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2338,
                "src": "1023:16:16"
              },
              "referencedDeclaration": 2338,
              "src": "1023:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2338_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 41,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "1089:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1074:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 40,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1074:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6ab67a3",
            "id": 43,
            "mutability": "mutable",
            "name": "provenanceHash",
            "nameLocation": "1119:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1105:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 42,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1105:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c0360eb",
            "id": 46,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "1153:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1139:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1139:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1163:2:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 49,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "1185:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1171:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1171:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1201:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de7fcb1d",
            "id": 51,
            "mutability": "mutable",
            "name": "maxMintPerTx",
            "nameLocation": "1227:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1214:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 50,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1214:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c29de630",
            "id": 54,
            "mutability": "mutable",
            "name": "tokenURIFrozen",
            "nameLocation": "1262:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1250:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 52,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1250:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 53,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1279:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a2a9c3d",
            "id": 57,
            "mutability": "mutable",
            "name": "provenanceHashFrozen",
            "nameLocation": "1302:20:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1290:40:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1290:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1325:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffa9cd3b",
            "id": 60,
            "mutability": "mutable",
            "name": "withdrawlAddress",
            "nameLocation": "1352:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1337:76:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831324235386635333331613644433839373933324141374642353130313636374143646630336532",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1371:42:16",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x12B58f5331a6DC897932AA7FB5101667ACdf03e2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "33e61413",
            "id": 62,
            "mutability": "mutable",
            "name": "whitelistSupply",
            "nameLocation": "1617:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1602:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1602:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 66,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "1693:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1661:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 65,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1661:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 64,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1680:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3214581",
            "id": 68,
            "mutability": "mutable",
            "name": "teamMintSupply",
            "nameLocation": "1767:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1752:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "088139a6",
            "id": 70,
            "mutability": "mutable",
            "name": "teamMintCount",
            "nameLocation": "1828:13:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1813:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1813:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78231978",
            "id": 72,
            "mutability": "mutable",
            "name": "totalSaleSupply",
            "nameLocation": "1892:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1877:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1877:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51f96dd",
            "id": 75,
            "mutability": "mutable",
            "name": "salePrice",
            "nameLocation": "1937:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1922:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1922:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1949:10:16",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c040e6b8",
            "id": 78,
            "mutability": "mutable",
            "name": "stage",
            "nameLocation": "1981:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 807,
            "src": "1968:18:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stage_$36",
              "typeString": "enum CryptidToken.Stage"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "Stage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36,
                "src": "1968:5:16"
              },
              "referencedDeclaration": 36,
              "src": "1968:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stage_$36",
                "typeString": "enum CryptidToken.Stage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2259:240:16",
              "statements": [
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2269:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_whitelistSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2287:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2269:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2269:34:16"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2313:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_teamMintSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2330:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2313:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:32:16"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "2355:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2373:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2355:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:34:16"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2399:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_maxMintPerTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2414:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2399:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:28:16"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2437:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "2447:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2437:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:18:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 119,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2465:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2338_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2364,
                      "src": "2465:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2338_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:27:16"
                }
              ]
            },
            "id": 125,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 95,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80,
                    "src": "2243:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 96,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "2250:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 97,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 94,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "2236:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2236:22:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2028:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2014:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2057:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2043:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "2088:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2074:22:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_whitelistSupply",
                  "nameLocation": "2114:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2106:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_teamMintSupply",
                  "nameLocation": "2148:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2140:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_totalSaleSupply",
                  "nameLocation": "2181:16:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2173:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_maxMintPerTx",
                  "nameLocation": "2213:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2207:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:229:16"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:0:16"
            },
            "scope": 807,
            "src": "1993:506:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2648:336:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 135,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2666:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 136,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2674:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Init",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "2674:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "2666:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2061697264726f707320617420696e69742e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        },
                        "value": "No airdrops at init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0216ba711d4d6a93d455748d3f1e1631d058acd5550b850a2d82dab7d650ca05",
                          "typeString": "literal_string \"No airdrops at init.\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2658:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:51:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 143,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2083,
                              "src": "2727:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2727:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 145,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2744:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2727:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 147,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "2758:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2727:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420616d6f756e742077696c6c2065786365656420746f74616c2073616c6520737570706c792e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2775:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        },
                        "value": "Mint amount will exceed total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d31ea9d02492d2e96078927c40226d782e16bdd234d48e8ef578474f39c8f09f",
                          "typeString": "literal_string \"Mint amount will exceed total sale supply.\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2719:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2719:101:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:101:16"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "2872:106:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 163,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "2896:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 164,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "2900:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2350,
                                "src": "2900:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2338_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2900:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 162,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1623,
                              1652
                            ],
                            "referencedDeclaration": 1623,
                            "src": "2886:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2886:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "2886:40:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 169,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "2940:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "2940:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2338_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2940:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2940:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 156,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "2850:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 157,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2855:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2850:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "initializationExpression": {
                    "assignments": [
                      153
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2843:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "2835:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2835:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 155,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2847:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2835:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2867:3:16",
                      "subExpression": {
                        "id": 159,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2867:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 161,
                    "nodeType": "ExpressionStatement",
                    "src": "2867:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "2830:148:16"
                }
              ]
            },
            "functionSelector": "b3caad01",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "2633:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2633:9:16"
              }
            ],
            "name": "airdropCryptid",
            "nameLocation": "2539:14:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "2569:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2563:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2598:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2590:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:53:16"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:0:16"
            },
            "scope": 807,
            "src": "2530:454:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3175:486:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 188,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3193:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 189,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3202:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Whitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "3202:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3193:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973742073616c65206e6f7420696e697469617465642e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3219:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        },
                        "value": "Whitelist sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3bf52366fb0e5f84b06dd8b232ddb24afa4a1296286b5bacb4ad858beda709",
                          "typeString": "literal_string \"Whitelist sale not initiated.\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3185:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:66:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 196,
                          "name": "salePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3269:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3282:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3282:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3269:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3293:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3261:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3261:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3261:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 206,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3358:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 210,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3397:3:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3397:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 208,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3380:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3380:16:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3380:28:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 207,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3370:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3370:39:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 204,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "3339:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2430,
                          "src": "3339:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3339:71:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e2077686974656c6973742e",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3412:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        },
                        "value": "Address not in whitelist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10f0316b21b19d043878f285c4ccf6f319edbac12e2d889c58c50cc06c80b168",
                          "typeString": "literal_string \"Address not in whitelist.\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3331:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3331:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3331:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 219,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3458:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "expression": {
                              "id": 220,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3466:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3466:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3458:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3481:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3458:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206d696e7420616c726561647920636c61696d65642e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        },
                        "value": "Whitelist mint already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eacba39c4a047211b4540ec646aa258bbbb866442d637ed169c138a1785486c",
                          "typeString": "literal_string \"Whitelist mint already claimed.\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3450:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3450:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:72:16"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 228,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3533:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "expression": {
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3541:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3541:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3533:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3555:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3533:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3579:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3579:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 238,
                            "name": "_tokenIdCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "3591:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2338_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2350,
                          "src": "3591:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2338_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3591:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1623,
                        1652
                      ],
                      "referencedDeclaration": 1623,
                      "src": "3569:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:48:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 243,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "3627:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2338_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2364,
                      "src": "3627:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2338_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:27:16"
                }
              ]
            },
            "functionSelector": "372f657c",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "3134:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3134:12:16"
              },
              {
                "id": 185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 184,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1044,
                  "src": "3156:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3156:13:16"
              }
            ],
            "name": "whitelistMint",
            "nameLocation": "3031:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3073:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3054:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 178,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3054:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 179,
                    "nodeType": "ArrayTypeName",
                    "src": "3054:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3044:46:16"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3175:0:16"
            },
            "scope": 807,
            "src": "3022:639:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3786:394:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 257,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3804:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 258,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "3813:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TeamMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "3813:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "3804:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5465616d206d696e74206e6f7420696e697469617465642e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3829:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        },
                        "value": "Team mint not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7dae189aaf5fdb65055f1a73014cbed686c778f6b97e26056b299841a83a3d",
                          "typeString": "literal_string \"Team mint not initiated.\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3796:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3796:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 265,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3874:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 266,
                            "name": "teamMintCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3887:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3874:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 268,
                          "name": "teamMintSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3904:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3874:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c207465616d2073616c6520737570706c792e",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3920:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        },
                        "value": "Transaction exceeds total team sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f8e73625d420dfd021366a39e6ac8232f5f6cf67d86e5554d531e8e501d40f7",
                          "typeString": "literal_string \"Transaction exceeds total team sale supply.\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3866:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:100:16"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "teamMintCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3981:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3998:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3981:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:27:16"
                },
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "4060:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 288,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4084:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4084:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 290,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4096:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2350,
                                "src": "4096:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2338_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4096:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 287,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1623,
                              1652
                            ],
                            "referencedDeclaration": 1623,
                            "src": "4074:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4074:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "4074:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 295,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4136:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "4136:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2338_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4136:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "4136:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4038:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 282,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "4043:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4038:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "initializationExpression": {
                    "assignments": [
                      278
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4031:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "4023:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4023:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 280,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4035:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4023:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4055:3:16",
                      "subExpression": {
                        "id": 284,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4055:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 286,
                    "nodeType": "ExpressionStatement",
                    "src": "4055:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4018:156:16"
                }
              ]
            },
            "functionSelector": "7b671780",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "3771:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3771:9:16"
              }
            ],
            "name": "teamMint",
            "nameLocation": "3703:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "3727:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3721:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3711:32:16"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3786:0:16"
            },
            "scope": 807,
            "src": "3694:486:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "4354:529:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stage_$36",
                          "typeString": "enum CryptidToken.Stage"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 313,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4372:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 314,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4381:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$36_$",
                              "typeString": "type(enum CryptidToken.Stage)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PublicSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4381:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$36",
                            "typeString": "enum CryptidToken.Stage"
                          }
                        },
                        "src": "4372:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c69632053616c65206e6f7420696e697469617465642e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4399:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        },
                        "value": "Public Sale not initiated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffac5016f99ffafbc14c1fb6a74ffca66ccd81dfe45948579200271a439555e8",
                          "typeString": "literal_string \"Public Sale not initiated.\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4364:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:64:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 321,
                            "name": "salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "4446:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 322,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4458:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4446:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4472:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4472:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4446:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374204554482076616c75652073656e742e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4483:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        },
                        "value": "Incorrect ETH value sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19aa319ce03600a53f9a4fd3a037122108d0716825aadc3c59f869db093040a7",
                          "typeString": "literal_string \"Incorrect ETH value sent.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4438:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:73:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4438:73:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 331,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2083,
                              "src": "4529:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4529:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 333,
                            "name": "mintAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "4546:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4529:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 335,
                          "name": "totalSaleSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "4560:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4529:46:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206578636565647320746f74616c2073616c6520737570706c792e",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4577:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        },
                        "value": "Transaction exceeds total sale supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff21cc5d7ba83c15f2be3c39eb11e04b8c551110f424d118e0b1abf001159ee6",
                          "typeString": "literal_string \"Transaction exceeds total sale supply.\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4521:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4521:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 341,
                          "name": "mintAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4636:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 342,
                          "name": "maxMintPerTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "4650:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4636:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786365656473206d617820616c6c6f776564206d696e747320706572207472616e73616374696f6e2e",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4664:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        },
                        "value": "Exceeds max allowed mints per transaction."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dc2cba29df8f648c7b0a6634ed379069d9a356058737d9841a6e20c3b896a6a",
                          "typeString": "literal_string \"Exceeds max allowed mints per transaction.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4628:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4628:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4628:81:16"
                },
                {
                  "body": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "4763:114:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4787:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4787:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 360,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39,
                                  "src": "4799:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                    "typeString": "struct Counters.Counter storage ref"
                                  }
                                },
                                "id": 361,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "current",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2350,
                                "src": "4799:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2338_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                                  "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4799:25:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 357,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1623,
                              1652
                            ],
                            "referencedDeclaration": 1623,
                            "src": "4777:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4777:48:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "4777:48:16"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 365,
                              "name": "_tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "4839:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$2338_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2364,
                            "src": "4839:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2338_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2338_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4839:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "4839:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 351,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "4741:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 352,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4746:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4741:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "initializationExpression": {
                    "assignments": [
                      348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4734:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "4726:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4726:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 350,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4738:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4726:13:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4758:3:16",
                      "subExpression": {
                        "id": 354,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4758:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "4758:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "4721:156:16"
                }
              ]
            },
            "functionSelector": "2db11544",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 307,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1127,
                  "src": "4312:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4312:12:16"
              },
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1044,
                  "src": "4334:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4334:13:16"
              }
            ],
            "name": "publicMint",
            "nameLocation": "4224:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "4252:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "4244:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4244:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4234:34:16"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:0:16"
            },
            "scope": 807,
            "src": "4215:668:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "4947:25:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 378,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "4957:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4957:8:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4957:8:16"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 375,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "4937:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4937:9:16"
              }
            ],
            "name": "pause",
            "nameLocation": "4920:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4925:2:16"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4947:0:16"
            },
            "scope": 807,
            "src": "4911:61:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "5016:27:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 387,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "5026:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5026:10:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "5026:10:16"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5006:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5006:9:16"
              }
            ],
            "name": "unpause",
            "nameLocation": "4987:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4994:2:16"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5016:0:16"
            },
            "scope": 807,
            "src": "4978:65:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5149:42:16",
              "statements": [
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 398,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5159:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "id": 399,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "5167:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5159:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5180:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5159:25:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:25:16"
                }
              ]
            },
            "functionSelector": "bb31b77b",
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 396,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 395,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5140:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5140:9:16"
              }
            ],
            "name": "setClaim",
            "nameLocation": "5103:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5120:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5112:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5112:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5111:19:16"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5149:0:16"
            },
            "scope": 807,
            "src": "5094:97:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "5291:43:16",
              "statements": [
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 412,
                        "name": "claimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5301:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "id": 413,
                        "name": "wlAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "5309:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5301:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5322:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5301:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:26:16"
                }
              ]
            },
            "functionSelector": "57ed9e4e",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5282:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5282:9:16"
              }
            ],
            "name": "undoClaim",
            "nameLocation": "5244:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "wlAddress",
                  "nameLocation": "5262:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "5254:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5254:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5253:19:16"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5291:0:16"
            },
            "scope": 807,
            "src": "5235:99:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "5403:41:16",
              "statements": [
                {
                  "expression": {
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 426,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "5413:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 427,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "5426:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5413:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5413:24:16"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 423,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5393:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5393:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "5349:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "5371:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "5363:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5362:21:16"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5403:0:16"
            },
            "scope": 807,
            "src": "5340:104:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "5516:94:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5534:15:16",
                        "subExpression": {
                          "id": 439,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5535:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492069732066726f7a656e2e",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5551:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        },
                        "value": "BaseURI is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69b45a3448a59ad375ec081a50a716e785a440c1fd3c9926feae942d4969f70",
                          "typeString": "literal_string \"BaseURI is frozen.\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5526:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5526:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "5526:46:16"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5582:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5592:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5582:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:21:16"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5506:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5506:9:16"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5459:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "5484:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "5470:25:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5469:27:16"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5516:0:16"
            },
            "scope": 807,
            "src": "5450:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5665:174:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 457,
                                "name": "baseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5689:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5683:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 455,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5683:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5683:14:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5683:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5707:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5683:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426173655552492063616e6e6f7420626520656d7074792e",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5710:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        },
                        "value": "BaseURI cannot be empty."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d06e997a5fec653a6d8df4f4a03b56521c27d3d67c432a2994c1db518897d6",
                          "typeString": "literal_string \"BaseURI cannot be empty.\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5675:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5675:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5675:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5755:15:16",
                        "subExpression": {
                          "id": 466,
                          "name": "tokenURIFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5756:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261736555524920697320616c72656164792066726f7a656e2e",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5772:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        },
                        "value": "BaseURI is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cfd25527cde626a1eec8fa614b08a2e6fbe265860613de4e13dcf0c927e8df0",
                          "typeString": "literal_string \"BaseURI is already frozen.\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5747:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:54:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:54:16"
                },
                {
                  "expression": {
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 471,
                      "name": "tokenURIFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5811:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5828:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5811:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "5811:21:16"
                }
              ]
            },
            "functionSelector": "e7bc8208",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 451,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5655:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5655:9:16"
              }
            ],
            "name": "freezeBaseURI",
            "nameLocation": "5630:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5643:2:16"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5665:0:16"
            },
            "scope": 807,
            "src": "5621:218:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "5923:50:16",
              "statements": [
                {
                  "expression": {
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 483,
                      "name": "baseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "5933:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 484,
                      "name": "_newBaseExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "5949:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5933:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "5933:33:16"
                }
              ]
            },
            "functionSelector": "da3ef23f",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 480,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "5913:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5913:9:16"
              }
            ],
            "name": "setBaseExtension",
            "nameLocation": "5854:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_newBaseExtension",
                  "nameLocation": "5885:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "5871:31:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5870:33:16"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5923:0:16"
            },
            "scope": 807,
            "src": "5845:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "6056:214:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 498,
                                "name": "_provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "6080:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6074:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 496,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6074:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6074:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6074:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6106:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6074:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682063616e6e6f7420626520656d70747920737472696e672e",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6109:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        },
                        "value": "Provenance hash cannot be empty string."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ab89f8eed62422287304a91afafed628429b9d38b7c94e126f6125494a6eb0",
                          "typeString": "literal_string \"Provenance hash cannot be empty string.\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6066:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6066:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "6066:85:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6169:21:16",
                        "subExpression": {
                          "id": 507,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6170:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e636520686173682069732066726f7a656e2e",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6192:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        },
                        "value": "Provenance hash is frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e849067ff4d0cb647506b39bdc31f12b3ac980715b041f8ad1acc2345b88a6",
                          "typeString": "literal_string \"Provenance hash is frozen.\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6161:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6161:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6161:60:16"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 512,
                      "name": "provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "6231:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 513,
                      "name": "_provenanceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "6248:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6231:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "6231:32:16"
                }
              ]
            },
            "functionSelector": "10969523",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 493,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 492,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "6046:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6046:9:16"
              }
            ],
            "name": "setProvenanceHash",
            "nameLocation": "5988:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_provenanceHash",
                  "nameLocation": "6020:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "6006:29:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6006:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6005:31:16"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6056:0:16"
            },
            "scope": 807,
            "src": "5979:291:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "6327:204:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 525,
                                "name": "provenanceHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "6351:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6345:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 523,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6345:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6345:21:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6345:28:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6376:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6345:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206973206e6f74207365742e",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6379:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        },
                        "value": "Provenance hash is not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f85bb26934ad9eed618ba6ee20bf5693885a3b5d4477006e2101f2e754a79362",
                          "typeString": "literal_string \"Provenance hash is not set.\""
                        }
                      ],
                      "id": 522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6337:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6337:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "6337:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6427:21:16",
                        "subExpression": {
                          "id": 534,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "6428:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e6365206861736820697320616c72656164792066726f7a656e2e",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6450:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        },
                        "value": "Provenance hash is already frozen."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559ed8291a015201d03a3f0d68dac147bf0a459a2b39c4c8c6aeba55db4cfedc",
                          "typeString": "literal_string \"Provenance hash is already frozen.\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6419:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6419:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "6419:68:16"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 539,
                      "name": "provenanceHashFrozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "6497:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6520:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6497:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "6497:27:16"
                }
              ]
            },
            "functionSelector": "81c162f2",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 519,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "6317:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6317:9:16"
              }
            ],
            "name": "freezeProvenanceHash",
            "nameLocation": "6285:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6305:2:16"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6327:0:16"
            },
            "scope": 807,
            "src": "6276:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "6612:53:16",
              "statements": [
                {
                  "expression": {
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 551,
                      "name": "withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6622:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 552,
                      "name": "_withdrawlAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6641:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6622:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "6622:36:16"
                }
              ]
            },
            "functionSelector": "f4efa3e6",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 548,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "6602:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6602:9:16"
              }
            ],
            "name": "setWithdrawlAddress",
            "nameLocation": "6546:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_withdrawlAddress",
                  "nameLocation": "6574:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "6566:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6566:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6565:27:16"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6612:0:16"
            },
            "scope": 807,
            "src": "6537:128:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "6732:39:16",
              "statements": [
                {
                  "expression": {
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 563,
                      "name": "salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6742:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 564,
                      "name": "_salePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "6754:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6742:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:22:16"
                }
              ]
            },
            "functionSelector": "1919fed7",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 560,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "6722:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6722:9:16"
              }
            ],
            "name": "setSalePrice",
            "nameLocation": "6680:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_salePrice",
                  "nameLocation": "6701:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "6693:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6693:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6692:20:16"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6732:0:16"
            },
            "scope": 807,
            "src": "6671:100:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "6824:217:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 576,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6850:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$807",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$807",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6842:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 574,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6842:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6842:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6842:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6866:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6842:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742062616c616e636520697320302e",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6869:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        },
                        "value": "Contract balance is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ba5502d101b63ac80e65aba8ce8a9aa970fb724218586578a0aa827563aee4f",
                          "typeString": "literal_string \"Contract balance is 0.\""
                        }
                      ],
                      "id": 573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6834:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6834:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "6834:60:16"
                },
                {
                  "assignments": [
                    585,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 585,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6910:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 605,
                      "src": "6905:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 584,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6905:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6984:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 588,
                              "name": "withdrawlAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "6931:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6923:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 586,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6923:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6923:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6923:30:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 593,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6969:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CryptidToken_$807",
                                  "typeString": "contract CryptidToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CryptidToken_$807",
                                  "typeString": "contract CryptidToken"
                                }
                              ],
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6961:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 591,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6961:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6961:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6961:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6923:60:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6923:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6904:83:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 601,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "7005:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776c206661696c65642e",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7014:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        },
                        "value": "Withdrawl failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_021df81ebfc87720144475a3df66803fcc5fc338eb43e88a7f6527f4564da9dd",
                          "typeString": "literal_string \"Withdrawl failed.\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6997:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6997:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:37:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 606,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 570,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "6814:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "6814:9:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6786:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:2:16"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6824:0:16"
            },
            "scope": 807,
            "src": "6777:264:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "7098:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 615,
                          "name": "provenanceHashFrozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "7116:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7140:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7116:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76656e616e63652068617368206d7573742062652066726f7a656e206265666f7265206d696e74696e672063616e2073746172742e",
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7146:58:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        },
                        "value": "Provenance hash must be frozen before minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7251fcbcb9cbe770e5b61fdd5f3789d91d612b01bd9a352c7a558ddd9b0d85f",
                          "typeString": "literal_string \"Provenance hash must be frozen before minting can start.\""
                        }
                      ],
                      "id": 614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7108:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7108:97:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "7108:97:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 622,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "7223:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7237:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7223:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f74206d7573742062652073657420626565666f7265206d696e74696e672063616e2073746172742e",
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7240:52:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        },
                        "value": "Merkle root must be set beefore minting can start."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32feeff6a70f382791cdb7ac7e7b4a95c02614c02127cab24aa1d8c0c14b82f3",
                          "typeString": "literal_string \"Merkle root must be set beefore minting can start.\""
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7215:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7215:78:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "7215:78:16"
                },
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 628,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "7303:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 629,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "7311:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$36",
                        "typeString": "enum CryptidToken.Stage"
                      }
                    },
                    "src": "7303:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:14:16"
                }
              ]
            },
            "functionSelector": "ce3cd997",
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 611,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 938,
                  "src": "7088:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "7088:9:16"
              }
            ],
            "name": "setStage",
            "nameLocation": "7056:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "_stage",
                  "nameLocation": "7071:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "7065:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$36",
                    "typeString": "enum CryptidToken.Stage"
                  },
                  "typeName": {
                    "id": 608,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 607,
                      "name": "Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36,
                      "src": "7065:5:16"
                    },
                    "referencedDeclaration": 36,
                    "src": "7065:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$36",
                      "typeString": "enum CryptidToken.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7064:14:16"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7098:0:16"
            },
            "scope": 807,
            "src": "7047:277:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "7419:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 639,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2083,
                          "src": "7444:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7444:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 638,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "7436:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7436:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 637,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "7429:29:16"
                }
              ]
            },
            "functionSelector": "6cbb8985",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintAddress",
            "nameLocation": "7370:15:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7385:2:16"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "7411:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7411:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7410:9:16"
            },
            "scope": 807,
            "src": "7361:104:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "7524:38:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 649,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2083,
                          "src": "7541:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7541:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 651,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7540:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 648,
                  "id": 652,
                  "nodeType": "Return",
                  "src": "7534:21:16"
                }
              ]
            },
            "functionSelector": "d6d67a09",
            "id": 654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lastMintID",
            "nameLocation": "7480:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7490:2:16"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "7516:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7516:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7515:9:16"
            },
            "scope": 807,
            "src": "7471:91:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1336
            ],
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "7656:179:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 664,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7682:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 663,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1567,
                          "src": "7674:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7674:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e2e",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7692:50:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6f21437b58b0d5d534f92d9673bce6fbdd1e432cf86665b7d0b0723e67ddd07",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token.\""
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7666:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7666:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7666:77:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 673,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "7784:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 674,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 656,
                                "src": "7793:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3062,
                              "src": "7793:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7793:18:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 677,
                            "name": "baseExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7813:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 671,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7767:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7767:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7767:60:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7760:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7760:6:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7760:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 661,
                  "id": 680,
                  "nodeType": "Return",
                  "src": "7753:75:16"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7577:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 658,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7623:8:16"
            },
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7594:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "7586:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7585:17:16"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "7641:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7641:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7640:15:16"
            },
            "scope": 807,
            "src": "7568:267:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "7898:55:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 687,
                      "name": "totalSaleSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "7915:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 688,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2083,
                        "src": "7933:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7933:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7915:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 691,
                  "nodeType": "Return",
                  "src": "7908:38:16"
                }
              ]
            },
            "functionSelector": "de5f9866",
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensLeft",
            "nameLocation": "7850:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7863:2:16"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "7889:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7889:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7888:9:16"
            },
            "scope": 807,
            "src": "7841:112:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "8042:274:16",
              "statements": [
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "ownerTokenCount",
                      "nameLocation": "8060:15:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "8052:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8052:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 704,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "8088:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 703,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "8078:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8078:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8052:42:16"
                },
                {
                  "assignments": [
                    711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 711,
                      "mutability": "mutable",
                      "name": "tokensIds",
                      "nameLocation": "8121:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 740,
                      "src": "8104:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8104:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 710,
                        "nodeType": "ArrayTypeName",
                        "src": "8104:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 717,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 715,
                        "name": "ownerTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "8147:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8133:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8137:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 713,
                        "nodeType": "ArrayTypeName",
                        "src": "8137:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8133:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8104:59:16"
                },
                {
                  "body": {
                    "id": 736,
                    "nodeType": "Block",
                    "src": "8215:69:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 727,
                              "name": "tokensIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 711,
                              "src": "8229:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 729,
                            "indexExpression": {
                              "id": 728,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 719,
                              "src": "8239:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8229:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 731,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "8264:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 732,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "8271:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 730,
                              "name": "tokenOfOwnerByIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "8244:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8244:29:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8229:44:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 735,
                        "nodeType": "ExpressionStatement",
                        "src": "8229:44:16"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 721,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "8189:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 722,
                      "name": "ownerTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "8193:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8189:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 737,
                  "initializationExpression": {
                    "assignments": [
                      719
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8186:1:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 737,
                        "src": "8178:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8178:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 720,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8178:9:16"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8210:3:16",
                      "subExpression": {
                        "id": 724,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "8210:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 726,
                    "nodeType": "ExpressionStatement",
                    "src": "8210:3:16"
                  },
                  "nodeType": "ForStatement",
                  "src": "8173:111:16"
                },
                {
                  "expression": {
                    "id": 738,
                    "name": "tokensIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 711,
                    "src": "8300:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 700,
                  "id": 739,
                  "nodeType": "Return",
                  "src": "8293:16:16"
                }
              ]
            },
            "functionSelector": "438b6300",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "7972:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7994:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "7986:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7985:15:16"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "8024:16:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 697,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8024:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 698,
                    "nodeType": "ArrayTypeName",
                    "src": "8024:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8023:18:16"
            },
            "scope": 807,
            "src": "7963:353:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "8399:151:16",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 751,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "8432:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 755,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8471:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8471:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 753,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8454:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "8454:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8454:28:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 752,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8444:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8444:39:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 749,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "8413:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2430,
                      "src": "8413:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8413:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "IfStatement",
                  "src": "8409:113:16",
                  "trueBody": {
                    "id": 762,
                    "nodeType": "Block",
                    "src": "8486:36:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8507:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 748,
                        "id": 761,
                        "nodeType": "Return",
                        "src": "8500:11:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8538:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 748,
                  "id": 765,
                  "nodeType": "Return",
                  "src": "8531:12:16"
                }
              ]
            },
            "functionSelector": "97611638",
            "id": 767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "8331:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "8357:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "8338:30:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 742,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8338:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 743,
                    "nodeType": "ArrayTypeName",
                    "src": "8338:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8337:32:16"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "8393:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8393:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8392:6:16"
            },
            "scope": 807,
            "src": "8322:228:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1982,
              2170
            ],
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "8691:62:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 784,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "8728:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 771,
                        "src": "8734:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 786,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "8738:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 781,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8701:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$807_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2170,
                      "src": "8701:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8701:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "8701:45:16"
                }
              ]
            },
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 776,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 775,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1044,
                  "src": "8642:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8642:13:16"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8569:20:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 779,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 777,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "8665:6:16"
                },
                {
                  "id": 778,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2332,
                  "src": "8673:16:16"
                }
              ],
              "src": "8656:34:16"
            },
            "parameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8598:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8590:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8590:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8612:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8604:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8604:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8624:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "8616:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8616:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8589:43:16"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8691:0:16"
            },
            "scope": 807,
            "src": "8560:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1222,
              2044
            ],
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "8936:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 802,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "8977:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 800,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8953:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CryptidToken_$807_$",
                          "typeString": "type(contract super CryptidToken)"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "8953:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8953:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 799,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "8946:43:16"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8836:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 796,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 794,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "8895:6:16"
                },
                {
                  "id": 795,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2332,
                  "src": "8903:16:16"
                }
              ],
              "src": "8886:34:16"
            },
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8861:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8854:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8854:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8853:20:16"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "8930:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8930:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8929:6:16"
            },
            "scope": 807,
            "src": "8827:169:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 808,
        "src": "710:8289:16",
        "usedErrors": []
      }
    ],
    "src": "32:8967:16"
  },
  "bytecode": "60a06040819052600060808190526200001b91600f91620001b7565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91601091620001b7565b5060118054610100600160b81b0319167612b58f5331a6dc897932aa7fb5101667acdf03e2000000179055662386f26fc100006017553480156200008d57600080fd5b5060405162003bdf38038062003bdf833981016040819052620000b0916200032a565b865187908790620000c9906000906020850190620001b7565b508051620000df906001906020840190620001b7565b5050600a805460ff1916905550620000f73362000154565b6001600b556012849055601483905560168290556011805460ff191660ff831617905584516200012f90600f906020880190620001b7565b5062000147600c620001ae60201b620022a71760201c565b5050505050505062000431565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b828054620001c590620003f4565b90600052602060002090601f016020900481019282620001e9576000855562000234565b82601f106200020457805160ff191683800117855562000234565b8280016001018555821562000234579182015b828111156200023457825182559160200191906001019062000217565b506200024292915062000246565b5090565b5b8082111562000242576000815560010162000247565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028557600080fd5b81516001600160401b0380821115620002a257620002a26200025d565b604051601f8301601f19908116603f01168101908282118183101715620002cd57620002cd6200025d565b81604052838152602092508683858801011115620002ea57600080fd5b600091505b838210156200030e5785820183015181830184015290820190620002ef565b83821115620003205760008385830101525b9695505050505050565b600080600080600080600060e0888a0312156200034657600080fd5b87516001600160401b03808211156200035e57600080fd5b6200036c8b838c0162000273565b985060208a01519150808211156200038357600080fd5b620003918b838c0162000273565b975060408a0151915080821115620003a857600080fd5b50620003b78a828b0162000273565b955050606088015193506080880151925060a0880151915060c088015160ff81168114620003e457600080fd5b8091505092959891949750929550565b600181811c908216806200040957607f821691505b602082108114156200042b57634e487b7160e01b600052602260045260246000fd5b50919050565b61379e80620004416000396000f3fe6080604052600436106103815760003560e01c80637cb64759116101d1578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109e5578063f4efa3e614610a05578063f51f96dd14610a25578063ffa9cd3b14610a3b57600080fd5b8063de5f986614610946578063de7fcb1d1461095b578063e7bc820814610987578063e985e9c51461099c57600080fd5b8063c884ef83116100dc578063c884ef83146108c1578063ce3cd997146108f1578063d6d67a0914610911578063da3ef23f1461092657600080fd5b8063c668286214610877578063c6ab67a31461088c578063c87b56dd146108a157600080fd5b8063a22cb4651161016f578063bb31b77b11610149578063bb31b77b146107fb578063c040e6b81461081b578063c29de63014610842578063c32145811461086157600080fd5b8063a22cb4651461079b578063b3caad01146107bb578063b88d4fde146107db57600080fd5b80638da5cb5b116101ab5780638da5cb5b1461072357806395d89b4114610746578063976116381461075b5780639a2a9c3d1461077b57600080fd5b80637cb64759146106d957806381c162f2146106f95780638456cb591461070e57600080fd5b80633ccfd60b116102b65780635c975abb1161025457806370a082311161022357806370a082311461066e578063715018a61461068e57806378231978146106a35780637b671780146106b957600080fd5b80635c975abb1461060c5780636352211e146106245780636c0360eb146106445780636cbb89851461065957600080fd5b8063438b630011610290578063438b63001461057f5780634f6ccce7146105ac57806355f804b3146105cc57806357ed9e4e146105ec57600080fd5b80633ccfd60b146105425780633f4ba83a1461054a57806342842e0e1461055f57600080fd5b80631919fed7116103235780632eb4a7ab116102fd5780632eb4a7ab146104e35780632f745c59146104f957806333e6141314610519578063372f657c1461052f57600080fd5b80631919fed71461049057806323b872dd146104b05780632db11544146104d057600080fd5b8063088139a61161035f578063088139a614610415578063095ea7b314610439578063109695231461045b57806318160ddd1461047b57600080fd5b806301ffc9a71461038657806306fdde03146103bb578063081812fc146103dd575b600080fd5b34801561039257600080fd5b506103a66103a1366004612fb6565b610a62565b60405190151581526020015b60405180910390f35b3480156103c757600080fd5b506103d0610a73565b6040516103b29190613032565b3480156103e957600080fd5b506103fd6103f8366004613045565b610b05565b6040516001600160a01b0390911681526020016103b2565b34801561042157600080fd5b5061042b60155481565b6040519081526020016103b2565b34801561044557600080fd5b5061045961045436600461307a565b610b9f565b005b34801561046757600080fd5b50610459610476366004613130565b610cb5565b34801561048757600080fd5b5060085461042b565b34801561049c57600080fd5b506104596104ab366004613045565b610db6565b3480156104bc57600080fd5b506104596104cb366004613179565b610deb565b6104596104de366004613045565b610e1c565b3480156104ef57600080fd5b5061042b600d5481565b34801561050557600080fd5b5061042b61051436600461307a565b611076565b34801561052557600080fd5b5061042b60125481565b61045961053d3660046131b5565b61110c565b610459611394565b34801561055657600080fd5b506104596114ae565b34801561056b57600080fd5b5061045961057a366004613179565b6114e8565b34801561058b57600080fd5b5061059f61059a36600461322a565b611503565b6040516103b29190613245565b3480156105b857600080fd5b5061042b6105c7366004613045565b6115a5565b3480156105d857600080fd5b506104596105e7366004613130565b611638565b3480156105f857600080fd5b5061045961060736600461322a565b6116c8565b34801561061857600080fd5b50600a5460ff166103a6565b34801561063057600080fd5b506103fd61063f366004613045565b611719565b34801561065057600080fd5b506103d0611790565b34801561066557600080fd5b506103fd61181e565b34801561067a57600080fd5b5061042b61068936600461322a565b611831565b34801561069a57600080fd5b506104596118b8565b3480156106af57600080fd5b5061042b60165481565b3480156106c557600080fd5b506104596106d436600461329a565b6118f2565b3480156106e557600080fd5b506104596106f4366004613045565b611a52565b34801561070557600080fd5b50610459611a87565b34801561071a57600080fd5b50610459611b8c565b34801561072f57600080fd5b50600a5461010090046001600160a01b03166103fd565b34801561075257600080fd5b506103d0611bc4565b34801561076757600080fd5b506103a66107763660046131b5565b611bd3565b34801561078757600080fd5b506011546103a69062010000900460ff1681565b3480156107a757600080fd5b506104596107b63660046132b5565b611c64565b3480156107c757600080fd5b506104596107d63660046132f1565b611c6f565b3480156107e757600080fd5b506104596107f6366004613324565b611db1565b34801561080757600080fd5b5061045961081636600461322a565b611de9565b34801561082757600080fd5b506018546108359060ff1681565b6040516103b291906133b6565b34801561084e57600080fd5b506011546103a690610100900460ff1681565b34801561086d57600080fd5b5061042b60145481565b34801561088357600080fd5b506103d0611e3d565b34801561089857600080fd5b506103d0611e4a565b3480156108ad57600080fd5b506103d06108bc366004613045565b611e57565b3480156108cd57600080fd5b506103a66108dc36600461322a565b60136020526000908152604090205460ff1681565b3480156108fd57600080fd5b5061045961090c3660046133de565b611f0c565b34801561091d57600080fd5b5061042b612050565b34801561093257600080fd5b50610459610941366004613130565b61205b565b34801561095257600080fd5b5061042b61209e565b34801561096757600080fd5b506011546109759060ff1681565b60405160ff90911681526020016103b2565b34801561099357600080fd5b506104596120b6565b3480156109a857600080fd5b506103a66109b73660046133ff565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109f157600080fd5b50610459610a0036600461322a565b6121ad565b348015610a1157600080fd5b50610459610a2036600461322a565b61224b565b348015610a3157600080fd5b5061042b60175481565b348015610a4757600080fd5b506011546103fd90630100000090046001600160a01b031681565b6000610a6d826122b0565b92915050565b606060008054610a829061341b565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae9061341b565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610baa82611719565b9050806001600160a01b0316836001600160a01b03161415610c185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b7a565b336001600160a01b0382161480610c345750610c3481336109b7565b610ca65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b7a565b610cb083836122d5565b505050565b600a546001600160a01b03610100909104163314610ce55760405162461bcd60e51b8152600401610b7a90613456565b6000815111610d465760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b7a565b60115462010000900460ff1615610d9f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b7a565b8051610db290600e906020840190612f07565b5050565b600a546001600160a01b03610100909104163314610de65760405162461bcd60e51b8152600401610b7a90613456565b601755565b610df53382612343565b610e115760405162461bcd60e51b8152600401610b7a9061348b565b610cb083838361243a565b6002600b541415610e6f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff1615610e975760405162461bcd60e51b8152600401610b7a906134dc565b600460185460ff166004811115610eb057610eb06133a0565b14610efd5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b7a565b3481601754610f0c919061351c565b14610f555760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b60165481610f6260085490565b610f6c919061353b565b1115610fc95760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b7a565b60115460ff168111156110315760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b7a565b60015b81811161106d5761104d33611048600c5490565b6125e1565b61105b600c80546001019055565b8061106581613553565b915050611034565b50506001600b55565b600061108183611831565b82106110e35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b7a565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b54141561115f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff16156111875760405162461bcd60e51b8152600401610b7a906134dc565b600260185460ff1660048111156111a0576111a06133a0565b146111ed5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b346017541461123a5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112b39190603401604051602081830303815290604052805190602001208484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125fb9050565b6112ff5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b7a565b3360009081526013602052604090205460ff161561135f5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b7a565b336000818152601360205260409020805460ff1916600117905561138690611048600c5490565b61106d600c80546001019055565b600a546001600160a01b036101009091041633146113c45760405162461bcd60e51b8152600401610b7a90613456565b6000471161140d5760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b7a565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611461576040519150601f19603f3d011682016040523d82523d6000602084013e611466565b606091505b50509050806114ab5760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b7a565b50565b600a546001600160a01b036101009091041633146114de5760405162461bcd60e51b8152600401610b7a90613456565b6114e6612611565b565b610cb083838360405180602001604052806000815250611db1565b6060600061151083611831565b905060008167ffffffffffffffff81111561152d5761152d6130a4565b604051908082528060200260200182016040528015611556578160200160208202803683370190505b50905060005b8281101561159d5761156e8582611076565b8282815181106115805761158061356e565b60209081029190910101528061159581613553565b91505061155c565b509392505050565b60006115b060085490565b82106116135760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b7a565b600882815481106116265761162661356e565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146116685760405162461bcd60e51b8152600401610b7a90613456565b601154610100900460ff16156116b55760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b7a565b8051610db290600f906020840190612f07565b600a546001600160a01b036101009091041633146116f85760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b03166000908152601360205260409020805460ff19169055565b6000818152600260205260408120546001600160a01b031680610a6d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b7a565b600f805461179d9061341b565b80601f01602080910402602001604051908101604052809291908181526020018280546117c99061341b565b80156118165780601f106117eb57610100808354040283529160200191611816565b820191906000526020600020905b8154815290600101906020018083116117f957829003601f168201915b505050505081565b600061182c61063f60085490565b905090565b60006001600160a01b03821661189c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b7a565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118e85760405162461bcd60e51b8152600401610b7a90613456565b6114e660006126a4565b600a546001600160a01b036101009091041633146119225760405162461bcd60e51b8152600401610b7a90613456565b600360185460ff16600481111561193b5761193b6133a0565b146119885760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b7a565b60145460155461199b9060ff841661353b565b11156119fd5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b7a565b8060ff1660156000828254611a12919061353b565b90915550600190505b8160ff168111610db257611a3233611048600c5490565b611a40600c80546001019055565b80611a4a81613553565b915050611a1b565b600a546001600160a01b03610100909104163314611a825760405162461bcd60e51b8152600401610b7a90613456565b600d55565b600a546001600160a01b03610100909104163314611ab75760405162461bcd60e51b8152600401610b7a90613456565b6000600e8054611ac69061341b565b905011611b155760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b7a565b60115462010000900460ff1615611b795760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b7a565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611bbc5760405162461bcd60e51b8152600401610b7a90613456565b6114e66126fe565b606060018054610a829061341b565b600d546040516bffffffffffffffffffffffff193360601b166020820152600091611c4e91603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125fb9050565b15611c5b57506001610a6d565b50600092915050565b610db2338383612756565b600a546001600160a01b03610100909104163314611c9f5760405162461bcd60e51b8152600401610b7a90613456565b600060185460ff166004811115611cb857611cb86133a0565b11611cfc5760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b7a565b6016548260ff16611d0c60085490565b611d16919061353b565b1115611d775760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b7a565b60015b8260ff168111610cb057611d9182611048600c5490565b611d9f600c80546001019055565b80611da981613553565b915050611d7a565b611dbb3383612343565b611dd75760405162461bcd60e51b8152600401610b7a9061348b565b611de384848484612825565b50505050565b600a546001600160a01b03610100909104163314611e195760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b6010805461179d9061341b565b600e805461179d9061341b565b6000818152600260205260409020546060906001600160a01b0316611ed75760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b7a565b600f611ee283612858565b6010604051602001611ef69392919061361e565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f3c5760405162461bcd60e51b8152600401610b7a90613456565b60115462010000900460ff161515600114611fbf5760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b7a565b600d546120295760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b7a565b6018805482919060ff19166001836004811115612048576120486133a0565b021790555050565b600061182c60085490565b600a546001600160a01b0361010090910416331461208b5760405162461bcd60e51b8152600401610b7a90613456565b8051610db2906010906020840190612f07565b60006120a960085490565b60165461182c9190613651565b600a546001600160a01b036101009091041633146120e65760405162461bcd60e51b8152600401610b7a90613456565b6000600f80546120f59061341b565b9050116121445760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b7a565b601154610100900460ff161561219c5760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b7a565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146121dd5760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b0381166122425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b7a565b6114ab816126a4565b600a546001600160a01b0361010090910416331461227b5760405162461bcd60e51b8152600401610b7a90613456565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a6d5750610a6d82612956565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061230a82611719565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123bc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b7a565b60006123c783611719565b9050806001600160a01b0316846001600160a01b031614806124025750836001600160a01b03166123f784610b05565b6001600160a01b0316145b8061243257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661244d82611719565b6001600160a01b0316146124b15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b7a565b6001600160a01b0382166125135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b7a565b61251e8383836129a6565b6125296000826122d5565b6001600160a01b0383166000908152600360205260408120805460019290612552908490613651565b90915550506001600160a01b038216600090815260036020526040812080546001929061258090849061353b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610db28282604051806020016040528060008152506129d4565b6000826126088584612a07565b14949350505050565b600a5460ff1661265a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b7a565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127215760405162461bcd60e51b8152600401610b7a906134dc565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126873390565b816001600160a01b0316836001600160a01b031614156127b85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b7a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61283084848461243a565b61283c84848484612a73565b611de35760405162461bcd60e51b8152600401610b7a90613668565b60608161287c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128a6578061289081613553565b915061289f9050600a836136d0565b9150612880565b60008167ffffffffffffffff8111156128c1576128c16130a4565b6040519080825280601f01601f1916602001820160405280156128eb576020820181803683370190505b5090505b841561243257612900600183613651565b915061290d600a866136e4565b61291890603061353b565b60f81b81838151811061292d5761292d61356e565b60200101906001600160f81b031916908160001a90535061294f600a866136d0565b94506128ef565b60006001600160e01b031982166380ac58cd60e01b148061298757506001600160e01b03198216635b5e139f60e01b145b80610a6d57506301ffc9a760e01b6001600160e01b0319831614610a6d565b600a5460ff16156129c95760405162461bcd60e51b8152600401610b7a906134dc565b610cb0838383612b71565b6129de8383612c29565b6129eb6000848484612a73565b610cb05760405162461bcd60e51b8152600401610b7a90613668565b600081815b845181101561159d576000858281518110612a2957612a2961356e565b60200260200101519050808311612a4f5760008381526020829052604090209250612a60565b600081815260208490526040902092505b5080612a6b81613553565b915050612a0c565b60006001600160a01b0384163b15612b6657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612ab79033908990889088906004016136f8565b6020604051808303816000875af1925050508015612af2575060408051601f3d908101601f19168201909252612aef91810190613735565b60015b612b4c573d808015612b20576040519150601f19603f3d011682016040523d82523d6000602084013e612b25565b606091505b508051612b445760405162461bcd60e51b8152600401610b7a90613668565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612432565b506001949350505050565b6001600160a01b038316612bcc57612bc781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612bef565b816001600160a01b0316836001600160a01b031614612bef57612bef8382612d77565b6001600160a01b038216612c0657610cb081612e14565b826001600160a01b0316826001600160a01b031614610cb057610cb08282612ec3565b6001600160a01b038216612c7f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b7a565b6000818152600260205260409020546001600160a01b031615612ce45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b7a565b612cf0600083836129a6565b6001600160a01b0382166000908152600360205260408120805460019290612d1990849061353b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612d8484611831565b612d8e9190613651565b600083815260076020526040902054909150808214612de1576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612e2690600190613651565b60008381526009602052604081205460088054939450909284908110612e4e57612e4e61356e565b906000526020600020015490508060088381548110612e6f57612e6f61356e565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612ea757612ea7613752565b6001900381819060005260206000200160009055905550505050565b6000612ece83611831565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f139061341b565b90600052602060002090601f016020900481019282612f355760008555612f7b565b82601f10612f4e57805160ff1916838001178555612f7b565b82800160010185558215612f7b579182015b82811115612f7b578251825591602001919060010190612f60565b50612f87929150612f8b565b5090565b5b80821115612f875760008155600101612f8c565b6001600160e01b0319811681146114ab57600080fd5b600060208284031215612fc857600080fd5b8135612fd381612fa0565b9392505050565b60005b83811015612ff5578181015183820152602001612fdd565b83811115611de35750506000910152565b6000815180845261301e816020860160208601612fda565b601f01601f19169290920160200192915050565b602081526000612fd36020830184613006565b60006020828403121561305757600080fd5b5035919050565b80356001600160a01b038116811461307557600080fd5b919050565b6000806040838503121561308d57600080fd5b6130968361305e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156130d5576130d56130a4565b604051601f8501601f19908116603f011681019082821181831017156130fd576130fd6130a4565b8160405280935085815286868601111561311657600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561314257600080fd5b813567ffffffffffffffff81111561315957600080fd5b8201601f8101841361316a57600080fd5b612432848235602084016130ba565b60008060006060848603121561318e57600080fd5b6131978461305e565b92506131a56020850161305e565b9150604084013590509250925092565b600080602083850312156131c857600080fd5b823567ffffffffffffffff808211156131e057600080fd5b818501915085601f8301126131f457600080fd5b81358181111561320357600080fd5b8660208260051b850101111561321857600080fd5b60209290920196919550909350505050565b60006020828403121561323c57600080fd5b612fd38261305e565b6020808252825182820181905260009190848201906040850190845b8181101561327d57835183529284019291840191600101613261565b50909695505050505050565b803560ff8116811461307557600080fd5b6000602082840312156132ac57600080fd5b612fd382613289565b600080604083850312156132c857600080fd5b6132d18361305e565b9150602083013580151581146132e657600080fd5b809150509250929050565b6000806040838503121561330457600080fd5b61330d83613289565b915061331b6020840161305e565b90509250929050565b6000806000806080858703121561333a57600080fd5b6133438561305e565b93506133516020860161305e565b925060408501359150606085013567ffffffffffffffff81111561337457600080fd5b8501601f8101871361338557600080fd5b613394878235602084016130ba565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106133d857634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156133f057600080fd5b813560058110612fd357600080fd5b6000806040838503121561341257600080fd5b61330d8361305e565b600181811c9082168061342f57607f821691505b6020821081141561345057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561353657613536613506565b500290565b6000821982111561354e5761354e613506565b500190565b600060001982141561356757613567613506565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061359e57607f831692505b60208084108214156135c057634e487b7160e01b600052602260045260246000fd5b8180156135d457600181146135e557613612565b60ff19861689528489019650613612565b60008881526020902060005b8681101561360a5781548b8201529085019083016135f1565b505084890196505b50505050505092915050565b600061362a8286613584565b845161363a818360208901612fda565b61364681830186613584565b979650505050505050565b60008282101561366357613663613506565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826136df576136df6136ba565b500490565b6000826136f3576136f36136ba565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061372b90830184613006565b9695505050505050565b60006020828403121561374757600080fd5b8151612fd381612fa0565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220fa58bd3a4e036e8fedab7bf3e3d3f3420077aef73061e035fd9ea079e207252864736f6c634300080b0033",
  "bytecodeSha1": "b045370d98170805fcdbf359521cfa97e804c9c8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "CryptidToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "200": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "Strings.toString": {
          "202": [
            601,
            611,
            false
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "199": [
            1643,
            1671,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "CryptidToken.airdropCryptid": {
          "174": [
            2666,
            2684,
            true
          ],
          "175": [
            2727,
            2773,
            true
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "177": [
            5683,
            5708,
            true
          ],
          "178": [
            5755,
            5770,
            true
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "171": [
            6345,
            6377,
            true
          ],
          "172": [
            6427,
            6448,
            true
          ]
        },
        "CryptidToken.publicMint": {
          "158": [
            4372,
            4397,
            true
          ],
          "159": [
            4446,
            4481,
            true
          ],
          "160": [
            4529,
            4575,
            true
          ],
          "161": [
            4636,
            4662,
            true
          ]
        },
        "CryptidToken.setBaseURI": {
          "168": [
            5534,
            5549,
            true
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "156": [
            6074,
            6107,
            true
          ],
          "157": [
            6169,
            6190,
            true
          ]
        },
        "CryptidToken.setStage": {
          "176": [
            7116,
            7144,
            true
          ]
        },
        "CryptidToken.teamMint": {
          "169": [
            3804,
            3827,
            true
          ],
          "170": [
            3874,
            3918,
            true
          ]
        },
        "CryptidToken.verify": {
          "173": [
            8413,
            8484,
            false
          ]
        },
        "CryptidToken.whitelistMint": {
          "162": [
            3193,
            3217,
            true
          ],
          "163": [
            3269,
            3291,
            true
          ],
          "164": [
            3339,
            3410,
            true
          ],
          "165": [
            3458,
            3486,
            true
          ]
        },
        "CryptidToken.withdraw": {
          "166": [
            6842,
            6867,
            true
          ],
          "167": [
            7005,
            7012,
            true
          ]
        }
      },
      "2": {
        "CryptidToken.whitelistMint": {
          "201": [
            2325,
            2344,
            true
          ]
        }
      },
      "3": {
        "ERC721._mint": {
          "191": [
            9157,
            9173,
            true
          ]
        },
        "ERC721._safeMint": {
          "190": [
            8619,
            8673,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "189": [
            6746,
            6794,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "188": [
            11615,
            11632,
            true
          ]
        },
        "ERC721._transfer": {
          "186": [
            10579,
            10610,
            true
          ],
          "187": [
            10670,
            10686,
            true
          ]
        },
        "ERC721.approve": {
          "179": [
            3674,
            3685,
            true
          ],
          "180": [
            3755,
            3776,
            true
          ],
          "181": [
            3780,
            3817,
            true
          ]
        },
        "ERC721.balanceOf": {
          "184": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "183": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "185": [
            5536,
            5577,
            true
          ]
        },
        "ERC721.transferFrom": {
          "182": [
            4915,
            4956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "194": [
            2823,
            2841,
            false
          ],
          "195": [
            2918,
            2928,
            false
          ],
          "196": [
            3015,
            3031,
            false
          ],
          "197": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "198": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "193": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "192": [
            1415,
            1446,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "108": [
            2378,
            2395
          ],
          "109": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "53": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "88": [
            1998,
            2071
          ],
          "89": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "110": [
            1922,
            1936
          ],
          "111": [
            1946,
            1971
          ]
        },
        "Pausable._unpause": {
          "106": [
            2168,
            2183
          ],
          "107": [
            2193,
            2220
          ]
        },
        "Pausable.paused": {
          "1": [
            1161,
            1175
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "11": {
        "Counters.current": {
          "24": [
            911,
            932
          ]
        },
        "Counters.increment": {
          "26": [
            1032,
            1051
          ]
        }
      },
      "12": {
        "Strings.toString": {
          "117": [
            627,
            637
          ],
          "118": [
            743,
            751
          ],
          "119": [
            765,
            775
          ],
          "120": [
            877,
            888
          ],
          "121": [
            902,
            958
          ],
          "122": [
            972,
            983
          ]
        }
      },
      "13": {
        "MerkleProof.processProof": {
          "128": [
            1769,
            1826
          ],
          "129": [
            1943,
            2000
          ],
          "130": [
            1575,
            1578
          ]
        },
        "MerkleProof.verify": {
          "105": [
            999,
            1039
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "124": [
            930,
            977
          ]
        }
      },
      "15": {},
      "16": {
        "CryptidToken._beforeTokenTransfer": {
          "125": [
            8701,
            8746
          ]
        },
        "CryptidToken.airdropCryptid": {
          "69": [
            2658,
            2709
          ],
          "70": [
            2719,
            2820
          ],
          "71": [
            2886,
            2926
          ],
          "72": [
            2940,
            2967
          ],
          "73": [
            2867,
            2870
          ]
        },
        "CryptidToken.freezeBaseURI": {
          "85": [
            5675,
            5737
          ],
          "86": [
            5747,
            5801
          ],
          "87": [
            5811,
            5832
          ]
        },
        "CryptidToken.freezeProvenanceHash": {
          "61": [
            6337,
            6409
          ],
          "62": [
            6419,
            6487
          ],
          "63": [
            6497,
            6524
          ]
        },
        "CryptidToken.getTokensLeft": {
          "84": [
            7908,
            7946
          ]
        },
        "CryptidToken.lastMintAddress": {
          "50": [
            7429,
            7458
          ]
        },
        "CryptidToken.lastMintID": {
          "82": [
            7534,
            7555
          ]
        },
        "CryptidToken.pause": {
          "64": [
            4957,
            4965
          ]
        },
        "CryptidToken.publicMint": {
          "19": [
            4364,
            4428
          ],
          "20": [
            4438,
            4511
          ],
          "21": [
            4521,
            4618
          ],
          "22": [
            4628,
            4709
          ],
          "23": [
            4777,
            4825
          ],
          "25": [
            4839,
            4866
          ],
          "27": [
            4758,
            4761
          ]
        },
        "CryptidToken.setBaseExtension": {
          "83": [
            5933,
            5966
          ]
        },
        "CryptidToken.setBaseURI": {
          "46": [
            5526,
            5572
          ],
          "47": [
            5582,
            5603
          ]
        },
        "CryptidToken.setClaim": {
          "76": [
            5159,
            5184
          ]
        },
        "CryptidToken.setMerkleRoot": {
          "60": [
            5413,
            5437
          ]
        },
        "CryptidToken.setProvenanceHash": {
          "13": [
            6066,
            6151
          ],
          "14": [
            6161,
            6221
          ],
          "15": [
            6231,
            6263
          ]
        },
        "CryptidToken.setSalePrice": {
          "16": [
            6742,
            6764
          ]
        },
        "CryptidToken.setStage": {
          "79": [
            7108,
            7205
          ],
          "80": [
            7215,
            7293
          ],
          "81": [
            7303,
            7317
          ]
        },
        "CryptidToken.setWithdrawlAddress": {
          "90": [
            6622,
            6658
          ]
        },
        "CryptidToken.supportsInterface": {
          "4": [
            8946,
            8989
          ]
        },
        "CryptidToken.teamMint": {
          "54": [
            3796,
            3856
          ],
          "55": [
            3866,
            3966
          ],
          "56": [
            3981,
            4008
          ],
          "57": [
            4074,
            4122
          ],
          "58": [
            4136,
            4163
          ],
          "59": [
            4055,
            4058
          ]
        },
        "CryptidToken.tokenURI": {
          "77": [
            7666,
            7743
          ],
          "78": [
            7753,
            7828
          ]
        },
        "CryptidToken.undoClaim": {
          "48": [
            5301,
            5327
          ]
        },
        "CryptidToken.unpause": {
          "39": [
            5026,
            5036
          ]
        },
        "CryptidToken.verify": {
          "66": [
            8500,
            8511
          ],
          "67": [
            8531,
            8543
          ]
        },
        "CryptidToken.walletOfOwner": {
          "41": [
            8229,
            8273
          ],
          "42": [
            8210,
            8213
          ],
          "43": [
            8293,
            8309
          ]
        },
        "CryptidToken.whitelistMint": {
          "30": [
            3185,
            3251
          ],
          "31": [
            3261,
            3321
          ],
          "32": [
            3331,
            3440
          ],
          "33": [
            3450,
            3522
          ],
          "34": [
            3533,
            3559
          ],
          "35": [
            3569,
            3617
          ],
          "36": [
            3627,
            3654
          ]
        },
        "CryptidToken.withdraw": {
          "37": [
            6834,
            6894
          ],
          "38": [
            6997,
            7034
          ]
        }
      },
      "2": {},
      "3": {
        "ERC721._approve": {
          "92": [
            11242,
            11271
          ],
          "93": [
            11281,
            11332
          ]
        },
        "ERC721._checkOnERC721Received": {
          "131": [
            12820,
            12880
          ],
          "132": [
            12654,
            12712
          ],
          "133": [
            13084,
            13095
          ]
        },
        "ERC721._exists": {
          "6": [
            7240,
            7277
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "94": [
            7551,
            7624
          ],
          "95": [
            7683,
            7779
          ]
        },
        "ERC721._mint": {
          "140": [
            9149,
            9210
          ],
          "141": [
            9220,
            9278
          ],
          "142": [
            9289,
            9334
          ],
          "143": [
            9345,
            9363
          ],
          "144": [
            9373,
            9394
          ],
          "145": [
            9405,
            9443
          ]
        },
        "ERC721._safeMint": {
          "104": [
            8191,
            8217
          ],
          "126": [
            8570,
            8588
          ],
          "127": [
            8598,
            8749
          ]
        },
        "ERC721._safeTransfer": {
          "115": [
            6700,
            6728
          ],
          "116": [
            6738,
            6849
          ]
        },
        "ERC721._setApprovalForAll": {
          "112": [
            11607,
            11662
          ],
          "113": [
            11672,
            11718
          ],
          "114": [
            11728,
            11774
          ]
        },
        "ERC721._transfer": {
          "96": [
            10571,
            10652
          ],
          "97": [
            10662,
            10727
          ],
          "98": [
            10738,
            10777
          ],
          "99": [
            10839,
            10868
          ],
          "100": [
            10879,
            10899
          ],
          "101": [
            10909,
            10927
          ],
          "102": [
            10937,
            10958
          ],
          "103": [
            10969,
            11001
          ]
        },
        "ERC721.approve": {
          "9": [
            3666,
            3723
          ],
          "11": [
            3734,
            3899
          ],
          "12": [
            3910,
            3931
          ]
        },
        "ERC721.balanceOf": {
          "51": [
            2020,
            2094
          ],
          "52": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4094,
            4167
          ],
          "8": [
            4178,
            4209
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4615,
            4657
          ]
        },
        "ERC721.name": {
          "5": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "49": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "40": [
            5255,
            5294
          ],
          "74": [
            5528,
            5631
          ],
          "75": [
            5641,
            5680
          ]
        },
        "ERC721.setApprovalForAll": {
          "68": [
            4377,
            4429
          ]
        },
        "ERC721.supportsInterface": {
          "123": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "65": [
            2731,
            2745
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            4907,
            5010
          ],
          "18": [
            5021,
            5049
          ]
        }
      },
      "4": {},
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "135": [
            3978,
            4022
          ],
          "136": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "154": [
            3621,
            3655
          ],
          "155": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "134": [
            2857,
            2897
          ],
          "137": [
            2944,
            2991
          ],
          "138": [
            3047,
            3092
          ],
          "139": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "150": [
            6669,
            6705
          ],
          "151": [
            6773,
            6814
          ],
          "152": [
            6935,
            6966
          ],
          "153": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "146": [
            5269,
            5313
          ],
          "147": [
            5385,
            5428
          ],
          "148": [
            5559,
            5592
          ],
          "149": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "91": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "44": [
            1892,
            1987
          ],
          "45": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "28": [
            1407,
            1494
          ],
          "29": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/MerkleProof",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Pausable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Strings"
  ],
  "deployedBytecode": "6080604052600436106103815760003560e01c80637cb64759116101d1578063c668286211610102578063de5f9866116100a0578063f2fde38b1161006f578063f2fde38b146109e5578063f4efa3e614610a05578063f51f96dd14610a25578063ffa9cd3b14610a3b57600080fd5b8063de5f986614610946578063de7fcb1d1461095b578063e7bc820814610987578063e985e9c51461099c57600080fd5b8063c884ef83116100dc578063c884ef83146108c1578063ce3cd997146108f1578063d6d67a0914610911578063da3ef23f1461092657600080fd5b8063c668286214610877578063c6ab67a31461088c578063c87b56dd146108a157600080fd5b8063a22cb4651161016f578063bb31b77b11610149578063bb31b77b146107fb578063c040e6b81461081b578063c29de63014610842578063c32145811461086157600080fd5b8063a22cb4651461079b578063b3caad01146107bb578063b88d4fde146107db57600080fd5b80638da5cb5b116101ab5780638da5cb5b1461072357806395d89b4114610746578063976116381461075b5780639a2a9c3d1461077b57600080fd5b80637cb64759146106d957806381c162f2146106f95780638456cb591461070e57600080fd5b80633ccfd60b116102b65780635c975abb1161025457806370a082311161022357806370a082311461066e578063715018a61461068e57806378231978146106a35780637b671780146106b957600080fd5b80635c975abb1461060c5780636352211e146106245780636c0360eb146106445780636cbb89851461065957600080fd5b8063438b630011610290578063438b63001461057f5780634f6ccce7146105ac57806355f804b3146105cc57806357ed9e4e146105ec57600080fd5b80633ccfd60b146105425780633f4ba83a1461054a57806342842e0e1461055f57600080fd5b80631919fed7116103235780632eb4a7ab116102fd5780632eb4a7ab146104e35780632f745c59146104f957806333e6141314610519578063372f657c1461052f57600080fd5b80631919fed71461049057806323b872dd146104b05780632db11544146104d057600080fd5b8063088139a61161035f578063088139a614610415578063095ea7b314610439578063109695231461045b57806318160ddd1461047b57600080fd5b806301ffc9a71461038657806306fdde03146103bb578063081812fc146103dd575b600080fd5b34801561039257600080fd5b506103a66103a1366004612fb6565b610a62565b60405190151581526020015b60405180910390f35b3480156103c757600080fd5b506103d0610a73565b6040516103b29190613032565b3480156103e957600080fd5b506103fd6103f8366004613045565b610b05565b6040516001600160a01b0390911681526020016103b2565b34801561042157600080fd5b5061042b60155481565b6040519081526020016103b2565b34801561044557600080fd5b5061045961045436600461307a565b610b9f565b005b34801561046757600080fd5b50610459610476366004613130565b610cb5565b34801561048757600080fd5b5060085461042b565b34801561049c57600080fd5b506104596104ab366004613045565b610db6565b3480156104bc57600080fd5b506104596104cb366004613179565b610deb565b6104596104de366004613045565b610e1c565b3480156104ef57600080fd5b5061042b600d5481565b34801561050557600080fd5b5061042b61051436600461307a565b611076565b34801561052557600080fd5b5061042b60125481565b61045961053d3660046131b5565b61110c565b610459611394565b34801561055657600080fd5b506104596114ae565b34801561056b57600080fd5b5061045961057a366004613179565b6114e8565b34801561058b57600080fd5b5061059f61059a36600461322a565b611503565b6040516103b29190613245565b3480156105b857600080fd5b5061042b6105c7366004613045565b6115a5565b3480156105d857600080fd5b506104596105e7366004613130565b611638565b3480156105f857600080fd5b5061045961060736600461322a565b6116c8565b34801561061857600080fd5b50600a5460ff166103a6565b34801561063057600080fd5b506103fd61063f366004613045565b611719565b34801561065057600080fd5b506103d0611790565b34801561066557600080fd5b506103fd61181e565b34801561067a57600080fd5b5061042b61068936600461322a565b611831565b34801561069a57600080fd5b506104596118b8565b3480156106af57600080fd5b5061042b60165481565b3480156106c557600080fd5b506104596106d436600461329a565b6118f2565b3480156106e557600080fd5b506104596106f4366004613045565b611a52565b34801561070557600080fd5b50610459611a87565b34801561071a57600080fd5b50610459611b8c565b34801561072f57600080fd5b50600a5461010090046001600160a01b03166103fd565b34801561075257600080fd5b506103d0611bc4565b34801561076757600080fd5b506103a66107763660046131b5565b611bd3565b34801561078757600080fd5b506011546103a69062010000900460ff1681565b3480156107a757600080fd5b506104596107b63660046132b5565b611c64565b3480156107c757600080fd5b506104596107d63660046132f1565b611c6f565b3480156107e757600080fd5b506104596107f6366004613324565b611db1565b34801561080757600080fd5b5061045961081636600461322a565b611de9565b34801561082757600080fd5b506018546108359060ff1681565b6040516103b291906133b6565b34801561084e57600080fd5b506011546103a690610100900460ff1681565b34801561086d57600080fd5b5061042b60145481565b34801561088357600080fd5b506103d0611e3d565b34801561089857600080fd5b506103d0611e4a565b3480156108ad57600080fd5b506103d06108bc366004613045565b611e57565b3480156108cd57600080fd5b506103a66108dc36600461322a565b60136020526000908152604090205460ff1681565b3480156108fd57600080fd5b5061045961090c3660046133de565b611f0c565b34801561091d57600080fd5b5061042b612050565b34801561093257600080fd5b50610459610941366004613130565b61205b565b34801561095257600080fd5b5061042b61209e565b34801561096757600080fd5b506011546109759060ff1681565b60405160ff90911681526020016103b2565b34801561099357600080fd5b506104596120b6565b3480156109a857600080fd5b506103a66109b73660046133ff565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156109f157600080fd5b50610459610a0036600461322a565b6121ad565b348015610a1157600080fd5b50610459610a2036600461322a565b61224b565b348015610a3157600080fd5b5061042b60175481565b348015610a4757600080fd5b506011546103fd90630100000090046001600160a01b031681565b6000610a6d826122b0565b92915050565b606060008054610a829061341b565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae9061341b565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610b835760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610baa82611719565b9050806001600160a01b0316836001600160a01b03161415610c185760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610b7a565b336001600160a01b0382161480610c345750610c3481336109b7565b610ca65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610b7a565b610cb083836122d5565b505050565b600a546001600160a01b03610100909104163314610ce55760405162461bcd60e51b8152600401610b7a90613456565b6000815111610d465760405162461bcd60e51b815260206004820152602760248201527f50726f76656e616e636520686173682063616e6e6f7420626520656d7074792060448201526639ba3934b7339760c91b6064820152608401610b7a565b60115462010000900460ff1615610d9f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76656e616e636520686173682069732066726f7a656e2e0000000000006044820152606401610b7a565b8051610db290600e906020840190612f07565b5050565b600a546001600160a01b03610100909104163314610de65760405162461bcd60e51b8152600401610b7a90613456565b601755565b610df53382612343565b610e115760405162461bcd60e51b8152600401610b7a9061348b565b610cb083838361243a565b6002600b541415610e6f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff1615610e975760405162461bcd60e51b8152600401610b7a906134dc565b600460185460ff166004811115610eb057610eb06133a0565b14610efd5760405162461bcd60e51b815260206004820152601a60248201527f5075626c69632053616c65206e6f7420696e697469617465642e0000000000006044820152606401610b7a565b3481601754610f0c919061351c565b14610f555760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b60165481610f6260085490565b610f6c919061353b565b1115610fc95760405162461bcd60e51b815260206004820152602660248201527f5472616e73616374696f6e206578636565647320746f74616c2073616c6520736044820152653ab838363c9760d11b6064820152608401610b7a565b60115460ff168111156110315760405162461bcd60e51b815260206004820152602a60248201527f45786365656473206d617820616c6c6f776564206d696e74732070657220747260448201526930b739b0b1ba34b7b71760b11b6064820152608401610b7a565b60015b81811161106d5761104d33611048600c5490565b6125e1565b61105b600c80546001019055565b8061106581613553565b915050611034565b50506001600b55565b600061108183611831565b82106110e35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610b7a565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6002600b54141561115f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b7a565b6002600b55600a5460ff16156111875760405162461bcd60e51b8152600401610b7a906134dc565b600260185460ff1660048111156111a0576111a06133a0565b146111ed5760405162461bcd60e51b815260206004820152601d60248201527f57686974656c6973742073616c65206e6f7420696e697469617465642e0000006044820152606401610b7a565b346017541461123a5760405162461bcd60e51b815260206004820152601960248201527824b731b7b93932b1ba1022aa24103b30b63ab29039b2b73a1760391b6044820152606401610b7a565b600d546040516bffffffffffffffffffffffff193360601b1660208201526112b39190603401604051602081830303815290604052805190602001208484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125fb9050565b6112ff5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e2077686974656c6973742e000000000000006044820152606401610b7a565b3360009081526013602052604090205460ff161561135f5760405162461bcd60e51b815260206004820152601f60248201527f57686974656c697374206d696e7420616c726561647920636c61696d65642e006044820152606401610b7a565b336000818152601360205260409020805460ff1916600117905561138690611048600c5490565b61106d600c80546001019055565b600a546001600160a01b036101009091041633146113c45760405162461bcd60e51b8152600401610b7a90613456565b6000471161140d5760405162461bcd60e51b815260206004820152601660248201527521b7b73a3930b1ba103130b630b731b29034b990181760511b6044820152606401610b7a565b601154604051600091630100000090046001600160a01b03169047908381818185875af1925050503d8060008114611461576040519150601f19603f3d011682016040523d82523d6000602084013e611466565b606091505b50509050806114ab5760405162461bcd60e51b81526020600482015260116024820152702bb4ba34323930bbb6103330b4b632b21760791b6044820152606401610b7a565b50565b600a546001600160a01b036101009091041633146114de5760405162461bcd60e51b8152600401610b7a90613456565b6114e6612611565b565b610cb083838360405180602001604052806000815250611db1565b6060600061151083611831565b905060008167ffffffffffffffff81111561152d5761152d6130a4565b604051908082528060200260200182016040528015611556578160200160208202803683370190505b50905060005b8281101561159d5761156e8582611076565b8282815181106115805761158061356e565b60209081029190910101528061159581613553565b91505061155c565b509392505050565b60006115b060085490565b82106116135760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610b7a565b600882815481106116265761162661356e565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146116685760405162461bcd60e51b8152600401610b7a90613456565b601154610100900460ff16156116b55760405162461bcd60e51b81526020600482015260126024820152712130b9b2aaa9249034b990333937bd32b71760711b6044820152606401610b7a565b8051610db290600f906020840190612f07565b600a546001600160a01b036101009091041633146116f85760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b03166000908152601360205260409020805460ff19169055565b6000818152600260205260408120546001600160a01b031680610a6d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610b7a565b600f805461179d9061341b565b80601f01602080910402602001604051908101604052809291908181526020018280546117c99061341b565b80156118165780601f106117eb57610100808354040283529160200191611816565b820191906000526020600020905b8154815290600101906020018083116117f957829003601f168201915b505050505081565b600061182c61063f60085490565b905090565b60006001600160a01b03821661189c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610b7a565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146118e85760405162461bcd60e51b8152600401610b7a90613456565b6114e660006126a4565b600a546001600160a01b036101009091041633146119225760405162461bcd60e51b8152600401610b7a90613456565b600360185460ff16600481111561193b5761193b6133a0565b146119885760405162461bcd60e51b815260206004820152601860248201527f5465616d206d696e74206e6f7420696e697469617465642e00000000000000006044820152606401610b7a565b60145460155461199b9060ff841661353b565b11156119fd5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73616374696f6e206578636565647320746f74616c207465616d207360448201526a30b6329039bab838363c9760a91b6064820152608401610b7a565b8060ff1660156000828254611a12919061353b565b90915550600190505b8160ff168111610db257611a3233611048600c5490565b611a40600c80546001019055565b80611a4a81613553565b915050611a1b565b600a546001600160a01b03610100909104163314611a825760405162461bcd60e51b8152600401610b7a90613456565b600d55565b600a546001600160a01b03610100909104163314611ab75760405162461bcd60e51b8152600401610b7a90613456565b6000600e8054611ac69061341b565b905011611b155760405162461bcd60e51b815260206004820152601b60248201527f50726f76656e616e63652068617368206973206e6f74207365742e00000000006044820152606401610b7a565b60115462010000900460ff1615611b795760405162461bcd60e51b815260206004820152602260248201527f50726f76656e616e6365206861736820697320616c72656164792066726f7a65604482015261371760f11b6064820152608401610b7a565b6011805462ff0000191662010000179055565b600a546001600160a01b03610100909104163314611bbc5760405162461bcd60e51b8152600401610b7a90613456565b6114e66126fe565b606060018054610a829061341b565b600d546040516bffffffffffffffffffffffff193360601b166020820152600091611c4e91603401604051602081830303815290604052805190602001208585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509294939250506125fb9050565b15611c5b57506001610a6d565b50600092915050565b610db2338383612756565b600a546001600160a01b03610100909104163314611c9f5760405162461bcd60e51b8152600401610b7a90613456565b600060185460ff166004811115611cb857611cb86133a0565b11611cfc5760405162461bcd60e51b815260206004820152601460248201527327379030b4b9323937b8399030ba1034b734ba1760611b6044820152606401610b7a565b6016548260ff16611d0c60085490565b611d16919061353b565b1115611d775760405162461bcd60e51b815260206004820152602a60248201527f4d696e7420616d6f756e742077696c6c2065786365656420746f74616c20736160448201526936329039bab838363c9760b11b6064820152608401610b7a565b60015b8260ff168111610cb057611d9182611048600c5490565b611d9f600c80546001019055565b80611da981613553565b915050611d7a565b611dbb3383612343565b611dd75760405162461bcd60e51b8152600401610b7a9061348b565b611de384848484612825565b50505050565b600a546001600160a01b03610100909104163314611e195760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b03166000908152601360205260409020805460ff19166001179055565b6010805461179d9061341b565b600e805461179d9061341b565b6000818152600260205260409020546060906001600160a01b0316611ed75760405162461bcd60e51b815260206004820152603060248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526f3732bc34b9ba32b73a103a37b5b2b71760811b6064820152608401610b7a565b600f611ee283612858565b6010604051602001611ef69392919061361e565b6040516020818303038152906040529050919050565b600a546001600160a01b03610100909104163314611f3c5760405162461bcd60e51b8152600401610b7a90613456565b60115462010000900460ff161515600114611fbf5760405162461bcd60e51b815260206004820152603860248201527f50726f76656e616e63652068617368206d7573742062652066726f7a656e206260448201527f65666f7265206d696e74696e672063616e2073746172742e00000000000000006064820152608401610b7a565b600d546120295760405162461bcd60e51b815260206004820152603260248201527f4d65726b6c6520726f6f74206d7573742062652073657420626565666f72652060448201527136b4b73a34b7339031b0b71039ba30b93a1760711b6064820152608401610b7a565b6018805482919060ff19166001836004811115612048576120486133a0565b021790555050565b600061182c60085490565b600a546001600160a01b0361010090910416331461208b5760405162461bcd60e51b8152600401610b7a90613456565b8051610db2906010906020840190612f07565b60006120a960085490565b60165461182c9190613651565b600a546001600160a01b036101009091041633146120e65760405162461bcd60e51b8152600401610b7a90613456565b6000600f80546120f59061341b565b9050116121445760405162461bcd60e51b815260206004820152601860248201527f426173655552492063616e6e6f7420626520656d7074792e00000000000000006044820152606401610b7a565b601154610100900460ff161561219c5760405162461bcd60e51b815260206004820152601a60248201527f4261736555524920697320616c72656164792066726f7a656e2e0000000000006044820152606401610b7a565b6011805461ff001916610100179055565b600a546001600160a01b036101009091041633146121dd5760405162461bcd60e51b8152600401610b7a90613456565b6001600160a01b0381166122425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b7a565b6114ab816126a4565b600a546001600160a01b0361010090910416331461227b5760405162461bcd60e51b8152600401610b7a90613456565b601180546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b80546001019055565b60006001600160e01b0319821663780e9d6360e01b1480610a6d5750610a6d82612956565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061230a82611719565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123bc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610b7a565b60006123c783611719565b9050806001600160a01b0316846001600160a01b031614806124025750836001600160a01b03166123f784610b05565b6001600160a01b0316145b8061243257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661244d82611719565b6001600160a01b0316146124b15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610b7a565b6001600160a01b0382166125135760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610b7a565b61251e8383836129a6565b6125296000826122d5565b6001600160a01b0383166000908152600360205260408120805460019290612552908490613651565b90915550506001600160a01b038216600090815260036020526040812080546001929061258090849061353b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610db28282604051806020016040528060008152506129d4565b6000826126088584612a07565b14949350505050565b600a5460ff1661265a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b7a565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156127215760405162461bcd60e51b8152600401610b7a906134dc565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126873390565b816001600160a01b0316836001600160a01b031614156127b85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610b7a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61283084848461243a565b61283c84848484612a73565b611de35760405162461bcd60e51b8152600401610b7a90613668565b60608161287c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156128a6578061289081613553565b915061289f9050600a836136d0565b9150612880565b60008167ffffffffffffffff8111156128c1576128c16130a4565b6040519080825280601f01601f1916602001820160405280156128eb576020820181803683370190505b5090505b841561243257612900600183613651565b915061290d600a866136e4565b61291890603061353b565b60f81b81838151811061292d5761292d61356e565b60200101906001600160f81b031916908160001a90535061294f600a866136d0565b94506128ef565b60006001600160e01b031982166380ac58cd60e01b148061298757506001600160e01b03198216635b5e139f60e01b145b80610a6d57506301ffc9a760e01b6001600160e01b0319831614610a6d565b600a5460ff16156129c95760405162461bcd60e51b8152600401610b7a906134dc565b610cb0838383612b71565b6129de8383612c29565b6129eb6000848484612a73565b610cb05760405162461bcd60e51b8152600401610b7a90613668565b600081815b845181101561159d576000858281518110612a2957612a2961356e565b60200260200101519050808311612a4f5760008381526020829052604090209250612a60565b600081815260208490526040902092505b5080612a6b81613553565b915050612a0c565b60006001600160a01b0384163b15612b6657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612ab79033908990889088906004016136f8565b6020604051808303816000875af1925050508015612af2575060408051601f3d908101601f19168201909252612aef91810190613735565b60015b612b4c573d808015612b20576040519150601f19603f3d011682016040523d82523d6000602084013e612b25565b606091505b508051612b445760405162461bcd60e51b8152600401610b7a90613668565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612432565b506001949350505050565b6001600160a01b038316612bcc57612bc781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612bef565b816001600160a01b0316836001600160a01b031614612bef57612bef8382612d77565b6001600160a01b038216612c0657610cb081612e14565b826001600160a01b0316826001600160a01b031614610cb057610cb08282612ec3565b6001600160a01b038216612c7f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610b7a565b6000818152600260205260409020546001600160a01b031615612ce45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610b7a565b612cf0600083836129a6565b6001600160a01b0382166000908152600360205260408120805460019290612d1990849061353b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001612d8484611831565b612d8e9190613651565b600083815260076020526040902054909150808214612de1576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612e2690600190613651565b60008381526009602052604081205460088054939450909284908110612e4e57612e4e61356e565b906000526020600020015490508060088381548110612e6f57612e6f61356e565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612ea757612ea7613752565b6001900381819060005260206000200160009055905550505050565b6000612ece83611831565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612f139061341b565b90600052602060002090601f016020900481019282612f355760008555612f7b565b82601f10612f4e57805160ff1916838001178555612f7b565b82800160010185558215612f7b579182015b82811115612f7b578251825591602001919060010190612f60565b50612f87929150612f8b565b5090565b5b80821115612f875760008155600101612f8c565b6001600160e01b0319811681146114ab57600080fd5b600060208284031215612fc857600080fd5b8135612fd381612fa0565b9392505050565b60005b83811015612ff5578181015183820152602001612fdd565b83811115611de35750506000910152565b6000815180845261301e816020860160208601612fda565b601f01601f19169290920160200192915050565b602081526000612fd36020830184613006565b60006020828403121561305757600080fd5b5035919050565b80356001600160a01b038116811461307557600080fd5b919050565b6000806040838503121561308d57600080fd5b6130968361305e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156130d5576130d56130a4565b604051601f8501601f19908116603f011681019082821181831017156130fd576130fd6130a4565b8160405280935085815286868601111561311657600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561314257600080fd5b813567ffffffffffffffff81111561315957600080fd5b8201601f8101841361316a57600080fd5b612432848235602084016130ba565b60008060006060848603121561318e57600080fd5b6131978461305e565b92506131a56020850161305e565b9150604084013590509250925092565b600080602083850312156131c857600080fd5b823567ffffffffffffffff808211156131e057600080fd5b818501915085601f8301126131f457600080fd5b81358181111561320357600080fd5b8660208260051b850101111561321857600080fd5b60209290920196919550909350505050565b60006020828403121561323c57600080fd5b612fd38261305e565b6020808252825182820181905260009190848201906040850190845b8181101561327d57835183529284019291840191600101613261565b50909695505050505050565b803560ff8116811461307557600080fd5b6000602082840312156132ac57600080fd5b612fd382613289565b600080604083850312156132c857600080fd5b6132d18361305e565b9150602083013580151581146132e657600080fd5b809150509250929050565b6000806040838503121561330457600080fd5b61330d83613289565b915061331b6020840161305e565b90509250929050565b6000806000806080858703121561333a57600080fd5b6133438561305e565b93506133516020860161305e565b925060408501359150606085013567ffffffffffffffff81111561337457600080fd5b8501601f8101871361338557600080fd5b613394878235602084016130ba565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b60208101600583106133d857634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156133f057600080fd5b813560058110612fd357600080fd5b6000806040838503121561341257600080fd5b61330d8361305e565b600181811c9082168061342f57607f821691505b6020821081141561345057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561353657613536613506565b500290565b6000821982111561354e5761354e613506565b500190565b600060001982141561356757613567613506565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061359e57607f831692505b60208084108214156135c057634e487b7160e01b600052602260045260246000fd5b8180156135d457600181146135e557613612565b60ff19861689528489019650613612565b60008881526020902060005b8681101561360a5781548b8201529085019083016135f1565b505084890196505b50505050505092915050565b600061362a8286613584565b845161363a818360208901612fda565b61364681830186613584565b979650505050505050565b60008282101561366357613663613506565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826136df576136df6136ba565b500490565b6000826136f3576136f36136ba565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061372b90830184613006565b9695505050505050565b60006020828403121561374757600080fd5b8151612fd381612fa0565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220fa58bd3a4e036e8fedab7bf3e3d3f3420077aef73061e035fd9ea079e207252864736f6c634300080b0033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;565:14:20;;558:22;540:41;;528:2;513:18;8827:169:16;;;;;;;;2488:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3999:217::-;;;;;;;;;;-1:-1:-1;3999:217:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;3999:217:3;1528:203:20;1813:28:16;;;;;;;;;;;;;;;;;;;1882:25:20;;;1870:2;1855:18;1813:28:16;1736:177:20;3537:401:3;;;;;;;;;;-1:-1:-1;3537:401:3;;;;;:::i;:::-;;:::i;:::-;;5979:291:16;;;;;;;;;;-1:-1:-1;5979:291:16;;;;;:::i;:::-;;:::i;1615:111:6:-;;;;;;;;;;-1:-1:-1;1702:10:6;:17;1615:111;;6671:100:16;;;;;;;;;;-1:-1:-1;6671:100:16;;;;;:::i;:::-;;:::i;4726:330:3:-;;;;;;;;;;-1:-1:-1;4726:330:3;;;;;:::i;:::-;;:::i;4215:668:16:-;;;;;;:::i;:::-;;:::i;1074:25::-;;;;;;;;;;;;;;;;1291:253:6;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;1602:30:16:-;;;;;;;;;;;;;;;;3022:639;;;;;;:::i;:::-;;:::i;6777:264::-;;;:::i;4978:65::-;;;;;;;;;;;;;:::i;5122:179:3:-;;;;;;;;;;-1:-1:-1;5122:179:3;;;;;:::i;:::-;;:::i;7963:353:16:-;;;;;;;;;;-1:-1:-1;7963:353:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;5450:160:16:-;;;;;;;;;;-1:-1:-1;5450:160:16;;;;;:::i;:::-;;:::i;5235:99::-;;;;;;;;;;-1:-1:-1;5235:99:16;;;;;:::i;:::-;;:::i;1098:84:1:-;;;;;;;;;;-1:-1:-1;1168:7:1;;;;1098:84;;2191:235:3;;;;;;;;;;-1:-1:-1;2191:235:3;;;;;:::i;:::-;;:::i;1139:26:16:-;;;;;;;;;;;;;:::i;7361:104::-;;;;;;;;;;;;;:::i;1929:205:3:-;;;;;;;;;;-1:-1:-1;1929:205:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1877:30:16:-;;;;;;;;;;;;;;;;3694:486;;;;;;;;;;-1:-1:-1;3694:486:16;;;;;:::i;:::-;;:::i;5340:104::-;;;;;;;;;;-1:-1:-1;5340:104:16;;;;;:::i;:::-;;:::i;6276:255::-;;;;;;;;;;;;;:::i;4911:61::-;;;;;;;;;;;;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:3;;;;;;;;;;;;;:::i;8322:228:16:-;;;;;;;;;;-1:-1:-1;8322:228:16;;;;;:::i;:::-;;:::i;1290:40::-;;;;;;;;;;-1:-1:-1;1290:40:16;;;;;;;;;;;4283:153:3;;;;;;;;;;-1:-1:-1;4283:153:3;;;;;:::i;:::-;;:::i;2530:454:16:-;;;;;;;;;;-1:-1:-1;2530:454:16;;;;;:::i;:::-;;:::i;5367:320:3:-;;;;;;;;;;-1:-1:-1;5367:320:3;;;;;:::i;:::-;;:::i;5094:97:16:-;;;;;;;;;;-1:-1:-1;5094:97:16;;;;;:::i;:::-;;:::i;1968:18::-;;;;;;;;;;-1:-1:-1;1968:18:16;;;;;;;;;;;;;;;:::i;1250:34::-;;;;;;;;;;-1:-1:-1;1250:34:16;;;;;;;;;;;1752:29;;;;;;;;;;;;;;;;1171:37;;;;;;;;;;;;;:::i;1105:28::-;;;;;;;;;;;;;:::i;7568:267::-;;;;;;;;;;-1:-1:-1;7568:267:16;;;;;:::i;:::-;;:::i;1661:39::-;;;;;;;;;;-1:-1:-1;1661:39:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;7047:277;;;;;;;;;;-1:-1:-1;7047:277:16;;;;;:::i;:::-;;:::i;7471:91::-;;;;;;;;;;;;;:::i;5845:128::-;;;;;;;;;;-1:-1:-1;5845:128:16;;;;;:::i;:::-;;:::i;7841:112::-;;;;;;;;;;;;;:::i;1214:25::-;;;;;;;;;;-1:-1:-1;1214:25:16;;;;;;;;;;;8275:4:20;8263:17;;;8245:36;;8233:2;8218:18;1214:25:16;8103:184:20;5621:218:16;;;;;;;;;;;;;:::i;4502:162:3:-;;;;;;;;;;-1:-1:-1;4502:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4502:162;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6537:128:16:-;;;;;;;;;;-1:-1:-1;6537:128:16;;;;;:::i;:::-;;:::i;1922:37::-;;;;;;;;;;;;;;;;1337:76;;;;;;;;;;-1:-1:-1;1337:76:16;;;;;;;-1:-1:-1;;;;;1337:76:16;;;8827:169;8930:4;8953:36;8977:11;8953:23;:36::i;:::-;8946:43;8827:169;-1:-1:-1;;8827:169:16:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;3999:217::-;4075:7;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;4094:73;;;;-1:-1:-1;;;4094:73:3;;9144:2:20;4094:73:3;;;9126:21:20;9183:2;9163:18;;;9156:30;9222:34;9202:18;;;9195:62;-1:-1:-1;;;9273:18:20;;;9266:42;9325:19;;4094:73:3;;;;;;;;;-1:-1:-1;4185:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4185:24:3;;3999:217::o;3537:401::-;3617:13;3633:23;3648:7;3633:14;:23::i;:::-;3617:39;;3680:5;-1:-1:-1;;;;;3674:11:3;:2;-1:-1:-1;;;;;3674:11:3;;;3666:57;;;;-1:-1:-1;;;3666:57:3;;9557:2:20;3666:57:3;;;9539:21:20;9596:2;9576:18;;;9569:30;9635:34;9615:18;;;9608:62;-1:-1:-1;;;9686:18:20;;;9679:31;9727:19;;3666:57:3;9355:397:20;3666:57:3;719:10:10;-1:-1:-1;;;;;3755:21:3;;;;:62;;-1:-1:-1;3780:37:3;3797:5;719:10:10;4502:162:3;:::i;3780:37::-;3734:165;;;;-1:-1:-1;;;3734:165:3;;9959:2:20;3734:165:3;;;9941:21:20;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:26;10088:18;;;10081:54;10152:19;;3734:165:3;9757:420:20;3734:165:3;3910:21;3919:2;3923:7;3910:8;:21::i;:::-;3607:331;3537:401;;:::o;5979:291:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6106:1:16::1;6080:15;6074:29;:33;6066:85;;;::::0;-1:-1:-1;;;6066:85:16;;10745:2:20;6066:85:16::1;::::0;::::1;10727:21:20::0;10784:2;10764:18;;;10757:30;10823:34;10803:18;;;10796:62;-1:-1:-1;;;10874:18:20;;;10867:37;10921:19;;6066:85:16::1;10543:403:20::0;6066:85:16::1;6170:20;::::0;;;::::1;;;6169:21;6161:60;;;::::0;-1:-1:-1;;;6161:60:16;;11153:2:20;6161:60:16::1;::::0;::::1;11135:21:20::0;11192:2;11172:18;;;11165:30;11231:28;11211:18;;;11204:56;11277:18;;6161:60:16::1;10951:350:20::0;6161:60:16::1;6231:32:::0;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;:::-;;5979:291:::0;:::o;6671:100::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6742:9:16::1;:22:::0;6671:100::o;4726:330:3:-;4915:41;719:10:10;4948:7:3;4915:18;:41::i;:::-;4907:103;;;;-1:-1:-1;;;4907:103:3;;;;;;;:::i;:::-;5021:28;5031:4;5037:2;5041:7;5021:9;:28::i;4215:668:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;11926:2:20;2317:63:2;;;11908:21:20;11965:2;11945:18;;;11938:30;12004:33;11984:18;;;11977:61;12055:18;;2317:63:2;11724:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;4381:16:16::2;4372:5;::::0;::::2;;:25;::::0;::::2;;;;;;:::i;:::-;;4364:64;;;::::0;-1:-1:-1;;;4364:64:16;;12631:2:20;4364:64:16::2;::::0;::::2;12613:21:20::0;12670:2;12650:18;;;12643:30;12709:28;12689:18;;;12682:56;12755:18;;4364:64:16::2;12429:350:20::0;4364:64:16::2;4472:9;4458:10;4446:9;;:22;;;;:::i;:::-;:35;4438:73;;;::::0;-1:-1:-1;;;4438:73:16;;13291:2:20;4438:73:16::2;::::0;::::2;13273:21:20::0;13330:2;13310:18;;;13303:30;-1:-1:-1;;;13349:18:20;;;13342:55;13414:18;;4438:73:16::2;13089:349:20::0;4438:73:16::2;4560:15;;4546:10;4529:13;1702:10:6::0;:17;;1615:111;4529:13:16::2;:27;;;;:::i;:::-;:46;;4521:97;;;::::0;-1:-1:-1;;;4521:97:16;;13778:2:20;4521:97:16::2;::::0;::::2;13760:21:20::0;13817:2;13797:18;;;13790:30;13856:34;13836:18;;;13829:62;-1:-1:-1;;;13907:18:20;;;13900:36;13953:19;;4521:97:16::2;13576:402:20::0;4521:97:16::2;4650:12;::::0;::::2;;4636:26:::0;::::2;;4628:81;;;::::0;-1:-1:-1;;;4628:81:16;;14185:2:20;4628:81:16::2;::::0;::::2;14167:21:20::0;14224:2;14204:18;;;14197:30;14263:34;14243:18;;;14236:62;-1:-1:-1;;;14314:18:20;;;14307:40;14364:19;;4628:81:16::2;13983:406:20::0;4628:81:16::2;4738:1;4721:156;4746:10;4741:1;:15;4721:156;;4777:48;4787:10;4799:25;:15;918:14:11::0;;827:112;4799:25:16::2;4777:9;:48::i;:::-;4839:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4839:27:16::2;4758:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4721:156;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;4215:668:16:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;14736:2:20;1407:87:6;;;14718:21:20;14775:2;14755:18;;;14748:30;14814:34;14794:18;;;14787:62;-1:-1:-1;;;14865:18:20;;;14858:41;14916:19;;1407:87:6;14534:407:20;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;3022:639:16:-;1744:1:2;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:2;;11926:2:20;2317:63:2;;;11908:21:20;11965:2;11945:18;;;11938:30;12004:33;11984:18;;;11977:61;12055:18;;2317:63:2;11724:355:20;2317:63:2;1744:1;2455:7;:18;1168:7:1;;;;1411:9:::1;1403:38;;;;-1:-1:-1::0;;;1403:38:1::1;;;;;;;:::i;:::-;3202:15:16::2;3193:5;::::0;::::2;;:24;::::0;::::2;;;;;;:::i;:::-;;3185:66;;;::::0;-1:-1:-1;;;3185:66:16;;15148:2:20;3185:66:16::2;::::0;::::2;15130:21:20::0;15187:2;15167:18;;;15160:30;15226:31;15206:18;;;15199:59;15275:18;;3185:66:16::2;14946:353:20::0;3185:66:16::2;3282:9;3269;;:22;3261:60;;;::::0;-1:-1:-1;;;3261:60:16;;13291:2:20;3261:60:16::2;::::0;::::2;13273:21:20::0;13330:2;13310:18;;;13303:30;-1:-1:-1;;;13349:18:20;;;13342:55;13414:18;;3261:60:16::2;13089:349:20::0;3261:60:16::2;3358:10;::::0;3380:28:::2;::::0;-1:-1:-1;;3397:10:16::2;15453:2:20::0;15449:15;15445:53;3380:28:16::2;::::0;::::2;15433:66:20::0;3339:71:16::2;::::0;3358:10;15515:12:20;;3380:28:16::2;;;;;;;;;;;;3370:39;;;;;;3339:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;3339:18:16;;:71;;-1:-1:-1;;3339:18:16::2;:71:::0;-1:-1:-1;3339:71:16:i:2;:::-;3331:109;;;::::0;-1:-1:-1;;;3331:109:16;;15740:2:20;3331:109:16::2;::::0;::::2;15722:21:20::0;15779:2;15759:18;;;15752:30;15818:27;15798:18;;;15791:55;15863:18;;3331:109:16::2;15538:349:20::0;3331:109:16::2;3466:10;3458:19;::::0;;;:7:::2;:19;::::0;;;;;::::2;;:28;3450:72;;;::::0;-1:-1:-1;;;3450:72:16;;16094:2:20;3450:72:16::2;::::0;::::2;16076:21:20::0;16133:2;16113:18;;;16106:30;16172:33;16152:18;;;16145:61;16223:18;;3450:72:16::2;15892:355:20::0;3450:72:16::2;3541:10;3533:19;::::0;;;:7:::2;:19;::::0;;;;:26;;-1:-1:-1;;3533:26:16::2;3555:4;3533:26;::::0;;3569:48:::2;::::0;3591:25:::2;:15;918:14:11::0;;827:112;3569:48:16::2;3627:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;6777:264:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6866:1:16::1;6842:21;:25;6834:60;;;::::0;-1:-1:-1;;;6834:60:16;;16454:2:20;6834:60:16::1;::::0;::::1;16436:21:20::0;16493:2;16473:18;;;16466:30;-1:-1:-1;;;16512:18:20;;;16505:52;16574:18;;6834:60:16::1;16252:346:20::0;6834:60:16::1;6931:16;::::0;6923:64:::1;::::0;6905:12:::1;::::0;6931:16;;::::1;-1:-1:-1::0;;;;;6931:16:16::1;::::0;6961:21:::1;::::0;6905:12;6923:64;6905:12;6923:64;6961:21;6931:16;6923:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:83;;;7005:7;6997:37;;;::::0;-1:-1:-1;;;6997:37:16;;17015:2:20;6997:37:16::1;::::0;::::1;16997:21:20::0;17054:2;17034:18;;;17027:30;-1:-1:-1;;;17073:18:20;;;17066:47;17130:18;;6997:37:16::1;16813:341:20::0;6997:37:16::1;6824:217;6777:264::o:0;4978:65::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5026:10:16::1;:8;:10::i;:::-;4978:65::o:0;5122:179:3:-;5255:39;5272:4;5278:2;5282:7;5255:39;;;;;;;;;;;;:16;:39::i;7963:353:16:-;8024:16;8052:23;8078:16;8088:5;8078:9;:16::i;:::-;8052:42;;8104:26;8147:15;8133:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8133:30:16;;8104:59;;8178:9;8173:111;8193:15;8189:1;:19;8173:111;;;8244:29;8264:5;8271:1;8244:19;:29::i;:::-;8229:9;8239:1;8229:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;8210:3;;;;:::i;:::-;;;;8173:111;;;-1:-1:-1;8300:9:16;7963:353;-1:-1:-1;;;7963:353:16:o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;17493:2:20;1892:95:6;;;17475:21:20;17532:2;17512:18;;;17505:30;17571:34;17551:18;;;17544:62;-1:-1:-1;;;17622:18:20;;;17615:42;17674:19;;1892:95:6;17291:408:20;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;5450:160:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5535:14:16::1;::::0;::::1;::::0;::::1;;;5534:15;5526:46;;;::::0;-1:-1:-1;;;5526:46:16;;17906:2:20;5526:46:16::1;::::0;::::1;17888:21:20::0;17945:2;17925:18;;;17918:30;-1:-1:-1;;;17964:18:20;;;17957:48;18022:18;;5526:46:16::1;17704:342:20::0;5526:46:16::1;5582:21:::0;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;5235:99::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5301:18:16::1;5322:5;5301:18:::0;;;:7:::1;:18;::::0;;;;:26;;-1:-1:-1;;5301:26:16::1;::::0;;5235:99::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:3;;18253:2:20;2324:73:3;;;18235:21:20;18292:2;18272:18;;;18265:30;18331:34;18311:18;;;18304:62;-1:-1:-1;;;18382:18:20;;;18375:39;18431:19;;2324:73:3;18051:405:20;1139:26:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7361:104::-;7411:7;7436:22;7444:13;1702:10:6;:17;;1615:111;7436:22:16;7429:29;;7361:104;:::o;1929:205:3:-;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;18663:2:20;2020:74:3;;;18645:21:20;18702:2;18682:18;;;18675:30;18741:34;18721:18;;;18714:62;-1:-1:-1;;;18792:18:20;;;18785:40;18842:19;;2020:74:3;18461:406:20;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;3694:486:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3813:14:16::1;3804:5;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3796:60;;;::::0;-1:-1:-1;;;3796:60:16;;19074:2:20;3796:60:16::1;::::0;::::1;19056:21:20::0;19113:2;19093:18;;;19086:30;19152:26;19132:18;;;19125:54;19196:18;;3796:60:16::1;18872:348:20::0;3796:60:16::1;3904:14;::::0;3887:13:::1;::::0;3874:26:::1;::::0;::::1;::::0;::::1;;:::i;:::-;:44;;3866:100;;;::::0;-1:-1:-1;;;3866:100:16;;19427:2:20;3866:100:16::1;::::0;::::1;19409:21:20::0;19466:2;19446:18;;;19439:30;19505:34;19485:18;;;19478:62;-1:-1:-1;;;19556:18:20;;;19549:41;19607:19;;3866:100:16::1;19225:407:20::0;3866:100:16::1;3998:10;3981:27;;:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4035:1:16::1;::::0;-1:-1:-1;4018:156:16::1;4043:10;4038:15;;:1;:15;4018:156;;4074:48;4084:10;4096:25;:15;918:14:11::0;;827:112;4074:48:16::1;4136:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;4136:27:16::1;4055:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4018:156;;5340:104:::0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5413:10:16::1;:24:::0;5340:104::o;6276:255::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6376:1:16::1;6351:14;6345:28;;;;;:::i;:::-;;;:32;6337:72;;;::::0;-1:-1:-1;;;6337:72:16;;19839:2:20;6337:72:16::1;::::0;::::1;19821:21:20::0;19878:2;19858:18;;;19851:30;19917:29;19897:18;;;19890:57;19964:18;;6337:72:16::1;19637:351:20::0;6337:72:16::1;6428:20;::::0;;;::::1;;;6427:21;6419:68;;;::::0;-1:-1:-1;;;6419:68:16;;20195:2:20;6419:68:16::1;::::0;::::1;20177:21:20::0;20234:2;20214:18;;;20207:30;20273:34;20253:18;;;20246:62;-1:-1:-1;;;20324:18:20;;;20317:32;20366:19;;6419:68:16::1;19993:398:20::0;6419:68:16::1;6497:20;:27:::0;;-1:-1:-1;;6497:27:16::1;::::0;::::1;::::0;;6276:255::o;4911:61::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4957:8:16::1;:6;:8::i;2650:102:3:-:0;2706:13;2738:7;2731:14;;;;;:::i;8322:228:16:-;8432:10;;8454:28;;-1:-1:-1;;8471:10:16;15453:2:20;15449:15;15445:53;8454:28:16;;;15433:66:20;8393:4:16;;8413:71;;15515:12:20;;8454:28:16;;;;;;;;;;;;8444:39;;;;;;8413:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8413:18:16;;:71;;-1:-1:-1;;8413:18:16;:71;-1:-1:-1;8413:71:16:i;:::-;8409:113;;;-1:-1:-1;8507:4:16;8500:11;;8409:113;-1:-1:-1;8538:5:16;8322:228;;;;:::o;4283:153:3:-;4377:52;719:10:10;4410:8:3;4420;4377:18;:52::i;2530:454:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2674:10:16::1;2666:5;::::0;::::1;;:18;::::0;::::1;;;;;;:::i;:::-;;2658:51;;;::::0;-1:-1:-1;;;2658:51:16;;20598:2:20;2658:51:16::1;::::0;::::1;20580:21:20::0;20637:2;20617:18;;;20610:30;-1:-1:-1;;;20656:18:20;;;20649:50;20716:18;;2658:51:16::1;20396:344:20::0;2658:51:16::1;2758:15;;2744:10;2727:27;;:13;1702:10:6::0;:17;;1615:111;2727:13:16::1;:27;;;;:::i;:::-;:46;;2719:101;;;::::0;-1:-1:-1;;;2719:101:16;;20947:2:20;2719:101:16::1;::::0;::::1;20929:21:20::0;20986:2;20966:18;;;20959:30;21025:34;21005:18;;;20998:62;-1:-1:-1;;;21076:18:20;;;21069:40;21126:19;;2719:101:16::1;20745:406:20::0;2719:101:16::1;2847:1;2830:148;2855:10;2850:15;;:1;:15;2830:148;;2886:40;2896:2;2900:25;:15;918:14:11::0;;827:112;2886:40:16::1;2940:27;:15;1032:19:11::0;;1050:1;1032:19;;;945:123;2940:27:16::1;2867:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2830:148;;5367:320:3::0;5536:41;719:10:10;5569:7:3;5536:18;:41::i;:::-;5528:103;;;;-1:-1:-1;;;5528:103:3;;;;;;;:::i;:::-;5641:39;5655:4;5661:2;5665:7;5674:5;5641:13;:39::i;:::-;5367:320;;;;:::o;5094:97:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5159:18:16::1;;::::0;;;:7:::1;:18;::::0;;;;:25;;-1:-1:-1;;5159:25:16::1;5180:4;5159:25;::::0;;5094:97::o;1171:37::-;;;;;;;:::i;1105:28::-;;;;;;;:::i;7568:267::-;7224:4:3;7247:16;;;:7;:16;;;;;;7641:13:16;;-1:-1:-1;;;;;7247:16:3;7666:77:16;;;;-1:-1:-1;;;7666:77:16;;21358:2:20;7666:77:16;;;21340:21:20;21397:2;21377:18;;;21370:30;21436:34;21416:18;;;21409:62;-1:-1:-1;;;21487:18:20;;;21480:46;21543:19;;7666:77:16;21156:412:20;7666:77:16;7784:7;7793:18;:7;:16;:18::i;:::-;7813:13;7767:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7753:75;;7568:267;;;:::o;7047:277::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7116:20:16::1;::::0;;;::::1;;;:28;;7140:4;7116:28;7108:97;;;::::0;-1:-1:-1;;;7108:97:16;;23340:2:20;7108:97:16::1;::::0;::::1;23322:21:20::0;23379:2;23359:18;;;23352:30;23418:34;23398:18;;;23391:62;23489:26;23469:18;;;23462:54;23533:19;;7108:97:16::1;23138:420:20::0;7108:97:16::1;7223:10;::::0;7215:78:::1;;;::::0;-1:-1:-1;;;7215:78:16;;23765:2:20;7215:78:16::1;::::0;::::1;23747:21:20::0;23804:2;23784:18;;;23777:30;23843:34;23823:18;;;23816:62;-1:-1:-1;;;23894:18:20;;;23887:48;23952:19;;7215:78:16::1;23563:414:20::0;7215:78:16::1;7303:5;:14:::0;;7311:6;;7303:5;-1:-1:-1;;7303:14:16::1;::::0;7311:6;7303:14:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7047:277:::0;:::o;7471:91::-;7516:7;7541:13;1702:10:6;:17;;1615:111;5845:128:16;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5933:33:16;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;7841:112::-:0;7889:7;7933:13;1702:10:6;:17;;1615:111;7933:13:16;7915:15;;:31;;;;:::i;5621:218::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5707:1:16::1;5689:7;5683:21;;;;;:::i;:::-;;;:25;5675:62;;;::::0;-1:-1:-1;;;5675:62:16;;24314:2:20;5675:62:16::1;::::0;::::1;24296:21:20::0;24353:2;24333:18;;;24326:30;24392:26;24372:18;;;24365:54;24436:18;;5675:62:16::1;24112:348:20::0;5675:62:16::1;5756:14;::::0;::::1;::::0;::::1;;;5755:15;5747:54;;;::::0;-1:-1:-1;;;5747:54:16;;24667:2:20;5747:54:16::1;::::0;::::1;24649:21:20::0;24706:2;24686:18;;;24679:30;24745:28;24725:18;;;24718:56;24791:18;;5747:54:16::1;24465:350:20::0;5747:54:16::1;5811:14;:21:::0;;-1:-1:-1;;5811:21:16::1;;;::::0;;5621:218::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;25022:2:20;1998:73:0::1;::::0;::::1;25004:21:20::0;25061:2;25041:18;;;25034:30;25100:34;25080:18;;;25073:62;-1:-1:-1;;;25151:18:20;;;25144:36;25197:19;;1998:73:0::1;24820:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;6537:128:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:10;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6622:16:16::1;:36:::0;;-1:-1:-1;;;;;6622:36:16;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;6622:36:16;;::::1;::::0;;;::::1;::::0;;6537:128::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;11168:171:3:-;11242:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11242:29:3;-1:-1:-1;;;;;11242:29:3;;;;;;;;:24;;11295:23;11242:24;11295:14;:23::i;:::-;-1:-1:-1;;;;;11286:46:3;;;;;;;;;;;11168:171;;:::o;7442:344::-;7535:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;7551:73;;;;-1:-1:-1;;;7551:73:3;;25429:2:20;7551:73:3;;;25411:21:20;25468:2;25448:18;;;25441:30;25507:34;25487:18;;;25480:62;-1:-1:-1;;;25558:18:20;;;25551:42;25610:19;;7551:73:3;25227:408:20;7551:73:3;7634:13;7650:23;7665:7;7650:14;:23::i;:::-;7634:39;;7702:5;-1:-1:-1;;;;;7691:16:3;:7;-1:-1:-1;;;;;7691:16:3;;:51;;;;7735:7;-1:-1:-1;;;;;7711:31:3;:20;7723:7;7711:11;:20::i;:::-;-1:-1:-1;;;;;7711:31:3;;7691:51;:87;;;-1:-1:-1;;;;;;4622:25:3;;;4599:4;4622:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7746:32;7683:96;7442:344;-1:-1:-1;;;;7442:344:3:o;10452:605::-;10606:4;-1:-1:-1;;;;;10579:31:3;:23;10594:7;10579:14;:23::i;:::-;-1:-1:-1;;;;;10579:31:3;;10571:81;;;;-1:-1:-1;;;10571:81:3;;25842:2:20;10571:81:3;;;25824:21:20;25881:2;25861:18;;;25854:30;25920:34;25900:18;;;25893:62;-1:-1:-1;;;25971:18:20;;;25964:35;26016:19;;10571:81:3;25640:401:20;10571:81:3;-1:-1:-1;;;;;10670:16:3;;10662:65;;;;-1:-1:-1;;;10662:65:3;;26248:2:20;10662:65:3;;;26230:21:20;26287:2;26267:18;;;26260:30;26326:34;26306:18;;;26299:62;-1:-1:-1;;;26377:18:20;;;26370:34;26421:19;;10662:65:3;26046:400:20;10662:65:3;10738:39;10759:4;10765:2;10769:7;10738:20;:39::i;:::-;10839:29;10856:1;10860:7;10839:8;:29::i;:::-;-1:-1:-1;;;;;10879:15:3;;;;;;:9;:15;;;;;:20;;10898:1;;10879:15;:20;;10898:1;;10879:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10909:13:3;;;;;;:9;:13;;;;;:18;;10926:1;;10909:13;:18;;10926:1;;10909:18;:::i;:::-;;;;-1:-1:-1;;10937:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10937:21:3;-1:-1:-1;;;;;10937:21:3;;;;;;;;;10974:27;;10937:16;;10974:27;;;;;;;3607:331;3537:401;;:::o;8116:108::-;8191:26;8201:2;8205:7;8191:26;;;;;;;;;;;;:9;:26::i;862:184:13:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:13:o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;26653:2:20;1669:41:1;;;26635:21:20;26692:2;26672:18;;;26665:30;-1:-1:-1;;;26711:18:20;;;26704:50;26771:18;;1669:41:1;26451:344:20;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:10::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:20;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:10::0;;640:96;11474:307:3;11624:8;-1:-1:-1;;;;;11615:17:3;:5;-1:-1:-1;;;;;11615:17:3;;;11607:55;;;;-1:-1:-1;;;11607:55:3;;27002:2:20;11607:55:3;;;26984:21:20;27041:2;27021:18;;;27014:30;27080:27;27060:18;;;27053:55;27125:18;;11607:55:3;26800:349:20;11607:55:3;-1:-1:-1;;;;;11672:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11672:46:3;;;;;;;;;;11733:41;;540::20;;;11733::3;;513:18:20;11733:41:3;;;;;;;11474:307;;;:::o;6549:::-;6700:28;6710:4;6716:2;6720:7;6700:9;:28::i;:::-;6746:48;6769:4;6775:2;6779:7;6788:5;6746:22;:48::i;:::-;6738:111;;;;-1:-1:-1;;;6738:111:3;;;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;1570:300:3;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:3;829:155:14;8560:193:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;8701:45:16::1;8728:4;8734:2;8738:7;8701:26;:45::i;8445:311:3:-:0;8570:18;8576:2;8580:7;8570:5;:18::i;:::-;8619:54;8650:1;8654:2;8658:7;8667:5;8619:22;:54::i;:::-;8598:151;;;;-1:-1:-1;;;8598:151:3;;;;;;;:::i;1398:662:13:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:13;;;;:::i;:::-;;;;1537:488;;12334:778:3;12484:4;-1:-1:-1;;;;;12504:13:3;;1465:19:9;:23;12500:606:3;;12539:72;;-1:-1:-1;;;12539:72:3;;-1:-1:-1;;;;;12539:36:3;;;;;:72;;719:10:10;;12590:4:3;;12596:7;;12605:5;;12539:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12539:72:3;;;;;;;;-1:-1:-1;;12539:72:3;;;;;;;;;;;;:::i;:::-;;;12535:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12778:13:3;;12774:266;;12820:60;;-1:-1:-1;;;12820:60:3;;;;;;;:::i;12774:266::-;12992:6;12986:13;12977:6;12973:2;12969:15;12962:38;12535:519;-1:-1:-1;;;;;;12661:51:3;-1:-1:-1;;;12661:51:3;;-1:-1:-1;12654:58:3;;12500:606;-1:-1:-1;13091:4:3;12334:778;;;;;;:::o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9078:427:3:-;-1:-1:-1;;;;;9157:16:3;;9149:61;;;;-1:-1:-1;;;9149:61:3;;28897:2:20;9149:61:3;;;28879:21:20;;;28916:18;;;28909:30;28975:34;28955:18;;;28948:62;29027:18;;9149:61:3;28695:356:20;9149:61:3;7224:4;7247:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7247:16:3;:30;9220:58;;;;-1:-1:-1;;;9220:58:3;;29258:2:20;9220:58:3;;;29240:21:20;29297:2;29277:18;;;29270:30;29336;29316:18;;;29309:58;29384:18;;9220:58:3;29056:352:20;9220:58:3;9289:45;9318:1;9322:2;9326:7;9289:20;:45::i;:::-;-1:-1:-1;;;;;9345:13:3;;;;;;:9;:13;;;;;:18;;9362:1;;9345:13;:18;;9362:1;;9345:18;:::i;:::-;;;;-1:-1:-1;;9373:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9373:21:3;-1:-1:-1;;;;;9373:21:3;;;;;;;;9410:33;;9373:16;;;9410:33;;9373:16;;9410:33;6231:32:16::1;5979:291:::0;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:20;-1:-1:-1;;;;;;88:32:20;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:20:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:20;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:20;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:20:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:20;;1343:180;-1:-1:-1;1343:180:20:o;1918:173::-;1986:20;;-1:-1:-1;;;;;2035:31:20;;2025:42;;2015:70;;2081:1;2078;2071:12;2015:70;1918:173;;;:::o;2096:254::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2264:29;2283:9;2264:29;:::i;:::-;2254:39;2340:2;2325:18;;;;2312:32;;-1:-1:-1;;;2096:254:20:o;2355:127::-;2416:10;2411:3;2407:20;2404:1;2397:31;2447:4;2444:1;2437:15;2471:4;2468:1;2461:15;2487:632;2552:5;2582:18;2623:2;2615:6;2612:14;2609:40;;;2629:18;;:::i;:::-;2704:2;2698:9;2672:2;2758:15;;-1:-1:-1;;2754:24:20;;;2780:2;2750:33;2746:42;2734:55;;;2804:18;;;2824:22;;;2801:46;2798:72;;;2850:18;;:::i;:::-;2890:10;2886:2;2879:22;2919:6;2910:15;;2949:6;2941;2934:22;2989:3;2980:6;2975:3;2971:16;2968:25;2965:45;;;3006:1;3003;2996:12;2965:45;3056:6;3051:3;3044:4;3036:6;3032:17;3019:44;3111:1;3104:4;3095:6;3087;3083:19;3079:30;3072:41;;;;2487:632;;;;;:::o;3124:451::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;3302:9;3289:23;3335:18;3327:6;3324:30;3321:50;;;3367:1;3364;3357:12;3321:50;3390:22;;3443:4;3435:13;;3431:27;-1:-1:-1;3421:55:20;;3472:1;3469;3462:12;3421:55;3495:74;3561:7;3556:2;3543:16;3538:2;3534;3530:11;3495:74;:::i;3580:328::-;3657:6;3665;3673;3726:2;3714:9;3705:7;3701:23;3697:32;3694:52;;;3742:1;3739;3732:12;3694:52;3765:29;3784:9;3765:29;:::i;:::-;3755:39;;3813:38;3847:2;3836:9;3832:18;3813:38;:::i;:::-;3803:48;;3898:2;3887:9;3883:18;3870:32;3860:42;;3580:328;;;;;:::o;4095:615::-;4181:6;4189;4242:2;4230:9;4221:7;4217:23;4213:32;4210:52;;;4258:1;4255;4248:12;4210:52;4298:9;4285:23;4327:18;4368:2;4360:6;4357:14;4354:34;;;4384:1;4381;4374:12;4354:34;4422:6;4411:9;4407:22;4397:32;;4467:7;4460:4;4456:2;4452:13;4448:27;4438:55;;4489:1;4486;4479:12;4438:55;4529:2;4516:16;4555:2;4547:6;4544:14;4541:34;;;4571:1;4568;4561:12;4541:34;4624:7;4619:2;4609:6;4606:1;4602:14;4598:2;4594:23;4590:32;4587:45;4584:65;;;4645:1;4642;4635:12;4584:65;4676:2;4668:11;;;;;4698:6;;-1:-1:-1;4095:615:20;;-1:-1:-1;;;;4095:615:20:o;4715:186::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4866:29;4885:9;4866:29;:::i;4906:632::-;5077:2;5129:21;;;5199:13;;5102:18;;;5221:22;;;5048:4;;5077:2;5300:15;;;;5274:2;5259:18;;;5048:4;5343:169;5357:6;5354:1;5351:13;5343:169;;;5418:13;;5406:26;;5487:15;;;;5452:12;;;;5379:1;5372:9;5343:169;;;-1:-1:-1;5529:3:20;;4906:632;-1:-1:-1;;;;;;4906:632:20:o;5543:156::-;5609:20;;5669:4;5658:16;;5648:27;;5638:55;;5689:1;5686;5679:12;5704:182;5761:6;5814:2;5802:9;5793:7;5789:23;5785:32;5782:52;;;5830:1;5827;5820:12;5782:52;5853:27;5870:9;5853:27;:::i;6076:347::-;6141:6;6149;6202:2;6190:9;6181:7;6177:23;6173:32;6170:52;;;6218:1;6215;6208:12;6170:52;6241:29;6260:9;6241:29;:::i;:::-;6231:39;;6320:2;6309:9;6305:18;6292:32;6367:5;6360:13;6353:21;6346:5;6343:32;6333:60;;6389:1;6386;6379:12;6333:60;6412:5;6402:15;;;6076:347;;;;;:::o;6428:256::-;6494:6;6502;6555:2;6543:9;6534:7;6530:23;6526:32;6523:52;;;6571:1;6568;6561:12;6523:52;6594:27;6611:9;6594:27;:::i;:::-;6584:37;;6640:38;6674:2;6663:9;6659:18;6640:38;:::i;:::-;6630:48;;6428:256;;;;;:::o;6689:667::-;6784:6;6792;6800;6808;6861:3;6849:9;6840:7;6836:23;6832:33;6829:53;;;6878:1;6875;6868:12;6829:53;6901:29;6920:9;6901:29;:::i;:::-;6891:39;;6949:38;6983:2;6972:9;6968:18;6949:38;:::i;:::-;6939:48;;7034:2;7023:9;7019:18;7006:32;6996:42;;7089:2;7078:9;7074:18;7061:32;7116:18;7108:6;7105:30;7102:50;;;7148:1;7145;7138:12;7102:50;7171:22;;7224:4;7216:13;;7212:27;-1:-1:-1;7202:55:20;;7253:1;7250;7243:12;7202:55;7276:74;7342:7;7337:2;7324:16;7319:2;7315;7311:11;7276:74;:::i;:::-;7266:84;;;6689:667;;;;;;;:::o;7361:127::-;7422:10;7417:3;7413:20;7410:1;7403:31;7453:4;7450:1;7443:15;7477:4;7474:1;7467:15;7493:336;7633:2;7618:18;;7666:1;7655:13;;7645:144;;7711:10;7706:3;7702:20;7699:1;7692:31;7746:4;7743:1;7736:15;7774:4;7771:1;7764:15;7645:144;7798:25;;;7493:336;:::o;7834:264::-;7901:6;7954:2;7942:9;7933:7;7929:23;7925:32;7922:52;;;7970:1;7967;7960:12;7922:52;8009:9;7996:23;8048:1;8041:5;8038:12;8028:40;;8064:1;8061;8054:12;8292:260;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;8460:29;8479:9;8460:29;:::i;8557:380::-;8636:1;8632:12;;;;8679;;;8700:61;;8754:4;8746:6;8742:17;8732:27;;8700:61;8807:2;8799:6;8796:14;8776:18;8773:38;8770:161;;;8853:10;8848:3;8844:20;8841:1;8834:31;8888:4;8885:1;8878:15;8916:4;8913:1;8906:15;8770:161;;8557:380;;;:::o;10182:356::-;10384:2;10366:21;;;10403:18;;;10396:30;10462:34;10457:2;10442:18;;10435:62;10529:2;10514:18;;10182:356::o;11306:413::-;11508:2;11490:21;;;11547:2;11527:18;;;11520:30;11586:34;11581:2;11566:18;;11559:62;-1:-1:-1;;;11652:2:20;11637:18;;11630:47;11709:3;11694:19;;11306:413::o;12084:340::-;12286:2;12268:21;;;12325:2;12305:18;;;12298:30;-1:-1:-1;;;12359:2:20;12344:18;;12337:46;12415:2;12400:18;;12084:340::o;12784:127::-;12845:10;12840:3;12836:20;12833:1;12826:31;12876:4;12873:1;12866:15;12900:4;12897:1;12890:15;12916:168;12956:7;13022:1;13018;13014:6;13010:14;13007:1;13004:21;12999:1;12992:9;12985:17;12981:45;12978:71;;;13029:18;;:::i;:::-;-1:-1:-1;13069:9:20;;12916:168::o;13443:128::-;13483:3;13514:1;13510:6;13507:1;13504:13;13501:39;;;13520:18;;:::i;:::-;-1:-1:-1;13556:9:20;;13443:128::o;14394:135::-;14433:3;-1:-1:-1;;14454:17:20;;14451:43;;;14474:18;;:::i;:::-;-1:-1:-1;14521:1:20;14510:13;;14394:135::o;17159:127::-;17220:10;17215:3;17211:20;17208:1;17201:31;17251:4;17248:1;17241:15;17275:4;17272:1;17265:15;21699:973;21784:12;;21749:3;;21839:1;21859:18;;;;21912;;;;21939:61;;21993:4;21985:6;21981:17;21971:27;;21939:61;22019:2;22067;22059:6;22056:14;22036:18;22033:38;22030:161;;;22113:10;22108:3;22104:20;22101:1;22094:31;22148:4;22145:1;22138:15;22176:4;22173:1;22166:15;22030:161;22207:18;22234:104;;;;22352:1;22347:319;;;;22200:466;;22234:104;-1:-1:-1;;22267:24:20;;22255:37;;22312:16;;;;-1:-1:-1;22234:104:20;;22347:319;21646:1;21639:14;;;21683:4;21670:18;;22441:1;22455:165;22469:6;22466:1;22463:13;22455:165;;;22547:14;;22534:11;;;22527:35;22590:16;;;;22484:10;;22455:165;;;22459:3;;22649:6;22644:3;22640:16;22633:23;;22200:466;;;;;;;21699:973;;;;:::o;22677:456::-;22898:3;22926:38;22960:3;22952:6;22926:38;:::i;:::-;22993:6;22987:13;23009:52;23054:6;23050:2;23043:4;23035:6;23031:17;23009:52;:::i;:::-;23077:50;23119:6;23115:2;23111:15;23103:6;23077:50;:::i;:::-;23070:57;22677:456;-1:-1:-1;;;;;;;22677:456:20:o;23982:125::-;24022:4;24050:1;24047;24044:8;24041:34;;;24055:18;;:::i;:::-;-1:-1:-1;24092:9:20;;23982:125::o;27154:414::-;27356:2;27338:21;;;27395:2;27375:18;;;27368:30;27434:34;27429:2;27414:18;;27407:62;-1:-1:-1;;;27500:2:20;27485:18;;27478:48;27558:3;27543:19;;27154:414::o;27573:127::-;27634:10;27629:3;27625:20;27622:1;27615:31;27665:4;27662:1;27655:15;27689:4;27686:1;27679:15;27705:120;27745:1;27771;27761:35;;27776:18;;:::i;:::-;-1:-1:-1;27810:9:20;;27705:120::o;27830:112::-;27862:1;27888;27878:35;;27893:18;;:::i;:::-;-1:-1:-1;27927:9:20;;27830:112::o;27947:489::-;-1:-1:-1;;;;;28216:15:20;;;28198:34;;28268:15;;28263:2;28248:18;;28241:43;28315:2;28300:18;;28293:34;;;28363:3;28358:2;28343:18;;28336:31;;;28141:4;;28384:46;;28410:19;;28402:6;28384:46;:::i;:::-;28376:54;27947:489;-1:-1:-1;;;;;;27947:489:20:o;28441:249::-;28510:6;28563:2;28551:9;28542:7;28538:23;28534:32;28531:52;;;28579:1;28576;28569:12;28531:52;28611:9;28605:16;28630:30;28654:5;28630:30;:::i;29413:127::-;29474:10;29469:3;29465:20;29462:1;29455:31;29505:4;29502:1;29495:15;29529:4;29526:1;29519:15",
  "language": "Solidity",
  "natspec": {
    "author": "@chrisrusselljr",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "You can use this contract to mint, send, and interact with CRYPTIDS",
    "title": "CryptidToken NFT Contract",
    "version": 1
  },
  "offset": [
    710,
    8999
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x381 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC6682862 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE5F9866 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9E5 JUMPI DUP1 PUSH4 0xF4EFA3E6 EQ PUSH2 0xA05 JUMPI DUP1 PUSH4 0xF51F96DD EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0xFFA9CD3B EQ PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE5F9866 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xDE7FCB1D EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xE7BC8208 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0xCE3CD997 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0xD6D67A09 EQ PUSH2 0x911 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6682862 EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xC6AB67A3 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xBB31B77B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xBB31B77B EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xC29DE630 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0xC3214581 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xB3CAAD01 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0x97611638 EQ PUSH2 0x75B JUMPI DUP1 PUSH4 0x9A2A9C3D EQ PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x81C162F2 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x68E JUMPI DUP1 PUSH4 0x78231978 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0x7B671780 EQ PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x6CBB8985 EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x438B6300 GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0x57ED9E4E EQ PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1919FED7 GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x33E61413 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x372F657C EQ PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1919FED7 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88139A6 GT PUSH2 0x35F JUMPI DUP1 PUSH4 0x88139A6 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x10969523 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x3DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FB6 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x3032 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x307A JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x3130 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x42B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3179 JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x459 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x307A JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x459 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x31B5 JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST PUSH2 0x459 PUSH2 0x1394 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x14AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x3179 JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59F PUSH2 0x59A CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x3245 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x15A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3130 JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x16C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x1719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x181E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x689 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x18B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x6D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x329A JUMP JUMPDEST PUSH2 0x18F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x6F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x1A52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1A87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1B8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1BC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x776 CALLDATASIZE PUSH1 0x4 PUSH2 0x31B5 JUMP JUMPDEST PUSH2 0x1BD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3A6 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x32B5 JUMP JUMPDEST PUSH2 0x1C64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F1 JUMP JUMPDEST PUSH2 0x1C6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x1DB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x1DE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x835 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x33B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3A6 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1E3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x1E4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x1E57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x8DC CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x90C CALLDATASIZE PUSH1 0x4 PUSH2 0x33DE JUMP JUMPDEST PUSH2 0x1F0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x2050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x941 CALLDATASIZE PUSH1 0x4 PUSH2 0x3130 JUMP JUMPDEST PUSH2 0x205B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x952 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH2 0x209E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x975 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x20B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x9B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA00 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x21AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA20 CALLDATASIZE PUSH1 0x4 PUSH2 0x322A JUMP JUMPDEST PUSH2 0x224B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42B PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3FD SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6D DUP3 PUSH2 0x22B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x341B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAAE SWAP1 PUSH2 0x341B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xADE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAA DUP3 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC34 JUMPI POP PUSH2 0xC34 DUP2 CALLER PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 PUSH2 0x22D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA3934B73397 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0xE SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F07 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0xDF5 CALLER DUP3 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH2 0x243A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34DC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEB0 PUSH2 0x33A0 JUMP JUMPDEST EQ PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST CALLVALUE DUP2 PUSH1 0x17 SLOAD PUSH2 0xF0C SWAP2 SWAP1 PUSH2 0x351C JUMP JUMPDEST EQ PUSH2 0xF55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 PUSH2 0xF62 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF6C SWAP2 SWAP1 PUSH2 0x353B JUMP JUMPDEST GT ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3AB838363C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND DUP2 GT ISZERO PUSH2 0x1031 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D617820616C6C6F776564206D696E747320706572207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B739B0B1BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 DUP2 GT PUSH2 0x106D JUMPI PUSH2 0x104D CALLER PUSH2 0x1048 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0x105B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1065 DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1034 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1081 DUP4 PUSH2 0x1831 JUMP JUMPDEST DUP3 LT PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34DC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11A0 JUMPI PUSH2 0x11A0 PUSH2 0x33A0 JUMP JUMPDEST EQ PUSH2 0x11ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST CALLVALUE PUSH1 0x17 SLOAD EQ PUSH2 0x123A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x12B3 SWAP2 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x25FB SWAP1 POP JUMP JUMPDEST PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1386 SWAP1 PUSH2 0x1048 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x106D PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x13C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B7B73A3930B1BA103130B630B731B29034B9901817 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2BB4BA34323930BBB6103330B4B632B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x14DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x2611 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1510 DUP4 PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152D JUMPI PUSH2 0x152D PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1556 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x159D JUMPI PUSH2 0x156E DUP6 DUP3 PUSH2 0x1076 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x1580 PUSH2 0x356E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1595 DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x155C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B0 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1626 JUMPI PUSH2 0x1626 PUSH2 0x356E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2130B9B2AAA9249034B990333937BD32B717 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F07 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x16F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x179D SWAP1 PUSH2 0x341B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17C9 SWAP1 PUSH2 0x341B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1816 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1816 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH2 0x63F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x189C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH2 0x14E6 PUSH1 0x0 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x193B JUMPI PUSH2 0x193B PUSH2 0x33A0 JUMP JUMPDEST EQ PUSH2 0x1988 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH2 0x199B SWAP1 PUSH1 0xFF DUP5 AND PUSH2 0x353B JUMP JUMPDEST GT ISZERO PUSH2 0x19FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B6329039BAB838363C97 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x353B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST DUP2 PUSH1 0xFF AND DUP2 GT PUSH2 0xDB2 JUMPI PUSH2 0x1A32 CALLER PUSH2 0x1048 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A40 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1A4A DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1A82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1AB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD PUSH2 0x1AC6 SWAP1 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1B15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1BBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH2 0x14E6 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA82 SWAP1 PUSH2 0x341B JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1C4E SWAP2 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP PUSH2 0x25FB SWAP1 POP JUMP JUMPDEST ISZERO PUSH2 0x1C5B JUMPI POP PUSH1 0x1 PUSH2 0xA6D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB2 CALLER DUP4 DUP4 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB8 PUSH2 0x33A0 JUMP JUMPDEST GT PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27379030B4B9323937B8399030BA1034B734BA17 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x16 SLOAD DUP3 PUSH1 0xFF AND PUSH2 0x1D0C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D16 SWAP2 SWAP1 PUSH2 0x353B JUMP JUMPDEST GT ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x36329039BAB838363C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 GT PUSH2 0xCB0 JUMPI PUSH2 0x1D91 DUP3 PUSH2 0x1048 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D9F PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1DA9 DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x1DBB CALLER DUP4 PUSH2 0x2343 JUMP JUMPDEST PUSH2 0x1DD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x1DE3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2825 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH2 0x179D SWAP1 PUSH2 0x341B JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x179D SWAP1 PUSH2 0x341B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1ED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3732BC34B9BA32B73A103A37B5B2B717 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xF PUSH2 0x1EE2 DUP4 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x1F3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1FBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2029 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x36B4B73A34B7339031B0B71039BA30B93A17 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x18 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2048 JUMPI PUSH2 0x2048 PUSH2 0x33A0 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x208B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xDB2 SWAP1 PUSH1 0x10 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2F07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP1 SLOAD PUSH2 0x20F5 SWAP1 PUSH2 0x341B JUMP JUMPDEST SWAP1 POP GT PUSH2 0x2144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x219C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261736555524920697320616C72656164792066726F7A656E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x21DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2242 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x14AB DUP2 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x227B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA6D JUMPI POP PUSH2 0xA6D DUP3 PUSH2 0x2956 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x230A DUP3 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C7 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2402 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23F7 DUP5 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2432 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x244D DUP3 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x24B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x251E DUP4 DUP4 DUP4 PUSH2 0x29A6 JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x0 DUP3 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2552 SWAP1 DUP5 SWAP1 PUSH2 0x3651 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2580 SWAP1 DUP5 SWAP1 PUSH2 0x353B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xDB2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x29D4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2608 DUP6 DUP5 PUSH2 0x2A07 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND PUSH2 0x265A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34DC JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2687 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x27B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2830 DUP5 DUP5 DUP5 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x283C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1DE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3668 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x287C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x28A6 JUMPI DUP1 PUSH2 0x2890 DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP PUSH2 0x289F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x36D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28C1 JUMPI PUSH2 0x28C1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x28EB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2432 JUMPI PUSH2 0x2900 PUSH1 0x1 DUP4 PUSH2 0x3651 JUMP JUMPDEST SWAP2 POP PUSH2 0x290D PUSH1 0xA DUP7 PUSH2 0x36E4 JUMP JUMPDEST PUSH2 0x2918 SWAP1 PUSH1 0x30 PUSH2 0x353B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x292D JUMPI PUSH2 0x292D PUSH2 0x356E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x294F PUSH1 0xA DUP7 PUSH2 0x36D0 JUMP JUMPDEST SWAP5 POP PUSH2 0x28EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2987 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA6D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0xA6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x34DC JUMP JUMPDEST PUSH2 0xCB0 DUP4 DUP4 DUP4 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x29DE DUP4 DUP4 PUSH2 0x2C29 JUMP JUMPDEST PUSH2 0x29EB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3668 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x159D JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A29 JUMPI PUSH2 0x2A29 PUSH2 0x356E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x2A4F JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x2A6B DUP2 PUSH2 0x3553 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2B66 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2AB7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x36F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2AF2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2AEF SWAP2 DUP2 ADD SWAP1 PUSH2 0x3735 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B4C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B20 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2B44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7A SWAP1 PUSH2 0x3668 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2BCC JUMPI PUSH2 0x2BC7 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2BEF JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2BEF JUMPI PUSH2 0x2BEF DUP4 DUP3 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C06 JUMPI PUSH2 0xCB0 DUP2 PUSH2 0x2E14 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCB0 JUMPI PUSH2 0xCB0 DUP3 DUP3 PUSH2 0x2EC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2C7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2CE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x2CF0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2D19 SWAP1 DUP5 SWAP1 PUSH2 0x353B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2D84 DUP5 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x2D8E SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2DE1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2E26 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2E4E JUMPI PUSH2 0x2E4E PUSH2 0x356E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2E6F JUMPI PUSH2 0x2E6F PUSH2 0x356E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2EA7 JUMPI PUSH2 0x2EA7 PUSH2 0x3752 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECE DUP4 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2F13 SWAP1 PUSH2 0x341B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2F35 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2F7B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2F4E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2F7B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2F7B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2F7B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F60 JUMP JUMPDEST POP PUSH2 0x2F87 SWAP3 SWAP2 POP PUSH2 0x2F8B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2F87 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FD3 DUP2 PUSH2 0x2FA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FF5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2FDD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DE3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x301E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2FDA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2FD3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x308D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3096 DUP4 PUSH2 0x305E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x30D5 JUMPI PUSH2 0x30D5 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30FD JUMPI PUSH2 0x30FD PUSH2 0x30A4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x3116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x316A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2432 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30BA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x318E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3197 DUP5 PUSH2 0x305E JUMP JUMPDEST SWAP3 POP PUSH2 0x31A5 PUSH1 0x20 DUP6 ADD PUSH2 0x305E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x31E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x323C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FD3 DUP3 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327D JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3261 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FD3 DUP3 PUSH2 0x3289 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32D1 DUP4 PUSH2 0x305E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x32E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330D DUP4 PUSH2 0x3289 JUMP JUMPDEST SWAP2 POP PUSH2 0x331B PUSH1 0x20 DUP5 ADD PUSH2 0x305E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3343 DUP6 PUSH2 0x305E JUMP JUMPDEST SWAP4 POP PUSH2 0x3351 PUSH1 0x20 DUP7 ADD PUSH2 0x305E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3394 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x33D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x2FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x330D DUP4 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x342F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3450 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3536 JUMPI PUSH2 0x3536 PUSH2 0x3506 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x354E JUMPI PUSH2 0x354E PUSH2 0x3506 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3567 JUMPI PUSH2 0x3567 PUSH2 0x3506 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x359E JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x35C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x35D4 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x35E5 JUMPI PUSH2 0x3612 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x360A JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x35F1 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362A DUP3 DUP7 PUSH2 0x3584 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x363A DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x2FDA JUMP JUMPDEST PUSH2 0x3646 DUP2 DUP4 ADD DUP7 PUSH2 0x3584 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3663 JUMPI PUSH2 0x3663 PUSH2 0x3506 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x36DF JUMPI PUSH2 0x36DF PUSH2 0x36BA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x36F3 JUMPI PUSH2 0x36F3 PUSH2 0x36BA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x372B SWAP1 DUP4 ADD DUP5 PUSH2 0x3006 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2FD3 DUP2 PUSH2 0x2FA0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PC 0xBD GASPRICE 0x4E SUB PUSH15 0x8FEDAB7BF3E3D3F3420077AEF73061 0xE0 CALLDATALOAD REVERT SWAP15 LOG0 PUSH26 0xE207252864736F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x381"
    },
    "12": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "25": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D1"
    },
    "29": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "36": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x102"
    },
    "40": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "47": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "51": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E5"
    },
    "73": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF4EFA3E6"
    },
    "80": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA05"
    },
    "84": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF51F96DD"
    },
    "91": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA25"
    },
    "95": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "97": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xFFA9CD3B"
    },
    "102": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "103": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA3B"
    },
    "106": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "107": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "110": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "111": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE5F9866"
    },
    "118": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x946"
    },
    "122": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDE7FCB1D"
    },
    "129": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95B"
    },
    "133": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE7BC8208"
    },
    "140": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x987"
    },
    "144": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "151": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x99C"
    },
    "155": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "167": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDC"
    },
    "171": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC884EF83"
    },
    "178": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8C1"
    },
    "182": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xCE3CD997"
    },
    "189": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F1"
    },
    "193": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD6D67A09"
    },
    "200": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x911"
    },
    "204": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDA3EF23F"
    },
    "211": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x926"
    },
    "215": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "219": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "220": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6682862"
    },
    "227": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x877"
    },
    "231": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC6AB67A3"
    },
    "238": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x88C"
    },
    "242": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC87B56DD"
    },
    "249": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A1"
    },
    "253": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "256": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "257": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "258": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "265": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16F"
    },
    "269": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "276": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x149"
    },
    "280": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBB31B77B"
    },
    "287": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7FB"
    },
    "291": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC040E6B8"
    },
    "298": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81B"
    },
    "302": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "304": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC29DE630"
    },
    "309": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "310": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x842"
    },
    "313": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "314": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC3214581"
    },
    "320": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "321": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x861"
    },
    "324": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "325": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "327": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "328": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "329": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "336": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x79B"
    },
    "340": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "342": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB3CAAD01"
    },
    "347": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "348": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BB"
    },
    "351": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "352": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB88D4FDE"
    },
    "358": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "359": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7DB"
    },
    "362": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "363": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "366": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "367": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "374": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AB"
    },
    "378": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "385": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x723"
    },
    "389": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "396": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x746"
    },
    "400": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "402": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x97611638"
    },
    "407": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "408": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75B"
    },
    "411": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "413": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9A2A9C3D"
    },
    "418": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "419": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77B"
    },
    "422": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "426": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "427": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "428": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "429": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7CB64759"
    },
    "434": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "435": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D9"
    },
    "438": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "439": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81C162F2"
    },
    "445": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "446": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F9"
    },
    "449": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "451": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8456CB59"
    },
    "456": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "457": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x70E"
    },
    "460": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "461": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "463": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "464": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "465": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "466": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "467": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "472": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "473": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B6"
    },
    "476": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "477": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "478": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "483": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "484": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x254"
    },
    "487": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "488": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "489": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "494": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "495": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x223"
    },
    "498": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "499": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "500": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "505": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "506": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x66E"
    },
    "509": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "511": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "516": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "517": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x68E"
    },
    "520": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "521": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "522": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x78231978"
    },
    "527": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "528": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A3"
    },
    "531": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "532": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "533": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x7B671780"
    },
    "538": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "539": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B9"
    },
    "542": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "543": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "545": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "546": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "547": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "548": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "549": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5C975ABB"
    },
    "554": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "555": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60C"
    },
    "558": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "559": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "560": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "565": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "566": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x624"
    },
    "569": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "570": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "571": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C0360EB"
    },
    "576": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "577": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x644"
    },
    "580": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "581": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "582": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6CBB8985"
    },
    "587": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "588": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x659"
    },
    "591": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "592": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "594": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "595": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "596": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "597": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "598": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "603": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "604": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x290"
    },
    "607": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "608": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x438B6300"
    },
    "614": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "615": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57F"
    },
    "618": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "619": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "620": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4F6CCCE7"
    },
    "625": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "626": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5AC"
    },
    "629": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "630": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "631": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x55F804B3"
    },
    "636": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "637": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CC"
    },
    "640": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "641": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "642": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x57ED9E4E"
    },
    "647": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "648": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5EC"
    },
    "651": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "652": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "654": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "655": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "656": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "657": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "658": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "663": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "664": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x542"
    },
    "667": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "668": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "669": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3F4BA83A"
    },
    "674": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "675": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x54A"
    },
    "678": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "679": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "680": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x42842E0E"
    },
    "685": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "686": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x55F"
    },
    "689": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "690": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "692": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "693": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "694": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "695": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "696": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1919FED7"
    },
    "701": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "702": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323"
    },
    "705": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "706": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "707": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "712": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "713": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FD"
    },
    "716": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "717": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "718": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB4A7AB"
    },
    "723": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "724": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E3"
    },
    "727": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "728": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "729": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2F745C59"
    },
    "734": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "735": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4F9"
    },
    "738": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "739": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "740": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x33E61413"
    },
    "745": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "746": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x519"
    },
    "749": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "750": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "751": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x372F657C"
    },
    "756": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "757": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x52F"
    },
    "760": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "761": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "763": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "764": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "765": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "766": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "767": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1919FED7"
    },
    "772": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "773": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x490"
    },
    "776": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "777": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "778": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "783": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "784": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B0"
    },
    "787": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "788": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "789": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2DB11544"
    },
    "794": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "795": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D0"
    },
    "798": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "801": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "802": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "803": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "805": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "810": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "GT",
      "path": "16"
    },
    "811": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35F"
    },
    "814": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "815": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "816": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x88139A6"
    },
    "821": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "822": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x415"
    },
    "825": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "826": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "832": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "833": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x439"
    },
    "836": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "837": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "838": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x10969523"
    },
    "843": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "844": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45B"
    },
    "847": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "848": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "849": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "854": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "855": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x47B"
    },
    "858": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "859": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "861": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "862": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "863": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "864": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "865": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "870": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "871": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x386"
    },
    "874": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "875": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "876": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "881": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "882": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BB"
    },
    "885": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "886": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "887": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x81812FC"
    },
    "892": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "EQ",
      "path": "16"
    },
    "893": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DD"
    },
    "896": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "897": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "898": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "900": {
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "DUP1",
      "path": "16"
    },
    "901": {
      "first_revert": true,
      "fn": null,
      "offset": [
        710,
        8999
      ],
      "op": "REVERT",
      "path": "16"
    },
    "902": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "903": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "904": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "DUP1",
      "path": "16"
    },
    "905": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "906": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x392"
    },
    "909": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "910": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "912": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "DUP1",
      "path": "16"
    },
    "913": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "REVERT",
      "path": "16"
    },
    "914": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "919": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A1"
    },
    "922": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "923": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "925": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FB6"
    },
    "928": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "929": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "930": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA62"
    },
    "933": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "934": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "935": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "937": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "938": {
      "op": "SWAP1"
    },
    "939": {
      "op": "ISZERO"
    },
    "940": {
      "op": "ISZERO"
    },
    "941": {
      "op": "DUP2"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "947": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "949": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "950": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "DUP1",
      "path": "16"
    },
    "951": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "952": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "SUB",
      "path": "16"
    },
    "953": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "954": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "RETURN",
      "path": "16"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "959": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "963": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "DUP1",
      "path": "3"
    },
    "966": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "REVERT",
      "path": "3"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "POP",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D0"
    },
    "972": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA73"
    },
    "975": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "976": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "980": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "984": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "985": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3032"
    },
    "988": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "989": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "991": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "992": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "993": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E9"
    },
    "996": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "997": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1000": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1001": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "1006": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F8"
    },
    "1009": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1010": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1012": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3045"
    },
    "1015": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1016": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1022": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1024": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "op": "SWAP1"
    },
    "1034": {
      "op": "SWAP2"
    },
    "1035": {
      "op": "AND"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "1044": {
      "op": "JUMP"
    },
    "1045": {
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1047": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1049": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x421"
    },
    "1052": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1053": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1055": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1056": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1057": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1058": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "POP",
      "path": "16"
    },
    "1059": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1062": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "1064": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1065": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1066": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1067": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1068": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1070": {
      "fn": "ERC721.getApproved",
      "offset": [
        1813,
        1841
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1071": {
      "op": "SWAP1"
    },
    "1072": {
      "op": "DUP2"
    },
    "1073": {
      "op": "MSTORE"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1076": {
      "op": "ADD"
    },
    "1077": {
      "offset": [
        1813,
        1841
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "1080": {
      "op": "JUMP"
    },
    "1081": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1085": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x445"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x454"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x307A"
    },
    "1107": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1108": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1109": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9F"
    },
    "1112": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1113": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1114": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "STOP",
      "path": "3"
    },
    "1115": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1116": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1117": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1118": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1119": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x467"
    },
    "1122": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1123": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1125": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1126": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1127": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1132": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x476"
    },
    "1135": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1136": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1138": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3130"
    },
    "1141": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1142": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1143": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCB5"
    },
    "1146": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1147": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1148": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1149": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1150": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1151": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x487"
    },
    "1154": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1155": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1157": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1158": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1159": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "1163": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1164": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1167": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1168": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1169": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1170": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1171": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1172": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49C"
    },
    "1175": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1176": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1178": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1179": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1180": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1185": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4AB"
    },
    "1188": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1189": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1191": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3045"
    },
    "1194": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "i",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1195": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1196": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB6"
    },
    "1199": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "i",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1201": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1202": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BC"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1210": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CB"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3179"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEB"
    },
    "1231": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1232": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1233": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1236": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DE"
    },
    "1239": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1240": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1242": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3045"
    },
    "1245": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1246": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1247": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE1C"
    },
    "1250": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1251": {
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1252": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1253": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1254": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1255": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4EF"
    },
    "1258": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1259": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1261": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1262": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1263": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1264": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "POP",
      "path": "16"
    },
    "1265": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1268": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "1270": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1271": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1272": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        1074,
        1099
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1273": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1274": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1275": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1276": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1277": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x505"
    },
    "1280": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1281": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1283": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1284": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1285": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1290": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x514"
    },
    "1293": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1294": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1296": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307A"
    },
    "1299": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1300": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1301": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1076"
    },
    "1304": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1305": {
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1306": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1307": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1308": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1309": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x525"
    },
    "1312": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1313": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1315": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1316": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1317": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1318": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "POP",
      "path": "16"
    },
    "1319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1322": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x12"
    },
    "1324": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1325": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1326": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1602,
        1632
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1327": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1328": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1331": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x53D"
    },
    "1334": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1335": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1337": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31B5"
    },
    "1340": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3022,
        3661
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1341": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1342": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x110C"
    },
    "1345": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3022,
        3661
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1346": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6777,
        7041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1347": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6777,
        7041
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1350": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6777,
        7041
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1394"
    },
    "1353": {
      "fn": "CryptidToken.withdraw",
      "jump": "i",
      "offset": [
        6777,
        7041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1354": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1355": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1356": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1357": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1358": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x556"
    },
    "1361": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1362": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1364": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1365": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1366": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1367": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "POP",
      "path": "16"
    },
    "1368": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1371": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14AE"
    },
    "1374": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56B"
    },
    "1382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1385": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1386": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1392": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57A"
    },
    "1395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3179"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E8"
    },
    "1406": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1407": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1408": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1409": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1410": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1411": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x58B"
    },
    "1414": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1415": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1417": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1418": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1419": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59F"
    },
    "1424": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59A"
    },
    "1427": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1428": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1430": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "1433": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1434": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1435": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1503"
    },
    "1438": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1439": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1440": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1442": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1443": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "1446": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1447": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1448": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3245"
    },
    "1451": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1452": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1453": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1454": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1455": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1456": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1460": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1462": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1463": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1464": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1469": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C7"
    },
    "1472": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1473": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1475": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3045"
    },
    "1478": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1479": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1480": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A5"
    },
    "1483": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1484": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1485": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1486": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1487": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1488": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5D8"
    },
    "1491": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1492": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1494": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1495": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1496": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1501": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1505": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1507": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3130"
    },
    "1510": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1511": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1512": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1638"
    },
    "1515": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1516": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1517": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1518": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1519": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1520": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1524": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1526": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1527": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1528": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1533": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x607"
    },
    "1536": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1537": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1539": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "1542": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1543": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1544": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16C8"
    },
    "1547": {
      "fn": "CryptidToken.undoClaim",
      "jump": "i",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1548": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1549": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1550": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1551": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1552": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x618"
    },
    "1555": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1556": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1558": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1559": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1560": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0xA"
    },
    "1564": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1565": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1567": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "1568": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "1571": {
      "fn": "Pausable.paused",
      "offset": [
        1098,
        1182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1572": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1574": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x630"
    },
    "1579": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1584": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "1589": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x63F"
    },
    "1592": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1595": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3045"
    },
    "1598": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1599": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1719"
    },
    "1603": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1604": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1605": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1606": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1607": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1608": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x650"
    },
    "1611": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1612": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1614": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1617": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "1618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "1621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1790"
    },
    "1624": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1625": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1626": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1627": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1628": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1629": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x665"
    },
    "1632": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1633": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1635": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1636": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1637": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1638": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "POP",
      "path": "16"
    },
    "1639": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FD"
    },
    "1642": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x181E"
    },
    "1645": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "i",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1646": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1647": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1648": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1649": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1650": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67A"
    },
    "1653": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1654": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1657": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42B"
    },
    "1663": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x689"
    },
    "1666": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1667": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1669": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x322A"
    },
    "1672": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1673": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1674": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1831"
    },
    "1677": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69A"
    },
    "1685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "1695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B8"
    },
    "1698": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1699": {
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1700": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1701": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6AF"
    },
    "1706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "POP",
      "path": "16"
    },
    "1713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "1716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "1718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1877,
        1907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1721": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1722": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1723": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1724": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1725": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1729": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1731": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1732": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1733": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1738": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D4"
    },
    "1741": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1742": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1744": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x329A"
    },
    "1747": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1748": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1749": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18F2"
    },
    "1752": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1753": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1754": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1755": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1756": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1757": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E5"
    },
    "1760": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1761": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1763": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1764": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1765": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1770": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F4"
    },
    "1773": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1774": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1776": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3045"
    },
    "1779": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1780": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1781": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A52"
    },
    "1784": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "i",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1785": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1786": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1787": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1788": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1789": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x705"
    },
    "1792": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1793": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1795": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1796": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1797": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1798": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "POP",
      "path": "16"
    },
    "1799": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1802": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A87"
    },
    "1805": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1806": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1807": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1808": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1809": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1810": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71A"
    },
    "1813": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1814": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1816": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1817": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1818": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1819": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "POP",
      "path": "16"
    },
    "1820": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1823": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B8C"
    },
    "1826": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4911,
        4972
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1827": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1829": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1831": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72F"
    },
    "1834": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1835": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1837": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1838": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1839": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "1843": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1847": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1858": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1861": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1862": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1863": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1864": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1865": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1866": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x752"
    },
    "1869": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1870": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1873": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1874": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1875": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "POP",
      "path": "3"
    },
    "1876": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D0"
    },
    "1879": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC4"
    },
    "1882": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1883": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1884": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1885": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1886": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1887": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x767"
    },
    "1890": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1891": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1893": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1894": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1895": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "1900": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x776"
    },
    "1903": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1904": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1906": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31B5"
    },
    "1909": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1910": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1911": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BD3"
    },
    "1914": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1915": {
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1916": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1917": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1918": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1919": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x787"
    },
    "1922": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1923": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1925": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1926": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1927": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1928": {
      "op": "POP"
    },
    "1929": {
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "1931": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1932": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "1935": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1936": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "1940": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1941": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "DIV",
      "path": "16"
    },
    "1942": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "1944": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "AND",
      "path": "16"
    },
    "1945": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1946": {
      "fn": "CryptidToken.verify",
      "offset": [
        1290,
        1330
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1947": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1948": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1949": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1951": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1955": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1957": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1964": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B6"
    },
    "1967": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1970": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B5"
    },
    "1973": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1974": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1975": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C64"
    },
    "1978": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1979": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1980": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1981": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1982": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1983": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7C7"
    },
    "1986": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1987": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1989": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1990": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1991": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "1996": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D6"
    },
    "1999": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2000": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2002": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32F1"
    },
    "2005": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2006": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2007": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C6F"
    },
    "2010": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2014": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E7"
    },
    "2018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2021": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "2028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F6"
    },
    "2031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3324"
    },
    "2037": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB1"
    },
    "2042": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2043": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2044": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2045": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2046": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2047": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x807"
    },
    "2050": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2051": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2053": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2054": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2055": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2060": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x816"
    },
    "2063": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2064": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2066": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "2069": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2070": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2071": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DE9"
    },
    "2074": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2075": {
      "offset": [
        1968,
        1986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2076": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2077": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2078": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2079": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x827"
    },
    "2082": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2083": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2085": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2086": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2087": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "2091": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2092": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x835"
    },
    "2095": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2096": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2098": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "AND",
      "path": "16"
    },
    "2099": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2100": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2101": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2102": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2104": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2105": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "2108": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2109": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2110": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1968,
        1986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33B6"
    },
    "2113": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1968,
        1986
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2114": {
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2115": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2116": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2117": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2118": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84E"
    },
    "2121": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2122": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2124": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2125": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2126": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2130": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2131": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "2134": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2135": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2138": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2139": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DIV",
      "path": "16"
    },
    "2140": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2142": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "AND",
      "path": "16"
    },
    "2143": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2144": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1250,
        1284
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2145": {
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2146": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2147": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2148": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2149": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x86D"
    },
    "2152": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2153": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2155": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2156": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2157": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2158": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "POP",
      "path": "16"
    },
    "2159": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2162": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x14"
    },
    "2164": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2165": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2166": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1752,
        1781
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2167": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2168": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2169": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2170": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2171": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x883"
    },
    "2174": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2175": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2177": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2178": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2179": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2180": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "POP",
      "path": "16"
    },
    "2181": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2184": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E3D"
    },
    "2187": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2188": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2189": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2190": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2191": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2192": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x898"
    },
    "2195": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2196": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2198": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2199": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2200": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2201": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "POP",
      "path": "16"
    },
    "2202": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2205": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E4A"
    },
    "2208": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2209": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2210": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2211": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2212": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2213": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8AD"
    },
    "2216": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2217": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2219": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2220": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2221": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3D0"
    },
    "2226": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8BC"
    },
    "2229": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2230": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2232": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3045"
    },
    "2235": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2236": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2237": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E57"
    },
    "2240": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2241": {
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2242": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2243": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2244": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2245": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8CD"
    },
    "2248": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2249": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2251": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2252": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2253": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A6"
    },
    "2258": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8DC"
    },
    "2261": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2262": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2264": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "2267": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2268": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2269": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "2271": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2273": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2274": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2276": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2277": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2278": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2279": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2281": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2282": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2283": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2284": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2286": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "AND",
      "path": "16"
    },
    "2287": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2288": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        1661,
        1700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2289": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2290": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2291": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2292": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2293": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8FD"
    },
    "2296": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2297": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2299": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2300": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2301": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2302": {
      "op": "POP"
    },
    "2303": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2306": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x90C"
    },
    "2309": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2310": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2312": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33DE"
    },
    "2315": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2316": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2317": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F0C"
    },
    "2320": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2321": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2322": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2323": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2324": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2325": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x91D"
    },
    "2328": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2329": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2331": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2332": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2333": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2334": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "POP",
      "path": "16"
    },
    "2335": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2338": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2050"
    },
    "2341": {
      "fn": "CryptidToken.lastMintID",
      "jump": "i",
      "offset": [
        7471,
        7562
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2342": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2343": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2344": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2345": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2346": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x932"
    },
    "2349": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2350": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2352": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2353": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2354": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2359": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x941"
    },
    "2362": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2363": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2365": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3130"
    },
    "2368": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2369": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2370": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x205B"
    },
    "2373": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2374": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2375": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2376": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2377": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2378": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x952"
    },
    "2381": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2382": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2384": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2385": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2386": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2387": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "POP",
      "path": "16"
    },
    "2388": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2391": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x209E"
    },
    "2394": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        7841,
        7953
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2395": {
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2396": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2397": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2398": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2399": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x967"
    },
    "2402": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2403": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2405": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2406": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2407": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2411": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2412": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x975"
    },
    "2415": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2416": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "2418": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "AND",
      "path": "16"
    },
    "2419": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2420": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2421": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2422": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2424": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        1214,
        1239
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2427": {
      "op": "SWAP1"
    },
    "2428": {
      "op": "SWAP2"
    },
    "2429": {
      "op": "AND"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B2"
    },
    "2438": {
      "op": "JUMP"
    },
    "2439": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2440": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2442": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2443": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x993"
    },
    "2446": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2447": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2449": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2450": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2451": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2452": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "POP",
      "path": "16"
    },
    "2453": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2456": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20B6"
    },
    "2459": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "2462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2463": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A8"
    },
    "2467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2468": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A6"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "2480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "2481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33FF"
    },
    "2486": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 3
    },
    "2497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "2499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2508": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2509": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2510": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2511": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2513": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2514": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2519": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "2531": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "2540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x459"
    },
    "2550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA00"
    },
    "2553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322A"
    },
    "2559": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21AD"
    },
    "2564": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2566": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2567": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2568": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2569": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA11"
    },
    "2572": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2573": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2575": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2576": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2577": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "2582": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA20"
    },
    "2585": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "2586": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2588": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x322A"
    },
    "2591": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2592": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2593": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x224B"
    },
    "2596": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "i",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2597": {
      "offset": [
        1922,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2598": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2599": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2600": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2601": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA31"
    },
    "2604": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2605": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2607": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2608": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2609": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2610": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "POP",
      "path": "16"
    },
    "2611": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x42B"
    },
    "2614": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "2616": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2617": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2618": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1922,
        1959
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2619": {
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2620": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "2621": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2622": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2623": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA47"
    },
    "2626": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2627": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2629": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2630": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2631": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "2635": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2636": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3FD"
    },
    "2639": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2640": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "2645": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2646": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DIV",
      "path": "16"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "offset": [
        1337,
        1413
      ],
      "op": "AND",
      "path": "16"
    },
    "2656": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2657": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        1337,
        1413
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2658": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2659": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8930,
        8934
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2661": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8953,
        8989
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 4,
      "value": "0xA6D"
    },
    "2664": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8977,
        8988
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2665": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8953,
        8976
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x22B0"
    },
    "2668": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "i",
      "offset": [
        8953,
        8989
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2669": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8953,
        8989
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2670": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8946,
        8989
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2671": {
      "fn": "CryptidToken.supportsInterface",
      "offset": [
        8827,
        8996
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "fn": "CryptidToken.supportsInterface",
      "jump": "o",
      "offset": [
        8827,
        8996
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2675": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2678": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "2680": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2682": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA82"
    },
    "2685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2686": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x341B"
    },
    "2689": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2690": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2691": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2697": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2698": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2701": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2703": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2707": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2709": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2716": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2724": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAE"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x341B"
    },
    "2733": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2735": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2737": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2740": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "3"
    },
    "2745": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD0"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2757": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2758": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2775": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2778": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2780": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2781": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2782": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2785": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2786": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2787": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2788": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2790": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2791": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2792": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2794": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2795": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2796": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "3"
    },
    "2798": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADE"
    },
    "2801": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2802": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2803": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2804": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "3"
    },
    "2805": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2807": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "3"
    },
    "2808": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2809": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2810": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2811": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2812": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2813": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2814": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2815": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2817": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "3"
    },
    "2819": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2820": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2821": {
      "fn": "ERC721.getApproved",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2822": {
      "fn": "ERC721.getApproved",
      "offset": [
        4075,
        4082
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2824": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "2825": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2829": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2831": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2834": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "SUB"
    },
    "2845": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "2846": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0xB83"
    },
    "2849": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2852": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2864": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2866": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "ADD",
      "path": "3"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2932": {
      "op": "DUP3"
    },
    "2933": {
      "op": "ADD"
    },
    "2934": {
      "op": "MSTORE"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2941": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2942": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2943": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2944": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SUB",
      "path": "3"
    },
    "2945": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2946": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2947": {
      "fn": "ERC721.getApproved",
      "offset": [
        4094,
        4167
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "2951": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2952": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2953": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2954": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2956": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2958": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2959": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2961": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2962": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2963": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "op": "SUB"
    },
    "2972": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "AND",
      "path": "3"
    },
    "2973": {
      "fn": "ERC721.getApproved",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2974": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3999,
        4216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2975": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2976": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2978": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBAA"
    },
    "2981": {
      "fn": "ERC721.approve",
      "offset": [
        3648,
        3655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2982": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3647
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1719"
    },
    "2985": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2986": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721.approve",
      "offset": [
        3617,
        3656
      ],
      "op": "POP",
      "path": "3"
    },
    "2989": {
      "fn": "ERC721.approve",
      "offset": [
        3680,
        3685
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 9
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "2999": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3676
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "AND",
      "path": "3"
    },
    "3009": {
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "EQ",
      "path": "3"
    },
    "3010": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3674,
        3685
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3011": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC18"
    },
    "3014": {
      "branch": 179,
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3015": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3017": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3026": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3029": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3031": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3032": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "ADD",
      "path": "3"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3038": {
      "op": "DUP3"
    },
    "3039": {
      "op": "ADD"
    },
    "3040": {
      "op": "MSTORE"
    },
    "3041": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3076": {
      "op": "DUP3"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "MSTORE"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3666,
        3723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3097": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 10
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "op": "SUB"
    },
    "3106": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 11
    },
    "3107": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "AND",
      "path": "3"
    },
    "3108": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "EQ",
      "path": "3"
    },
    "3109": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3110": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC34"
    },
    "3113": {
      "branch": 180,
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3817
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3114": {
      "op": "POP"
    },
    "3115": {
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC34"
    },
    "3118": {
      "fn": "ERC721.approve",
      "offset": [
        3797,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3119": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3120": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4502,
        4664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B7"
    },
    "3123": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4502,
        4664
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3124": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3780,
        3817
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3125": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA6"
    },
    "3128": {
      "branch": 181,
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3129": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3131": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3140": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3143": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3145": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3146": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "ADD",
      "path": "3"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3152": {
      "op": "DUP3"
    },
    "3153": {
      "op": "ADD"
    },
    "3154": {
      "op": "MSTORE"
    },
    "3155": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3190": {
      "op": "DUP3"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "MSTORE"
    },
    "3193": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "ADD"
    },
    "3230": {
      "op": "MSTORE"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3237": {
      "op": "JUMP"
    },
    "3238": {
      "fn": "ERC721.approve",
      "offset": [
        3734,
        3899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3239": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0xCB0"
    },
    "3242": {
      "fn": "ERC721.approve",
      "offset": [
        3919,
        3921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3243": {
      "fn": "ERC721.approve",
      "offset": [
        3923,
        3930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3244": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "3247": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3248": {
      "fn": "ERC721.approve",
      "offset": [
        3910,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3249": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3250": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3251": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "3252": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3253": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3254": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3256": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3263": {
      "op": "SHL"
    },
    "3264": {
      "op": "SUB"
    },
    "3265": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3269": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3270": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3271": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3272": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3273": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3274": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE5"
    },
    "3277": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "3296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "3300": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3302": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6106,
        6107
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x0"
    },
    "3304": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6080,
        6095
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3305": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6074,
        6103
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3306": {
      "branch": 156,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6074,
        6107
      ],
      "op": "GT",
      "path": "16"
    },
    "3307": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD46"
    },
    "3310": {
      "branch": 156,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3311": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3313": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3322": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3325": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3327": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3328": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "ADD",
      "path": "16"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3334": {
      "op": "DUP3"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "op": "MSTORE"
    },
    "3337": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682063616E6E6F7420626520656D70747920"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3372": {
      "op": "DUP3"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "op": "PUSH7",
      "value": "0x39BA3934B73397"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3385": {
      "op": "SHL"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3397": {
      "op": "JUMP"
    },
    "3398": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6066,
        6151
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3399": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0x11"
    },
    "3401": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3402": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "3406": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3407": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "DIV",
      "path": "16"
    },
    "3408": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3410": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6170,
        6190
      ],
      "op": "AND",
      "path": "16"
    },
    "3411": {
      "branch": 157,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6169,
        6190
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3412": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD9F"
    },
    "3415": {
      "branch": 157,
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3416": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3418": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3427": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3432": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3433": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "ADD",
      "path": "16"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E636520686173682069732066726F7A656E2E000000000000"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3482": {
      "op": "ADD"
    },
    "3483": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3486": {
      "op": "JUMP"
    },
    "3487": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6161,
        6221
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3488": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 15
    },
    "3489": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3490": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "3493": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3494": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6245
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "3496": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6245
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3497": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3499": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3500": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "ADD",
      "path": "16"
    },
    "3501": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3502": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F07"
    },
    "3505": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "i",
      "offset": [
        6231,
        6263
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3506": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3507": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "POP",
      "path": "16"
    },
    "3508": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "POP",
      "path": "16"
    },
    "3509": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3510": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3511": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3513": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3525": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3526": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3527": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "3528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3529": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3530": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3531": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE6"
    },
    "3534": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3537": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3549": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3550": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "3553": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3554": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "3557": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3558": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3559": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6742,
        6751
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 16,
      "value": "0x17"
    },
    "3561": {
      "fn": "CryptidToken.setSalePrice",
      "offset": [
        6742,
        6764
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "3562": {
      "fn": "CryptidToken.setSalePrice",
      "jump": "o",
      "offset": [
        6671,
        6771
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3563": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4726,
        5056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3564": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 17,
      "value": "0xDF5"
    },
    "3567": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3568": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4948,
        4955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3569": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2343"
    },
    "3572": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3573": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4915,
        4956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3574": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE11"
    },
    "3577": {
      "branch": 182,
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3578": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3580": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3590": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "ADD",
      "path": "3"
    },
    "3593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "3596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x348B"
    },
    "3600": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4907,
        5010
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5049
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xCB0"
    },
    "3605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5031,
        5035
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5037,
        5039
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5041,
        5048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3608": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5021,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x243A"
    },
    "3611": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5021,
        5049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3612": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3613": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3615": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3617": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3618": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "3619": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3620": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6F"
    },
    "3623": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3624": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3626": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3635": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3638": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3640": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3641": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "3642": {
      "op": "MSTORE"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3647": {
      "op": "DUP3"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "MSTORE"
    },
    "3650": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3685": {
      "op": "DUP3"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "op": "MSTORE"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7A"
    },
    "3694": {
      "op": "JUMP"
    },
    "3695": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3696": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3698": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3700": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3701": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3703": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3704": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3706": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "3707": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3708": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE97"
    },
    "3711": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3712": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3714": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3721": {
      "op": "SHL"
    },
    "3722": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3723": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3724": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3726": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3727": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "3730": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3731": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34DC"
    },
    "3734": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3735": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3736": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4381,
        4397
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 19,
      "value": "0x4"
    },
    "3738": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "3740": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4377
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3741": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4377
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3743": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4377
      ],
      "op": "AND",
      "path": "16"
    },
    "3744": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3746": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3747": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "GT",
      "path": "16"
    },
    "3748": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3749": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB0"
    },
    "3752": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3753": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEB0"
    },
    "3756": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A0"
    },
    "3759": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4372,
        4397
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3760": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3761": {
      "branch": 158,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4372,
        4397
      ],
      "op": "EQ",
      "path": "16"
    },
    "3762": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEFD"
    },
    "3765": {
      "branch": 158,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3766": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3768": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3777": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3782": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3783": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "ADD",
      "path": "16"
    },
    "3784": {
      "op": "MSTORE"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3789": {
      "op": "DUP3"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH32",
      "value": "0x5075626C69632053616C65206E6F7420696E697469617465642E000000000000"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "MSTORE"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3836": {
      "op": "JUMP"
    },
    "3837": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4364,
        4428
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3838": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4472,
        4481
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 20
    },
    "3839": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4458,
        4468
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3840": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4455
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "3842": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4455
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3843": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4468
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF0C"
    },
    "3846": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4468
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3847": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4468
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3848": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4468
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x351C"
    },
    "3851": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4446,
        4468
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3852": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4468
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3853": {
      "branch": 159,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4446,
        4481
      ],
      "op": "EQ",
      "path": "16"
    },
    "3854": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF55"
    },
    "3857": {
      "branch": 159,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3858": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3860": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3869": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3872": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3874": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3875": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "ADD",
      "path": "16"
    },
    "3876": {
      "op": "MSTORE"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3881": {
      "op": "DUP3"
    },
    "3882": {
      "op": "ADD"
    },
    "3883": {
      "op": "MSTORE"
    },
    "3884": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3915": {
      "op": "DUP3"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3920": {
      "op": "ADD"
    },
    "3921": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "3924": {
      "op": "JUMP"
    },
    "3925": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4438,
        4511
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3926": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4560,
        4575
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x16"
    },
    "3928": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4560,
        4575
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3929": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4546,
        4556
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3930": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4542
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF62"
    },
    "3933": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3935": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3936": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3937": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3938": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4542
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3939": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF6C"
    },
    "3942": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4556
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3943": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4556
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3944": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4556
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x353B"
    },
    "3947": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4529,
        4556
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3948": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4556
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3949": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4575
      ],
      "op": "GT",
      "path": "16"
    },
    "3950": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4529,
        4575
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3951": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFC9"
    },
    "3954": {
      "branch": 160,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3955": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3957": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3964": {
      "op": "SHL"
    },
    "3965": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3966": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3969": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3971": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3972": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "ADD",
      "path": "16"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3978": {
      "op": "DUP3"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "op": "MSTORE"
    },
    "3981": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C2073616C652073"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "PUSH6",
      "value": "0x3AB838363C97"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4028": {
      "op": "SHL"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4031": {
      "op": "DUP3"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "op": "MSTORE"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4036": {
      "op": "ADD"
    },
    "4037": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4040": {
      "op": "JUMP"
    },
    "4041": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4521,
        4618
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4042": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4650,
        4662
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 22,
      "value": "0x11"
    },
    "4044": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4650,
        4662
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4045": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4650,
        4662
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4047": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4650,
        4662
      ],
      "op": "AND",
      "path": "16"
    },
    "4048": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4636,
        4662
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4049": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4636,
        4662
      ],
      "op": "GT",
      "path": "16"
    },
    "4050": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4636,
        4662
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4051": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1031"
    },
    "4054": {
      "branch": 161,
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4055": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4057": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4066": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4071": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4072": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "ADD",
      "path": "16"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4078": {
      "op": "DUP3"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "op": "PUSH32",
      "value": "0x45786365656473206D617820616C6C6F776564206D696E747320706572207472"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4116": {
      "op": "DUP3"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH10",
      "value": "0x30B739B0B1BA34B7B717"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4132": {
      "op": "SHL"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4135": {
      "op": "DUP3"
    },
    "4136": {
      "op": "ADD"
    },
    "4137": {
      "op": "MSTORE"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4140": {
      "op": "ADD"
    },
    "4141": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4144": {
      "op": "JUMP"
    },
    "4145": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4628,
        4709
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4146": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4738,
        4739
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4148": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4149": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4746,
        4756
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4150": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4741,
        4742
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4151": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4741,
        4756
      ],
      "op": "GT",
      "path": "16"
    },
    "4152": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x106D"
    },
    "4155": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4156": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4777,
        4825
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 23,
      "value": "0x104D"
    },
    "4159": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4787,
        4797
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4160": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4799,
        4824
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1048"
    },
    "4163": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4799,
        4814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4165": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 24
    },
    "4166": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4167": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4168": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4799,
        4824
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4169": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4777,
        4786
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25E1"
    },
    "4172": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4777,
        4825
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4173": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4777,
        4825
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4174": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4839,
        4866
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 25,
      "value": "0x105B"
    },
    "4177": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4839,
        4854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4179": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 26
    },
    "4180": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4181": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4183": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "4184": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4185": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4186": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4187": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4839,
        4866
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4188": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 27
    },
    "4189": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1065"
    },
    "4192": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4193": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3553"
    },
    "4196": {
      "fn": "CryptidToken.publicMint",
      "jump": "i",
      "offset": [
        4758,
        4761
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4197": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4198": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4199": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "POP",
      "path": "16"
    },
    "4200": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4758,
        4761
      ],
      "op": "POP",
      "path": "16"
    },
    "4201": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1034"
    },
    "4204": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4205": {
      "fn": "CryptidToken.publicMint",
      "offset": [
        4721,
        4877
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "op": "POP"
    },
    "4208": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4210": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4212": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4213": {
      "fn": "CryptidToken.publicMint",
      "jump": "o",
      "offset": [
        4215,
        4883
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4214": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4215": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4217": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 28,
      "value": "0x1081"
    },
    "4220": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4221": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1831"
    },
    "4224": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4225": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4226": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4227": {
      "branch": 192,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "6"
    },
    "4228": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E3"
    },
    "4231": {
      "branch": 192,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4232": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4234": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4243": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4246": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4248": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4249": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "6"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4310": {
      "op": "SHL"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4313": {
      "op": "DUP3"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "MSTORE"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4318": {
      "op": "ADD"
    },
    "4319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "4322": {
      "op": "JUMP"
    },
    "4323": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4331": {
      "op": "SHL"
    },
    "4332": {
      "op": "SUB"
    },
    "4333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 29
    },
    "4334": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4335": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4336": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "6"
    },
    "4337": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4339": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4340": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4341": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4342": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4344": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4346": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4348": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4349": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4351": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4352": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4353": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4354": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4355": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4356": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4357": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4358": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4359": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4360": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4361": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4362": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4363": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4364": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3022,
        3661
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4365": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4367": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4369": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4370": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "2"
    },
    "4371": {
      "branch": 201,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4372": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x115F"
    },
    "4375": {
      "branch": 201,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4376": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4378": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4387": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4390": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4392": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4393": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "2"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4399": {
      "op": "DUP3"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "MSTORE"
    },
    "4402": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7A"
    },
    "4446": {
      "op": "JUMP"
    },
    "4447": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4448": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4450": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4452": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4453": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4455": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4456": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4458": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "4459": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4460": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1187"
    },
    "4463": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4464": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4466": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4473": {
      "op": "SHL"
    },
    "4474": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4475": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4476": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4478": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "4479": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "4482": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4483": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34DC"
    },
    "4486": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4487": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4488": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3202,
        3217
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 30,
      "value": "0x2"
    },
    "4490": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3198
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "4492": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3198
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4493": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3198
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4495": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3198
      ],
      "op": "AND",
      "path": "16"
    },
    "4496": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4498": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4499": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "GT",
      "path": "16"
    },
    "4500": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4501": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A0"
    },
    "4504": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4505": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11A0"
    },
    "4508": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A0"
    },
    "4511": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3193,
        3217
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4512": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4513": {
      "branch": 162,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3193,
        3217
      ],
      "op": "EQ",
      "path": "16"
    },
    "4514": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11ED"
    },
    "4517": {
      "branch": 162,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4518": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4520": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4529": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4532": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4534": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4535": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "ADD",
      "path": "16"
    },
    "4536": {
      "op": "MSTORE"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH32",
      "value": "0x57686974656C6973742073616C65206E6F7420696E697469617465642E000000"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4579": {
      "op": "DUP3"
    },
    "4580": {
      "op": "ADD"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4584": {
      "op": "ADD"
    },
    "4585": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4588": {
      "op": "JUMP"
    },
    "4589": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3185,
        3251
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4590": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3282,
        3291
      ],
      "op": "CALLVALUE",
      "path": "16",
      "statement": 31
    },
    "4591": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3269,
        3278
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x17"
    },
    "4593": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3269,
        3278
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4594": {
      "branch": 163,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3269,
        3291
      ],
      "op": "EQ",
      "path": "16"
    },
    "4595": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x123A"
    },
    "4598": {
      "branch": 163,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4599": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4601": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4608": {
      "op": "SHL"
    },
    "4609": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4610": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4613": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4615": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4616": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "ADD",
      "path": "16"
    },
    "4617": {
      "op": "MSTORE"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4622": {
      "op": "DUP3"
    },
    "4623": {
      "op": "ADD"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "PUSH25",
      "value": "0x24B731B7B93932B1BA1022AA24103B30B63AB29039B2B73A17"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4653": {
      "op": "SHL"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "ADD"
    },
    "4658": {
      "op": "MSTORE"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4661": {
      "op": "ADD"
    },
    "4662": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4665": {
      "op": "JUMP"
    },
    "4666": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3261,
        3321
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4667": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3358,
        3368
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 32,
      "value": "0xD"
    },
    "4669": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3358,
        3368
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4670": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4672": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4673": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4686": {
      "op": "NOT"
    },
    "4687": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3397,
        3407
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4690": {
      "op": "SHL"
    },
    "4691": {
      "op": "AND"
    },
    "4692": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4694": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4695": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "ADD",
      "path": "16"
    },
    "4696": {
      "op": "MSTORE"
    },
    "4697": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12B3"
    },
    "4700": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4701": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3358,
        3368
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4707": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4708": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4710": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4711": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4712": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "SUB",
      "path": "16"
    },
    "4713": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "SUB",
      "path": "16"
    },
    "4714": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4715": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4716": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4717": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4719": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3380,
        3408
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4720": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4721": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4722": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4723": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4725": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "ADD",
      "path": "16"
    },
    "4726": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3370,
        3409
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4727": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3350
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4728": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3350
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4729": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4730": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4731": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4733": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MUL",
      "path": "16"
    },
    "4734": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4736": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "ADD",
      "path": "16"
    },
    "4737": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4739": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4740": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4741": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4742": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "ADD",
      "path": "16"
    },
    "4743": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4745": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4746": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4747": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4748": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4749": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4750": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4751": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4752": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4753": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4754": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4756": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "ADD",
      "path": "16"
    },
    "4757": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4758": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP4",
      "path": "16"
    },
    "4759": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4761": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MUL",
      "path": "16"
    },
    "4762": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4763": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4764": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "DUP5",
      "path": "16"
    },
    "4765": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "4766": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4768": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4769": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "ADD",
      "path": "16"
    },
    "4770": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4771": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4772": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4773": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4776": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "4777": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "4778": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3357
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25FB"
    },
    "4784": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "fn": "CryptidToken.whitelistMint",
      "jump": "i",
      "offset": [
        3339,
        3410
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4787": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3339,
        3410
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4788": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12FF"
    },
    "4791": {
      "branch": 164,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4792": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4794": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4801": {
      "op": "SHL"
    },
    "4802": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4803": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4806": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4808": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4809": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "ADD",
      "path": "16"
    },
    "4810": {
      "op": "MSTORE"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4815": {
      "op": "DUP3"
    },
    "4816": {
      "op": "ADD"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E2077686974656C6973742E00000000000000"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4853": {
      "op": "DUP3"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4862": {
      "op": "JUMP"
    },
    "4863": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3331,
        3440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4864": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3466,
        3476
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 33
    },
    "4865": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4867": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4868": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4869": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4870": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4872": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4874": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4875": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4877": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4878": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4879": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4880": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4882": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3477
      ],
      "op": "AND",
      "path": "16"
    },
    "4883": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3458,
        3486
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4884": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x135F"
    },
    "4887": {
      "branch": 165,
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4888": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4890": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4897": {
      "op": "SHL"
    },
    "4898": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4899": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4902": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4904": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4905": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "ADD",
      "path": "16"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4911": {
      "op": "DUP3"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "MSTORE"
    },
    "4914": {
      "op": "PUSH32",
      "value": "0x57686974656C697374206D696E7420616C726561647920636C61696D65642E00"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4949": {
      "op": "DUP3"
    },
    "4950": {
      "op": "ADD"
    },
    "4951": {
      "op": "MSTORE"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4954": {
      "op": "ADD"
    },
    "4955": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "4958": {
      "op": "JUMP"
    },
    "4959": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3450,
        3522
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4960": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3541,
        3551
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 34
    },
    "4961": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4963": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4964": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4965": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4966": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3540
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "4968": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4970": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4971": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4973": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4974": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3552
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4975": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4976": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4979": {
      "op": "NOT"
    },
    "4980": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "AND",
      "path": "16"
    },
    "4981": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3555,
        3559
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4983": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "OR",
      "path": "16"
    },
    "4984": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4985": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3533,
        3559
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4986": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3569,
        3617
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 35,
      "value": "0x1386"
    },
    "4989": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3569,
        3617
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4990": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3591,
        3616
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1048"
    },
    "4993": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3591,
        3606
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "4995": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4996": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4997": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4998": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3569,
        3617
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4999": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3627,
        3654
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 36,
      "value": "0x106D"
    },
    "5002": {
      "fn": "CryptidToken.whitelistMint",
      "offset": [
        3627,
        3642
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "5004": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5005": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5006": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5008": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "5009": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5010": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5011": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5012": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6777,
        7041
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5013": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5015": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "op": "SUB"
    },
    "5024": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5027": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5028": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5029": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5031": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5032": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5033": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C4"
    },
    "5036": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5046": {
      "op": "SHL"
    },
    "5047": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5056": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "5059": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5061": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6866,
        6867
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 37,
      "value": "0x0"
    },
    "5063": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6842,
        6863
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5064": {
      "branch": 166,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6842,
        6867
      ],
      "op": "GT",
      "path": "16"
    },
    "5065": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x140D"
    },
    "5068": {
      "branch": 166,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5069": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5071": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5078": {
      "op": "SHL"
    },
    "5079": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5080": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5083": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5085": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5086": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "ADD",
      "path": "16"
    },
    "5087": {
      "op": "MSTORE"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5092": {
      "op": "DUP3"
    },
    "5093": {
      "op": "ADD"
    },
    "5094": {
      "op": "MSTORE"
    },
    "5095": {
      "op": "PUSH22",
      "value": "0x21B7B73A3930B1BA103130B630B731B29034B9901817"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5120": {
      "op": "SHL"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "ADD"
    },
    "5125": {
      "op": "MSTORE"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5128": {
      "op": "ADD"
    },
    "5129": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "5132": {
      "op": "JUMP"
    },
    "5133": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6834,
        6894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5134": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x11"
    },
    "5136": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5137": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5139": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5140": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6905,
        6917
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5142": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6905,
        6917
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5143": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "5148": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5149": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "DIV",
      "path": "16"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5156": {
      "op": "SHL"
    },
    "5157": {
      "op": "SUB"
    },
    "5158": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "AND",
      "path": "16"
    },
    "5159": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5160": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6961,
        6982
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "5161": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6961,
        6982
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5162": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6905,
        6917
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5163": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5164": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6905,
        6917
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5165": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5166": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6961,
        6982
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5167": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6931,
        6947
      ],
      "op": "DUP8",
      "path": "16"
    },
    "5168": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "GAS",
      "path": "16"
    },
    "5169": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "CALL",
      "path": "16"
    },
    "5170": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5171": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5172": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5173": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5174": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5175": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5176": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5178": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5179": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "EQ",
      "path": "16"
    },
    "5180": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1461"
    },
    "5183": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5184": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5186": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5187": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5188": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5189": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "5191": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "NOT",
      "path": "16"
    },
    "5192": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "5194": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5195": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "ADD",
      "path": "16"
    },
    "5196": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "AND",
      "path": "16"
    },
    "5197": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5198": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "ADD",
      "path": "16"
    },
    "5199": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5201": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5202": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5203": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5204": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5205": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "5206": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5208": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5210": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5211": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "ADD",
      "path": "16"
    },
    "5212": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "5213": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1466"
    },
    "5216": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5217": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5218": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5220": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5221": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5222": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5223": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6923,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5224": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6904,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5225": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6904,
        6987
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5226": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6904,
        6987
      ],
      "op": "POP",
      "path": "16"
    },
    "5227": {
      "branch": 167,
      "fn": "CryptidToken.withdraw",
      "offset": [
        7005,
        7012
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 38
    },
    "5228": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x14AB"
    },
    "5231": {
      "branch": 167,
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5232": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5234": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5241": {
      "op": "SHL"
    },
    "5242": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5243": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5246": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5248": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5249": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "ADD",
      "path": "16"
    },
    "5250": {
      "op": "MSTORE"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5255": {
      "op": "DUP3"
    },
    "5256": {
      "op": "ADD"
    },
    "5257": {
      "op": "MSTORE"
    },
    "5258": {
      "op": "PUSH17",
      "value": "0x2BB4BA34323930BBB6103330B4B632B217"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "5278": {
      "op": "SHL"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "MSTORE"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "5290": {
      "op": "JUMP"
    },
    "5291": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6997,
        7034
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5292": {
      "fn": "CryptidToken.withdraw",
      "offset": [
        6824,
        7041
      ],
      "op": "POP",
      "path": "16"
    },
    "5293": {
      "fn": "CryptidToken.withdraw",
      "jump": "o",
      "offset": [
        6777,
        7041
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5294": {
      "fn": "CryptidToken.unpause",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5297": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5304": {
      "op": "SHL"
    },
    "5305": {
      "op": "SUB"
    },
    "5306": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5309": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5311": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5312": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5313": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5314": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5315": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DE"
    },
    "5318": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5321": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5322": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5328": {
      "op": "SHL"
    },
    "5329": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5330": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5333": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5334": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5337": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5338": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "5341": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5342": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5343": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5026,
        5036
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 39,
      "value": "0x14E6"
    },
    "5346": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5026,
        5034
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2611"
    },
    "5349": {
      "fn": "CryptidToken.unpause",
      "jump": "i",
      "offset": [
        5026,
        5036
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5350": {
      "fn": "CryptidToken.unpause",
      "offset": [
        5026,
        5036
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5351": {
      "fn": "CryptidToken.unpause",
      "jump": "o",
      "offset": [
        4978,
        5043
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5352": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5122,
        5301
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5353": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xCB0"
    },
    "5356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5278,
        5280
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5358": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5282,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5359": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5362": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "ADD",
      "path": "3"
    },
    "5366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5368": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5369": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5372": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5374": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5294
      ],
      "op": "POP",
      "path": "3"
    },
    "5375": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5255,
        5271
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB1"
    },
    "5378": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5255,
        5294
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5379": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5380": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "5382": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8052,
        8075
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5384": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8078,
        8094
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1510"
    },
    "5387": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8088,
        8093
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5388": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8078,
        8087
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1831"
    },
    "5391": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8078,
        8094
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5392": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8078,
        8094
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5393": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8052,
        8094
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5394": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8052,
        8094
      ],
      "op": "POP",
      "path": "16"
    },
    "5395": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8104,
        8130
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5397": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8147,
        8162
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5398": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH8",
      "path": "16",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5407": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5408": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "GT",
      "path": "16"
    },
    "5409": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5410": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x152D"
    },
    "5413": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5414": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x152D"
    },
    "5417": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30A4"
    },
    "5420": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8133,
        8163
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5421": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5422": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5424": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5425": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5426": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5427": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5428": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5429": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5430": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5432": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "MUL",
      "path": "16"
    },
    "5433": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5435": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ADD",
      "path": "16"
    },
    "5436": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5437": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ADD",
      "path": "16"
    },
    "5438": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5440": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5441": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5442": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5443": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1556"
    },
    "5446": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5447": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5448": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5450": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ADD",
      "path": "16"
    },
    "5451": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5453": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5454": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "MUL",
      "path": "16"
    },
    "5455": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5456": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "5457": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "DUP4",
      "path": "16"
    },
    "5458": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "5459": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "ADD",
      "path": "16"
    },
    "5460": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5463": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8133,
        8163
      ],
      "op": "POP",
      "path": "16"
    },
    "5464": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8104,
        8163
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5465": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8104,
        8163
      ],
      "op": "POP",
      "path": "16"
    },
    "5466": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8178,
        8187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5468": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5469": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8193,
        8208
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5470": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8189,
        8190
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5471": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8189,
        8208
      ],
      "op": "LT",
      "path": "16"
    },
    "5472": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5473": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159D"
    },
    "5476": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5477": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8273
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 41,
      "value": "0x156E"
    },
    "5480": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8264,
        8269
      ],
      "op": "DUP6",
      "path": "16"
    },
    "5481": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8271,
        8272
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5482": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8263
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1076"
    },
    "5485": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8244,
        8273
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5486": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8244,
        8273
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5487": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8238
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5488": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8239,
        8240
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5489": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5490": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5491": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5492": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "LT",
      "path": "16"
    },
    "5493": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1580"
    },
    "5496": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5497": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1580"
    },
    "5500": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x356E"
    },
    "5503": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8229,
        8241
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5504": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5505": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5507": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5508": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5509": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "MUL",
      "path": "16"
    },
    "5510": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5511": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5512": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5513": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "ADD",
      "path": "16"
    },
    "5514": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8241
      ],
      "op": "ADD",
      "path": "16"
    },
    "5515": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8229,
        8273
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5516": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 42
    },
    "5517": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1595"
    },
    "5520": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5521": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3553"
    },
    "5524": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "i",
      "offset": [
        8210,
        8213
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5525": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5526": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "5527": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "POP",
      "path": "16"
    },
    "5528": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8210,
        8213
      ],
      "op": "POP",
      "path": "16"
    },
    "5529": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x155C"
    },
    "5532": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5533": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8173,
        8284
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5534": {
      "op": "POP"
    },
    "5535": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        8300,
        8309
      ],
      "op": "SWAP4",
      "path": "16",
      "statement": 43
    },
    "5536": {
      "fn": "CryptidToken.walletOfOwner",
      "offset": [
        7963,
        8316
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "5537": {
      "op": "POP"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "op": "POP"
    },
    "5540": {
      "fn": "CryptidToken.walletOfOwner",
      "jump": "o",
      "offset": [
        7963,
        8316
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5541": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5542": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5544": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 44,
      "value": "0x15B0"
    },
    "5547": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "5549": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5550": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5551": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5552": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5553": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5554": {
      "branch": 193,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "6"
    },
    "5555": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1613"
    },
    "5558": {
      "branch": 193,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5559": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5561": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5570": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5573": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5575": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5576": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "6"
    },
    "5577": {
      "op": "MSTORE"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "ADD"
    },
    "5584": {
      "op": "MSTORE"
    },
    "5585": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5620": {
      "op": "DUP3"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "MSTORE"
    },
    "5623": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5638": {
      "op": "SHL"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5641": {
      "op": "DUP3"
    },
    "5642": {
      "op": "ADD"
    },
    "5643": {
      "op": "MSTORE"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "5650": {
      "op": "JUMP"
    },
    "5651": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5652": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 45,
      "value": "0x8"
    },
    "5654": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5655": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5656": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5657": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5658": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "6"
    },
    "5659": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1626"
    },
    "5662": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5663": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1626"
    },
    "5666": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356E"
    },
    "5669": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5670": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5671": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5672": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5674": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5675": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5677": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5679": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5680": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "5681": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5682": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5683": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "6"
    },
    "5684": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5685": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5686": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "6"
    },
    "5687": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5688": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5450,
        5610
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5689": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5691": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5698": {
      "op": "SHL"
    },
    "5699": {
      "op": "SUB"
    },
    "5700": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5704": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5706": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5707": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5708": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5709": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1668"
    },
    "5712": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5722": {
      "op": "SHL"
    },
    "5723": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5724": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5728": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "5735": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5737": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 46,
      "value": "0x11"
    },
    "5739": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5740": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "5743": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5744": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "DIV",
      "path": "16"
    },
    "5745": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "5747": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5535,
        5549
      ],
      "op": "AND",
      "path": "16"
    },
    "5748": {
      "branch": 168,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5534,
        5549
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "5749": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x16B5"
    },
    "5752": {
      "branch": 168,
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "5753": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5755": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5762": {
      "op": "SHL"
    },
    "5763": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5764": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5767": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "5769": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5770": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "ADD",
      "path": "16"
    },
    "5771": {
      "op": "MSTORE"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5776": {
      "op": "DUP3"
    },
    "5777": {
      "op": "ADD"
    },
    "5778": {
      "op": "MSTORE"
    },
    "5779": {
      "op": "PUSH18",
      "value": "0x2130B9B2AAA9249034B990333937BD32B717"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "op": "MSTORE"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "5812": {
      "op": "JUMP"
    },
    "5813": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5526,
        5572
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5814": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 47
    },
    "5815": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "5816": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "5819": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5820": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5589
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "5822": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5589
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5823": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5825": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "DUP5",
      "path": "16"
    },
    "5826": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "ADD",
      "path": "16"
    },
    "5827": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5828": {
      "fn": "CryptidToken.setBaseURI",
      "offset": [
        5582,
        5603
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F07"
    },
    "5831": {
      "fn": "CryptidToken.setBaseURI",
      "jump": "i",
      "offset": [
        5582,
        5603
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5832": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "5833": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5835": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5842": {
      "op": "SHL"
    },
    "5843": {
      "op": "SUB"
    },
    "5844": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5847": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5849": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "5850": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5851": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5852": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5853": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F8"
    },
    "5856": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5857": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5866": {
      "op": "SHL"
    },
    "5867": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5868": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5872": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "5875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "5879": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5887": {
      "op": "SHL"
    },
    "5888": {
      "op": "SUB"
    },
    "5889": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "AND",
      "path": "16",
      "statement": 48
    },
    "5890": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5322,
        5327
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "5892": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5893": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5894": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5895": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5308
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "5897": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5899": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5900": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5902": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5903": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5319
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5904": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5327
      ],
      "op": "DUP1",
      "path": "16"
    },
    "5905": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5327
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5908": {
      "op": "NOT"
    },
    "5909": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5327
      ],
      "op": "AND",
      "path": "16"
    },
    "5910": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5327
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5911": {
      "fn": "CryptidToken.undoClaim",
      "offset": [
        5301,
        5327
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "5912": {
      "fn": "CryptidToken.undoClaim",
      "jump": "o",
      "offset": [
        5235,
        5334
      ],
      "op": "JUMP",
      "path": "16"
    },
    "5913": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5914": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5916": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5917": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5918": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5919": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5921": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5923": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5924": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5926": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5927": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5928": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5935": {
      "op": "SHL"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "3"
    },
    "5938": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 49
    },
    "5939": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "5942": {
      "branch": 183,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5943": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5945": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5952": {
      "op": "SHL"
    },
    "5953": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5954": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5957": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5959": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5960": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5966": {
      "op": "DUP3"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "op": "MSTORE"
    },
    "5969": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6004": {
      "op": "DUP3"
    },
    "6005": {
      "op": "ADD"
    },
    "6006": {
      "op": "MSTORE"
    },
    "6007": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6019": {
      "op": "SHL"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6022": {
      "op": "DUP3"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6027": {
      "op": "ADD"
    },
    "6028": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "6031": {
      "op": "JUMP"
    },
    "6032": {
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6033": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6035": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6036": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6037": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x179D"
    },
    "6040": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6041": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "6044": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6045": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6046": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6047": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6049": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6050": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6052": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6053": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6054": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "6055": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "6056": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6058": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6059": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6061": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6062": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6063": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6064": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6065": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6067": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6068": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6069": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6070": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6071": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6072": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6073": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6074": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6075": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6077": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6078": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6079": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6080": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6081": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17C9"
    },
    "6084": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6085": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "6088": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6089": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6090": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6091": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6092": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1816"
    },
    "6095": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6096": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6097": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6099": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "LT",
      "path": "16"
    },
    "6100": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17EB"
    },
    "6103": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6104": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "6107": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6108": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6109": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6110": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DIV",
      "path": "16"
    },
    "6111": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MUL",
      "path": "16"
    },
    "6112": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6113": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6114": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6115": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6117": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6118": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6119": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1816"
    },
    "6122": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6123": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6124": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6125": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6126": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6127": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6128": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6130": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6131": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6133": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6135": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6136": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6137": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6138": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6139": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6140": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6141": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6142": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6143": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6145": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6146": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6147": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6149": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6150": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6151": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6152": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "GT",
      "path": "16"
    },
    "6153": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17F9"
    },
    "6156": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6157": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6158": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6159": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SUB",
      "path": "16"
    },
    "6160": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6162": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "AND",
      "path": "16"
    },
    "6163": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6164": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "ADD",
      "path": "16"
    },
    "6165": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6166": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6167": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6168": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6169": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6170": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6171": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "POP",
      "path": "16"
    },
    "6172": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1139,
        1165
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6173": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1139,
        1165
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6174": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6175": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7411,
        7418
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6177": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7436,
        7458
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 50,
      "value": "0x182C"
    },
    "6180": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7444,
        7457
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x63F"
    },
    "6183": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "6185": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6186": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6187": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6188": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7436,
        7458
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6189": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7429,
        7458
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6190": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7429,
        7458
      ],
      "op": "POP",
      "path": "16"
    },
    "6191": {
      "fn": "CryptidToken.lastMintAddress",
      "offset": [
        7361,
        7465
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6192": {
      "fn": "CryptidToken.lastMintAddress",
      "jump": "o",
      "offset": [
        7361,
        7465
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6193": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6194": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 51
    },
    "6205": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "6206": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x189C"
    },
    "6209": {
      "branch": 184,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6210": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6212": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6219": {
      "op": "SHL"
    },
    "6220": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6221": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6224": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6226": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6227": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "3"
    },
    "6228": {
      "op": "MSTORE"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "ADD"
    },
    "6235": {
      "op": "MSTORE"
    },
    "6236": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6271": {
      "op": "DUP3"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6287": {
      "op": "SHL"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6290": {
      "op": "DUP3"
    },
    "6291": {
      "op": "ADD"
    },
    "6292": {
      "op": "MSTORE"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6295": {
      "op": "ADD"
    },
    "6296": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "6299": {
      "op": "JUMP"
    },
    "6300": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6301": {
      "op": "POP"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6308": {
      "op": "SHL"
    },
    "6309": {
      "op": "SUB"
    },
    "6310": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "3",
      "statement": 52
    },
    "6311": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6313": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6314": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6315": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "6318": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6320": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6321": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6323": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6324": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6325": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6326": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6327": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6329": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6331": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6338": {
      "op": "SHL"
    },
    "6339": {
      "op": "SUB"
    },
    "6340": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6343": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6344": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6345": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6346": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6347": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6348": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6349": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E8"
    },
    "6352": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6353": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6355": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6362": {
      "op": "SHL"
    },
    "6363": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6364": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6365": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6368": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6371": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6372": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "6375": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x14E6"
    },
    "6380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A4"
    },
    "6385": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6386": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3694,
        4180
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6387": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6389": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "SUB"
    },
    "6398": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6401": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6402": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6403": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6404": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6405": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6406": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6407": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1922"
    },
    "6410": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6420": {
      "op": "SHL"
    },
    "6421": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6423": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6425": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "6433": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6435": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3813,
        3827
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 54,
      "value": "0x3"
    },
    "6437": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "6439": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3809
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6440": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3809
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6442": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3809
      ],
      "op": "AND",
      "path": "16"
    },
    "6443": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6445": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6446": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "GT",
      "path": "16"
    },
    "6447": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6448": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x193B"
    },
    "6451": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6452": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x193B"
    },
    "6455": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A0"
    },
    "6458": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3804,
        3827
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6459": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6460": {
      "branch": 169,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3804,
        3827
      ],
      "op": "EQ",
      "path": "16"
    },
    "6461": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1988"
    },
    "6464": {
      "branch": 169,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6465": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6467": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6474": {
      "op": "SHL"
    },
    "6475": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6476": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6479": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6481": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6482": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "ADD",
      "path": "16"
    },
    "6483": {
      "op": "MSTORE"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6488": {
      "op": "DUP3"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "op": "MSTORE"
    },
    "6491": {
      "op": "PUSH32",
      "value": "0x5465616D206D696E74206E6F7420696E697469617465642E0000000000000000"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6526": {
      "op": "DUP3"
    },
    "6527": {
      "op": "ADD"
    },
    "6528": {
      "op": "MSTORE"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6531": {
      "op": "ADD"
    },
    "6532": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6535": {
      "op": "JUMP"
    },
    "6536": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3796,
        3856
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6537": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3904,
        3918
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 55,
      "value": "0x14"
    },
    "6539": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3904,
        3918
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6540": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3887,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6542": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3887,
        3900
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6543": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x199B"
    },
    "6546": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6547": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6549": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6550": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "AND",
      "path": "16"
    },
    "6551": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x353B"
    },
    "6554": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3874,
        3900
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6555": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3900
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6556": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3918
      ],
      "op": "GT",
      "path": "16"
    },
    "6557": {
      "branch": 170,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3874,
        3918
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6558": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19FD"
    },
    "6561": {
      "branch": 170,
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6562": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6564": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6573": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6576": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6578": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6579": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "ADD",
      "path": "16"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6585": {
      "op": "DUP3"
    },
    "6586": {
      "op": "ADD"
    },
    "6587": {
      "op": "MSTORE"
    },
    "6588": {
      "op": "PUSH32",
      "value": "0x5472616E73616374696F6E206578636565647320746F74616C207465616D2073"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6623": {
      "op": "DUP3"
    },
    "6624": {
      "op": "ADD"
    },
    "6625": {
      "op": "MSTORE"
    },
    "6626": {
      "op": "PUSH11",
      "value": "0x30B6329039BAB838363C97"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "6640": {
      "op": "SHL"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6643": {
      "op": "DUP3"
    },
    "6644": {
      "op": "ADD"
    },
    "6645": {
      "op": "MSTORE"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6648": {
      "op": "ADD"
    },
    "6649": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6652": {
      "op": "JUMP"
    },
    "6653": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3866,
        3966
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6654": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3998,
        4008
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 56
    },
    "6655": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6657": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "AND",
      "path": "16"
    },
    "6658": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        3994
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x15"
    },
    "6660": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        3994
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6662": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6663": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6664": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6665": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A12"
    },
    "6668": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6669": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6670": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x353B"
    },
    "6673": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        3981,
        4008
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6674": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6675": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6676": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6677": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        3981,
        4008
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6678": {
      "op": "POP"
    },
    "6679": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4035,
        4036
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "6681": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4035,
        4036
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6682": {
      "op": "POP"
    },
    "6683": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4018,
        4174
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6684": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4043,
        4053
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6685": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6687": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4053
      ],
      "op": "AND",
      "path": "16"
    },
    "6688": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4039
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6689": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4038,
        4053
      ],
      "op": "GT",
      "path": "16"
    },
    "6690": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4018,
        4174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "6693": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4018,
        4174
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6694": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4122
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 57,
      "value": "0x1A32"
    },
    "6697": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4084,
        4094
      ],
      "op": "CALLER",
      "path": "16"
    },
    "6698": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4096,
        4121
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1048"
    },
    "6701": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4096,
        4111
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6703": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6704": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6705": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6706": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4074,
        4122
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6707": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4136,
        4163
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 58,
      "value": "0x1A40"
    },
    "6710": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4136,
        4151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "6712": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6713": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6714": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6716": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "6717": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6718": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "6719": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6720": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4136,
        4163
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6721": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 59
    },
    "6722": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A4A"
    },
    "6725": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6726": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3553"
    },
    "6729": {
      "fn": "CryptidToken.teamMint",
      "jump": "i",
      "offset": [
        4055,
        4058
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6730": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6731": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6732": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "POP",
      "path": "16"
    },
    "6733": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4055,
        4058
      ],
      "op": "POP",
      "path": "16"
    },
    "6734": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4018,
        4174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A1B"
    },
    "6737": {
      "fn": "CryptidToken.teamMint",
      "offset": [
        4018,
        4174
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6738": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6739": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6741": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6748": {
      "op": "SHL"
    },
    "6749": {
      "op": "SUB"
    },
    "6750": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6753": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6754": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6755": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6756": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6757": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6758": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6759": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A82"
    },
    "6762": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6763": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6772": {
      "op": "SHL"
    },
    "6773": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "6785": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6786": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6787": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5413,
        5423
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 60,
      "value": "0xD"
    },
    "6789": {
      "fn": "CryptidToken.setMerkleRoot",
      "offset": [
        5413,
        5437
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6790": {
      "fn": "CryptidToken.setMerkleRoot",
      "jump": "o",
      "offset": [
        5340,
        5444
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6791": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6792": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6801": {
      "op": "SHL"
    },
    "6802": {
      "op": "SUB"
    },
    "6803": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "6806": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6807": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6808": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "6809": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "6810": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6811": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "6812": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB7"
    },
    "6815": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6818": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6819": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6825": {
      "op": "SHL"
    },
    "6826": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6827": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6828": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6830": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "6831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "6834": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6835": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "6838": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6839": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6840": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6376,
        6377
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 61,
      "value": "0x0"
    },
    "6842": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6351,
        6365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "6844": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6845": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6846": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC6"
    },
    "6849": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6850": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "6853": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "i",
      "offset": [
        6345,
        6373
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6854": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6855": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6856": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6373
      ],
      "op": "POP",
      "path": "16"
    },
    "6857": {
      "branch": 171,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6345,
        6377
      ],
      "op": "GT",
      "path": "16"
    },
    "6858": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B15"
    },
    "6861": {
      "branch": 171,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6862": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6864": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6871": {
      "op": "SHL"
    },
    "6872": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6873": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6876": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6878": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6879": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "ADD",
      "path": "16"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6885": {
      "op": "DUP3"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "MSTORE"
    },
    "6888": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206973206E6F74207365742E0000000000"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6923": {
      "op": "DUP3"
    },
    "6924": {
      "op": "ADD"
    },
    "6925": {
      "op": "MSTORE"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6928": {
      "op": "ADD"
    },
    "6929": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "6932": {
      "op": "JUMP"
    },
    "6933": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6337,
        6409
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6934": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 62,
      "value": "0x11"
    },
    "6936": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6937": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "6941": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6942": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "DIV",
      "path": "16"
    },
    "6943": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "6945": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6428,
        6448
      ],
      "op": "AND",
      "path": "16"
    },
    "6946": {
      "branch": 172,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6427,
        6448
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6947": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B79"
    },
    "6950": {
      "branch": 172,
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6951": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6953": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6960": {
      "op": "SHL"
    },
    "6961": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6962": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6965": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6967": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6968": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "ADD",
      "path": "16"
    },
    "6969": {
      "op": "MSTORE"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6974": {
      "op": "DUP3"
    },
    "6975": {
      "op": "ADD"
    },
    "6976": {
      "op": "MSTORE"
    },
    "6977": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E6365206861736820697320616C72656164792066726F7A65"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7012": {
      "op": "DUP3"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "MSTORE"
    },
    "7015": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7020": {
      "op": "SHL"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7023": {
      "op": "DUP3"
    },
    "7024": {
      "op": "ADD"
    },
    "7025": {
      "op": "MSTORE"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7032": {
      "op": "JUMP"
    },
    "7033": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6419,
        6487
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7034": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6517
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 63,
      "value": "0x11"
    },
    "7036": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7037": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7038": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "7042": {
      "op": "NOT"
    },
    "7043": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "AND",
      "path": "16"
    },
    "7044": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "7048": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "OR",
      "path": "16"
    },
    "7049": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7050": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "offset": [
        6497,
        6524
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7051": {
      "fn": "CryptidToken.freezeProvenanceHash",
      "jump": "o",
      "offset": [
        6276,
        6531
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7052": {
      "fn": "CryptidToken.pause",
      "offset": [
        4911,
        4972
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7053": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7055": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "op": "SUB"
    },
    "7064": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7067": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7068": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7069": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7070": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7071": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7072": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7073": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BBC"
    },
    "7076": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7077": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7079": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7086": {
      "op": "SHL"
    },
    "7087": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7095": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "7099": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7100": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7101": {
      "fn": "CryptidToken.pause",
      "offset": [
        4957,
        4965
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 64,
      "value": "0x14E6"
    },
    "7104": {
      "fn": "CryptidToken.pause",
      "offset": [
        4957,
        4963
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26FE"
    },
    "7107": {
      "fn": "CryptidToken.pause",
      "jump": "i",
      "offset": [
        4957,
        4965
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7108": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7109": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7111": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x1"
    },
    "7113": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7114": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7115": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA82"
    },
    "7118": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7119": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x341B"
    },
    "7122": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7123": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7124": {
      "fn": "CryptidToken.verify",
      "offset": [
        8432,
        8442
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "7126": {
      "fn": "CryptidToken.verify",
      "offset": [
        8432,
        8442
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7127": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7129": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7130": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7143": {
      "op": "NOT"
    },
    "7144": {
      "fn": "CryptidToken.verify",
      "offset": [
        8471,
        8481
      ],
      "op": "CALLER",
      "path": "16"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "op": "AND"
    },
    "7149": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7151": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7152": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "ADD",
      "path": "16"
    },
    "7153": {
      "op": "MSTORE"
    },
    "7154": {
      "fn": "CryptidToken.verify",
      "offset": [
        8393,
        8397
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7156": {
      "fn": "CryptidToken.verify",
      "offset": [
        8393,
        8397
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7157": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C4E"
    },
    "7160": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7166": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7167": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7169": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7170": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7171": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "SUB",
      "path": "16"
    },
    "7172": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "SUB",
      "path": "16"
    },
    "7173": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7174": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7175": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7176": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7178": {
      "fn": "CryptidToken.verify",
      "offset": [
        8454,
        8482
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7179": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7180": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7181": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7182": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7184": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "ADD",
      "path": "16"
    },
    "7185": {
      "fn": "CryptidToken.verify",
      "offset": [
        8444,
        8483
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7186": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8424
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7187": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8424
      ],
      "op": "DUP6",
      "path": "16"
    },
    "7188": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7189": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7190": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7192": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MUL",
      "path": "16"
    },
    "7193": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7195": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "ADD",
      "path": "16"
    },
    "7196": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7198": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7199": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7200": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7201": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "ADD",
      "path": "16"
    },
    "7202": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7204": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7205": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7206": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7207": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7208": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7209": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7210": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7211": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7212": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7213": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7215": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "ADD",
      "path": "16"
    },
    "7216": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7217": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7218": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7220": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MUL",
      "path": "16"
    },
    "7221": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7222": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7223": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "DUP5",
      "path": "16"
    },
    "7224": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "7225": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7227": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7228": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "ADD",
      "path": "16"
    },
    "7229": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7230": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7231": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7232": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7233": {
      "op": "POP"
    },
    "7234": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7235": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "7236": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7237": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7238": {
      "op": "POP"
    },
    "7239": {
      "op": "POP"
    },
    "7240": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8431
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25FB"
    },
    "7243": {
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7244": {
      "op": "POP"
    },
    "7245": {
      "fn": "CryptidToken.verify",
      "jump": "i",
      "offset": [
        8413,
        8484
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7246": {
      "branch": 173,
      "fn": "CryptidToken.verify",
      "offset": [
        8413,
        8484
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7247": {
      "fn": "CryptidToken.verify",
      "offset": [
        8409,
        8522
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7248": {
      "fn": "CryptidToken.verify",
      "offset": [
        8409,
        8522
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C5B"
    },
    "7251": {
      "branch": 173,
      "fn": "CryptidToken.verify",
      "offset": [
        8409,
        8522
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7252": {
      "op": "POP"
    },
    "7253": {
      "fn": "CryptidToken.verify",
      "offset": [
        8507,
        8511
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 66,
      "value": "0x1"
    },
    "7255": {
      "fn": "CryptidToken.verify",
      "offset": [
        8500,
        8511
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA6D"
    },
    "7258": {
      "fn": "CryptidToken.verify",
      "offset": [
        8500,
        8511
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7259": {
      "fn": "CryptidToken.verify",
      "offset": [
        8409,
        8522
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7260": {
      "op": "POP"
    },
    "7261": {
      "fn": "CryptidToken.verify",
      "offset": [
        8538,
        8543
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 67,
      "value": "0x0"
    },
    "7263": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7264": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7265": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "POP",
      "path": "16"
    },
    "7266": {
      "fn": "CryptidToken.verify",
      "offset": [
        8322,
        8550
      ],
      "op": "POP",
      "path": "16"
    },
    "7267": {
      "fn": "CryptidToken.verify",
      "jump": "o",
      "offset": [
        8322,
        8550
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7268": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4283,
        4436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7269": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4429
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 68,
      "value": "0xDB2"
    },
    "7272": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7273": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4410,
        4418
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7274": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4420,
        4428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7275": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2756"
    },
    "7278": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7279": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2530,
        2984
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7280": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7282": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7289": {
      "op": "SHL"
    },
    "7290": {
      "op": "SUB"
    },
    "7291": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7294": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7296": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7297": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7298": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7299": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7300": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9F"
    },
    "7303": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7313": {
      "op": "SHL"
    },
    "7314": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7316": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7318": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7322": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "7326": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7327": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7328": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2674,
        2684
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0x0"
    },
    "7330": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2671
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x18"
    },
    "7332": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2671
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7333": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2671
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7335": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2671
      ],
      "op": "AND",
      "path": "16"
    },
    "7336": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7338": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7339": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "GT",
      "path": "16"
    },
    "7340": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7341": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB8"
    },
    "7344": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7345": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CB8"
    },
    "7348": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A0"
    },
    "7351": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2666,
        2684
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7352": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7353": {
      "branch": 174,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2666,
        2684
      ],
      "op": "GT",
      "path": "16"
    },
    "7354": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CFC"
    },
    "7357": {
      "branch": 174,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7358": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7360": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7367": {
      "op": "SHL"
    },
    "7368": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7369": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7372": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7374": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7375": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "ADD",
      "path": "16"
    },
    "7376": {
      "op": "MSTORE"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7381": {
      "op": "DUP3"
    },
    "7382": {
      "op": "ADD"
    },
    "7383": {
      "op": "MSTORE"
    },
    "7384": {
      "op": "PUSH20",
      "value": "0x27379030B4B9323937B8399030BA1034B734BA17"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7407": {
      "op": "SHL"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7410": {
      "op": "DUP3"
    },
    "7411": {
      "op": "ADD"
    },
    "7412": {
      "op": "MSTORE"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7415": {
      "op": "ADD"
    },
    "7416": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7419": {
      "op": "JUMP"
    },
    "7420": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2658,
        2709
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7421": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2758,
        2773
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 70,
      "value": "0x16"
    },
    "7423": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2758,
        2773
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7424": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2744,
        2754
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7425": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7427": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "AND",
      "path": "16"
    },
    "7428": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2740
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D0C"
    },
    "7431": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7433": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7434": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7435": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7436": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2740
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7437": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D16"
    },
    "7440": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7441": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7442": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x353B"
    },
    "7445": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2727,
        2754
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7446": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2754
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7447": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2773
      ],
      "op": "GT",
      "path": "16"
    },
    "7448": {
      "branch": 175,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2727,
        2773
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "7449": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D77"
    },
    "7452": {
      "branch": 175,
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7453": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7455": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7456": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7464": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7467": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7469": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7470": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "ADD",
      "path": "16"
    },
    "7471": {
      "op": "MSTORE"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7476": {
      "op": "DUP3"
    },
    "7477": {
      "op": "ADD"
    },
    "7478": {
      "op": "MSTORE"
    },
    "7479": {
      "op": "PUSH32",
      "value": "0x4D696E7420616D6F756E742077696C6C2065786365656420746F74616C207361"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7514": {
      "op": "DUP3"
    },
    "7515": {
      "op": "ADD"
    },
    "7516": {
      "op": "MSTORE"
    },
    "7517": {
      "op": "PUSH10",
      "value": "0x36329039BAB838363C97"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7530": {
      "op": "SHL"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7533": {
      "op": "DUP3"
    },
    "7534": {
      "op": "ADD"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7538": {
      "op": "ADD"
    },
    "7539": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7542": {
      "op": "JUMP"
    },
    "7543": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2719,
        2820
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7544": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2847,
        2848
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7546": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2830,
        2978
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7547": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2855,
        2865
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7548": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2850,
        2865
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "7550": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2850,
        2865
      ],
      "op": "AND",
      "path": "16"
    },
    "7551": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2850,
        2851
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7552": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2850,
        2865
      ],
      "op": "GT",
      "path": "16"
    },
    "7553": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2830,
        2978
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCB0"
    },
    "7556": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2830,
        2978
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7557": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2886,
        2926
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 71,
      "value": "0x1D91"
    },
    "7560": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2896,
        2898
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7561": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2900,
        2925
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1048"
    },
    "7564": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2900,
        2915
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7566": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7567": {
      "fn": "Counters.current",
      "offset": [
        918,
        932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7568": {
      "fn": "Counters.current",
      "offset": [
        827,
        939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7569": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2886,
        2926
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7570": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 72,
      "value": "0x1D9F"
    },
    "7573": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2940,
        2955
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "7575": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7576": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7577": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7579": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "7580": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7581": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "7582": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7583": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2940,
        2967
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7584": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 73
    },
    "7585": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DA9"
    },
    "7588": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7589": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3553"
    },
    "7592": {
      "fn": "CryptidToken.airdropCryptid",
      "jump": "i",
      "offset": [
        2867,
        2870
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7593": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7594": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7595": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "POP",
      "path": "16"
    },
    "7596": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2867,
        2870
      ],
      "op": "POP",
      "path": "16"
    },
    "7597": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2830,
        2978
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D7A"
    },
    "7600": {
      "fn": "CryptidToken.airdropCryptid",
      "offset": [
        2830,
        2978
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 74,
      "value": "0x1DBB"
    },
    "7605": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5569,
        5576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7607": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5554
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2343"
    },
    "7610": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7611": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5536,
        5577
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7612": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DD7"
    },
    "7615": {
      "branch": 185,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7625": {
      "op": "SHL"
    },
    "7626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7627": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7628": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7630": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "ADD",
      "path": "3"
    },
    "7631": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "7634": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7635": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x348B"
    },
    "7638": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7639": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5528,
        5631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7640": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 75,
      "value": "0x1DE3"
    },
    "7643": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5655,
        5659
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7644": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5661,
        5663
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7645": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5665,
        5672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7646": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5674,
        5679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7647": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2825"
    },
    "7650": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7651": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5641,
        5680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7652": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7653": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7654": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7655": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5367,
        5687
      ],
      "op": "POP",
      "path": "3"
    },
    "7656": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5367,
        5687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7657": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7660": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7667": {
      "op": "SHL"
    },
    "7668": {
      "op": "SUB"
    },
    "7669": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7673": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7676": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7677": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7678": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E19"
    },
    "7681": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7691": {
      "op": "SHL"
    },
    "7692": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "7704": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7712": {
      "op": "SHL"
    },
    "7713": {
      "op": "SUB"
    },
    "7714": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "AND",
      "path": "16",
      "statement": 76
    },
    "7715": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "7717": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7718": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7719": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7720": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5166
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x13"
    },
    "7722": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7724": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7725": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7727": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7728": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5177
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "7729": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7730": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7733": {
      "op": "NOT"
    },
    "7734": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "AND",
      "path": "16"
    },
    "7735": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5180,
        5184
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "7737": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "OR",
      "path": "16"
    },
    "7738": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7739": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        5159,
        5184
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "7740": {
      "fn": "CryptidToken.setClaim",
      "jump": "o",
      "offset": [
        5094,
        5191
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7741": {
      "offset": [
        1171,
        1208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7742": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7744": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7745": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7746": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x179D"
    },
    "7749": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7750": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1171,
        1208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "7753": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1171,
        1208
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7754": {
      "offset": [
        1105,
        1133
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7755": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "7757": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7758": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7759": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x179D"
    },
    "7762": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7763": {
      "fn": "CryptidToken.setClaim",
      "offset": [
        1105,
        1133
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "7766": {
      "fn": "CryptidToken.setClaim",
      "jump": "i",
      "offset": [
        1105,
        1133
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7767": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7768": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7770": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7771": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7772": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7773": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7775": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7777": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7778": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7780": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7781": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7782": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7783": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7641,
        7654
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "7785": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7641,
        7654
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7792": {
      "op": "SHL"
    },
    "7793": {
      "op": "SUB"
    },
    "7794": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "7795": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 77,
      "value": "0x1ED7"
    },
    "7798": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "7799": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7801": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7808": {
      "op": "SHL"
    },
    "7809": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7810": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7813": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7815": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "DUP3",
      "path": "16"
    },
    "7816": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "ADD",
      "path": "16"
    },
    "7817": {
      "op": "MSTORE"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7822": {
      "op": "DUP3"
    },
    "7823": {
      "op": "ADD"
    },
    "7824": {
      "op": "MSTORE"
    },
    "7825": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7860": {
      "op": "DUP3"
    },
    "7861": {
      "op": "ADD"
    },
    "7862": {
      "op": "MSTORE"
    },
    "7863": {
      "op": "PUSH16",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B717"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7882": {
      "op": "SHL"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7885": {
      "op": "DUP3"
    },
    "7886": {
      "op": "ADD"
    },
    "7887": {
      "op": "MSTORE"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7890": {
      "op": "ADD"
    },
    "7891": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "7894": {
      "op": "JUMP"
    },
    "7895": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7666,
        7743
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7896": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7784,
        7791
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 78,
      "value": "0xF"
    },
    "7898": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7793,
        7811
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EE2"
    },
    "7901": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7793,
        7800
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7902": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7793,
        7809
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2858"
    },
    "7905": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7793,
        7811
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7906": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7793,
        7811
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7907": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7813,
        7826
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "7909": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7911": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7912": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7914": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "ADD",
      "path": "16"
    },
    "7915": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EF6"
    },
    "7918": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "7919": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "7920": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7921": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7922": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x361E"
    },
    "7925": {
      "fn": "CryptidToken.tokenURI",
      "jump": "i",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7926": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7927": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7929": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "7930": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "7932": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7933": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "DUP4",
      "path": "16"
    },
    "7934": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SUB",
      "path": "16"
    },
    "7935": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SUB",
      "path": "16"
    },
    "7936": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "DUP2",
      "path": "16"
    },
    "7937": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7938": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7939": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "7941": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7767,
        7827
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "7942": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7753,
        7828
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7943": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7753,
        7828
      ],
      "op": "POP",
      "path": "16"
    },
    "7944": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "7945": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "7946": {
      "fn": "CryptidToken.tokenURI",
      "offset": [
        7568,
        7835
      ],
      "op": "POP",
      "path": "16"
    },
    "7947": {
      "fn": "CryptidToken.tokenURI",
      "jump": "o",
      "offset": [
        7568,
        7835
      ],
      "op": "JUMP",
      "path": "16"
    },
    "7948": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "7949": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "7951": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7958": {
      "op": "SHL"
    },
    "7959": {
      "op": "SUB"
    },
    "7960": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "7963": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7964": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7965": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "7966": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7967": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7968": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7969": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3C"
    },
    "7972": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7973": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7975": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7982": {
      "op": "SHL"
    },
    "7983": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7984": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7985": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7987": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7988": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "7991": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7992": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "7995": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7996": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7997": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 79,
      "value": "0x11"
    },
    "7999": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8000": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0x10000"
    },
    "8004": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8005": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "DIV",
      "path": "16"
    },
    "8006": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8008": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7136
      ],
      "op": "AND",
      "path": "16"
    },
    "8009": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7144
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8010": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7144
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8011": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7140,
        7144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8013": {
      "branch": 176,
      "fn": "CryptidToken.setStage",
      "offset": [
        7116,
        7144
      ],
      "op": "EQ",
      "path": "16"
    },
    "8014": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FBF"
    },
    "8017": {
      "branch": 176,
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8018": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8020": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8027": {
      "op": "SHL"
    },
    "8028": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8029": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8032": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8034": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8035": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "ADD",
      "path": "16"
    },
    "8036": {
      "op": "MSTORE"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "PUSH32",
      "value": "0x50726F76656E616E63652068617368206D7573742062652066726F7A656E2062"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8079": {
      "op": "DUP3"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "op": "MSTORE"
    },
    "8082": {
      "op": "PUSH32",
      "value": "0x65666F7265206D696E74696E672063616E2073746172742E0000000000000000"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8117": {
      "op": "DUP3"
    },
    "8118": {
      "op": "ADD"
    },
    "8119": {
      "op": "MSTORE"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8122": {
      "op": "ADD"
    },
    "8123": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8126": {
      "op": "JUMP"
    },
    "8127": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7108,
        7205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8128": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7223,
        7233
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 80,
      "value": "0xD"
    },
    "8130": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7223,
        7233
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8131": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2029"
    },
    "8134": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8135": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8137": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8144": {
      "op": "SHL"
    },
    "8145": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8146": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8149": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8151": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8152": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "ADD",
      "path": "16"
    },
    "8153": {
      "op": "MSTORE"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8158": {
      "op": "DUP3"
    },
    "8159": {
      "op": "ADD"
    },
    "8160": {
      "op": "MSTORE"
    },
    "8161": {
      "op": "PUSH32",
      "value": "0x4D65726B6C6520726F6F74206D7573742062652073657420626565666F726520"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8196": {
      "op": "DUP3"
    },
    "8197": {
      "op": "ADD"
    },
    "8198": {
      "op": "MSTORE"
    },
    "8199": {
      "op": "PUSH18",
      "value": "0x36B4B73A34B7339031B0B71039BA30B93A17"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8220": {
      "op": "SHL"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8223": {
      "op": "DUP3"
    },
    "8224": {
      "op": "ADD"
    },
    "8225": {
      "op": "MSTORE"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8228": {
      "op": "ADD"
    },
    "8229": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8232": {
      "op": "JUMP"
    },
    "8233": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7215,
        7293
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8234": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7308
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 81,
      "value": "0x18"
    },
    "8236": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8237": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8238": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7311,
        7317
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8239": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7311,
        7317
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8240": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7308
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8243": {
      "op": "NOT"
    },
    "8244": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "AND",
      "path": "16"
    },
    "8245": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "8247": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7311,
        7317
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8248": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8250": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8251": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "GT",
      "path": "16"
    },
    "8252": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8253": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2048"
    },
    "8256": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8257": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2048"
    },
    "8260": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33A0"
    },
    "8263": {
      "fn": "CryptidToken.setStage",
      "jump": "i",
      "offset": [
        7303,
        7317
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8264": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8265": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "MUL",
      "path": "16"
    },
    "8266": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "OR",
      "path": "16"
    },
    "8267": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8268": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8269": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7303,
        7317
      ],
      "op": "POP",
      "path": "16"
    },
    "8270": {
      "fn": "CryptidToken.setStage",
      "offset": [
        7047,
        7324
      ],
      "op": "POP",
      "path": "16"
    },
    "8271": {
      "fn": "CryptidToken.setStage",
      "jump": "o",
      "offset": [
        7047,
        7324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8272": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7471,
        7562
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8273": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7516,
        7523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8275": {
      "fn": "CryptidToken.lastMintID",
      "offset": [
        7541,
        7554
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 82,
      "value": "0x182C"
    },
    "8278": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8280": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8281": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8282": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8283": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5845,
        5973
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8286": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8293": {
      "op": "SHL"
    },
    "8294": {
      "op": "SUB"
    },
    "8295": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8298": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8299": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8300": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8301": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8302": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8303": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8304": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208B"
    },
    "8307": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8317": {
      "op": "SHL"
    },
    "8318": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8319": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8320": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8322": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8323": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8327": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "8330": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8332": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 83
    },
    "8333": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8334": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB2"
    },
    "8337": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8338": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5946
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "8340": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5946
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8341": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8343": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8344": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "ADD",
      "path": "16"
    },
    "8345": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8346": {
      "fn": "CryptidToken.setBaseExtension",
      "offset": [
        5933,
        5966
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F07"
    },
    "8349": {
      "fn": "CryptidToken.setBaseExtension",
      "jump": "i",
      "offset": [
        5933,
        5966
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8350": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7841,
        7953
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8351": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7889,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8353": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7933,
        7946
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 84,
      "value": "0x20A9"
    },
    "8356": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8358": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8359": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8360": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8361": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7933,
        7946
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8362": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7930
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x16"
    },
    "8364": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7930
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8365": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7946
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x182C"
    },
    "8368": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7946
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8369": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7946
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8370": {
      "fn": "CryptidToken.getTokensLeft",
      "offset": [
        7915,
        7946
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3651"
    },
    "8373": {
      "fn": "CryptidToken.getTokensLeft",
      "jump": "i",
      "offset": [
        7915,
        7946
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8374": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8375": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8377": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "op": "SUB"
    },
    "8386": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8389": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8390": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8391": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8392": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8393": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8394": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8395": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E6"
    },
    "8398": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8401": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8408": {
      "op": "SHL"
    },
    "8409": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "8421": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8423": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5707,
        5708
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 85,
      "value": "0x0"
    },
    "8425": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5689,
        5696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "8427": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8428": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8429": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x20F5"
    },
    "8432": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8433": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x341B"
    },
    "8436": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "i",
      "offset": [
        5683,
        5704
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8437": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8438": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8439": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5704
      ],
      "op": "POP",
      "path": "16"
    },
    "8440": {
      "branch": 177,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5683,
        5708
      ],
      "op": "GT",
      "path": "16"
    },
    "8441": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2144"
    },
    "8444": {
      "branch": 177,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8445": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8447": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8454": {
      "op": "SHL"
    },
    "8455": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8456": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8459": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8461": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8462": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "ADD",
      "path": "16"
    },
    "8463": {
      "op": "MSTORE"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8468": {
      "op": "DUP3"
    },
    "8469": {
      "op": "ADD"
    },
    "8470": {
      "op": "MSTORE"
    },
    "8471": {
      "op": "PUSH32",
      "value": "0x426173655552492063616E6E6F7420626520656D7074792E0000000000000000"
    },
    "8504": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8506": {
      "op": "DUP3"
    },
    "8507": {
      "op": "ADD"
    },
    "8508": {
      "op": "MSTORE"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8511": {
      "op": "ADD"
    },
    "8512": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8515": {
      "op": "JUMP"
    },
    "8516": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5675,
        5737
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8517": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 86,
      "value": "0x11"
    },
    "8519": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8520": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8523": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8524": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "DIV",
      "path": "16"
    },
    "8525": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "8527": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5756,
        5770
      ],
      "op": "AND",
      "path": "16"
    },
    "8528": {
      "branch": 178,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5755,
        5770
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8529": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x219C"
    },
    "8532": {
      "branch": 178,
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8533": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8535": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8544": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8547": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8549": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8550": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "ADD",
      "path": "16"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8556": {
      "op": "DUP3"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH32",
      "value": "0x4261736555524920697320616C72656164792066726F7A656E2E000000000000"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB7A"
    },
    "8603": {
      "op": "JUMP"
    },
    "8604": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5747,
        5801
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8605": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5825
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 87,
      "value": "0x11"
    },
    "8607": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8608": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8609": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8612": {
      "op": "NOT"
    },
    "8613": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "AND",
      "path": "16"
    },
    "8614": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "8617": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "OR",
      "path": "16"
    },
    "8618": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8619": {
      "fn": "CryptidToken.freezeBaseURI",
      "offset": [
        5811,
        5832
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8620": {
      "fn": "CryptidToken.freezeBaseURI",
      "jump": "o",
      "offset": [
        5621,
        5839
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8622": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8624": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8631": {
      "op": "SHL"
    },
    "8632": {
      "op": "SUB"
    },
    "8633": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8636": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8637": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8638": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8639": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8640": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8641": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8642": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21DD"
    },
    "8645": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8655": {
      "op": "SHL"
    },
    "8656": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8657": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8658": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8660": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8661": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8665": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "8668": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8669": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8676": {
      "op": "SHL"
    },
    "8677": {
      "op": "SUB"
    },
    "8678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 88
    },
    "8679": {
      "branch": 200,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "8680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2242"
    },
    "8683": {
      "branch": 200,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8693": {
      "op": "SHL"
    },
    "8694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "8702": {
      "op": "MSTORE"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8707": {
      "op": "DUP3"
    },
    "8708": {
      "op": "ADD"
    },
    "8709": {
      "op": "MSTORE"
    },
    "8710": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8745": {
      "op": "DUP3"
    },
    "8746": {
      "op": "ADD"
    },
    "8747": {
      "op": "MSTORE"
    },
    "8748": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8757": {
      "op": "SHL"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8760": {
      "op": "DUP3"
    },
    "8761": {
      "op": "ADD"
    },
    "8762": {
      "op": "MSTORE"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8765": {
      "op": "ADD"
    },
    "8766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8769": {
      "op": "JUMP"
    },
    "8770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 89,
      "value": "0x14AB"
    },
    "8774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A4"
    },
    "8778": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8779": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "8782": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8789": {
      "op": "SHL"
    },
    "8790": {
      "op": "SUB"
    },
    "8791": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "8794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8795": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8796": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DIV",
      "path": "0"
    },
    "8797": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8798": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8799": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8800": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227B"
    },
    "8803": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8804": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8806": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8813": {
      "op": "SHL"
    },
    "8814": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8818": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7A"
    },
    "8822": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8823": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3456"
    },
    "8826": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8827": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8828": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6638
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 90,
      "value": "0x11"
    },
    "8830": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8831": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8838": {
      "op": "SHL"
    },
    "8839": {
      "op": "SUB"
    },
    "8840": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8841": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8842": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "AND",
      "path": "16"
    },
    "8843": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1000000"
    },
    "8848": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "MUL",
      "path": "16"
    },
    "8849": {
      "op": "PUSH4",
      "value": "0x1000000"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "op": "SUB"
    },
    "8860": {
      "op": "NOT"
    },
    "8861": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8862": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "8863": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "AND",
      "path": "16"
    },
    "8864": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8865": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8866": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8867": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "OR",
      "path": "16"
    },
    "8868": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8869": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "offset": [
        6622,
        6658
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8870": {
      "fn": "CryptidToken.setWithdrawlAddress",
      "jump": "o",
      "offset": [
        6537,
        6665
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8871": {
      "fn": "Counters.increment",
      "offset": [
        945,
        1068
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8872": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8873": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8874": {
      "fn": "Counters.increment",
      "offset": [
        1050,
        1051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8876": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "ADD",
      "path": "11"
    },
    "8877": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8878": {
      "fn": "Counters.increment",
      "offset": [
        1032,
        1051
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "8879": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        945,
        1068
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8880": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8881": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8889": {
      "op": "SHL"
    },
    "8890": {
      "op": "SUB"
    },
    "8891": {
      "op": "NOT"
    },
    "8892": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 91
    },
    "8893": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "6"
    },
    "8894": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8901": {
      "op": "SHL"
    },
    "8902": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "6"
    },
    "8903": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8904": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6D"
    },
    "8907": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8908": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "6"
    },
    "8909": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6D"
    },
    "8912": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8913": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2956"
    },
    "8916": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8917": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8918": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 92,
      "value": "0x0"
    },
    "8920": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8921": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8922": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8923": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8925": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8927": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8928": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8930": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8931": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8932": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8933": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8940": {
      "op": "SHL"
    },
    "8941": {
      "op": "SUB"
    },
    "8942": {
      "op": "NOT"
    },
    "8943": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8950": {
      "op": "SHL"
    },
    "8951": {
      "op": "SUB"
    },
    "8952": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8953": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "AND",
      "path": "3"
    },
    "8954": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8955": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8956": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "OR",
      "path": "3"
    },
    "8957": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8958": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8959": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11271
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "8960": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8961": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8962": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x230A"
    },
    "8965": {
      "fn": "ERC721._approve",
      "offset": [
        11242,
        11266
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8966": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1719"
    },
    "8969": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8970": {
      "fn": "ERC721._approve",
      "offset": [
        11295,
        11318
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8977": {
      "op": "SHL"
    },
    "8978": {
      "op": "SUB"
    },
    "8979": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "AND",
      "path": "3"
    },
    "8980": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9013": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9015": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9016": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9018": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9019": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9020": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9021": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SUB",
      "path": "3"
    },
    "9022": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9023": {
      "fn": "ERC721._approve",
      "offset": [
        11286,
        11332
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9024": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "9025": {
      "fn": "ERC721._approve",
      "offset": [
        11168,
        11339
      ],
      "op": "POP",
      "path": "3"
    },
    "9026": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11168,
        11339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9027": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9028": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7535,
        7539
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9030": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9031": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9032": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9033": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9035": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9037": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9038": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9040": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9041": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9042": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9049": {
      "op": "SHL"
    },
    "9050": {
      "op": "SUB"
    },
    "9051": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "9052": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 94,
      "value": "0x23BC"
    },
    "9055": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9056": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9058": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9065": {
      "op": "SHL"
    },
    "9066": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9067": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9070": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9072": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9073": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "ADD",
      "path": "3"
    },
    "9074": {
      "op": "MSTORE"
    },
    "9075": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9079": {
      "op": "DUP3"
    },
    "9080": {
      "op": "ADD"
    },
    "9081": {
      "op": "MSTORE"
    },
    "9082": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9117": {
      "op": "DUP3"
    },
    "9118": {
      "op": "ADD"
    },
    "9119": {
      "op": "MSTORE"
    },
    "9120": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9135": {
      "op": "SHL"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9138": {
      "op": "DUP3"
    },
    "9139": {
      "op": "ADD"
    },
    "9140": {
      "op": "MSTORE"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9143": {
      "op": "ADD"
    },
    "9144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9147": {
      "op": "JUMP"
    },
    "9148": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9151": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C7"
    },
    "9154": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7672
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9155": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7664
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1719"
    },
    "9158": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7634,
        7673
      ],
      "op": "POP",
      "path": "3"
    },
    "9162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7702,
        7707
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 95
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9169": {
      "op": "SHL"
    },
    "9170": {
      "op": "SUB"
    },
    "9171": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9172": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9179": {
      "op": "SHL"
    },
    "9180": {
      "op": "SUB"
    },
    "9181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "AND",
      "path": "3"
    },
    "9182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7707
      ],
      "op": "EQ",
      "path": "3"
    },
    "9183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9184": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2402"
    },
    "9187": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9188": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "POP",
      "path": "3"
    },
    "9189": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9196": {
      "op": "SHL"
    },
    "9197": {
      "op": "SUB"
    },
    "9198": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9199": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23F7"
    },
    "9202": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7723,
        7730
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9203": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "9206": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9207": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9214": {
      "op": "SHL"
    },
    "9215": {
      "op": "SUB"
    },
    "9216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "AND",
      "path": "3"
    },
    "9217": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7711,
        7742
      ],
      "op": "EQ",
      "path": "3"
    },
    "9218": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9219": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2432"
    },
    "9223": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7691,
        7778
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9224": {
      "op": "POP"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9231": {
      "op": "SHL"
    },
    "9232": {
      "op": "SUB"
    },
    "9233": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9234": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9235": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "AND",
      "path": "3"
    },
    "9236": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4599,
        4603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9238": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9239": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9240": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9241": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4640
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "9243": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9245": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9246": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9250": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9251": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4647
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9254": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP9",
      "path": "3"
    },
    "9255": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9256": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9257": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9258": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9259": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "9265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4622,
        4657
      ],
      "op": "AND",
      "path": "3"
    },
    "9266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7683,
        7779
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "9268": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7786
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9269": {
      "op": "POP"
    },
    "9270": {
      "op": "POP"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7442,
        7786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9274": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        11057
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9275": {
      "fn": "ERC721._transfer",
      "offset": [
        10606,
        10610
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 96
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9282": {
      "op": "SHL"
    },
    "9283": {
      "op": "SUB"
    },
    "9284": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9285": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244D"
    },
    "9288": {
      "fn": "ERC721._transfer",
      "offset": [
        10594,
        10601
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9289": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1719"
    },
    "9292": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9293": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9300": {
      "op": "SHL"
    },
    "9301": {
      "op": "SUB"
    },
    "9302": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "AND",
      "path": "3"
    },
    "9303": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10610
      ],
      "op": "EQ",
      "path": "3"
    },
    "9304": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24B1"
    },
    "9307": {
      "branch": 186,
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9308": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9310": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9317": {
      "op": "SHL"
    },
    "9318": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9319": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9322": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9324": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9325": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "ADD",
      "path": "3"
    },
    "9326": {
      "op": "MSTORE"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9331": {
      "op": "DUP3"
    },
    "9332": {
      "op": "ADD"
    },
    "9333": {
      "op": "MSTORE"
    },
    "9334": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9369": {
      "op": "DUP3"
    },
    "9370": {
      "op": "ADD"
    },
    "9371": {
      "op": "MSTORE"
    },
    "9372": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "9380": {
      "op": "SHL"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9392": {
      "op": "JUMP"
    },
    "9393": {
      "fn": "ERC721._transfer",
      "offset": [
        10571,
        10652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "op": "SUB"
    },
    "9402": {
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 97
    },
    "9403": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10670,
        10686
      ],
      "op": "AND",
      "path": "3"
    },
    "9404": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2513"
    },
    "9407": {
      "branch": 187,
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9408": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9410": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9417": {
      "op": "SHL"
    },
    "9418": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9419": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9422": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9424": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9425": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "ADD",
      "path": "3"
    },
    "9426": {
      "op": "MSTORE"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9429": {
      "op": "DUP1"
    },
    "9430": {
      "op": "DUP3"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "op": "MSTORE"
    },
    "9433": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9468": {
      "op": "DUP3"
    },
    "9469": {
      "op": "ADD"
    },
    "9470": {
      "op": "MSTORE"
    },
    "9471": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9478": {
      "op": "SHL"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9481": {
      "op": "DUP3"
    },
    "9482": {
      "op": "ADD"
    },
    "9483": {
      "op": "MSTORE"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9486": {
      "op": "ADD"
    },
    "9487": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "9490": {
      "op": "JUMP"
    },
    "9491": {
      "fn": "ERC721._transfer",
      "offset": [
        10662,
        10727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9492": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 98,
      "value": "0x251E"
    },
    "9495": {
      "fn": "ERC721._transfer",
      "offset": [
        10759,
        10763
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9496": {
      "fn": "ERC721._transfer",
      "offset": [
        10765,
        10767
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9497": {
      "fn": "ERC721._transfer",
      "offset": [
        10769,
        10776
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9498": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A6"
    },
    "9501": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9502": {
      "fn": "ERC721._transfer",
      "offset": [
        10738,
        10777
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9503": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 99,
      "value": "0x2529"
    },
    "9506": {
      "fn": "ERC721._transfer",
      "offset": [
        10856,
        10857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9508": {
      "fn": "ERC721._transfer",
      "offset": [
        10860,
        10867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9509": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10847
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D5"
    },
    "9512": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9513": {
      "fn": "ERC721._transfer",
      "offset": [
        10839,
        10868
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9520": {
      "op": "SHL"
    },
    "9521": {
      "op": "SUB"
    },
    "9522": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 100
    },
    "9523": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "AND",
      "path": "3"
    },
    "9524": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9526": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9527": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9528": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9529": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9531": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9533": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9534": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9536": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9537": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9538": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9539": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9540": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9542": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9543": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9544": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2552"
    },
    "9547": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9548": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9549": {
      "fn": "ERC721._transfer",
      "offset": [
        10898,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9550": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3651"
    },
    "9553": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9554": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9555": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9556": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9557": {
      "fn": "ERC721._transfer",
      "offset": [
        10879,
        10899
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "POP"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9566": {
      "op": "SHL"
    },
    "9567": {
      "op": "SUB"
    },
    "9568": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 101
    },
    "9569": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "AND",
      "path": "3"
    },
    "9570": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9572": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9573": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9574": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9575": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "9577": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9579": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9580": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9582": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9583": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9584": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9585": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9586": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9588": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9589": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9590": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2580"
    },
    "9593": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9594": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9595": {
      "fn": "ERC721._transfer",
      "offset": [
        10926,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9596": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x353B"
    },
    "9599": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9600": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9601": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9602": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9603": {
      "fn": "ERC721._transfer",
      "offset": [
        10909,
        10927
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9604": {
      "op": "POP"
    },
    "9605": {
      "op": "POP"
    },
    "9606": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 102,
      "value": "0x0"
    },
    "9608": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9609": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9610": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9611": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "9613": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9615": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9616": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9618": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9619": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9620": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9621": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9622": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9629": {
      "op": "SHL"
    },
    "9630": {
      "op": "SUB"
    },
    "9631": {
      "op": "NOT"
    },
    "9632": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9639": {
      "op": "SHL"
    },
    "9640": {
      "op": "SUB"
    },
    "9641": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP7",
      "path": "3"
    },
    "9642": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9643": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "AND",
      "path": "3"
    },
    "9644": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9645": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9646": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "OR",
      "path": "3"
    },
    "9647": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9648": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9649": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10958
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9650": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 103
    },
    "9651": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9652": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "9653": {
      "fn": "ERC721._transfer",
      "offset": [
        10937,
        10953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9654": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9655": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "9656": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "AND",
      "path": "3"
    },
    "9657": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9658": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9691": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9692": {
      "fn": "ERC721._transfer",
      "offset": [
        10974,
        11001
      ],
      "op": "LOG4",
      "path": "3"
    },
    "9693": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9694": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9695": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "9696": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3537,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9697": {
      "fn": "ERC721._safeMint",
      "offset": [
        8116,
        8224
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9698": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 104,
      "value": "0xDB2"
    },
    "9701": {
      "fn": "ERC721._safeMint",
      "offset": [
        8201,
        8203
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9702": {
      "fn": "ERC721._safeMint",
      "offset": [
        8205,
        8212
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9703": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9705": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9706": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9707": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9709": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "ADD",
      "path": "3"
    },
    "9710": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9712": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9713": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9714": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9716": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9717": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9718": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8217
      ],
      "op": "POP",
      "path": "3"
    },
    "9719": {
      "fn": "ERC721._safeMint",
      "offset": [
        8191,
        8200
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D4"
    },
    "9722": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8191,
        8217
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9723": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9724": {
      "fn": "MerkleProof.verify",
      "offset": [
        983,
        987
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "9726": {
      "fn": "MerkleProof.verify",
      "offset": [
        1035,
        1039
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 105
    },
    "9727": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2608"
    },
    "9730": {
      "fn": "MerkleProof.verify",
      "offset": [
        1019,
        1024
      ],
      "op": "DUP6",
      "path": "13"
    },
    "9731": {
      "fn": "MerkleProof.verify",
      "offset": [
        1026,
        1030
      ],
      "op": "DUP5",
      "path": "13"
    },
    "9732": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1018
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A07"
    },
    "9735": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9736": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1031
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "9737": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "EQ",
      "path": "13"
    },
    "9738": {
      "fn": "MerkleProof.verify",
      "offset": [
        1006,
        1039
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "9739": {
      "fn": "MerkleProof.verify",
      "offset": [
        862,
        1046
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "9740": {
      "op": "POP"
    },
    "9741": {
      "op": "POP"
    },
    "9742": {
      "op": "POP"
    },
    "9743": {
      "op": "POP"
    },
    "9744": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        862,
        1046
      ],
      "op": "JUMP",
      "path": "13"
    },
    "9745": {
      "fn": "Pausable._unpause",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9746": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9748": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9749": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9751": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9752": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265A"
    },
    "9755": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9756": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9758": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9765": {
      "op": "SHL"
    },
    "9766": {
      "offset": [
        1669,
        1710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9767": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9770": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9772": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9773": {
      "fn": "Pausable.paused",
      "offset": [
        1669,
        1710
      ],
      "op": "ADD",
      "path": "1"
    },
    "9774": {
      "op": "MSTORE"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9779": {
      "op": "DUP3"
    },
    "9780": {
      "op": "ADD"
    },
    "9781": {
      "op": "MSTORE"
    },
    "9782": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "9803": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9805": {
      "op": "SHL"
    },
    "9806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9808": {
      "op": "DUP3"
    },
    "9809": {
      "op": "ADD"
    },
    "9810": {
      "op": "MSTORE"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9813": {
      "op": "ADD"
    },
    "9814": {
      "offset": [
        1669,
        1710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "9817": {
      "op": "JUMP"
    },
    "9818": {
      "offset": [
        1669,
        1710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9819": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2175
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 106,
      "value": "0xA"
    },
    "9821": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9822": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9825": {
      "op": "NOT"
    },
    "9826": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "AND",
      "path": "1"
    },
    "9827": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9828": {
      "fn": "Pausable._unpause",
      "offset": [
        2168,
        2183
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9829": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 107,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "9862": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9863": {
      "fn": "Pausable._unpause",
      "offset": [
        2207,
        2219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9864": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9866": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9873": {
      "op": "SHL"
    },
    "9874": {
      "op": "SUB"
    },
    "9875": {
      "op": "SWAP1"
    },
    "9876": {
      "op": "SWAP2"
    },
    "9877": {
      "op": "AND"
    },
    "9878": {
      "op": "DUP2"
    },
    "9879": {
      "op": "MSTORE"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9882": {
      "op": "ADD"
    },
    "9883": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9885": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9886": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9887": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9888": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SUB",
      "path": "1"
    },
    "9889": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9890": {
      "fn": "Pausable._unpause",
      "offset": [
        2198,
        2220
      ],
      "op": "LOG1",
      "path": "1"
    },
    "9891": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2110,
        2227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9893": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9903": {
      "op": "SHL"
    },
    "9904": {
      "op": "SUB"
    },
    "9905": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 108
    },
    "9906": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9908": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "MUL",
      "path": "0"
    },
    "9914": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9921": {
      "op": "SHL"
    },
    "9922": {
      "op": "SUB"
    },
    "9923": {
      "op": "NOT"
    },
    "9924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9925": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "9926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "9927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "9929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 109,
      "value": "0x40"
    },
    "9932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DIV",
      "path": "0"
    },
    "9937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "9938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9974": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9975": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9978": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9979": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9980": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "9981": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9982": {
      "fn": "Pausable._pause",
      "offset": [
        1863,
        1978
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9983": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "9985": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9986": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9988": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "9989": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9990": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2721"
    },
    "9993": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9994": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9996": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10003": {
      "op": "SHL"
    },
    "10004": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10005": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10006": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10008": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10009": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "10012": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10013": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34DC"
    },
    "10016": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10017": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10018": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 110,
      "value": "0xA"
    },
    "10020": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10021": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10024": {
      "op": "NOT"
    },
    "10025": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "10026": {
      "fn": "Pausable._pause",
      "offset": [
        1932,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10028": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "10029": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10030": {
      "fn": "Pausable._pause",
      "offset": [
        1922,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10031": {
      "fn": "Pausable._pause",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 111,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "10064": {
      "fn": "Pausable._pause",
      "offset": [
        1958,
        1970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2687"
    },
    "10067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10068": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10069": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10070": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10071": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11624,
        11632
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 112
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10078": {
      "op": "SHL"
    },
    "10079": {
      "op": "SUB"
    },
    "10080": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10081": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11620
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "op": "SUB"
    },
    "10090": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "AND",
      "path": "3"
    },
    "10091": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "EQ",
      "path": "3"
    },
    "10092": {
      "branch": 188,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11615,
        11632
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10093": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27B8"
    },
    "10096": {
      "branch": 188,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10097": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10099": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10106": {
      "op": "SHL"
    },
    "10107": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10108": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10111": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10113": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10114": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "ADD",
      "path": "3"
    },
    "10115": {
      "op": "MSTORE"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10120": {
      "op": "DUP3"
    },
    "10121": {
      "op": "ADD"
    },
    "10122": {
      "op": "MSTORE"
    },
    "10123": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10158": {
      "op": "DUP3"
    },
    "10159": {
      "op": "ADD"
    },
    "10160": {
      "op": "MSTORE"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10163": {
      "op": "ADD"
    },
    "10164": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10167": {
      "op": "JUMP"
    },
    "10168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11607,
        11662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10175": {
      "op": "SHL"
    },
    "10176": {
      "op": "SUB"
    },
    "10177": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 113
    },
    "10178": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10179": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "AND",
      "path": "3"
    },
    "10180": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10182": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10183": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10184": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10185": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "10187": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10189": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10190": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10191": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10192": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10194": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10195": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10196": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11697
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10197": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10198": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10199": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "AND",
      "path": "3"
    },
    "10200": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10201": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10202": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10203": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "10204": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10205": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10206": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10207": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10208": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10209": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11707
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "10210": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10211": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10214": {
      "op": "NOT"
    },
    "10215": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "AND",
      "path": "3"
    },
    "10216": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP7",
      "path": "3"
    },
    "10217": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10218": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10219": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10220": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10221": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "OR",
      "path": "3"
    },
    "10222": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10223": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10224": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11672,
        11718
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "10225": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 114
    },
    "10226": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10227": {
      "op": "SWAP2"
    },
    "10228": {
      "op": "DUP3"
    },
    "10229": {
      "op": "MSTORE"
    },
    "10230": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "10263": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10264": {
      "op": "ADD"
    },
    "10265": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10267": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10268": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10269": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10270": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SUB",
      "path": "3"
    },
    "10271": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10272": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11733,
        11774
      ],
      "op": "LOG3",
      "path": "3"
    },
    "10273": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10274": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10275": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11474,
        11781
      ],
      "op": "POP",
      "path": "3"
    },
    "10276": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11474,
        11781
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10277": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6549,
        6856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10278": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 115,
      "value": "0x2830"
    },
    "10281": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6710,
        6714
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10282": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6716,
        6718
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10283": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6720,
        6727
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10284": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x243A"
    },
    "10287": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10288": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6700,
        6728
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10289": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 116,
      "value": "0x283C"
    },
    "10292": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6769,
        6773
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10293": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6775,
        6777
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10294": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6786
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10295": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6788,
        6793
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10296": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A73"
    },
    "10299": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10300": {
      "branch": 189,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6794
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10301": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DE3"
    },
    "10304": {
      "branch": 189,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10305": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10307": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10314": {
      "op": "SHL"
    },
    "10315": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10316": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10317": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10319": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "ADD",
      "path": "3"
    },
    "10320": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10323": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10324": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6738,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3668"
    },
    "10327": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6738,
        6849
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10328": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10329": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x60"
    },
    "10331": {
      "branch": 202,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10332": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x287C"
    },
    "10335": {
      "branch": 202,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10336": {
      "op": "POP"
    },
    "10337": {
      "op": "POP"
    },
    "10338": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 117,
      "value": "0x40"
    },
    "10340": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10341": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10342": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10343": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10344": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10345": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10346": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10347": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10348": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10350": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10351": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "10356": {
      "op": "SHL"
    },
    "10357": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10359": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10360": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "12"
    },
    "10361": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10362": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10363": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10364": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10365": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10366": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10368": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10369": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10370": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10371": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28A6"
    },
    "10374": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10375": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 118
    },
    "10376": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2890"
    },
    "10379": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10380": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3553"
    },
    "10383": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10384": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10385": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10386": {
      "op": "POP"
    },
    "10387": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 119,
      "value": "0x289F"
    },
    "10390": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10391": {
      "op": "POP"
    },
    "10392": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10394": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10395": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36D0"
    },
    "10398": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10399": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10400": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10401": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "12"
    },
    "10402": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2880"
    },
    "10405": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10406": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10407": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10409": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10410": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10419": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10420": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "12"
    },
    "10421": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10422": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C1"
    },
    "10425": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10426": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28C1"
    },
    "10429": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x30A4"
    },
    "10432": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10433": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10434": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10436": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10437": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10438": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10439": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10440": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10441": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10442": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10444": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10445": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "10447": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "12"
    },
    "10448": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "12"
    },
    "10449": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10451": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10452": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10453": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10454": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10456": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10457": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10458": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10459": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28EB"
    },
    "10462": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10463": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10465": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10466": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10467": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10468": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10469": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "10470": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10471": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "12"
    },
    "10472": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "12"
    },
    "10473": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10474": {
      "op": "POP"
    },
    "10475": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10476": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10477": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10478": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "12"
    },
    "10479": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10480": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10481": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "10482": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2432"
    },
    "10485": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10486": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x2900"
    },
    "10489": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10491": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10492": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3651"
    },
    "10495": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10496": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10497": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10498": {
      "op": "POP"
    },
    "10499": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0x290D"
    },
    "10502": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10504": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10505": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36E4"
    },
    "10508": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10509": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10510": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2918"
    },
    "10513": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10514": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x30"
    },
    "10516": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x353B"
    },
    "10519": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10520": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10521": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xF8"
    },
    "10523": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "12"
    },
    "10524": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10525": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10526": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10527": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10528": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10529": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "12"
    },
    "10530": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x292D"
    },
    "10533": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10534": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x292D"
    },
    "10537": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x356E"
    },
    "10540": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10541": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10542": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10544": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10545": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "12"
    },
    "10546": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10553": {
      "op": "SHL"
    },
    "10554": {
      "op": "SUB"
    },
    "10555": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "12"
    },
    "10556": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "12"
    },
    "10557": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10558": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10559": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10561": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "12"
    },
    "10562": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10563": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "12"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0x294F"
    },
    "10568": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xA"
    },
    "10570": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "12"
    },
    "10571": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36D0"
    },
    "10574": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10575": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10576": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10577": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "12"
    },
    "10578": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x28EF"
    },
    "10581": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10582": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10583": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10591": {
      "op": "SHL"
    },
    "10592": {
      "op": "SUB"
    },
    "10593": {
      "op": "NOT"
    },
    "10594": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 123
    },
    "10595": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "10596": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10603": {
      "op": "SHL"
    },
    "10604": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "10605": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2987"
    },
    "10609": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10610": {
      "op": "POP"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10617": {
      "op": "SHL"
    },
    "10618": {
      "op": "SUB"
    },
    "10619": {
      "op": "NOT"
    },
    "10620": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10621": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "10622": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10629": {
      "op": "SHL"
    },
    "10630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "10631": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10632": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10633": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "10636": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10637": {
      "op": "POP"
    },
    "10638": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10645": {
      "op": "SHL"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10652": {
      "op": "SHL"
    },
    "10653": {
      "op": "SUB"
    },
    "10654": {
      "op": "NOT"
    },
    "10655": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 124
    },
    "10656": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "10657": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "10658": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6D"
    },
    "10661": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10662": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8560,
        8753
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10663": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "10665": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10666": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10668": {
      "fn": "Pausable.paused",
      "offset": [
        1168,
        1175
      ],
      "op": "AND",
      "path": "1"
    },
    "10669": {
      "offset": [
        1411,
        1420
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10670": {
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29C9"
    },
    "10673": {
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10674": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10676": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10683": {
      "op": "SHL"
    },
    "10684": {
      "offset": [
        1403,
        1441
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10685": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10686": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10688": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "ADD",
      "path": "1"
    },
    "10689": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "10692": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10693": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34DC"
    },
    "10696": {
      "fn": "Pausable.paused",
      "jump": "i",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10697": {
      "fn": "Pausable.paused",
      "offset": [
        1403,
        1441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10698": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8701,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 125,
      "value": "0xCB0"
    },
    "10701": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8728,
        8732
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10702": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8734,
        8736
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10703": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8738,
        8745
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10704": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "offset": [
        8701,
        8727
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B71"
    },
    "10707": {
      "fn": "CryptidToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        8701,
        8746
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10708": {
      "fn": "ERC721._safeMint",
      "offset": [
        8445,
        8756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10709": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 126,
      "value": "0x29DE"
    },
    "10712": {
      "fn": "ERC721._safeMint",
      "offset": [
        8576,
        8578
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10713": {
      "fn": "ERC721._safeMint",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10714": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C29"
    },
    "10717": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10718": {
      "fn": "ERC721._safeMint",
      "offset": [
        8570,
        8588
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10719": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 127,
      "value": "0x29EB"
    },
    "10722": {
      "fn": "ERC721._safeMint",
      "offset": [
        8650,
        8651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10724": {
      "fn": "ERC721._safeMint",
      "offset": [
        8654,
        8656
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10725": {
      "fn": "ERC721._safeMint",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10726": {
      "fn": "ERC721._safeMint",
      "offset": [
        8667,
        8672
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10727": {
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8641
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A73"
    },
    "10730": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10731": {
      "branch": 190,
      "fn": "ERC721._safeMint",
      "offset": [
        8619,
        8673
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10732": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB0"
    },
    "10735": {
      "branch": 190,
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10736": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10738": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10745": {
      "op": "SHL"
    },
    "10746": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10747": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10748": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10750": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "ADD",
      "path": "3"
    },
    "10751": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "10754": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10755": {
      "fn": "ERC721._safeMint",
      "offset": [
        8598,
        8749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3668"
    },
    "10758": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8598,
        8749
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10759": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1398,
        2060
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10760": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10762": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1523,
        1527
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10763": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1481,
        1488
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10764": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10765": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1566
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10766": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1561,
        1573
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10767": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10768": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1557,
        1573
      ],
      "op": "LT",
      "path": "13"
    },
    "10769": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "10770": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x159D"
    },
    "10773": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10774": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1614
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10776": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1622
      ],
      "op": "DUP6",
      "path": "13"
    },
    "10777": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1623,
        1624
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10778": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10779": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10780": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10781": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "LT",
      "path": "13"
    },
    "10782": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A29"
    },
    "10785": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10786": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A29"
    },
    "10789": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x356E"
    },
    "10792": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10793": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10794": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10796": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MUL",
      "path": "13"
    },
    "10797": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10799": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10800": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "ADD",
      "path": "13"
    },
    "10801": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1617,
        1625
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10802": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10803": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1594,
        1625
      ],
      "op": "POP",
      "path": "13"
    },
    "10804": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1659,
        1671
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10805": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1655
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10806": {
      "branch": 199,
      "fn": "MerkleProof.processProof",
      "offset": [
        1643,
        1671
      ],
      "op": "GT",
      "path": "13"
    },
    "10807": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A4F"
    },
    "10810": {
      "branch": 199,
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "10811": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10813": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10814": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10815": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10816": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10818": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10819": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10820": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10821": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10823": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10824": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10825": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 128
    },
    "10826": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1769,
        1826
      ],
      "op": "POP",
      "path": "13"
    },
    "10827": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A60"
    },
    "10830": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10831": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10832": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2134,
        2147
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10834": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10835": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10836": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2182,
        2197
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10837": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2217,
        2221
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "10839": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "DUP5",
      "path": "13"
    },
    "10840": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10841": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2210,
        2225
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "10842": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2263,
        2267
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "10844": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10845": {
      "fn": "MerkleProof._efficientHash",
      "offset": [
        2247,
        2268
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "10846": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 129
    },
    "10847": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1943,
        2000
      ],
      "op": "POP",
      "path": "13"
    },
    "10848": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1639,
        2015
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10849": {
      "op": "POP"
    },
    "10850": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 130
    },
    "10851": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A6B"
    },
    "10854": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10855": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3553"
    },
    "10858": {
      "fn": "MerkleProof.processProof",
      "jump": "i",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10859": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10860": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10861": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10862": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1575,
        1578
      ],
      "op": "POP",
      "path": "13"
    },
    "10863": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A0C"
    },
    "10866": {
      "fn": "MerkleProof.processProof",
      "offset": [
        1537,
        2025
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12484,
        12488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10876": {
      "op": "SHL"
    },
    "10877": {
      "op": "SUB"
    },
    "10878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "DUP5",
      "path": "3"
    },
    "10879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "3"
    },
    "10880": {
      "op": "EXTCODESIZE"
    },
    "10881": {
      "op": "ISZERO"
    },
    "10882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B66"
    },
    "10885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10889": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10896": {
      "op": "SHL"
    },
    "10897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10905": {
      "op": "SHL"
    },
    "10906": {
      "op": "SUB"
    },
    "10907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "DUP6",
      "path": "3"
    },
    "10908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "AND",
      "path": "3"
    },
    "10909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "10915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12575
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AB7"
    },
    "10919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10920": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10921": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "DUP10",
      "path": "3"
    },
    "10923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12594
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12596,
        12603
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "DUP9",
      "path": "3"
    },
    "10927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "10930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36F8"
    },
    "10934": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "10938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP4",
      "path": "3"
    },
    "10943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SUB",
      "path": "3"
    },
    "10944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "10947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP8",
      "path": "3"
    },
    "10948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "GAS",
      "path": "3"
    },
    "10949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "CALL",
      "path": "3"
    },
    "10950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "POP",
      "path": "3"
    },
    "10954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "10956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF2"
    },
    "10959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10960": {
      "op": "POP"
    },
    "10961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "10963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP1",
      "path": "3"
    },
    "10964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "10965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "10967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "10968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10973": {
      "op": "NOT"
    },
    "10974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "AND",
      "path": "3"
    },
    "10975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP3",
      "path": "3"
    },
    "10976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "10979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "10980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AEF"
    },
    "10983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "10984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "DUP2",
      "path": "3"
    },
    "10985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "ADD",
      "path": "3"
    },
    "10986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "10987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3735"
    },
    "10990": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "10991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "10994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12539,
        12611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "10995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B4C"
    },
    "10998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "10999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B20"
    },
    "11006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "11014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "NOT",
      "path": "3"
    },
    "11015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "11017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "AND",
      "path": "3"
    },
    "11020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "11029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "ADD",
      "path": "3"
    },
    "11035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "11036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B25"
    },
    "11039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "11043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "POP",
      "path": "3"
    },
    "11045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11046": {
      "op": "POP"
    },
    "11047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12778,
        12791
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B44"
    },
    "11052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 131,
      "value": "0x40"
    },
    "11055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11062": {
      "op": "SHL"
    },
    "11063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "ADD",
      "path": "3"
    },
    "11068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "11071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12820,
        12880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3668"
    },
    "11075": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12820,
        12880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12774,
        13040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12992,
        12998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12986,
        12999
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12973,
        12975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12969,
        12984
      ],
      "op": "ADD",
      "path": "3"
    },
    "11083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        13000
      ],
      "op": "REVERT",
      "path": "3"
    },
    "11084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12535,
        13054
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11091": {
      "op": "SHL"
    },
    "11092": {
      "op": "SUB"
    },
    "11093": {
      "op": "NOT"
    },
    "11094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "AND",
      "path": "3",
      "statement": 132
    },
    "11095": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11102": {
      "op": "SHL"
    },
    "11103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "EQ",
      "path": "3"
    },
    "11104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12661,
        12712
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11105": {
      "op": "POP"
    },
    "11106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2432"
    },
    "11109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12654,
        12712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12500,
        13106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13091,
        13095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 133,
      "value": "0x1"
    },
    "11114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "11115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "11116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12334,
        13112
      ],
      "op": "POP",
      "path": "3"
    },
    "11120": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12334,
        13112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11121": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11128": {
      "op": "SHL"
    },
    "11129": {
      "op": "SUB"
    },
    "11130": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11131": {
      "branch": 194,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "6"
    },
    "11132": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BCC"
    },
    "11135": {
      "branch": 194,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11136": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 134,
      "value": "0x2BC7"
    },
    "11139": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11140": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 135,
      "value": "0x8"
    },
    "11142": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11143": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11144": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11146": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11147": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11148": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11149": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11151": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11153": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11154": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11156": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11157": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11158": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11159": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11160": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11161": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 136,
      "value": "0x1"
    },
    "11163": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11164": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11165": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11166": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11167": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11168": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11169": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11170": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11171": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "11204": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "6"
    },
    "11205": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11206": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11207": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11208": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BEF"
    },
    "11211": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11212": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11213": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11220": {
      "op": "SHL"
    },
    "11221": {
      "op": "SUB"
    },
    "11222": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11223": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11230": {
      "op": "SHL"
    },
    "11231": {
      "op": "SUB"
    },
    "11232": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "6"
    },
    "11233": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "6"
    },
    "11234": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BEF"
    },
    "11237": {
      "branch": 195,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11238": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 137,
      "value": "0x2BEF"
    },
    "11241": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11242": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11243": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D77"
    },
    "11246": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11247": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11254": {
      "op": "SHL"
    },
    "11255": {
      "op": "SUB"
    },
    "11256": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11257": {
      "branch": 196,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "6"
    },
    "11258": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C06"
    },
    "11261": {
      "branch": 196,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11262": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 138,
      "value": "0xCB0"
    },
    "11265": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11266": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E14"
    },
    "11269": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11270": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11271": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11278": {
      "op": "SHL"
    },
    "11279": {
      "op": "SUB"
    },
    "11280": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11281": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11288": {
      "op": "SHL"
    },
    "11289": {
      "op": "SUB"
    },
    "11290": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "6"
    },
    "11291": {
      "branch": 197,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "6"
    },
    "11292": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB0"
    },
    "11295": {
      "branch": 197,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 139,
      "value": "0xCB0"
    },
    "11299": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11300": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11301": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EC3"
    },
    "11304": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11305": {
      "fn": "ERC721._mint",
      "offset": [
        9078,
        9505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11312": {
      "op": "SHL"
    },
    "11313": {
      "op": "SUB"
    },
    "11314": {
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 140
    },
    "11315": {
      "branch": 191,
      "fn": "ERC721._mint",
      "offset": [
        9157,
        9173
      ],
      "op": "AND",
      "path": "3"
    },
    "11316": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7F"
    },
    "11319": {
      "branch": 191,
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11320": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11322": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11329": {
      "op": "SHL"
    },
    "11330": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11331": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11334": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11336": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11337": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "ADD",
      "path": "3"
    },
    "11338": {
      "op": "DUP2"
    },
    "11339": {
      "op": "SWAP1"
    },
    "11340": {
      "op": "MSTORE"
    },
    "11341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11343": {
      "op": "DUP3"
    },
    "11344": {
      "op": "ADD"
    },
    "11345": {
      "op": "MSTORE"
    },
    "11346": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11381": {
      "op": "DUP3"
    },
    "11382": {
      "op": "ADD"
    },
    "11383": {
      "op": "MSTORE"
    },
    "11384": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11386": {
      "op": "ADD"
    },
    "11387": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "11390": {
      "op": "JUMP"
    },
    "11391": {
      "fn": "ERC721._mint",
      "offset": [
        9149,
        9210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11392": {
      "fn": "ERC721._exists",
      "offset": [
        7224,
        7228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11394": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11395": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11396": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11397": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7254
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11399": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11401": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11402": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11404": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11405": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11406": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11413": {
      "op": "SHL"
    },
    "11414": {
      "op": "SUB"
    },
    "11415": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7263
      ],
      "op": "AND",
      "path": "3"
    },
    "11416": {
      "fn": "ERC721._exists",
      "offset": [
        7247,
        7277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "11417": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 141,
      "value": "0x2CE4"
    },
    "11420": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11421": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11423": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11430": {
      "op": "SHL"
    },
    "11431": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11432": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11435": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "11437": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11438": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "ADD",
      "path": "3"
    },
    "11439": {
      "op": "MSTORE"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11444": {
      "op": "DUP3"
    },
    "11445": {
      "op": "ADD"
    },
    "11446": {
      "op": "MSTORE"
    },
    "11447": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11482": {
      "op": "DUP3"
    },
    "11483": {
      "op": "ADD"
    },
    "11484": {
      "op": "MSTORE"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11487": {
      "op": "ADD"
    },
    "11488": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB7A"
    },
    "11491": {
      "op": "JUMP"
    },
    "11492": {
      "fn": "ERC721._mint",
      "offset": [
        9220,
        9278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11493": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 142,
      "value": "0x2CF0"
    },
    "11496": {
      "fn": "ERC721._mint",
      "offset": [
        9318,
        9319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11498": {
      "fn": "ERC721._mint",
      "offset": [
        9322,
        9324
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11499": {
      "fn": "ERC721._mint",
      "offset": [
        9326,
        9333
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11500": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A6"
    },
    "11503": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11504": {
      "fn": "ERC721._mint",
      "offset": [
        9289,
        9334
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11511": {
      "op": "SHL"
    },
    "11512": {
      "op": "SUB"
    },
    "11513": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 143
    },
    "11514": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "AND",
      "path": "3"
    },
    "11515": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "11517": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11518": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11519": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11520": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "11522": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11524": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11525": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11527": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11528": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11529": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11530": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11531": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "11533": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11534": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9358
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11535": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D19"
    },
    "11538": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11539": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "DUP5",
      "path": "3"
    },
    "11540": {
      "fn": "ERC721._mint",
      "offset": [
        9362,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11541": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x353B"
    },
    "11544": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMP",
      "path": "3"
    },
    "11545": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "11546": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11547": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11548": {
      "fn": "ERC721._mint",
      "offset": [
        9345,
        9363
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11549": {
      "op": "POP"
    },
    "11550": {
      "op": "POP"
    },
    "11551": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 144,
      "value": "0x0"
    },
    "11553": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11554": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11555": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11556": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "11558": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "11560": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "11561": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "11563": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11564": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11565": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "11566": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP1",
      "path": "3"
    },
    "11567": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "11568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11574": {
      "op": "SHL"
    },
    "11575": {
      "op": "SUB"
    },
    "11576": {
      "op": "NOT"
    },
    "11577": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11584": {
      "op": "SHL"
    },
    "11585": {
      "op": "SUB"
    },
    "11586": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP7",
      "path": "3"
    },
    "11587": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "AND",
      "path": "3"
    },
    "11588": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11589": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "DUP2",
      "path": "3"
    },
    "11590": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "OR",
      "path": "3"
    },
    "11591": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11592": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "11593": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9394
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "11594": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 145
    },
    "11595": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "11596": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP4",
      "path": "3"
    },
    "11597": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "11598": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11599": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11632": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11633": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "11634": {
      "fn": "ERC721._mint",
      "offset": [
        9373,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "11635": {
      "fn": "ERC721._mint",
      "offset": [
        9410,
        9443
      ],
      "op": "LOG4",
      "path": "3"
    },
    "11636": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        6231,
        6263
      ],
      "op": "POP",
      "path": "16"
    },
    "11637": {
      "fn": "CryptidToken.setProvenanceHash",
      "offset": [
        5979,
        6270
      ],
      "op": "POP",
      "path": "16"
    },
    "11638": {
      "fn": "CryptidToken.setProvenanceHash",
      "jump": "o",
      "offset": [
        5979,
        6270
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11639": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11640": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11642": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11644": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D84"
    },
    "11647": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1831"
    },
    "11651": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11652": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D8E"
    },
    "11656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11657": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11658": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3651"
    },
    "11661": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11662": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11663": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11665": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11666": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11667": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11668": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11670": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11672": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11673": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11675": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11676": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11677": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11678": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11679": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11680": {
      "op": "POP"
    },
    "11681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11682": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11683": {
      "branch": 198,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "6"
    },
    "11684": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE1"
    },
    "11687": {
      "branch": 198,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11694": {
      "op": "SHL"
    },
    "11695": {
      "op": "SUB"
    },
    "11696": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11697": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "6"
    },
    "11698": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11702": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11703": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11707": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11708": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "6"
    },
    "11716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11719": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 146
    },
    "11725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 147
    },
    "11734": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11735": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11738": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11739": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11740": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11741": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11743": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11744": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11746": {
      "op": "POP"
    },
    "11747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 148,
      "value": "0x0"
    },
    "11749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11750": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11752": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "11754": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11756": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11773": {
      "op": "SHL"
    },
    "11774": {
      "op": "SUB"
    },
    "11775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 149
    },
    "11776": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "6"
    },
    "11778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "11782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11796": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11797": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11799": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11800": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11802": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11803": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E26"
    },
    "11806": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11809": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3651"
    },
    "11813": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11814": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11818": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11819": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11820": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11824": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11825": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11828": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11829": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11832": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11834": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11835": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "11836": {
      "op": "POP"
    },
    "11837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11838": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11839": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11840": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "6"
    },
    "11843": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4E"
    },
    "11846": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4E"
    },
    "11850": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356E"
    },
    "11853": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11859": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11864": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "6"
    },
    "11865": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "6"
    },
    "11868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 150
    },
    "11869": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "11871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11872": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "6"
    },
    "11876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E6F"
    },
    "11879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E6F"
    },
    "11883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356E"
    },
    "11886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11892": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11893": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11897": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "6"
    },
    "11901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "11904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 151
    },
    "11906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "11910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11911": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "11912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "11915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11916": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "6"
    },
    "11919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11921": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 152
    },
    "11922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "11923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 153,
      "value": "0x8"
    },
    "11929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11930": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "11931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "6"
    },
    "11932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EA7"
    },
    "11935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "11936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EA7"
    },
    "11939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3752"
    },
    "11942": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11943": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "11946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "6"
    },
    "11948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "11956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "11959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "6"
    },
    "11960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11963": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "11966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "6"
    },
    "11970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11971": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11972": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11974": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ECE"
    },
    "11977": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "6"
    },
    "11978": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1831"
    },
    "11981": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "11982": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11989": {
      "op": "SHL"
    },
    "11990": {
      "op": "SUB"
    },
    "11991": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 154
    },
    "11992": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "11993": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "6"
    },
    "11994": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "11996": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "11997": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "11998": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "11999": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "12001": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "12003": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12004": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "12005": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12006": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "12008": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12009": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12010": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12011": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "6"
    },
    "12012": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "6"
    },
    "12013": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12014": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12015": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12016": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "12017": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "6"
    },
    "12018": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12019": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "12020": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12021": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12022": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 155
    },
    "12023": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "6"
    },
    "12024": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12025": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "12027": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12028": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "12029": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12030": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12031": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12032": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "12033": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12034": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "12035": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "12036": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "12037": {
      "op": "POP"
    },
    "12038": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "12039": {
      "op": "JUMPDEST"
    },
    "12040": {
      "op": "DUP3"
    },
    "12041": {
      "op": "DUP1"
    },
    "12042": {
      "op": "SLOAD"
    },
    "12043": {
      "op": "PUSH2",
      "value": "0x2F13"
    },
    "12046": {
      "op": "SWAP1"
    },
    "12047": {
      "op": "PUSH2",
      "value": "0x341B"
    },
    "12050": {
      "jump": "i",
      "op": "JUMP"
    },
    "12051": {
      "op": "JUMPDEST"
    },
    "12052": {
      "op": "SWAP1"
    },
    "12053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12055": {
      "op": "MSTORE"
    },
    "12056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12060": {
      "op": "KECCAK256"
    },
    "12061": {
      "op": "SWAP1"
    },
    "12062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12064": {
      "op": "ADD"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12067": {
      "op": "SWAP1"
    },
    "12068": {
      "op": "DIV"
    },
    "12069": {
      "op": "DUP2"
    },
    "12070": {
      "op": "ADD"
    },
    "12071": {
      "op": "SWAP3"
    },
    "12072": {
      "op": "DUP3"
    },
    "12073": {
      "op": "PUSH2",
      "value": "0x2F35"
    },
    "12076": {
      "op": "JUMPI"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12079": {
      "op": "DUP6"
    },
    "12080": {
      "op": "SSTORE"
    },
    "12081": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12084": {
      "op": "JUMP"
    },
    "12085": {
      "op": "JUMPDEST"
    },
    "12086": {
      "op": "DUP3"
    },
    "12087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12089": {
      "op": "LT"
    },
    "12090": {
      "op": "PUSH2",
      "value": "0x2F4E"
    },
    "12093": {
      "op": "JUMPI"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "MLOAD"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12098": {
      "op": "NOT"
    },
    "12099": {
      "op": "AND"
    },
    "12100": {
      "op": "DUP4"
    },
    "12101": {
      "op": "DUP1"
    },
    "12102": {
      "op": "ADD"
    },
    "12103": {
      "op": "OR"
    },
    "12104": {
      "op": "DUP6"
    },
    "12105": {
      "op": "SSTORE"
    },
    "12106": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12109": {
      "op": "JUMP"
    },
    "12110": {
      "op": "JUMPDEST"
    },
    "12111": {
      "op": "DUP3"
    },
    "12112": {
      "op": "DUP1"
    },
    "12113": {
      "op": "ADD"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12116": {
      "op": "ADD"
    },
    "12117": {
      "op": "DUP6"
    },
    "12118": {
      "op": "SSTORE"
    },
    "12119": {
      "op": "DUP3"
    },
    "12120": {
      "op": "ISZERO"
    },
    "12121": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12124": {
      "op": "JUMPI"
    },
    "12125": {
      "op": "SWAP2"
    },
    "12126": {
      "op": "DUP3"
    },
    "12127": {
      "op": "ADD"
    },
    "12128": {
      "op": "JUMPDEST"
    },
    "12129": {
      "op": "DUP3"
    },
    "12130": {
      "op": "DUP2"
    },
    "12131": {
      "op": "GT"
    },
    "12132": {
      "op": "ISZERO"
    },
    "12133": {
      "op": "PUSH2",
      "value": "0x2F7B"
    },
    "12136": {
      "op": "JUMPI"
    },
    "12137": {
      "op": "DUP3"
    },
    "12138": {
      "op": "MLOAD"
    },
    "12139": {
      "op": "DUP3"
    },
    "12140": {
      "op": "SSTORE"
    },
    "12141": {
      "op": "SWAP2"
    },
    "12142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12144": {
      "op": "ADD"
    },
    "12145": {
      "op": "SWAP2"
    },
    "12146": {
      "op": "SWAP1"
    },
    "12147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "SWAP1"
    },
    "12151": {
      "op": "PUSH2",
      "value": "0x2F60"
    },
    "12154": {
      "op": "JUMP"
    },
    "12155": {
      "op": "JUMPDEST"
    },
    "12156": {
      "op": "POP"
    },
    "12157": {
      "op": "PUSH2",
      "value": "0x2F87"
    },
    "12160": {
      "op": "SWAP3"
    },
    "12161": {
      "op": "SWAP2"
    },
    "12162": {
      "op": "POP"
    },
    "12163": {
      "op": "PUSH2",
      "value": "0x2F8B"
    },
    "12166": {
      "jump": "i",
      "op": "JUMP"
    },
    "12167": {
      "op": "JUMPDEST"
    },
    "12168": {
      "op": "POP"
    },
    "12169": {
      "op": "SWAP1"
    },
    "12170": {
      "jump": "o",
      "op": "JUMP"
    },
    "12171": {
      "op": "JUMPDEST"
    },
    "12172": {
      "op": "JUMPDEST"
    },
    "12173": {
      "op": "DUP1"
    },
    "12174": {
      "op": "DUP3"
    },
    "12175": {
      "op": "GT"
    },
    "12176": {
      "op": "ISZERO"
    },
    "12177": {
      "op": "PUSH2",
      "value": "0x2F87"
    },
    "12180": {
      "op": "JUMPI"
    },
    "12181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12183": {
      "op": "DUP2"
    },
    "12184": {
      "op": "SSTORE"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12187": {
      "op": "ADD"
    },
    "12188": {
      "op": "PUSH2",
      "value": "0x2F8C"
    },
    "12191": {
      "op": "JUMP"
    },
    "12192": {
      "op": "JUMPDEST"
    },
    "12193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12197": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12199": {
      "op": "SHL"
    },
    "12200": {
      "op": "SUB"
    },
    "12201": {
      "op": "NOT"
    },
    "12202": {
      "op": "DUP2"
    },
    "12203": {
      "op": "AND"
    },
    "12204": {
      "op": "DUP2"
    },
    "12205": {
      "op": "EQ"
    },
    "12206": {
      "op": "PUSH2",
      "value": "0x14AB"
    },
    "12209": {
      "op": "JUMPI"
    },
    "12210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12212": {
      "op": "DUP1"
    },
    "12213": {
      "op": "REVERT"
    },
    "12214": {
      "op": "JUMPDEST"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12219": {
      "op": "DUP3"
    },
    "12220": {
      "op": "DUP5"
    },
    "12221": {
      "op": "SUB"
    },
    "12222": {
      "op": "SLT"
    },
    "12223": {
      "op": "ISZERO"
    },
    "12224": {
      "op": "PUSH2",
      "value": "0x2FC8"
    },
    "12227": {
      "op": "JUMPI"
    },
    "12228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12230": {
      "op": "DUP1"
    },
    "12231": {
      "op": "REVERT"
    },
    "12232": {
      "op": "JUMPDEST"
    },
    "12233": {
      "op": "DUP2"
    },
    "12234": {
      "op": "CALLDATALOAD"
    },
    "12235": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "12238": {
      "op": "DUP2"
    },
    "12239": {
      "op": "PUSH2",
      "value": "0x2FA0"
    },
    "12242": {
      "jump": "i",
      "op": "JUMP"
    },
    "12243": {
      "op": "JUMPDEST"
    },
    "12244": {
      "op": "SWAP4"
    },
    "12245": {
      "op": "SWAP3"
    },
    "12246": {
      "op": "POP"
    },
    "12247": {
      "op": "POP"
    },
    "12248": {
      "op": "POP"
    },
    "12249": {
      "jump": "o",
      "op": "JUMP"
    },
    "12250": {
      "op": "JUMPDEST"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12253": {
      "op": "JUMPDEST"
    },
    "12254": {
      "op": "DUP4"
    },
    "12255": {
      "op": "DUP2"
    },
    "12256": {
      "op": "LT"
    },
    "12257": {
      "op": "ISZERO"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x2FF5"
    },
    "12261": {
      "op": "JUMPI"
    },
    "12262": {
      "op": "DUP2"
    },
    "12263": {
      "op": "DUP2"
    },
    "12264": {
      "op": "ADD"
    },
    "12265": {
      "op": "MLOAD"
    },
    "12266": {
      "op": "DUP4"
    },
    "12267": {
      "op": "DUP3"
    },
    "12268": {
      "op": "ADD"
    },
    "12269": {
      "op": "MSTORE"
    },
    "12270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12272": {
      "op": "ADD"
    },
    "12273": {
      "op": "PUSH2",
      "value": "0x2FDD"
    },
    "12276": {
      "op": "JUMP"
    },
    "12277": {
      "op": "JUMPDEST"
    },
    "12278": {
      "op": "DUP4"
    },
    "12279": {
      "op": "DUP2"
    },
    "12280": {
      "op": "GT"
    },
    "12281": {
      "op": "ISZERO"
    },
    "12282": {
      "op": "PUSH2",
      "value": "0x1DE3"
    },
    "12285": {
      "op": "JUMPI"
    },
    "12286": {
      "op": "POP"
    },
    "12287": {
      "op": "POP"
    },
    "12288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12290": {
      "op": "SWAP2"
    },
    "12291": {
      "op": "ADD"
    },
    "12292": {
      "op": "MSTORE"
    },
    "12293": {
      "jump": "o",
      "op": "JUMP"
    },
    "12294": {
      "op": "JUMPDEST"
    },
    "12295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12297": {
      "op": "DUP2"
    },
    "12298": {
      "op": "MLOAD"
    },
    "12299": {
      "op": "DUP1"
    },
    "12300": {
      "op": "DUP5"
    },
    "12301": {
      "op": "MSTORE"
    },
    "12302": {
      "op": "PUSH2",
      "value": "0x301E"
    },
    "12305": {
      "op": "DUP2"
    },
    "12306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12308": {
      "op": "DUP7"
    },
    "12309": {
      "op": "ADD"
    },
    "12310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12312": {
      "op": "DUP7"
    },
    "12313": {
      "op": "ADD"
    },
    "12314": {
      "op": "PUSH2",
      "value": "0x2FDA"
    },
    "12317": {
      "jump": "i",
      "op": "JUMP"
    },
    "12318": {
      "op": "JUMPDEST"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12321": {
      "op": "ADD"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12324": {
      "op": "NOT"
    },
    "12325": {
      "op": "AND"
    },
    "12326": {
      "op": "SWAP3"
    },
    "12327": {
      "op": "SWAP1"
    },
    "12328": {
      "op": "SWAP3"
    },
    "12329": {
      "op": "ADD"
    },
    "12330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12332": {
      "op": "ADD"
    },
    "12333": {
      "op": "SWAP3"
    },
    "12334": {
      "op": "SWAP2"
    },
    "12335": {
      "op": "POP"
    },
    "12336": {
      "op": "POP"
    },
    "12337": {
      "jump": "o",
      "op": "JUMP"
    },
    "12338": {
      "op": "JUMPDEST"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12341": {
      "op": "DUP2"
    },
    "12342": {
      "op": "MSTORE"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12345": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12350": {
      "op": "DUP4"
    },
    "12351": {
      "op": "ADD"
    },
    "12352": {
      "op": "DUP5"
    },
    "12353": {
      "op": "PUSH2",
      "value": "0x3006"
    },
    "12356": {
      "jump": "i",
      "op": "JUMP"
    },
    "12357": {
      "op": "JUMPDEST"
    },
    "12358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12362": {
      "op": "DUP3"
    },
    "12363": {
      "op": "DUP5"
    },
    "12364": {
      "op": "SUB"
    },
    "12365": {
      "op": "SLT"
    },
    "12366": {
      "op": "ISZERO"
    },
    "12367": {
      "op": "PUSH2",
      "value": "0x3057"
    },
    "12370": {
      "op": "JUMPI"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12373": {
      "op": "DUP1"
    },
    "12374": {
      "op": "REVERT"
    },
    "12375": {
      "op": "JUMPDEST"
    },
    "12376": {
      "op": "POP"
    },
    "12377": {
      "op": "CALLDATALOAD"
    },
    "12378": {
      "op": "SWAP2"
    },
    "12379": {
      "op": "SWAP1"
    },
    "12380": {
      "op": "POP"
    },
    "12381": {
      "jump": "o",
      "op": "JUMP"
    },
    "12382": {
      "op": "JUMPDEST"
    },
    "12383": {
      "op": "DUP1"
    },
    "12384": {
      "op": "CALLDATALOAD"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12391": {
      "op": "SHL"
    },
    "12392": {
      "op": "SUB"
    },
    "12393": {
      "op": "DUP2"
    },
    "12394": {
      "op": "AND"
    },
    "12395": {
      "op": "DUP2"
    },
    "12396": {
      "op": "EQ"
    },
    "12397": {
      "op": "PUSH2",
      "value": "0x3075"
    },
    "12400": {
      "op": "JUMPI"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12403": {
      "op": "DUP1"
    },
    "12404": {
      "op": "REVERT"
    },
    "12405": {
      "op": "JUMPDEST"
    },
    "12406": {
      "op": "SWAP2"
    },
    "12407": {
      "op": "SWAP1"
    },
    "12408": {
      "op": "POP"
    },
    "12409": {
      "jump": "o",
      "op": "JUMP"
    },
    "12410": {
      "op": "JUMPDEST"
    },
    "12411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12413": {
      "op": "DUP1"
    },
    "12414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12416": {
      "op": "DUP4"
    },
    "12417": {
      "op": "DUP6"
    },
    "12418": {
      "op": "SUB"
    },
    "12419": {
      "op": "SLT"
    },
    "12420": {
      "op": "ISZERO"
    },
    "12421": {
      "op": "PUSH2",
      "value": "0x308D"
    },
    "12424": {
      "op": "JUMPI"
    },
    "12425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12427": {
      "op": "DUP1"
    },
    "12428": {
      "op": "REVERT"
    },
    "12429": {
      "op": "JUMPDEST"
    },
    "12430": {
      "op": "PUSH2",
      "value": "0x3096"
    },
    "12433": {
      "op": "DUP4"
    },
    "12434": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12437": {
      "jump": "i",
      "op": "JUMP"
    },
    "12438": {
      "op": "JUMPDEST"
    },
    "12439": {
      "op": "SWAP5"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12442": {
      "op": "SWAP4"
    },
    "12443": {
      "op": "SWAP1"
    },
    "12444": {
      "op": "SWAP4"
    },
    "12445": {
      "op": "ADD"
    },
    "12446": {
      "op": "CALLDATALOAD"
    },
    "12447": {
      "op": "SWAP4"
    },
    "12448": {
      "op": "POP"
    },
    "12449": {
      "op": "POP"
    },
    "12450": {
      "op": "POP"
    },
    "12451": {
      "jump": "o",
      "op": "JUMP"
    },
    "12452": {
      "op": "JUMPDEST"
    },
    "12453": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12460": {
      "op": "SHL"
    },
    "12461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12463": {
      "op": "MSTORE"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "12466": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12468": {
      "op": "MSTORE"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12473": {
      "op": "REVERT"
    },
    "12474": {
      "op": "JUMPDEST"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12477": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12486": {
      "op": "DUP1"
    },
    "12487": {
      "op": "DUP5"
    },
    "12488": {
      "op": "GT"
    },
    "12489": {
      "op": "ISZERO"
    },
    "12490": {
      "op": "PUSH2",
      "value": "0x30D5"
    },
    "12493": {
      "op": "JUMPI"
    },
    "12494": {
      "op": "PUSH2",
      "value": "0x30D5"
    },
    "12497": {
      "op": "PUSH2",
      "value": "0x30A4"
    },
    "12500": {
      "jump": "i",
      "op": "JUMP"
    },
    "12501": {
      "op": "JUMPDEST"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12504": {
      "op": "MLOAD"
    },
    "12505": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12507": {
      "op": "DUP6"
    },
    "12508": {
      "op": "ADD"
    },
    "12509": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12511": {
      "op": "NOT"
    },
    "12512": {
      "op": "SWAP1"
    },
    "12513": {
      "op": "DUP2"
    },
    "12514": {
      "op": "AND"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12517": {
      "op": "ADD"
    },
    "12518": {
      "op": "AND"
    },
    "12519": {
      "op": "DUP2"
    },
    "12520": {
      "op": "ADD"
    },
    "12521": {
      "op": "SWAP1"
    },
    "12522": {
      "op": "DUP3"
    },
    "12523": {
      "op": "DUP3"
    },
    "12524": {
      "op": "GT"
    },
    "12525": {
      "op": "DUP2"
    },
    "12526": {
      "op": "DUP4"
    },
    "12527": {
      "op": "LT"
    },
    "12528": {
      "op": "OR"
    },
    "12529": {
      "op": "ISZERO"
    },
    "12530": {
      "op": "PUSH2",
      "value": "0x30FD"
    },
    "12533": {
      "op": "JUMPI"
    },
    "12534": {
      "op": "PUSH2",
      "value": "0x30FD"
    },
    "12537": {
      "op": "PUSH2",
      "value": "0x30A4"
    },
    "12540": {
      "jump": "i",
      "op": "JUMP"
    },
    "12541": {
      "op": "JUMPDEST"
    },
    "12542": {
      "op": "DUP2"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12545": {
      "op": "MSTORE"
    },
    "12546": {
      "op": "DUP1"
    },
    "12547": {
      "op": "SWAP4"
    },
    "12548": {
      "op": "POP"
    },
    "12549": {
      "op": "DUP6"
    },
    "12550": {
      "op": "DUP2"
    },
    "12551": {
      "op": "MSTORE"
    },
    "12552": {
      "op": "DUP7"
    },
    "12553": {
      "op": "DUP7"
    },
    "12554": {
      "op": "DUP7"
    },
    "12555": {
      "op": "ADD"
    },
    "12556": {
      "op": "GT"
    },
    "12557": {
      "op": "ISZERO"
    },
    "12558": {
      "op": "PUSH2",
      "value": "0x3116"
    },
    "12561": {
      "op": "JUMPI"
    },
    "12562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12564": {
      "op": "DUP1"
    },
    "12565": {
      "op": "REVERT"
    },
    "12566": {
      "op": "JUMPDEST"
    },
    "12567": {
      "op": "DUP6"
    },
    "12568": {
      "op": "DUP6"
    },
    "12569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12571": {
      "op": "DUP4"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "op": "CALLDATACOPY"
    },
    "12574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12578": {
      "op": "DUP8"
    },
    "12579": {
      "op": "DUP4"
    },
    "12580": {
      "op": "ADD"
    },
    "12581": {
      "op": "ADD"
    },
    "12582": {
      "op": "MSTORE"
    },
    "12583": {
      "op": "POP"
    },
    "12584": {
      "op": "POP"
    },
    "12585": {
      "op": "POP"
    },
    "12586": {
      "op": "SWAP4"
    },
    "12587": {
      "op": "SWAP3"
    },
    "12588": {
      "op": "POP"
    },
    "12589": {
      "op": "POP"
    },
    "12590": {
      "op": "POP"
    },
    "12591": {
      "jump": "o",
      "op": "JUMP"
    },
    "12592": {
      "op": "JUMPDEST"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12597": {
      "op": "DUP3"
    },
    "12598": {
      "op": "DUP5"
    },
    "12599": {
      "op": "SUB"
    },
    "12600": {
      "op": "SLT"
    },
    "12601": {
      "op": "ISZERO"
    },
    "12602": {
      "op": "PUSH2",
      "value": "0x3142"
    },
    "12605": {
      "op": "JUMPI"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12608": {
      "op": "DUP1"
    },
    "12609": {
      "op": "REVERT"
    },
    "12610": {
      "op": "JUMPDEST"
    },
    "12611": {
      "op": "DUP2"
    },
    "12612": {
      "op": "CALLDATALOAD"
    },
    "12613": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12622": {
      "op": "DUP2"
    },
    "12623": {
      "op": "GT"
    },
    "12624": {
      "op": "ISZERO"
    },
    "12625": {
      "op": "PUSH2",
      "value": "0x3159"
    },
    "12628": {
      "op": "JUMPI"
    },
    "12629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12631": {
      "op": "DUP1"
    },
    "12632": {
      "op": "REVERT"
    },
    "12633": {
      "op": "JUMPDEST"
    },
    "12634": {
      "op": "DUP3"
    },
    "12635": {
      "op": "ADD"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12638": {
      "op": "DUP2"
    },
    "12639": {
      "op": "ADD"
    },
    "12640": {
      "op": "DUP5"
    },
    "12641": {
      "op": "SGT"
    },
    "12642": {
      "op": "PUSH2",
      "value": "0x316A"
    },
    "12645": {
      "op": "JUMPI"
    },
    "12646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12648": {
      "op": "DUP1"
    },
    "12649": {
      "op": "REVERT"
    },
    "12650": {
      "op": "JUMPDEST"
    },
    "12651": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "12654": {
      "op": "DUP5"
    },
    "12655": {
      "op": "DUP3"
    },
    "12656": {
      "op": "CALLDATALOAD"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12659": {
      "op": "DUP5"
    },
    "12660": {
      "op": "ADD"
    },
    "12661": {
      "op": "PUSH2",
      "value": "0x30BA"
    },
    "12664": {
      "jump": "i",
      "op": "JUMP"
    },
    "12665": {
      "op": "JUMPDEST"
    },
    "12666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12668": {
      "op": "DUP1"
    },
    "12669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12673": {
      "op": "DUP5"
    },
    "12674": {
      "op": "DUP7"
    },
    "12675": {
      "op": "SUB"
    },
    "12676": {
      "op": "SLT"
    },
    "12677": {
      "op": "ISZERO"
    },
    "12678": {
      "op": "PUSH2",
      "value": "0x318E"
    },
    "12681": {
      "op": "JUMPI"
    },
    "12682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12684": {
      "op": "DUP1"
    },
    "12685": {
      "op": "REVERT"
    },
    "12686": {
      "op": "JUMPDEST"
    },
    "12687": {
      "op": "PUSH2",
      "value": "0x3197"
    },
    "12690": {
      "op": "DUP5"
    },
    "12691": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12694": {
      "jump": "i",
      "op": "JUMP"
    },
    "12695": {
      "op": "JUMPDEST"
    },
    "12696": {
      "op": "SWAP3"
    },
    "12697": {
      "op": "POP"
    },
    "12698": {
      "op": "PUSH2",
      "value": "0x31A5"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12703": {
      "op": "DUP6"
    },
    "12704": {
      "op": "ADD"
    },
    "12705": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12708": {
      "jump": "i",
      "op": "JUMP"
    },
    "12709": {
      "op": "JUMPDEST"
    },
    "12710": {
      "op": "SWAP2"
    },
    "12711": {
      "op": "POP"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12714": {
      "op": "DUP5"
    },
    "12715": {
      "op": "ADD"
    },
    "12716": {
      "op": "CALLDATALOAD"
    },
    "12717": {
      "op": "SWAP1"
    },
    "12718": {
      "op": "POP"
    },
    "12719": {
      "op": "SWAP3"
    },
    "12720": {
      "op": "POP"
    },
    "12721": {
      "op": "SWAP3"
    },
    "12722": {
      "op": "POP"
    },
    "12723": {
      "op": "SWAP3"
    },
    "12724": {
      "jump": "o",
      "op": "JUMP"
    },
    "12725": {
      "op": "JUMPDEST"
    },
    "12726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12728": {
      "op": "DUP1"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12731": {
      "op": "DUP4"
    },
    "12732": {
      "op": "DUP6"
    },
    "12733": {
      "op": "SUB"
    },
    "12734": {
      "op": "SLT"
    },
    "12735": {
      "op": "ISZERO"
    },
    "12736": {
      "op": "PUSH2",
      "value": "0x31C8"
    },
    "12739": {
      "op": "JUMPI"
    },
    "12740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12742": {
      "op": "DUP1"
    },
    "12743": {
      "op": "REVERT"
    },
    "12744": {
      "op": "JUMPDEST"
    },
    "12745": {
      "op": "DUP3"
    },
    "12746": {
      "op": "CALLDATALOAD"
    },
    "12747": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12756": {
      "op": "DUP1"
    },
    "12757": {
      "op": "DUP3"
    },
    "12758": {
      "op": "GT"
    },
    "12759": {
      "op": "ISZERO"
    },
    "12760": {
      "op": "PUSH2",
      "value": "0x31E0"
    },
    "12763": {
      "op": "JUMPI"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12766": {
      "op": "DUP1"
    },
    "12767": {
      "op": "REVERT"
    },
    "12768": {
      "op": "JUMPDEST"
    },
    "12769": {
      "op": "DUP2"
    },
    "12770": {
      "op": "DUP6"
    },
    "12771": {
      "op": "ADD"
    },
    "12772": {
      "op": "SWAP2"
    },
    "12773": {
      "op": "POP"
    },
    "12774": {
      "op": "DUP6"
    },
    "12775": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12777": {
      "op": "DUP4"
    },
    "12778": {
      "op": "ADD"
    },
    "12779": {
      "op": "SLT"
    },
    "12780": {
      "op": "PUSH2",
      "value": "0x31F4"
    },
    "12783": {
      "op": "JUMPI"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12786": {
      "op": "DUP1"
    },
    "12787": {
      "op": "REVERT"
    },
    "12788": {
      "op": "JUMPDEST"
    },
    "12789": {
      "op": "DUP2"
    },
    "12790": {
      "op": "CALLDATALOAD"
    },
    "12791": {
      "op": "DUP2"
    },
    "12792": {
      "op": "DUP2"
    },
    "12793": {
      "op": "GT"
    },
    "12794": {
      "op": "ISZERO"
    },
    "12795": {
      "op": "PUSH2",
      "value": "0x3203"
    },
    "12798": {
      "op": "JUMPI"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12801": {
      "op": "DUP1"
    },
    "12802": {
      "op": "REVERT"
    },
    "12803": {
      "op": "JUMPDEST"
    },
    "12804": {
      "op": "DUP7"
    },
    "12805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12807": {
      "op": "DUP3"
    },
    "12808": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12810": {
      "op": "SHL"
    },
    "12811": {
      "op": "DUP6"
    },
    "12812": {
      "op": "ADD"
    },
    "12813": {
      "op": "ADD"
    },
    "12814": {
      "op": "GT"
    },
    "12815": {
      "op": "ISZERO"
    },
    "12816": {
      "op": "PUSH2",
      "value": "0x3218"
    },
    "12819": {
      "op": "JUMPI"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12822": {
      "op": "DUP1"
    },
    "12823": {
      "op": "REVERT"
    },
    "12824": {
      "op": "JUMPDEST"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12827": {
      "op": "SWAP3"
    },
    "12828": {
      "op": "SWAP1"
    },
    "12829": {
      "op": "SWAP3"
    },
    "12830": {
      "op": "ADD"
    },
    "12831": {
      "op": "SWAP7"
    },
    "12832": {
      "op": "SWAP2"
    },
    "12833": {
      "op": "SWAP6"
    },
    "12834": {
      "op": "POP"
    },
    "12835": {
      "op": "SWAP1"
    },
    "12836": {
      "op": "SWAP4"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "POP"
    },
    "12839": {
      "op": "POP"
    },
    "12840": {
      "op": "POP"
    },
    "12841": {
      "jump": "o",
      "op": "JUMP"
    },
    "12842": {
      "op": "JUMPDEST"
    },
    "12843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12847": {
      "op": "DUP3"
    },
    "12848": {
      "op": "DUP5"
    },
    "12849": {
      "op": "SUB"
    },
    "12850": {
      "op": "SLT"
    },
    "12851": {
      "op": "ISZERO"
    },
    "12852": {
      "op": "PUSH2",
      "value": "0x323C"
    },
    "12855": {
      "op": "JUMPI"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12858": {
      "op": "DUP1"
    },
    "12859": {
      "op": "REVERT"
    },
    "12860": {
      "op": "JUMPDEST"
    },
    "12861": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "12864": {
      "op": "DUP3"
    },
    "12865": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12868": {
      "jump": "i",
      "op": "JUMP"
    },
    "12869": {
      "op": "JUMPDEST"
    },
    "12870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12872": {
      "op": "DUP1"
    },
    "12873": {
      "op": "DUP3"
    },
    "12874": {
      "op": "MSTORE"
    },
    "12875": {
      "op": "DUP3"
    },
    "12876": {
      "op": "MLOAD"
    },
    "12877": {
      "op": "DUP3"
    },
    "12878": {
      "op": "DUP3"
    },
    "12879": {
      "op": "ADD"
    },
    "12880": {
      "op": "DUP2"
    },
    "12881": {
      "op": "SWAP1"
    },
    "12882": {
      "op": "MSTORE"
    },
    "12883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12885": {
      "op": "SWAP2"
    },
    "12886": {
      "op": "SWAP1"
    },
    "12887": {
      "op": "DUP5"
    },
    "12888": {
      "op": "DUP3"
    },
    "12889": {
      "op": "ADD"
    },
    "12890": {
      "op": "SWAP1"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12893": {
      "op": "DUP6"
    },
    "12894": {
      "op": "ADD"
    },
    "12895": {
      "op": "SWAP1"
    },
    "12896": {
      "op": "DUP5"
    },
    "12897": {
      "op": "JUMPDEST"
    },
    "12898": {
      "op": "DUP2"
    },
    "12899": {
      "op": "DUP2"
    },
    "12900": {
      "op": "LT"
    },
    "12901": {
      "op": "ISZERO"
    },
    "12902": {
      "op": "PUSH2",
      "value": "0x327D"
    },
    "12905": {
      "op": "JUMPI"
    },
    "12906": {
      "op": "DUP4"
    },
    "12907": {
      "op": "MLOAD"
    },
    "12908": {
      "op": "DUP4"
    },
    "12909": {
      "op": "MSTORE"
    },
    "12910": {
      "op": "SWAP3"
    },
    "12911": {
      "op": "DUP5"
    },
    "12912": {
      "op": "ADD"
    },
    "12913": {
      "op": "SWAP3"
    },
    "12914": {
      "op": "SWAP2"
    },
    "12915": {
      "op": "DUP5"
    },
    "12916": {
      "op": "ADD"
    },
    "12917": {
      "op": "SWAP2"
    },
    "12918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12920": {
      "op": "ADD"
    },
    "12921": {
      "op": "PUSH2",
      "value": "0x3261"
    },
    "12924": {
      "op": "JUMP"
    },
    "12925": {
      "op": "JUMPDEST"
    },
    "12926": {
      "op": "POP"
    },
    "12927": {
      "op": "SWAP1"
    },
    "12928": {
      "op": "SWAP7"
    },
    "12929": {
      "op": "SWAP6"
    },
    "12930": {
      "op": "POP"
    },
    "12931": {
      "op": "POP"
    },
    "12932": {
      "op": "POP"
    },
    "12933": {
      "op": "POP"
    },
    "12934": {
      "op": "POP"
    },
    "12935": {
      "op": "POP"
    },
    "12936": {
      "jump": "o",
      "op": "JUMP"
    },
    "12937": {
      "op": "JUMPDEST"
    },
    "12938": {
      "op": "DUP1"
    },
    "12939": {
      "op": "CALLDATALOAD"
    },
    "12940": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12942": {
      "op": "DUP2"
    },
    "12943": {
      "op": "AND"
    },
    "12944": {
      "op": "DUP2"
    },
    "12945": {
      "op": "EQ"
    },
    "12946": {
      "op": "PUSH2",
      "value": "0x3075"
    },
    "12949": {
      "op": "JUMPI"
    },
    "12950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12952": {
      "op": "DUP1"
    },
    "12953": {
      "op": "REVERT"
    },
    "12954": {
      "op": "JUMPDEST"
    },
    "12955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12959": {
      "op": "DUP3"
    },
    "12960": {
      "op": "DUP5"
    },
    "12961": {
      "op": "SUB"
    },
    "12962": {
      "op": "SLT"
    },
    "12963": {
      "op": "ISZERO"
    },
    "12964": {
      "op": "PUSH2",
      "value": "0x32AC"
    },
    "12967": {
      "op": "JUMPI"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12970": {
      "op": "DUP1"
    },
    "12971": {
      "op": "REVERT"
    },
    "12972": {
      "op": "JUMPDEST"
    },
    "12973": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "12976": {
      "op": "DUP3"
    },
    "12977": {
      "op": "PUSH2",
      "value": "0x3289"
    },
    "12980": {
      "jump": "i",
      "op": "JUMP"
    },
    "12981": {
      "op": "JUMPDEST"
    },
    "12982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12984": {
      "op": "DUP1"
    },
    "12985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12987": {
      "op": "DUP4"
    },
    "12988": {
      "op": "DUP6"
    },
    "12989": {
      "op": "SUB"
    },
    "12990": {
      "op": "SLT"
    },
    "12991": {
      "op": "ISZERO"
    },
    "12992": {
      "op": "PUSH2",
      "value": "0x32C8"
    },
    "12995": {
      "op": "JUMPI"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12998": {
      "op": "DUP1"
    },
    "12999": {
      "op": "REVERT"
    },
    "13000": {
      "op": "JUMPDEST"
    },
    "13001": {
      "op": "PUSH2",
      "value": "0x32D1"
    },
    "13004": {
      "op": "DUP4"
    },
    "13005": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "13008": {
      "jump": "i",
      "op": "JUMP"
    },
    "13009": {
      "op": "JUMPDEST"
    },
    "13010": {
      "op": "SWAP2"
    },
    "13011": {
      "op": "POP"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13014": {
      "op": "DUP4"
    },
    "13015": {
      "op": "ADD"
    },
    "13016": {
      "op": "CALLDATALOAD"
    },
    "13017": {
      "op": "DUP1"
    },
    "13018": {
      "op": "ISZERO"
    },
    "13019": {
      "op": "ISZERO"
    },
    "13020": {
      "op": "DUP2"
    },
    "13021": {
      "op": "EQ"
    },
    "13022": {
      "op": "PUSH2",
      "value": "0x32E6"
    },
    "13025": {
      "op": "JUMPI"
    },
    "13026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13028": {
      "op": "DUP1"
    },
    "13029": {
      "op": "REVERT"
    },
    "13030": {
      "op": "JUMPDEST"
    },
    "13031": {
      "op": "DUP1"
    },
    "13032": {
      "op": "SWAP2"
    },
    "13033": {
      "op": "POP"
    },
    "13034": {
      "op": "POP"
    },
    "13035": {
      "op": "SWAP3"
    },
    "13036": {
      "op": "POP"
    },
    "13037": {
      "op": "SWAP3"
    },
    "13038": {
      "op": "SWAP1"
    },
    "13039": {
      "op": "POP"
    },
    "13040": {
      "jump": "o",
      "op": "JUMP"
    },
    "13041": {
      "op": "JUMPDEST"
    },
    "13042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13044": {
      "op": "DUP1"
    },
    "13045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13047": {
      "op": "DUP4"
    },
    "13048": {
      "op": "DUP6"
    },
    "13049": {
      "op": "SUB"
    },
    "13050": {
      "op": "SLT"
    },
    "13051": {
      "op": "ISZERO"
    },
    "13052": {
      "op": "PUSH2",
      "value": "0x3304"
    },
    "13055": {
      "op": "JUMPI"
    },
    "13056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13058": {
      "op": "DUP1"
    },
    "13059": {
      "op": "REVERT"
    },
    "13060": {
      "op": "JUMPDEST"
    },
    "13061": {
      "op": "PUSH2",
      "value": "0x330D"
    },
    "13064": {
      "op": "DUP4"
    },
    "13065": {
      "op": "PUSH2",
      "value": "0x3289"
    },
    "13068": {
      "jump": "i",
      "op": "JUMP"
    },
    "13069": {
      "op": "JUMPDEST"
    },
    "13070": {
      "op": "SWAP2"
    },
    "13071": {
      "op": "POP"
    },
    "13072": {
      "op": "PUSH2",
      "value": "0x331B"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13077": {
      "op": "DUP5"
    },
    "13078": {
      "op": "ADD"
    },
    "13079": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "13082": {
      "jump": "i",
      "op": "JUMP"
    },
    "13083": {
      "op": "JUMPDEST"
    },
    "13084": {
      "op": "SWAP1"
    },
    "13085": {
      "op": "POP"
    },
    "13086": {
      "op": "SWAP3"
    },
    "13087": {
      "op": "POP"
    },
    "13088": {
      "op": "SWAP3"
    },
    "13089": {
      "op": "SWAP1"
    },
    "13090": {
      "op": "POP"
    },
    "13091": {
      "jump": "o",
      "op": "JUMP"
    },
    "13092": {
      "op": "JUMPDEST"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13095": {
      "op": "DUP1"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13098": {
      "op": "DUP1"
    },
    "13099": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13101": {
      "op": "DUP6"
    },
    "13102": {
      "op": "DUP8"
    },
    "13103": {
      "op": "SUB"
    },
    "13104": {
      "op": "SLT"
    },
    "13105": {
      "op": "ISZERO"
    },
    "13106": {
      "op": "PUSH2",
      "value": "0x333A"
    },
    "13109": {
      "op": "JUMPI"
    },
    "13110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13112": {
      "op": "DUP1"
    },
    "13113": {
      "op": "REVERT"
    },
    "13114": {
      "op": "JUMPDEST"
    },
    "13115": {
      "op": "PUSH2",
      "value": "0x3343"
    },
    "13118": {
      "op": "DUP6"
    },
    "13119": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "13122": {
      "jump": "i",
      "op": "JUMP"
    },
    "13123": {
      "op": "JUMPDEST"
    },
    "13124": {
      "op": "SWAP4"
    },
    "13125": {
      "op": "POP"
    },
    "13126": {
      "op": "PUSH2",
      "value": "0x3351"
    },
    "13129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13131": {
      "op": "DUP7"
    },
    "13132": {
      "op": "ADD"
    },
    "13133": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "13136": {
      "jump": "i",
      "op": "JUMP"
    },
    "13137": {
      "op": "JUMPDEST"
    },
    "13138": {
      "op": "SWAP3"
    },
    "13139": {
      "op": "POP"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13142": {
      "op": "DUP6"
    },
    "13143": {
      "op": "ADD"
    },
    "13144": {
      "op": "CALLDATALOAD"
    },
    "13145": {
      "op": "SWAP2"
    },
    "13146": {
      "op": "POP"
    },
    "13147": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13149": {
      "op": "DUP6"
    },
    "13150": {
      "op": "ADD"
    },
    "13151": {
      "op": "CALLDATALOAD"
    },
    "13152": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13161": {
      "op": "DUP2"
    },
    "13162": {
      "op": "GT"
    },
    "13163": {
      "op": "ISZERO"
    },
    "13164": {
      "op": "PUSH2",
      "value": "0x3374"
    },
    "13167": {
      "op": "JUMPI"
    },
    "13168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13170": {
      "op": "DUP1"
    },
    "13171": {
      "op": "REVERT"
    },
    "13172": {
      "op": "JUMPDEST"
    },
    "13173": {
      "op": "DUP6"
    },
    "13174": {
      "op": "ADD"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13177": {
      "op": "DUP2"
    },
    "13178": {
      "op": "ADD"
    },
    "13179": {
      "op": "DUP8"
    },
    "13180": {
      "op": "SGT"
    },
    "13181": {
      "op": "PUSH2",
      "value": "0x3385"
    },
    "13184": {
      "op": "JUMPI"
    },
    "13185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13187": {
      "op": "DUP1"
    },
    "13188": {
      "op": "REVERT"
    },
    "13189": {
      "op": "JUMPDEST"
    },
    "13190": {
      "op": "PUSH2",
      "value": "0x3394"
    },
    "13193": {
      "op": "DUP8"
    },
    "13194": {
      "op": "DUP3"
    },
    "13195": {
      "op": "CALLDATALOAD"
    },
    "13196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13198": {
      "op": "DUP5"
    },
    "13199": {
      "op": "ADD"
    },
    "13200": {
      "op": "PUSH2",
      "value": "0x30BA"
    },
    "13203": {
      "jump": "i",
      "op": "JUMP"
    },
    "13204": {
      "op": "JUMPDEST"
    },
    "13205": {
      "op": "SWAP2"
    },
    "13206": {
      "op": "POP"
    },
    "13207": {
      "op": "POP"
    },
    "13208": {
      "op": "SWAP3"
    },
    "13209": {
      "op": "SWAP6"
    },
    "13210": {
      "op": "SWAP2"
    },
    "13211": {
      "op": "SWAP5"
    },
    "13212": {
      "op": "POP"
    },
    "13213": {
      "op": "SWAP3"
    },
    "13214": {
      "op": "POP"
    },
    "13215": {
      "jump": "o",
      "op": "JUMP"
    },
    "13216": {
      "op": "JUMPDEST"
    },
    "13217": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13222": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13224": {
      "op": "SHL"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13227": {
      "op": "MSTORE"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13230": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13232": {
      "op": "MSTORE"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13237": {
      "op": "REVERT"
    },
    "13238": {
      "op": "JUMPDEST"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13241": {
      "op": "DUP2"
    },
    "13242": {
      "op": "ADD"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13245": {
      "op": "DUP4"
    },
    "13246": {
      "op": "LT"
    },
    "13247": {
      "op": "PUSH2",
      "value": "0x33D8"
    },
    "13250": {
      "op": "JUMPI"
    },
    "13251": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13256": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13258": {
      "op": "SHL"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13261": {
      "op": "MSTORE"
    },
    "13262": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "13264": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13266": {
      "op": "MSTORE"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13271": {
      "op": "REVERT"
    },
    "13272": {
      "op": "JUMPDEST"
    },
    "13273": {
      "op": "SWAP2"
    },
    "13274": {
      "op": "SWAP1"
    },
    "13275": {
      "op": "MSTORE"
    },
    "13276": {
      "op": "SWAP1"
    },
    "13277": {
      "jump": "o",
      "op": "JUMP"
    },
    "13278": {
      "op": "JUMPDEST"
    },
    "13279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13283": {
      "op": "DUP3"
    },
    "13284": {
      "op": "DUP5"
    },
    "13285": {
      "op": "SUB"
    },
    "13286": {
      "op": "SLT"
    },
    "13287": {
      "op": "ISZERO"
    },
    "13288": {
      "op": "PUSH2",
      "value": "0x33F0"
    },
    "13291": {
      "op": "JUMPI"
    },
    "13292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13294": {
      "op": "DUP1"
    },
    "13295": {
      "op": "REVERT"
    },
    "13296": {
      "op": "JUMPDEST"
    },
    "13297": {
      "op": "DUP2"
    },
    "13298": {
      "op": "CALLDATALOAD"
    },
    "13299": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13301": {
      "op": "DUP2"
    },
    "13302": {
      "op": "LT"
    },
    "13303": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "13306": {
      "op": "JUMPI"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13309": {
      "op": "DUP1"
    },
    "13310": {
      "op": "REVERT"
    },
    "13311": {
      "op": "JUMPDEST"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13314": {
      "op": "DUP1"
    },
    "13315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13317": {
      "op": "DUP4"
    },
    "13318": {
      "op": "DUP6"
    },
    "13319": {
      "op": "SUB"
    },
    "13320": {
      "op": "SLT"
    },
    "13321": {
      "op": "ISZERO"
    },
    "13322": {
      "op": "PUSH2",
      "value": "0x3412"
    },
    "13325": {
      "op": "JUMPI"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13328": {
      "op": "DUP1"
    },
    "13329": {
      "op": "REVERT"
    },
    "13330": {
      "op": "JUMPDEST"
    },
    "13331": {
      "op": "PUSH2",
      "value": "0x330D"
    },
    "13334": {
      "op": "DUP4"
    },
    "13335": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "13338": {
      "jump": "i",
      "op": "JUMP"
    },
    "13339": {
      "op": "JUMPDEST"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13342": {
      "op": "DUP2"
    },
    "13343": {
      "op": "DUP2"
    },
    "13344": {
      "op": "SHR"
    },
    "13345": {
      "op": "SWAP1"
    },
    "13346": {
      "op": "DUP3"
    },
    "13347": {
      "op": "AND"
    },
    "13348": {
      "op": "DUP1"
    },
    "13349": {
      "op": "PUSH2",
      "value": "0x342F"
    },
    "13352": {
      "op": "JUMPI"
    },
    "13353": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13355": {
      "op": "DUP3"
    },
    "13356": {
      "op": "AND"
    },
    "13357": {
      "op": "SWAP2"
    },
    "13358": {
      "op": "POP"
    },
    "13359": {
      "op": "JUMPDEST"
    },
    "13360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13362": {
      "op": "DUP3"
    },
    "13363": {
      "op": "LT"
    },
    "13364": {
      "op": "DUP2"
    },
    "13365": {
      "op": "EQ"
    },
    "13366": {
      "op": "ISZERO"
    },
    "13367": {
      "op": "PUSH2",
      "value": "0x3450"
    },
    "13370": {
      "op": "JUMPI"
    },
    "13371": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13378": {
      "op": "SHL"
    },
    "13379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13381": {
      "op": "MSTORE"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13384": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13386": {
      "op": "MSTORE"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13391": {
      "op": "REVERT"
    },
    "13392": {
      "op": "JUMPDEST"
    },
    "13393": {
      "op": "POP"
    },
    "13394": {
      "op": "SWAP2"
    },
    "13395": {
      "op": "SWAP1"
    },
    "13396": {
      "op": "POP"
    },
    "13397": {
      "jump": "o",
      "op": "JUMP"
    },
    "13398": {
      "op": "JUMPDEST"
    },
    "13399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13401": {
      "op": "DUP1"
    },
    "13402": {
      "op": "DUP3"
    },
    "13403": {
      "op": "MSTORE"
    },
    "13404": {
      "op": "DUP2"
    },
    "13405": {
      "op": "DUP2"
    },
    "13406": {
      "op": "ADD"
    },
    "13407": {
      "op": "MSTORE"
    },
    "13408": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13443": {
      "op": "DUP3"
    },
    "13444": {
      "op": "ADD"
    },
    "13445": {
      "op": "MSTORE"
    },
    "13446": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13448": {
      "op": "ADD"
    },
    "13449": {
      "op": "SWAP1"
    },
    "13450": {
      "jump": "o",
      "op": "JUMP"
    },
    "13451": {
      "op": "JUMPDEST"
    },
    "13452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13454": {
      "op": "DUP1"
    },
    "13455": {
      "op": "DUP3"
    },
    "13456": {
      "op": "MSTORE"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13459": {
      "op": "SWAP1"
    },
    "13460": {
      "op": "DUP3"
    },
    "13461": {
      "op": "ADD"
    },
    "13462": {
      "op": "MSTORE"
    },
    "13463": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13498": {
      "op": "DUP3"
    },
    "13499": {
      "op": "ADD"
    },
    "13500": {
      "op": "MSTORE"
    },
    "13501": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13521": {
      "op": "SHL"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13524": {
      "op": "DUP3"
    },
    "13525": {
      "op": "ADD"
    },
    "13526": {
      "op": "MSTORE"
    },
    "13527": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13529": {
      "op": "ADD"
    },
    "13530": {
      "op": "SWAP1"
    },
    "13531": {
      "jump": "o",
      "op": "JUMP"
    },
    "13532": {
      "op": "JUMPDEST"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13535": {
      "op": "DUP1"
    },
    "13536": {
      "op": "DUP3"
    },
    "13537": {
      "op": "MSTORE"
    },
    "13538": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13540": {
      "op": "SWAP1"
    },
    "13541": {
      "op": "DUP3"
    },
    "13542": {
      "op": "ADD"
    },
    "13543": {
      "op": "MSTORE"
    },
    "13544": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "13561": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "13563": {
      "op": "SHL"
    },
    "13564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13566": {
      "op": "DUP3"
    },
    "13567": {
      "op": "ADD"
    },
    "13568": {
      "op": "MSTORE"
    },
    "13569": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13571": {
      "op": "ADD"
    },
    "13572": {
      "op": "SWAP1"
    },
    "13573": {
      "jump": "o",
      "op": "JUMP"
    },
    "13574": {
      "op": "JUMPDEST"
    },
    "13575": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13582": {
      "op": "SHL"
    },
    "13583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13585": {
      "op": "MSTORE"
    },
    "13586": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13590": {
      "op": "MSTORE"
    },
    "13591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13595": {
      "op": "REVERT"
    },
    "13596": {
      "op": "JUMPDEST"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13599": {
      "op": "DUP2"
    },
    "13600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13602": {
      "op": "NOT"
    },
    "13603": {
      "op": "DIV"
    },
    "13604": {
      "op": "DUP4"
    },
    "13605": {
      "op": "GT"
    },
    "13606": {
      "op": "DUP3"
    },
    "13607": {
      "op": "ISZERO"
    },
    "13608": {
      "op": "ISZERO"
    },
    "13609": {
      "op": "AND"
    },
    "13610": {
      "op": "ISZERO"
    },
    "13611": {
      "op": "PUSH2",
      "value": "0x3536"
    },
    "13614": {
      "op": "JUMPI"
    },
    "13615": {
      "op": "PUSH2",
      "value": "0x3536"
    },
    "13618": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13621": {
      "jump": "i",
      "op": "JUMP"
    },
    "13622": {
      "op": "JUMPDEST"
    },
    "13623": {
      "op": "POP"
    },
    "13624": {
      "op": "MUL"
    },
    "13625": {
      "op": "SWAP1"
    },
    "13626": {
      "jump": "o",
      "op": "JUMP"
    },
    "13627": {
      "op": "JUMPDEST"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13630": {
      "op": "DUP3"
    },
    "13631": {
      "op": "NOT"
    },
    "13632": {
      "op": "DUP3"
    },
    "13633": {
      "op": "GT"
    },
    "13634": {
      "op": "ISZERO"
    },
    "13635": {
      "op": "PUSH2",
      "value": "0x354E"
    },
    "13638": {
      "op": "JUMPI"
    },
    "13639": {
      "op": "PUSH2",
      "value": "0x354E"
    },
    "13642": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13645": {
      "jump": "i",
      "op": "JUMP"
    },
    "13646": {
      "op": "JUMPDEST"
    },
    "13647": {
      "op": "POP"
    },
    "13648": {
      "op": "ADD"
    },
    "13649": {
      "op": "SWAP1"
    },
    "13650": {
      "jump": "o",
      "op": "JUMP"
    },
    "13651": {
      "op": "JUMPDEST"
    },
    "13652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13656": {
      "op": "NOT"
    },
    "13657": {
      "op": "DUP3"
    },
    "13658": {
      "op": "EQ"
    },
    "13659": {
      "op": "ISZERO"
    },
    "13660": {
      "op": "PUSH2",
      "value": "0x3567"
    },
    "13663": {
      "op": "JUMPI"
    },
    "13664": {
      "op": "PUSH2",
      "value": "0x3567"
    },
    "13667": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13670": {
      "jump": "i",
      "op": "JUMP"
    },
    "13671": {
      "op": "JUMPDEST"
    },
    "13672": {
      "op": "POP"
    },
    "13673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13675": {
      "op": "ADD"
    },
    "13676": {
      "op": "SWAP1"
    },
    "13677": {
      "jump": "o",
      "op": "JUMP"
    },
    "13678": {
      "op": "JUMPDEST"
    },
    "13679": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13686": {
      "op": "SHL"
    },
    "13687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13689": {
      "op": "MSTORE"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13692": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13694": {
      "op": "MSTORE"
    },
    "13695": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13699": {
      "op": "REVERT"
    },
    "13700": {
      "op": "JUMPDEST"
    },
    "13701": {
      "op": "DUP1"
    },
    "13702": {
      "op": "SLOAD"
    },
    "13703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13705": {
      "op": "SWAP1"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13708": {
      "op": "DUP2"
    },
    "13709": {
      "op": "DUP2"
    },
    "13710": {
      "op": "SHR"
    },
    "13711": {
      "op": "SWAP1"
    },
    "13712": {
      "op": "DUP1"
    },
    "13713": {
      "op": "DUP4"
    },
    "13714": {
      "op": "AND"
    },
    "13715": {
      "op": "DUP1"
    },
    "13716": {
      "op": "PUSH2",
      "value": "0x359E"
    },
    "13719": {
      "op": "JUMPI"
    },
    "13720": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13722": {
      "op": "DUP4"
    },
    "13723": {
      "op": "AND"
    },
    "13724": {
      "op": "SWAP3"
    },
    "13725": {
      "op": "POP"
    },
    "13726": {
      "op": "JUMPDEST"
    },
    "13727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13729": {
      "op": "DUP1"
    },
    "13730": {
      "op": "DUP5"
    },
    "13731": {
      "op": "LT"
    },
    "13732": {
      "op": "DUP3"
    },
    "13733": {
      "op": "EQ"
    },
    "13734": {
      "op": "ISZERO"
    },
    "13735": {
      "op": "PUSH2",
      "value": "0x35C0"
    },
    "13738": {
      "op": "JUMPI"
    },
    "13739": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13746": {
      "op": "SHL"
    },
    "13747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13749": {
      "op": "MSTORE"
    },
    "13750": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13752": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13754": {
      "op": "MSTORE"
    },
    "13755": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13759": {
      "op": "REVERT"
    },
    "13760": {
      "op": "JUMPDEST"
    },
    "13761": {
      "op": "DUP2"
    },
    "13762": {
      "op": "DUP1"
    },
    "13763": {
      "op": "ISZERO"
    },
    "13764": {
      "op": "PUSH2",
      "value": "0x35D4"
    },
    "13767": {
      "op": "JUMPI"
    },
    "13768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13770": {
      "op": "DUP2"
    },
    "13771": {
      "op": "EQ"
    },
    "13772": {
      "op": "PUSH2",
      "value": "0x35E5"
    },
    "13775": {
      "op": "JUMPI"
    },
    "13776": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "13779": {
      "op": "JUMP"
    },
    "13780": {
      "op": "JUMPDEST"
    },
    "13781": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13783": {
      "op": "NOT"
    },
    "13784": {
      "op": "DUP7"
    },
    "13785": {
      "op": "AND"
    },
    "13786": {
      "op": "DUP10"
    },
    "13787": {
      "op": "MSTORE"
    },
    "13788": {
      "op": "DUP5"
    },
    "13789": {
      "op": "DUP10"
    },
    "13790": {
      "op": "ADD"
    },
    "13791": {
      "op": "SWAP7"
    },
    "13792": {
      "op": "POP"
    },
    "13793": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "13796": {
      "op": "JUMP"
    },
    "13797": {
      "op": "JUMPDEST"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13800": {
      "op": "DUP9"
    },
    "13801": {
      "op": "DUP2"
    },
    "13802": {
      "op": "MSTORE"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13805": {
      "op": "SWAP1"
    },
    "13806": {
      "op": "KECCAK256"
    },
    "13807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13809": {
      "op": "JUMPDEST"
    },
    "13810": {
      "op": "DUP7"
    },
    "13811": {
      "op": "DUP2"
    },
    "13812": {
      "op": "LT"
    },
    "13813": {
      "op": "ISZERO"
    },
    "13814": {
      "op": "PUSH2",
      "value": "0x360A"
    },
    "13817": {
      "op": "JUMPI"
    },
    "13818": {
      "op": "DUP2"
    },
    "13819": {
      "op": "SLOAD"
    },
    "13820": {
      "op": "DUP12"
    },
    "13821": {
      "op": "DUP3"
    },
    "13822": {
      "op": "ADD"
    },
    "13823": {
      "op": "MSTORE"
    },
    "13824": {
      "op": "SWAP1"
    },
    "13825": {
      "op": "DUP6"
    },
    "13826": {
      "op": "ADD"
    },
    "13827": {
      "op": "SWAP1"
    },
    "13828": {
      "op": "DUP4"
    },
    "13829": {
      "op": "ADD"
    },
    "13830": {
      "op": "PUSH2",
      "value": "0x35F1"
    },
    "13833": {
      "op": "JUMP"
    },
    "13834": {
      "op": "JUMPDEST"
    },
    "13835": {
      "op": "POP"
    },
    "13836": {
      "op": "POP"
    },
    "13837": {
      "op": "DUP5"
    },
    "13838": {
      "op": "DUP10"
    },
    "13839": {
      "op": "ADD"
    },
    "13840": {
      "op": "SWAP7"
    },
    "13841": {
      "op": "POP"
    },
    "13842": {
      "op": "JUMPDEST"
    },
    "13843": {
      "op": "POP"
    },
    "13844": {
      "op": "POP"
    },
    "13845": {
      "op": "POP"
    },
    "13846": {
      "op": "POP"
    },
    "13847": {
      "op": "POP"
    },
    "13848": {
      "op": "POP"
    },
    "13849": {
      "op": "SWAP3"
    },
    "13850": {
      "op": "SWAP2"
    },
    "13851": {
      "op": "POP"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "jump": "o",
      "op": "JUMP"
    },
    "13854": {
      "op": "JUMPDEST"
    },
    "13855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13857": {
      "op": "PUSH2",
      "value": "0x362A"
    },
    "13860": {
      "op": "DUP3"
    },
    "13861": {
      "op": "DUP7"
    },
    "13862": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "13865": {
      "jump": "i",
      "op": "JUMP"
    },
    "13866": {
      "op": "JUMPDEST"
    },
    "13867": {
      "op": "DUP5"
    },
    "13868": {
      "op": "MLOAD"
    },
    "13869": {
      "op": "PUSH2",
      "value": "0x363A"
    },
    "13872": {
      "op": "DUP2"
    },
    "13873": {
      "op": "DUP4"
    },
    "13874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13876": {
      "op": "DUP10"
    },
    "13877": {
      "op": "ADD"
    },
    "13878": {
      "op": "PUSH2",
      "value": "0x2FDA"
    },
    "13881": {
      "jump": "i",
      "op": "JUMP"
    },
    "13882": {
      "op": "JUMPDEST"
    },
    "13883": {
      "op": "PUSH2",
      "value": "0x3646"
    },
    "13886": {
      "op": "DUP2"
    },
    "13887": {
      "op": "DUP4"
    },
    "13888": {
      "op": "ADD"
    },
    "13889": {
      "op": "DUP7"
    },
    "13890": {
      "op": "PUSH2",
      "value": "0x3584"
    },
    "13893": {
      "jump": "i",
      "op": "JUMP"
    },
    "13894": {
      "op": "JUMPDEST"
    },
    "13895": {
      "op": "SWAP8"
    },
    "13896": {
      "op": "SWAP7"
    },
    "13897": {
      "op": "POP"
    },
    "13898": {
      "op": "POP"
    },
    "13899": {
      "op": "POP"
    },
    "13900": {
      "op": "POP"
    },
    "13901": {
      "op": "POP"
    },
    "13902": {
      "op": "POP"
    },
    "13903": {
      "op": "POP"
    },
    "13904": {
      "jump": "o",
      "op": "JUMP"
    },
    "13905": {
      "op": "JUMPDEST"
    },
    "13906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13908": {
      "op": "DUP3"
    },
    "13909": {
      "op": "DUP3"
    },
    "13910": {
      "op": "LT"
    },
    "13911": {
      "op": "ISZERO"
    },
    "13912": {
      "op": "PUSH2",
      "value": "0x3663"
    },
    "13915": {
      "op": "JUMPI"
    },
    "13916": {
      "op": "PUSH2",
      "value": "0x3663"
    },
    "13919": {
      "op": "PUSH2",
      "value": "0x3506"
    },
    "13922": {
      "jump": "i",
      "op": "JUMP"
    },
    "13923": {
      "op": "JUMPDEST"
    },
    "13924": {
      "op": "POP"
    },
    "13925": {
      "op": "SUB"
    },
    "13926": {
      "op": "SWAP1"
    },
    "13927": {
      "jump": "o",
      "op": "JUMP"
    },
    "13928": {
      "op": "JUMPDEST"
    },
    "13929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13931": {
      "op": "DUP1"
    },
    "13932": {
      "op": "DUP3"
    },
    "13933": {
      "op": "MSTORE"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13936": {
      "op": "SWAP1"
    },
    "13937": {
      "op": "DUP3"
    },
    "13938": {
      "op": "ADD"
    },
    "13939": {
      "op": "MSTORE"
    },
    "13940": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13975": {
      "op": "DUP3"
    },
    "13976": {
      "op": "ADD"
    },
    "13977": {
      "op": "MSTORE"
    },
    "13978": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13999": {
      "op": "SHL"
    },
    "14000": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14002": {
      "op": "DUP3"
    },
    "14003": {
      "op": "ADD"
    },
    "14004": {
      "op": "MSTORE"
    },
    "14005": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14007": {
      "op": "ADD"
    },
    "14008": {
      "op": "SWAP1"
    },
    "14009": {
      "jump": "o",
      "op": "JUMP"
    },
    "14010": {
      "op": "JUMPDEST"
    },
    "14011": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14018": {
      "op": "SHL"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14021": {
      "op": "MSTORE"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14024": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14026": {
      "op": "MSTORE"
    },
    "14027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14031": {
      "op": "REVERT"
    },
    "14032": {
      "op": "JUMPDEST"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14035": {
      "op": "DUP3"
    },
    "14036": {
      "op": "PUSH2",
      "value": "0x36DF"
    },
    "14039": {
      "op": "JUMPI"
    },
    "14040": {
      "op": "PUSH2",
      "value": "0x36DF"
    },
    "14043": {
      "op": "PUSH2",
      "value": "0x36BA"
    },
    "14046": {
      "jump": "i",
      "op": "JUMP"
    },
    "14047": {
      "op": "JUMPDEST"
    },
    "14048": {
      "op": "POP"
    },
    "14049": {
      "op": "DIV"
    },
    "14050": {
      "op": "SWAP1"
    },
    "14051": {
      "jump": "o",
      "op": "JUMP"
    },
    "14052": {
      "op": "JUMPDEST"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14055": {
      "op": "DUP3"
    },
    "14056": {
      "op": "PUSH2",
      "value": "0x36F3"
    },
    "14059": {
      "op": "JUMPI"
    },
    "14060": {
      "op": "PUSH2",
      "value": "0x36F3"
    },
    "14063": {
      "op": "PUSH2",
      "value": "0x36BA"
    },
    "14066": {
      "jump": "i",
      "op": "JUMP"
    },
    "14067": {
      "op": "JUMPDEST"
    },
    "14068": {
      "op": "POP"
    },
    "14069": {
      "op": "MOD"
    },
    "14070": {
      "op": "SWAP1"
    },
    "14071": {
      "jump": "o",
      "op": "JUMP"
    },
    "14072": {
      "op": "JUMPDEST"
    },
    "14073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14079": {
      "op": "SHL"
    },
    "14080": {
      "op": "SUB"
    },
    "14081": {
      "op": "DUP6"
    },
    "14082": {
      "op": "DUP2"
    },
    "14083": {
      "op": "AND"
    },
    "14084": {
      "op": "DUP3"
    },
    "14085": {
      "op": "MSTORE"
    },
    "14086": {
      "op": "DUP5"
    },
    "14087": {
      "op": "AND"
    },
    "14088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14090": {
      "op": "DUP3"
    },
    "14091": {
      "op": "ADD"
    },
    "14092": {
      "op": "MSTORE"
    },
    "14093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14095": {
      "op": "DUP2"
    },
    "14096": {
      "op": "ADD"
    },
    "14097": {
      "op": "DUP4"
    },
    "14098": {
      "op": "SWAP1"
    },
    "14099": {
      "op": "MSTORE"
    },
    "14100": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14104": {
      "op": "DUP3"
    },
    "14105": {
      "op": "ADD"
    },
    "14106": {
      "op": "DUP2"
    },
    "14107": {
      "op": "SWAP1"
    },
    "14108": {
      "op": "MSTORE"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14111": {
      "op": "SWAP1"
    },
    "14112": {
      "op": "PUSH2",
      "value": "0x372B"
    },
    "14115": {
      "op": "SWAP1"
    },
    "14116": {
      "op": "DUP4"
    },
    "14117": {
      "op": "ADD"
    },
    "14118": {
      "op": "DUP5"
    },
    "14119": {
      "op": "PUSH2",
      "value": "0x3006"
    },
    "14122": {
      "jump": "i",
      "op": "JUMP"
    },
    "14123": {
      "op": "JUMPDEST"
    },
    "14124": {
      "op": "SWAP7"
    },
    "14125": {
      "op": "SWAP6"
    },
    "14126": {
      "op": "POP"
    },
    "14127": {
      "op": "POP"
    },
    "14128": {
      "op": "POP"
    },
    "14129": {
      "op": "POP"
    },
    "14130": {
      "op": "POP"
    },
    "14131": {
      "op": "POP"
    },
    "14132": {
      "jump": "o",
      "op": "JUMP"
    },
    "14133": {
      "op": "JUMPDEST"
    },
    "14134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14138": {
      "op": "DUP3"
    },
    "14139": {
      "op": "DUP5"
    },
    "14140": {
      "op": "SUB"
    },
    "14141": {
      "op": "SLT"
    },
    "14142": {
      "op": "ISZERO"
    },
    "14143": {
      "op": "PUSH2",
      "value": "0x3747"
    },
    "14146": {
      "op": "JUMPI"
    },
    "14147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14149": {
      "op": "DUP1"
    },
    "14150": {
      "op": "REVERT"
    },
    "14151": {
      "op": "JUMPDEST"
    },
    "14152": {
      "op": "DUP2"
    },
    "14153": {
      "op": "MLOAD"
    },
    "14154": {
      "op": "PUSH2",
      "value": "0x2FD3"
    },
    "14157": {
      "op": "DUP2"
    },
    "14158": {
      "op": "PUSH2",
      "value": "0x2FA0"
    },
    "14161": {
      "jump": "i",
      "op": "JUMP"
    },
    "14162": {
      "op": "JUMPDEST"
    },
    "14163": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14168": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14170": {
      "op": "SHL"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14173": {
      "op": "MSTORE"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14176": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14178": {
      "op": "MSTORE"
    },
    "14179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14183": {
      "op": "REVERT"
    }
  },
  "sha1": "f6772acf678d3dcaed04a6d3552be32730a2c95e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport '@openzeppelin/contracts/token/ERC721/ERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/Counters.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/// @title CryptidToken NFT Contract\n/// @author @chrisrusselljr\n/// @notice You can use this contract to mint, send, and interact with CRYPTIDS\n/// @dev All function calls are currently implemented without side effects\ncontract CryptidToken is ERC721, ERC721Enumerable, Pausable, Ownable, ReentrancyGuard{ \n    using Strings for uint256;\n    using Counters for Counters.Counter;\n    using MerkleProof for bytes32[];\n\n    enum Stage {\n        Init,\n        Airdrop,\n        Whitelist,\n        TeamMint,\n        PublicSale\n    }\n\n    Counters.Counter private _tokenIdCounter;\n    \n    bytes32 public merkleRoot;\n    string public provenanceHash;\n    string public baseURI = \"\";\n    string public baseExtension = \".json\";\n    uint8 public maxMintPerTx;     \n    bool public tokenURIFrozen = false;\n    bool public provenanceHashFrozen = false;\n\n    address public withdrawlAddress = 0x12B58f5331a6DC897932AA7FB5101667ACdf03e2;\n\n    // ~ Sale stages ~\n    // stage 0: Init\n    // stage 1: Airdrop\n    // stage 2: Whitelist\n    // stage 3: Team Mint \n    // stage 4: Public Sale\n\n    // Whitelist mint (stage=2)\n    uint256 public whitelistSupply;                       \n    mapping(address => bool) public claimed;              \n    \n    // Team Mint (stage=3)\n    uint256 public teamMintSupply;                          \n    uint256 public teamMintCount;\n\n    // Public Sale (stage=4)\n    uint256 public totalSaleSupply;         \n    uint256 public salePrice = 0.01 ether;  \n\n    Stage public stage;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        uint256 _whitelistSupply,\n        uint256 _teamMintSupply,\n        uint256 _totalSaleSupply,\n        uint8 _maxMintPerTx\n\n    )   ERC721(_name, _symbol) {\n        whitelistSupply = _whitelistSupply;\n        teamMintSupply = _teamMintSupply;\n        totalSaleSupply = _totalSaleSupply;\n        maxMintPerTx = _maxMintPerTx;\n        baseURI = _baseURI;\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 1 - Airdrop\n    function airdropCryptid(\n        uint8 mintAmount, \n        address to\n    ) \n        external\n        onlyOwner \n    {\n        require(stage > Stage.Init, \"No airdrops at init.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Mint amount will exceed total sale supply.\");\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(to, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 2 - Whitelist Sale\n    function whitelistMint(\n        bytes32[] calldata merkleProof\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused \n    {\n        require(stage == Stage.Whitelist, \"Whitelist sale not initiated.\");\n        require(salePrice == msg.value, \"Incorrect ETH value sent.\");\n        require(merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"Address not in whitelist.\");\n        require(claimed[msg.sender] == false, \"Whitelist mint already claimed.\"); \n        claimed[msg.sender] = true;\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        _tokenIdCounter.increment();\n    }\n\n    // Stage 3 - Team Mint\n    function teamMint(\n        uint8 mintAmount\n    ) \n        external \n        onlyOwner \n    {\n        require(stage == Stage.TeamMint, \"Team mint not initiated.\");\n        require(mintAmount + teamMintCount <= teamMintSupply, \"Transaction exceeds total team sale supply.\");     \n        teamMintCount += mintAmount;\n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    // Stage 4 - Public Mint\n    function publicMint(\n        uint256 mintAmount\n    ) \n        external\n        payable \n        nonReentrant \n        whenNotPaused  \n    {\n        require(stage == Stage.PublicSale, \"Public Sale not initiated.\");\n        require(salePrice * mintAmount == msg.value, \"Incorrect ETH value sent.\");\n        require(totalSupply()  + mintAmount <= totalSaleSupply, \"Transaction exceeds total sale supply.\");\n        require(mintAmount <= maxMintPerTx, \"Exceeds max allowed mints per transaction.\");  \n        for (uint256 i = 1; i <= mintAmount; i++) {\n            _safeMint(msg.sender, _tokenIdCounter.current());\n            _tokenIdCounter.increment();\n        }\n    }\n\n    //Owner functions\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // to be used in case of manual override\n    function setClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = true;\n    }\n\n    // to be used in case of WL error\n    function undoClaim(address wlAddress) external onlyOwner{\n        claimed[wlAddress] = false;\n    }\n\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        require(!tokenURIFrozen, \"BaseURI is frozen.\");\n        baseURI = _newBaseURI;\n    } \n    \n    function freezeBaseURI() external onlyOwner {\n        require(bytes(baseURI).length > 0, \"BaseURI cannot be empty.\");\n        require(!tokenURIFrozen, \"BaseURI is already frozen.\");\n        tokenURIFrozen = true;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension) external onlyOwner {\n        baseExtension = _newBaseExtension;\n    }\n\n    function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(bytes(_provenanceHash).length > 0, \"Provenance hash cannot be empty string.\");\n        require(!provenanceHashFrozen, \"Provenance hash is frozen.\");\n        provenanceHash = _provenanceHash;\n    }\n\n    function freezeProvenanceHash() external onlyOwner {\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is not set.\");\n        require(!provenanceHashFrozen, \"Provenance hash is already frozen.\");\n        provenanceHashFrozen = true;\n    }\n\n    function setWithdrawlAddress(address _withdrawlAddress) external onlyOwner {\n        withdrawlAddress = _withdrawlAddress;\n    }\n\n    function setSalePrice(uint256 _salePrice) external onlyOwner {\n        salePrice = _salePrice;\n    }\n\n    function withdraw() external payable onlyOwner {\n        require(address(this).balance > 0, \"Contract balance is 0.\");\n        (bool success, ) = payable(withdrawlAddress).call{value: address(this).balance}(\"\");\n        require(success, \"Withdrawl failed.\");\n    }\n\n    function setStage(Stage _stage) external onlyOwner {\n        require(provenanceHashFrozen == true, \"Provenance hash must be frozen before minting can start.\");\n        require(merkleRoot != 0, \"Merkle root must be set beefore minting can start.\");\n        stage = _stage;\n    }\n\n    // External view functions\n    function lastMintAddress() external view returns (address){\n        return ownerOf(totalSupply());\n    }\n\n    function lastMintID() external view returns (uint256){\n        return(totalSupply());\n    }\n\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token.\");\n        return string(abi.encodePacked(baseURI, tokenId.toString(), baseExtension));\n    }\n\n    function getTokensLeft() external view returns (uint256) {\n        return totalSaleSupply - totalSupply();\n    }\n    \n    function walletOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 ownerTokenCount = balanceOf(owner);\n        uint256[] memory tokensIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokensIds[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokensIds;\n    }\n\n    function verify(bytes32[] calldata merkleProof) external view returns (bool) {\n        if (merkleProof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender)))) {\n            return true;\n        }\n        return false;\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal whenNotPaused override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n}",
  "sourceMap": "1139:26:16:-:0;710:8289;1139:26;;;-1:-1:-1;710:8289:16;1139:26;;;;;;;;:::i;:::-;-1:-1:-1;1171:37:16;;;;;;;;;;;;;-1:-1:-1;;;1171:37:16;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1250:34:16;;;-1:-1:-1;;;;;;1337:76:16;;;;;1949:10;1922:37;;1993:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13:3;;2243:5:16;;2250:7;;1456:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:10;921:18:0;:32::i;:::-;1701:1:2;1806:7;:22;2269:15:16::1;:34:::0;;;2313:14:::1;:32:::0;;;2355:15:::1;:34:::0;;;2399:12:::1;:28:::0;;-1:-1:-1;;2399:28:16::1;;::::0;::::1;;::::0;;2437:18;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2465:27;:15;:25;;;;;:27;;:::i;:::-;1993:506:::0;;;;;;;710:8289;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;710:8289:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:8289:16;;;-1:-1:-1;710:8289:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:1103::-;1188:6;1196;1204;1212;1220;1228;1236;1289:3;1277:9;1268:7;1264:23;1260:33;1257:53;;;1306:1;1303;1296:12;1257:53;1333:16;;-1:-1:-1;;;;;1398:14:20;;;1395:34;;;1425:1;1422;1415:12;1395:34;1448:61;1501:7;1492:6;1481:9;1477:22;1448:61;:::i;:::-;1438:71;;1555:2;1544:9;1540:18;1534:25;1518:41;;1584:2;1574:8;1571:16;1568:36;;;1600:1;1597;1590:12;1568:36;1623:63;1678:7;1667:8;1656:9;1652:24;1623:63;:::i;:::-;1613:73;;1732:2;1721:9;1717:18;1711:25;1695:41;;1761:2;1751:8;1748:16;1745:36;;;1777:1;1774;1767:12;1745:36;;1800:63;1855:7;1844:8;1833:9;1829:24;1800:63;:::i;:::-;1790:73;;;1903:2;1892:9;1888:18;1882:25;1872:35;;1947:3;1936:9;1932:19;1926:26;1916:36;;1992:3;1981:9;1977:19;1971:26;1961:36;;2040:3;2029:9;2025:19;2019:26;2085:4;2078:5;2074:16;2067:5;2064:27;2054:55;;2105:1;2102;2095:12;2054:55;2128:5;2118:15;;;1036:1103;;;;;;;;;;:::o;2144:380::-;2223:1;2219:12;;;;2266;;;2287:61;;2341:4;2333:6;2329:17;2319:27;;2287:61;2394:2;2386:6;2383:14;2363:18;2360:38;2357:161;;;2440:10;2435:3;2431:20;2428:1;2421:31;2475:4;2472:1;2465:15;2503:4;2500:1;2493:15;2357:161;;2144:380;;;:::o;:::-;710:8289:16;;;;;;",
  "sourcePath": "contracts/CryptidToken.sol",
  "type": "contract"
}